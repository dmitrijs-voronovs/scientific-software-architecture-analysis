id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:278,Availability,down,down,278,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:416,Availability,down,downloading,416,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:872,Availability,down,down,872,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:223,Deployability,install,install,223,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:582,Deployability,update,update,582,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:615,Deployability,install,install,615,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:547,Integrability,depend,dependencies,547,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:69,Modifiability,layers,layers,69,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:1010,Testability,test,test,1010,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662:139,Usability,learn,learned,139,"Thanks @lbergelson! I agree that it might be good to break into more layers—could be worth talking to SV team and seeing what lessons they learned in putting together their hierarchy of images. Also, note that I pushed the install of miniconda into the base, but I did not push down the setup of the GATK conda environment itself (which takes the bulk of the time during the main-image build, as it requires lots of downloading). I think I commented elsewhere that a good strategy might be to set up the conda environment with the non-GATK python dependencies in the base, and then update the environment via a pip install of the GATK python packages in the main image. This would let us make python code changes without having to rebuild the base, but might require a bit of scripting to create a final yml for non-Docker users. I also agree that it would be nice to cut down the Travis time, might be worth taking a look at other strategies to do that—could save everyone a lot of time!. Will try to add the test you suggested sometime tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-621487662
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992:13,Deployability,integrat,integration,13,"OK, added an integration test to check that MKL is enabled. If we move the conda install of these packages into the base image, then we might need to perform these checks elsewhere, e.g., in the bash script for building the image. Gotta push the base image and update the main Dockerfile. I'll merge after the weekend unless there are any more comments. Again, @droazen please be sure to highlight that R plotting will now require the conda environment in the release notes!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992:81,Deployability,install,install,81,"OK, added an integration test to check that MKL is enabled. If we move the conda install of these packages into the base image, then we might need to perform these checks elsewhere, e.g., in the bash script for building the image. Gotta push the base image and update the main Dockerfile. I'll merge after the weekend unless there are any more comments. Again, @droazen please be sure to highlight that R plotting will now require the conda environment in the release notes!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992:261,Deployability,update,update,261,"OK, added an integration test to check that MKL is enabled. If we move the conda install of these packages into the base image, then we might need to perform these checks elsewhere, e.g., in the bash script for building the image. Gotta push the base image and update the main Dockerfile. I'll merge after the weekend unless there are any more comments. Again, @droazen please be sure to highlight that R plotting will now require the conda environment in the release notes!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992:460,Deployability,release,release,460,"OK, added an integration test to check that MKL is enabled. If we move the conda install of these packages into the base image, then we might need to perform these checks elsewhere, e.g., in the bash script for building the image. Gotta push the base image and update the main Dockerfile. I'll merge after the weekend unless there are any more comments. Again, @droazen please be sure to highlight that R plotting will now require the conda environment in the release notes!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992:13,Integrability,integrat,integration,13,"OK, added an integration test to check that MKL is enabled. If we move the conda install of these packages into the base image, then we might need to perform these checks elsewhere, e.g., in the bash script for building the image. Gotta push the base image and update the main Dockerfile. I'll merge after the weekend unless there are any more comments. Again, @droazen please be sure to highlight that R plotting will now require the conda environment in the release notes!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992:150,Performance,perform,perform,150,"OK, added an integration test to check that MKL is enabled. If we move the conda install of these packages into the base image, then we might need to perform these checks elsewhere, e.g., in the bash script for building the image. Gotta push the base image and update the main Dockerfile. I'll merge after the weekend unless there are any more comments. Again, @droazen please be sure to highlight that R plotting will now require the conda environment in the release notes!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992:25,Testability,test,test,25,"OK, added an integration test to check that MKL is enabled. If we move the conda install of these packages into the base image, then we might need to perform these checks elsewhere, e.g., in the bash script for building the image. Gotta push the base image and update the main Dockerfile. I'll merge after the weekend unless there are any more comments. Again, @droazen please be sure to highlight that R plotting will now require the conda environment in the release notes!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-622500992
https://github.com/broadinstitute/gatk/pull/5026#issuecomment-628860774:94,Modifiability,portab,portability,94,Just noting for posterity that removing build strings in the conda YML seems to have improved portability to different OS environments: https://gatk.broadinstitute.org/hc/en-us/community/posts/360061666671-Broken-conda-env-create-n-gatk-f-gatkcondaenv-yml,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-628860774
https://github.com/broadinstitute/gatk/pull/5028#issuecomment-405970435:942,Deployability,pipeline,pipelines,942,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5028?src=pr&el=h1) Report; > Merging [#5028](https://codecov.io/gh/broadinstitute/gatk/pull/5028?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/1977c537b209d25fea504d2f601af7a9731debcf?src=pr&el=desc) will **decrease** coverage by `1.009%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #5028 +/- ##; ===============================================; - Coverage 60.162% 59.153% -1.009% ; + Complexity 12772 12571 -201 ; ===============================================; Files 1095 1095 ; Lines 64616 64616 ; Branches 10394 10394 ; ===============================================; - Hits 38874 38222 -652 ; - Misses 21504 22146 +642 ; - Partials 4238 4248 +10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5028?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `87.037% <ø> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...bender/tools/walkers/mutect/FilterMutectCalls.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9GaWx0ZXJNdXRlY3RDYWxscy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...ender/tools/walkers/filters/VariantFiltration.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2ZpbHRlcnMvVmFyaWFudEZpbHRyYXRpb24uamF2YQ==) | `89.076% <100%> (ø)` | `41 <0> (ø)` | :arrow_down: |; | [...hellbender/utils/haplotype/SAMFileDestination.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcv,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5028#issuecomment-405970435
https://github.com/broadinstitute/gatk/pull/5028#issuecomment-405970435:3073,Testability,test,test,3073,YXBsb3R5cGUvU0FNRmlsZURlc3RpbmF0aW9uLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...ender/utils/haplotype/HaplotypeBAMDestination.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oYXBsb3R5cGUvSGFwbG90eXBlQkFNRGVzdGluYXRpb24uamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...nder/utils/haplotype/CalledHaplotypeBAMWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oYXBsb3R5cGUvQ2FsbGVkSGFwbG90eXBlQkFNV3JpdGVyLmphdmE=) | `0% <0%> (-86.667%)` | `0% <0%> (-4%)` | |; | [...hellbender/utils/haplotype/HaplotypeBAMWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oYXBsb3R5cGUvSGFwbG90eXBlQkFNV3JpdGVyLmphdmE=) | `11.538% <0%> (-80.769%)` | `0% <0%> (-8%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `0% <0%> (-78.261%)` | `0% <0%> (-9%)` | |; | [...tools/walkers/haplotypecaller/HaplotypeCaller.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXIuamF2YQ==) | `0% <0%> (-76.923%)` | `0% <0%> (-17%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | ... and [56 more](https://codecov.io/gh/broadinstitute/gatk/pull/5028/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5028#issuecomment-405970435
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:65,Testability,test,test,65,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:80,Testability,test,tests,80,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:166,Testability,test,test,166,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:171,Testability,log,logs,171,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:230,Testability,Test,Test,230,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:303,Testability,test,test-logs,303,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:342,Testability,test,tests,342,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:348,Testability,test,test,348,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294:428,Usability,simpl,simply,428,"Hey @samuelklee. That is true, the default location for a gradle test output is tests/#taskname#. I'm not sure what the problem is however. If you look at the gradle test logs there is a line pointing to where the reports live: "" Test report will be written to https://storage.googleapis.com/hellbender-test-logs/build_reports/master_20802.3/tests/test/index.html."" Those links seem to work on the latest master. We fix this by simply renaming the files before we upload them however. Is this explanation adequate or would you like the build system changed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406332294
https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406335431:88,Testability,test,test,88,"Whoops, you're right! I think I got confused because I was looking at a build where the test report did not get generated and I missed the bit about renaming files in the build. Mea culpa!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5029#issuecomment-406335431
https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079:1572,Security,validat,validation,1572, Files 1781 1782 +1 ; Lines 132255 133311 +1056 ; Branches 14734 15003 +269 ; ===============================================; + Hits 114191 115180 +989 ; - Misses 12750 12781 +31 ; - Partials 5314 5350 +36; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5031?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ava/org/broadinstitute/hellbender/utils/Utils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9VdGlscy5qYXZh) | `84.469% <ø> (+3.993%)` | `298 <0> (+153)` | :arrow_up: |; | [...aplotypecaller/HaplotypeCallerIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXJJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `91.499% <100%> (ø)` | `85 <6> (ø)` | :arrow_down: |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <100%> (ø)` | `6 <0> (ø)` | :arrow_down: |; | [...ct/CreateSomaticPanelOfNormalsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...eVcfWithExpectedAlleleFractionIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079
https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079:3239,Security,validat,validation,3239,ntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `84.274% <100%> (+0.128%)` | `69 <1> (+1)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...r/tools/walkers/mutect/Mutect2IntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QySW50ZWdyYXRpb25UZXN0LmphdmE=) | `90.37% <87.5%> (ø)` | `53 <7> (ø)` | :arrow_down: |; | [...der/tools/walkers/variantutils/SelectVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50cy5qYXZh) | `79.405% <0%> (-1.258%)` | `158% <0%> (+33%)` | |; | ... and [14 more](https://codecov.io/gh/broadinstitute/gatk/pull/50,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079
https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079:2604,Testability,test,test,2604,java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <100%> (ø)` | `6 <0> (ø)` | :arrow_down: |; | [...ct/CreateSomaticPanelOfNormalsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...eVcfWithExpectedAlleleFractionIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `84.274% <100%> (+0.128%)` | `69 <1> (+1)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...r/tools/walkers/mutect/Mutect2Integrati,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079
https://github.com/broadinstitute/gatk/pull/5032#issuecomment-406335133:3484,Security,validat,validation,3484,er/engine/MultiVariantWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvTXVsdGlWYXJpYW50V2Fsa2VyLmphdmE=) | `96.154% <0%> (-0.398%)` | `24% <0%> (+11%)` | |; | [...der/tools/walkers/variantutils/SelectVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50cy5qYXZh) | `79.405% <0%> (-0.181%)` | `158% <0%> (+43%)` | |; | [...nder/utils/samples/MendelianViolationUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zYW1wbGVzL01lbmRlbGlhblZpb2xhdGlvblVuaXRUZXN0LmphdmE=) | `100% <0%> (ø)` | `47% <0%> (+7%)` | :arrow_up: |; | [...eVcfWithExpectedAlleleFractionIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <0%> (ø)` | `10% <0%> (+3%)` | :arrow_up: |; | [...s/walkers/variantutils/SelectVariantsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50c1VuaXRUZXN0LmphdmE=) | `100% <0%> (ø)` | `14% <0%> (+2%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `4% <0%> (+1%)` | :arrow_up: |; | ... and [14 more](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5032#issuecomment-406335133
https://github.com/broadinstitute/gatk/issues/5035#issuecomment-443588742:400,Usability,clear,clearly,400,"`-nt` is data threads, that is, threads on a single core. This is not true CPU-level parallelism but can save significant time because different threads need not be delayed by each other's memory fetches and I/O. That is, it is data parallelism but not processor parallelism. `-nct` is CPU parallelism and means multiple cores. I'm closing this issue, but feel free to re-open if I have not answered clearly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5035#issuecomment-443588742
https://github.com/broadinstitute/gatk/issues/5036#issuecomment-406295894:231,Availability,error,error,231,"@meganshand Probably. I will try to fix it today. First, could you tell me if there's anything special about mitochondria being circular that I should know i.e. is there some equivalence between -4 and 16566 or whatever? If so, my error is venial; if not, I'm just a bozo.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5036#issuecomment-406295894
https://github.com/broadinstitute/gatk/issues/5036#issuecomment-406322137:136,Modifiability,extend,extend,136,"The fact that it's circular means that there are reads and bases right up against the edge of the contig and often have soft clips that extend beyond the contig. So it looks a bit like this:. <img width=""945"" alt=""screen shot 2018-07-19 at 11 37 45 am"" src=""https://user-images.githubusercontent.com/13020550/42953344-3ba4f544-8b48-11e8-9250-db75e56c2069.png"">. So yes, circular means it's probably throwing in a weird edge case.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5036#issuecomment-406322137
https://github.com/broadinstitute/gatk/issues/5037#issuecomment-407150546:515,Modifiability,inherit,inherit,515,"As discussed elsewhere, all IGV does is ignore the column headers and take the last column, see https://software.broadinstitute.org/software/igv/SEG. Let's have ModelSegments output two LegacySegmentCollection files with column headers `[SAMPLE, CONTIG, START, END, COPY_RATIO_POSTERIOR_50/MINOR_ALLELE_FRACTION_POSTERIOR_50]`, one for CR_50 (.cr.igv.seg) and the other for MAF_50 (.af.igv.seg). Methods can be added to ModeledSegmentCollection to create these LegacySegmentCollections. LegacySegmentCollection can inherit from AbstractSampleCollection and the write method can be overridden to suppress the SAM-style header, although documentation should be added to explain this idiosyncrasy. Should be no more than a day's work. @LeeTL1220 feel free to take this one if you have time, otherwise I'm happy to take care of it after some more high priority issues.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5037#issuecomment-407150546
https://github.com/broadinstitute/gatk/issues/5037#issuecomment-407170543:162,Modifiability,coupling,coupling,162,We can either add `to*LegacySegmentCollection` methods to ModeledSegmentCollection or add static utility methods to ModelSegments. No real preference here as the coupling is minimal.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5037#issuecomment-407170543
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931:3238,Security,validat,validation,3238,st.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.415% <0%> (-0.19%)` | `34% <0%> (+14%)` | |; | [...utils/variant/GATKVariantContextUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzVW5pdFRlc3QuamF2YQ==) | `87.194% <0%> (-0.088%)` | `316% <0%> (+156%)` | |; | [...ct/CreateSomaticPanelOfNormalsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `10% <0%> (+4%)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `12% <0%> (+5%)` | :arrow_up: |; | ... and [10 more](https://,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931:3578,Security,validat,validation,3578,el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.415% <0%> (-0.19%)` | `34% <0%> (+14%)` | |; | [...utils/variant/GATKVariantContextUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzVW5pdFRlc3QuamF2YQ==) | `87.194% <0%> (-0.088%)` | `316% <0%> (+156%)` | |; | [...ct/CreateSomaticPanelOfNormalsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `10% <0%> (+4%)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `12% <0%> (+5%)` | :arrow_up: |; | ... and [10 more](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931:1554,Testability,Test,TestUtilsForAssemblyBasedSVDiscovery,1554,===============; Files 1782 1782 ; Lines 132603 134161 +1558 ; Branches 14761 15067 +306 ; ==============================================; + Hits 114543 116007 +1464 ; - Misses 12740 12805 +65 ; - Partials 5320 5349 +29; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5038?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...itute/hellbender/tools/walkers/mutect/Mutect2.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyLmphdmE=) | `89.286% <0%> (-3.571%)` | `18 <1> (ø)` | |; | [...formers/PalindromeArtifactClipReadTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90cmFuc2Zvcm1lcnMvUGFsaW5kcm9tZUFydGlmYWN0Q2xpcFJlYWRUcmFuc2Zvcm1lci5qYXZh) | `97.143% <80%> (-2.857%)` | `21 <0> (+4)` | |; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `88.889% <0%> (-6.633%)` | `12% <0%> (-1%)` | |; | [...dataSources/vcf/VcfFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnlVbml0VGVzdC5qYXZh) | `97.656% <0%> (-0.43%)` | `40% <0%> (+11%)` | |; | [.../AssemblyContigAlignmentsConfigPickerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.415% <0%> (-0.19%)` | `34% <0%> (+14%)` | ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195:330,Deployability,integrat,integration,330,"@meganshand Do you have a public mitochondrial bam that I could use for a test? If not, what if I took just the reads at the beginning of the contig, excluding any variants, and anonymized the header? That would be enough. Actually, if you do have an entire mitochondrial bam that's public, I wouldn't mind adding a mitochondrial integration test to the repo. . .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195:330,Integrability,integrat,integration,330,"@meganshand Do you have a public mitochondrial bam that I could use for a test? If not, what if I took just the reads at the beginning of the contig, excluding any variants, and anonymized the header? That would be enough. Actually, if you do have an entire mitochondrial bam that's public, I wouldn't mind adding a mitochondrial integration test to the repo. . .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195:74,Testability,test,test,74,"@meganshand Do you have a public mitochondrial bam that I could use for a test? If not, what if I took just the reads at the beginning of the contig, excluding any variants, and anonymized the header? That would be enough. Actually, if you do have an entire mitochondrial bam that's public, I wouldn't mind adding a mitochondrial integration test to the repo. . .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195:342,Testability,test,test,342,"@meganshand Do you have a public mitochondrial bam that I could use for a test? If not, what if I took just the reads at the beginning of the contig, excluding any variants, and anonymized the header? That would be enough. Actually, if you do have an entire mitochondrial bam that's public, I wouldn't mind adding a mitochondrial integration test to the repo. . .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406595660:217,Availability,down,downsample,217,"@davidbenjamin I do have a public bam! This is just chrM for NA12878: `/humgen/gsa-hpprojects/dev/mshand/SpecOps/Mitochondria/NA12878/NA12878_chrMOnly.bam`. The coverage should be quite high, so if it's too big I can downsample it if you want. . And my mitochondria only reference would probably also be useful: `/humgen/gsa-hpprojects/dev/mshand/SpecOps/Mitochondria/MitochondriaOnlyFastas/Homo_sapiens_assembly38.mt_only.fasta` (the fai and dict are there too).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406595660
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107:83,Deployability,integrat,integration,83,@meganshand I will include testing for this bug as part of an overall mitochondria integration test using your NA12878 bam in a separate PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107:83,Integrability,integrat,integration,83,@meganshand I will include testing for this bug as part of an overall mitochondria integration test using your NA12878 bam in a separate PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107:27,Testability,test,testing,27,@meganshand I will include testing for this bug as part of an overall mitochondria integration test using your NA12878 bam in a separate PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107
https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107:95,Testability,test,test,95,@meganshand I will include testing for this bug as part of an overall mitochondria integration test using your NA12878 bam in a separate PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-406636430:1279,Deployability,integrat,integration,1279,*increase** coverage by `0.104%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #5040 +/- ##; ==============================================; + Coverage 86.38% 86.485% +0.104% ; - Complexity 28640 29299 +659 ; ==============================================; Files 1782 1791 +9 ; Lines 132603 135334 +2731 ; Branches 14761 15341 +580 ; ==============================================; + Hits 114543 117043 +2500 ; - Misses 12740 12841 +101 ; - Partials 5320 5450 +130; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5040?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...walkers/bqsr/AnalyzeCovariatesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5040/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQW5hbHl6ZUNvdmFyaWF0ZXNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `93.846% <100%> (+1.783%)` | `24 <0> (+2)` | :arrow_up: |; | [.../sv/integration/SVIntegrationTestDataProvider.java](https://codecov.io/gh/broadinstitute/gatk/pull/5040/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9TVkludGVncmF0aW9uVGVzdERhdGFQcm92aWRlci5qYXZh) | `90.909% <0%> (-1.399%)` | `2% <0%> (+1%)` | |; | [...lignment/AssemblyContigAlignmentsConfigPicker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5040/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlci5qYXZh) | `92.857% <0%> (-0.658%)` | `125% <0%> (+30%)` | |; | [.../AssemblyContigAlignmentsConfigPickerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5040/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.279% <0%> (-0.326%)` | `42% <0%> (+22,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-406636430
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-406636430:1279,Integrability,integrat,integration,1279,*increase** coverage by `0.104%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #5040 +/- ##; ==============================================; + Coverage 86.38% 86.485% +0.104% ; - Complexity 28640 29299 +659 ; ==============================================; Files 1782 1791 +9 ; Lines 132603 135334 +2731 ; Branches 14761 15341 +580 ; ==============================================; + Hits 114543 117043 +2500 ; - Misses 12740 12841 +101 ; - Partials 5320 5450 +130; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5040?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...walkers/bqsr/AnalyzeCovariatesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5040/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQW5hbHl6ZUNvdmFyaWF0ZXNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `93.846% <100%> (+1.783%)` | `24 <0> (+2)` | :arrow_up: |; | [.../sv/integration/SVIntegrationTestDataProvider.java](https://codecov.io/gh/broadinstitute/gatk/pull/5040/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9TVkludGVncmF0aW9uVGVzdERhdGFQcm92aWRlci5qYXZh) | `90.909% <0%> (-1.399%)` | `2% <0%> (+1%)` | |; | [...lignment/AssemblyContigAlignmentsConfigPicker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5040/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlci5qYXZh) | `92.857% <0%> (-0.658%)` | `125% <0%> (+30%)` | |; | [.../AssemblyContigAlignmentsConfigPickerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5040/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.279% <0%> (-0.326%)` | `42% <0%> (+22,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-406636430
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924:442,Deployability,install,installation,442,"Thanks, @cmnbroad!. - You're right about gatkbase-2.1.0, that image is coming from #5026, which needs some more work. We can delete it for the time being if you think it'll cause confusion.; - Correct, I think the import statement for `reshape` in BQSR.R was always incorrect/extraneous. `reshape2` is the correct dependency for `ggplot2` (which is itself imported), and `reshape` is not explicitly used in BQSR.R. So to recap: I removed the installation of this unnecessary package, but failed to remove an unnecessary import statement since it was in an untested code path, which was then caught when users tried to run the tool. Investigation of this issue then revealed that `ggplot2` was not installed correctly in the current base image, due to a completely unrelated dependency issue.; - Good call on clearing the Travis cache. Not actually sure how to do that, do I just delete the cache at https://travis-ci.org/broadinstitute/gatk/caches for this particular branch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924:697,Deployability,install,installed,697,"Thanks, @cmnbroad!. - You're right about gatkbase-2.1.0, that image is coming from #5026, which needs some more work. We can delete it for the time being if you think it'll cause confusion.; - Correct, I think the import statement for `reshape` in BQSR.R was always incorrect/extraneous. `reshape2` is the correct dependency for `ggplot2` (which is itself imported), and `reshape` is not explicitly used in BQSR.R. So to recap: I removed the installation of this unnecessary package, but failed to remove an unnecessary import statement since it was in an untested code path, which was then caught when users tried to run the tool. Investigation of this issue then revealed that `ggplot2` was not installed correctly in the current base image, due to a completely unrelated dependency issue.; - Good call on clearing the Travis cache. Not actually sure how to do that, do I just delete the cache at https://travis-ci.org/broadinstitute/gatk/caches for this particular branch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924:314,Integrability,depend,dependency,314,"Thanks, @cmnbroad!. - You're right about gatkbase-2.1.0, that image is coming from #5026, which needs some more work. We can delete it for the time being if you think it'll cause confusion.; - Correct, I think the import statement for `reshape` in BQSR.R was always incorrect/extraneous. `reshape2` is the correct dependency for `ggplot2` (which is itself imported), and `reshape` is not explicitly used in BQSR.R. So to recap: I removed the installation of this unnecessary package, but failed to remove an unnecessary import statement since it was in an untested code path, which was then caught when users tried to run the tool. Investigation of this issue then revealed that `ggplot2` was not installed correctly in the current base image, due to a completely unrelated dependency issue.; - Good call on clearing the Travis cache. Not actually sure how to do that, do I just delete the cache at https://travis-ci.org/broadinstitute/gatk/caches for this particular branch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924:774,Integrability,depend,dependency,774,"Thanks, @cmnbroad!. - You're right about gatkbase-2.1.0, that image is coming from #5026, which needs some more work. We can delete it for the time being if you think it'll cause confusion.; - Correct, I think the import statement for `reshape` in BQSR.R was always incorrect/extraneous. `reshape2` is the correct dependency for `ggplot2` (which is itself imported), and `reshape` is not explicitly used in BQSR.R. So to recap: I removed the installation of this unnecessary package, but failed to remove an unnecessary import statement since it was in an untested code path, which was then caught when users tried to run the tool. Investigation of this issue then revealed that `ggplot2` was not installed correctly in the current base image, due to a completely unrelated dependency issue.; - Good call on clearing the Travis cache. Not actually sure how to do that, do I just delete the cache at https://travis-ci.org/broadinstitute/gatk/caches for this particular branch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924:828,Performance,cache,cache,828,"Thanks, @cmnbroad!. - You're right about gatkbase-2.1.0, that image is coming from #5026, which needs some more work. We can delete it for the time being if you think it'll cause confusion.; - Correct, I think the import statement for `reshape` in BQSR.R was always incorrect/extraneous. `reshape2` is the correct dependency for `ggplot2` (which is itself imported), and `reshape` is not explicitly used in BQSR.R. So to recap: I removed the installation of this unnecessary package, but failed to remove an unnecessary import statement since it was in an untested code path, which was then caught when users tried to run the tool. Investigation of this issue then revealed that `ggplot2` was not installed correctly in the current base image, due to a completely unrelated dependency issue.; - Good call on clearing the Travis cache. Not actually sure how to do that, do I just delete the cache at https://travis-ci.org/broadinstitute/gatk/caches for this particular branch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924:890,Performance,cache,cache,890,"Thanks, @cmnbroad!. - You're right about gatkbase-2.1.0, that image is coming from #5026, which needs some more work. We can delete it for the time being if you think it'll cause confusion.; - Correct, I think the import statement for `reshape` in BQSR.R was always incorrect/extraneous. `reshape2` is the correct dependency for `ggplot2` (which is itself imported), and `reshape` is not explicitly used in BQSR.R. So to recap: I removed the installation of this unnecessary package, but failed to remove an unnecessary import statement since it was in an untested code path, which was then caught when users tried to run the tool. Investigation of this issue then revealed that `ggplot2` was not installed correctly in the current base image, due to a completely unrelated dependency issue.; - Good call on clearing the Travis cache. Not actually sure how to do that, do I just delete the cache at https://travis-ci.org/broadinstitute/gatk/caches for this particular branch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924:941,Performance,cache,caches,941,"Thanks, @cmnbroad!. - You're right about gatkbase-2.1.0, that image is coming from #5026, which needs some more work. We can delete it for the time being if you think it'll cause confusion.; - Correct, I think the import statement for `reshape` in BQSR.R was always incorrect/extraneous. `reshape2` is the correct dependency for `ggplot2` (which is itself imported), and `reshape` is not explicitly used in BQSR.R. So to recap: I removed the installation of this unnecessary package, but failed to remove an unnecessary import statement since it was in an untested code path, which was then caught when users tried to run the tool. Investigation of this issue then revealed that `ggplot2` was not installed correctly in the current base image, due to a completely unrelated dependency issue.; - Good call on clearing the Travis cache. Not actually sure how to do that, do I just delete the cache at https://travis-ci.org/broadinstitute/gatk/caches for this particular branch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924:808,Usability,clear,clearing,808,"Thanks, @cmnbroad!. - You're right about gatkbase-2.1.0, that image is coming from #5026, which needs some more work. We can delete it for the time being if you think it'll cause confusion.; - Correct, I think the import statement for `reshape` in BQSR.R was always incorrect/extraneous. `reshape2` is the correct dependency for `ggplot2` (which is itself imported), and `reshape` is not explicitly used in BQSR.R. So to recap: I removed the installation of this unnecessary package, but failed to remove an unnecessary import statement since it was in an untested code path, which was then caught when users tried to run the tool. Investigation of this issue then revealed that `ggplot2` was not installed correctly in the current base image, due to a completely unrelated dependency issue.; - Good call on clearing the Travis cache. Not actually sure how to do that, do I just delete the cache at https://travis-ci.org/broadinstitute/gatk/caches for this particular branch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408447924
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109:79,Performance,cache,cache,79,"@samuelklee I'd say lets leave 2.1 base image up there for now, and yes on the cache clearing. Once tests pass with the cache cleared it should be good to merge. Feel free to squash and rebase if you like.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109:120,Performance,cache,cache,120,"@samuelklee I'd say lets leave 2.1 base image up there for now, and yes on the cache clearing. Once tests pass with the cache cleared it should be good to merge. Feel free to squash and rebase if you like.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109:100,Testability,test,tests,100,"@samuelklee I'd say lets leave 2.1 base image up there for now, and yes on the cache clearing. Once tests pass with the cache cleared it should be good to merge. Feel free to squash and rebase if you like.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109:85,Usability,clear,clearing,85,"@samuelklee I'd say lets leave 2.1 base image up there for now, and yes on the cache clearing. Once tests pass with the cache cleared it should be good to merge. Feel free to squash and rebase if you like.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109
https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109:126,Usability,clear,cleared,126,"@samuelklee I'd say lets leave 2.1 base image up there for now, and yes on the cache clearing. Once tests pass with the cache cleared it should be good to merge. Feel free to squash and rebase if you like.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109
https://github.com/broadinstitute/gatk/pull/5042#issuecomment-406734723:3466,Security,validat,validation,3466,s/walkers/vqsr/FilterVariantTranches.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzLmphdmE=) | `92.105% <89.286%> (-0.526%)` | `41 <14> (+9)` | |; | [...itute/hellbender/tools/funcotator/Funcotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0aW9uLmphdmE=) | `33.333% <0%> (-22.222%)` | `3% <0%> (-2%)` | |; | [...Sources/gencode/DataProviderForMuc16IndelData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvRGF0YVByb3ZpZGVyRm9yTXVjMTZJbmRlbERhdGEuamF2YQ==) | `80% <0%> (-14.118%)` | `1% <0%> (ø)` | |; | [...ead/markduplicates/sparkrecords/EmptyFragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9FbXB0eUZyYWdtZW50LmphdmE=) | `78.571% <0%> (-6.044%)` | `5% <0%> (ø)` | |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `84.946% <0%> (-4.683%)` | `24% <0%> (-16%)` | |; | [...idation/CompareDuplicatesSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `93.103% <0%> (-3.563%)` | `5% <0%> (-2%)` | |; | ... and [72 more](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-406734723
https://github.com/broadinstitute/gatk/pull/5042#issuecomment-409624017:262,Usability,clear,clear,262,"![screenshot 2018-08-01 11 42 49](https://user-images.githubusercontent.com/2604962/43532426-0ddde2a0-9580-11e8-90a2-1e867c05b13a.png). After seeing plots like the one above, where we have lots of false negative SNPs and lots of false positive indels, it became clear that we should have separate tranche sensitivites for the two variant types. I've added that into this PR. I made the filter removal opt-in as suggested and it now shares the argument with VariantFiltration. @cmnbroad back to you, sorry for moving the goal line for this PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-409624017
https://github.com/broadinstitute/gatk/pull/5042#issuecomment-411107905:36,Deployability,update,update,36,"@cmnbroad you're right, I forgot to update the CNNVariantPipeline test with the new arguments. Should be fixed now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-411107905
https://github.com/broadinstitute/gatk/pull/5042#issuecomment-411107905:66,Testability,test,test,66,"@cmnbroad you're right, I forgot to update the CNNVariantPipeline test with the new arguments. Should be fixed now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-411107905
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1725,Availability,down,down,1725,". If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be deleted at some point. I can help with how to get this into your branch if you like.; 2. Y",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:3156,Availability,down,down,3156,"s fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be deleted at some point. I can help with how to get this into your branch if you like.; 2. Your modified GATK3 tests in a single commit. This will also be removed before merge.; 3. A single commit with all of your ""minimal"" changes for the port, including the real, new tests. This should compile, and tests should pass on CI with pretty high code coverage. This is what we'll iterate on. After that, its really helpful to have only a single new commit for each review iteration (you can create as many commits as you want as you work, but squash the new commits down before submitting). Just don't squash or rebase anything thats already been pushed up to the repo. Also, note that most of the GATK engine team is out for a few weeks, so progress may be slow in the short term.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:445,Deployability,update,updated,445,"@bbimber Good questions all. Whenever we do these ports we have to strike a balance between minimizing the changes and updating to GATK4 standards. Generally, though, we want the code to conform to GATK4. This PR is large and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1263,Deployability,toggle,toggled,1263,"and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits bef",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1155,Integrability,depend,dependent,1155,"and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits bef",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1236,Integrability,depend,dependsOn,1236,"and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits bef",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1604,Modifiability,plugin,plugins,1604,"ly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be delete",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1781,Modifiability,plugin,plugins,1781,"ong. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be deleted at some point. I can help with how to get this into your branch if you like.; 2. Your modified GATK3 tests in a single commit. This will also be removed before merge.; 3. A single commit with all o",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1888,Modifiability,plugin,plugins,1888,"d be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be deleted at some point. I can help with how to get this into your branch if you like.; 2. Your modified GATK3 tests in a single commit. This will also be removed before merge.; 3. A single commit with all of your ""minimal"" changes for the port, including the real, new tests. This should compile, and tests should",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:566,Testability,assert,assertions,566,"@bbimber Good questions all. Whenever we do these ports we have to strike a balance between minimizing the changes and updating to GATK4 standards. Generally, though, we want the code to conform to GATK4. This PR is large and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:775,Testability,test,tests,775,"@bbimber Good questions all. Whenever we do these ports we have to strike a balance between minimizing the changes and updating to GATK4 standards. Generally, though, we want the code to conform to GATK4. This PR is large and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:864,Testability,test,tests,864,"@bbimber Good questions all. Whenever we do these ports we have to strike a balance between minimizing the changes and updating to GATK4 standards. Generally, though, we want the code to conform to GATK4. This PR is large and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:896,Testability,test,tests,896,"@bbimber Good questions all. Whenever we do these ports we have to strike a balance between minimizing the changes and updating to GATK4 standards. Generally, though, we want the code to conform to GATK4. This PR is large and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1170,Testability,test,test,1170,"and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits bef",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1193,Testability,Test,Test,1193,"and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits bef",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:1820,Testability,test,test,1820,"ong. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be deleted at some point. I can help with how to get this into your branch if you like.; 2. Your modified GATK3 tests in a single commit. This will also be removed before merge.; 3. A single commit with all o",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:2704,Testability,test,tests,2704,"s fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be deleted at some point. I can help with how to get this into your branch if you like.; 2. Your modified GATK3 tests in a single commit. This will also be removed before merge.; 3. A single commit with all of your ""minimal"" changes for the port, including the real, new tests. This should compile, and tests should pass on CI with pretty high code coverage. This is what we'll iterate on. After that, its really helpful to have only a single new commit for each review iteration (you can create as many commits as you want as you work, but squash the new commits down before submitting). Just don't squash or rebase anything thats already been pushed up to the repo. Also, note that most of the GATK engine team is out for a few weeks, so progress may be slow in the short term.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:2863,Testability,test,tests,2863,"s fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be deleted at some point. I can help with how to get this into your branch if you like.; 2. Your modified GATK3 tests in a single commit. This will also be removed before merge.; 3. A single commit with all of your ""minimal"" changes for the port, including the real, new tests. This should compile, and tests should pass on CI with pretty high code coverage. This is what we'll iterate on. After that, its really helpful to have only a single new commit for each review iteration (you can create as many commits as you want as you work, but squash the new commits down before submitting). Just don't squash or rebase anything thats already been pushed up to the repo. Also, note that most of the GATK engine team is out for a few weeks, so progress may be slow in the short term.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:2895,Testability,test,tests,2895,"s fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin base class, we may want that to live in the Barclay repo. As @magicdgs points out, master already has your previous commits, so you should start by rebasing on that. Ideally, the branch would have the following commits before we start the first review cycle:. 1. A single commit containing the unmodified GATK3 source (unmodified with the exception that if a file is renamed for GATK4, its helpful to rename the GATK3 version in this commit so it's easy to compare in the next commit). This commit doesn't have to compile or run - its just to make the review process easier for us, and will be deleted at some point. I can help with how to get this into your branch if you like.; 2. Your modified GATK3 tests in a single commit. This will also be removed before merge.; 3. A single commit with all of your ""minimal"" changes for the port, including the real, new tests. This should compile, and tests should pass on CI with pretty high code coverage. This is what we'll iterate on. After that, its really helpful to have only a single new commit for each review iteration (you can create as many commits as you want as you work, but squash the new commits down before submitting). Just don't squash or rebase anything thats already been pushed up to the repo. Also, note that most of the GATK engine team is out for a few weeks, so progress may be slow in the short term.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:341,Usability,simpl,simple,341,"@bbimber Good questions all. Whenever we do these ports we have to strike a balance between minimizing the changes and updating to GATK4 standards. Generally, though, we want the code to conform to GATK4. This PR is large and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352:822,Usability,clear,clear,822,"@bbimber Good questions all. Whenever we do these ports we have to strike a balance between minimizing the changes and updating to GATK4 standards. Generally, though, we want the code to conform to GATK4. This PR is large and likely to require some iteration so I'd be ok with starting with just the minimal ""porting"" changes to keep things simple, and then doing a code hygiene pass at the end. The ""porting"" changes should include things like updated javadoc, GATK4-style command line arguments, updating of outdated GATK3 terminology such as ""ROD"", Utils.nonNull assertions, etc. The finals and curly braces can wait for a separate pass (we will want to do those in this PR though). If you're not sure what to include or not just ask. I like the idea of keeping the GATK3 tests working as we go along. We should make a clear distinction between the old and new tests though. Ideally the GATK3 tests would be in a separate commit that we can just delete at the end, but that can get unwieldy if the files in the commit need to change as we go along. Alternatively you could isolate them into a separate directory. They should either be disabled or made dependent on a test method (see the `@Test` annotation properties `enabled` and `dependsOn`) that is easily toggled so they can be run locally, but don't run on the CI server. Otherwise the CI server build will always fail. In general, its really helpful to have the first commit in the PR contain the completely unmodified GATK3 source files. It makes it much easier for the reviewer to see what changed for the port. I noticed that you have 2 new plugins included in this. I'm not sure if that was suggested by someone on the GATK team (I'm wondering if we want to go down that path...) but I can tell you that the existing plugins required an enormous amount of test development and review iteration. If we do decide to make them plugins, I think it would be a good idea to do so in a separate PR. Also, if we choose to make an AbstractPlugin ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407089352
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968:1241,Integrability,depend,depend,1241,"@cmnbroad, that's not wholly unreasonable, but i'd like to push back on a number of these points. . 1) First - would GATK consider simply letting us take over VariantEval and maintain as a GATK4-based tool in another repo? My understanding from GATK4 issues is that plan was to never migrate VariantEval (i think in favor of other picard/gatk QC tools). There is a bit of a conflict between keeping a lean core engine and having all these tools built off it. I would think there's an argument for keeping your core engine and the many tools built off it separated (GATK3 seemed to include some dead tools, for example). I appreciate we're the ones pushing this migration, but I hope on the other side you can appreciate the bar is pretty significant on our time. . 2) What new plugins are you talking about? VariantStratification and VariantEvaluator are part of GATK3's VariantEval? Yeah, I wrote a base PluginDescriptor class patterned on how ReadFilters work. It probably should exist in a more core position in code. While there's some good ideas in the argument-parsing/plugin code of GATK/Barlcay, frankly seems like much of it isnt fully developed yet, which is why I kept this separated at the moment. . 3) Be aware, the GATK3 tests depend on ~30GB of files. I dont know the limits of git lfs, but I did not currently have plans to check those in. I assumed I would convert these to use GATK4 chr20/21 data for a final commit, but felt there was a lot of value in using unaltered GATK3 data to confirm parity (and it was during the migration).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968:777,Modifiability,plugin,plugins,777,"@cmnbroad, that's not wholly unreasonable, but i'd like to push back on a number of these points. . 1) First - would GATK consider simply letting us take over VariantEval and maintain as a GATK4-based tool in another repo? My understanding from GATK4 issues is that plan was to never migrate VariantEval (i think in favor of other picard/gatk QC tools). There is a bit of a conflict between keeping a lean core engine and having all these tools built off it. I would think there's an argument for keeping your core engine and the many tools built off it separated (GATK3 seemed to include some dead tools, for example). I appreciate we're the ones pushing this migration, but I hope on the other side you can appreciate the bar is pretty significant on our time. . 2) What new plugins are you talking about? VariantStratification and VariantEvaluator are part of GATK3's VariantEval? Yeah, I wrote a base PluginDescriptor class patterned on how ReadFilters work. It probably should exist in a more core position in code. While there's some good ideas in the argument-parsing/plugin code of GATK/Barlcay, frankly seems like much of it isnt fully developed yet, which is why I kept this separated at the moment. . 3) Be aware, the GATK3 tests depend on ~30GB of files. I dont know the limits of git lfs, but I did not currently have plans to check those in. I assumed I would convert these to use GATK4 chr20/21 data for a final commit, but felt there was a lot of value in using unaltered GATK3 data to confirm parity (and it was during the migration).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968:905,Modifiability,Plugin,PluginDescriptor,905,"@cmnbroad, that's not wholly unreasonable, but i'd like to push back on a number of these points. . 1) First - would GATK consider simply letting us take over VariantEval and maintain as a GATK4-based tool in another repo? My understanding from GATK4 issues is that plan was to never migrate VariantEval (i think in favor of other picard/gatk QC tools). There is a bit of a conflict between keeping a lean core engine and having all these tools built off it. I would think there's an argument for keeping your core engine and the many tools built off it separated (GATK3 seemed to include some dead tools, for example). I appreciate we're the ones pushing this migration, but I hope on the other side you can appreciate the bar is pretty significant on our time. . 2) What new plugins are you talking about? VariantStratification and VariantEvaluator are part of GATK3's VariantEval? Yeah, I wrote a base PluginDescriptor class patterned on how ReadFilters work. It probably should exist in a more core position in code. While there's some good ideas in the argument-parsing/plugin code of GATK/Barlcay, frankly seems like much of it isnt fully developed yet, which is why I kept this separated at the moment. . 3) Be aware, the GATK3 tests depend on ~30GB of files. I dont know the limits of git lfs, but I did not currently have plans to check those in. I assumed I would convert these to use GATK4 chr20/21 data for a final commit, but felt there was a lot of value in using unaltered GATK3 data to confirm parity (and it was during the migration).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968:1075,Modifiability,plugin,plugin,1075,"@cmnbroad, that's not wholly unreasonable, but i'd like to push back on a number of these points. . 1) First - would GATK consider simply letting us take over VariantEval and maintain as a GATK4-based tool in another repo? My understanding from GATK4 issues is that plan was to never migrate VariantEval (i think in favor of other picard/gatk QC tools). There is a bit of a conflict between keeping a lean core engine and having all these tools built off it. I would think there's an argument for keeping your core engine and the many tools built off it separated (GATK3 seemed to include some dead tools, for example). I appreciate we're the ones pushing this migration, but I hope on the other side you can appreciate the bar is pretty significant on our time. . 2) What new plugins are you talking about? VariantStratification and VariantEvaluator are part of GATK3's VariantEval? Yeah, I wrote a base PluginDescriptor class patterned on how ReadFilters work. It probably should exist in a more core position in code. While there's some good ideas in the argument-parsing/plugin code of GATK/Barlcay, frankly seems like much of it isnt fully developed yet, which is why I kept this separated at the moment. . 3) Be aware, the GATK3 tests depend on ~30GB of files. I dont know the limits of git lfs, but I did not currently have plans to check those in. I assumed I would convert these to use GATK4 chr20/21 data for a final commit, but felt there was a lot of value in using unaltered GATK3 data to confirm parity (and it was during the migration).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968:1235,Testability,test,tests,1235,"@cmnbroad, that's not wholly unreasonable, but i'd like to push back on a number of these points. . 1) First - would GATK consider simply letting us take over VariantEval and maintain as a GATK4-based tool in another repo? My understanding from GATK4 issues is that plan was to never migrate VariantEval (i think in favor of other picard/gatk QC tools). There is a bit of a conflict between keeping a lean core engine and having all these tools built off it. I would think there's an argument for keeping your core engine and the many tools built off it separated (GATK3 seemed to include some dead tools, for example). I appreciate we're the ones pushing this migration, but I hope on the other side you can appreciate the bar is pretty significant on our time. . 2) What new plugins are you talking about? VariantStratification and VariantEvaluator are part of GATK3's VariantEval? Yeah, I wrote a base PluginDescriptor class patterned on how ReadFilters work. It probably should exist in a more core position in code. While there's some good ideas in the argument-parsing/plugin code of GATK/Barlcay, frankly seems like much of it isnt fully developed yet, which is why I kept this separated at the moment. . 3) Be aware, the GATK3 tests depend on ~30GB of files. I dont know the limits of git lfs, but I did not currently have plans to check those in. I assumed I would convert these to use GATK4 chr20/21 data for a final commit, but felt there was a lot of value in using unaltered GATK3 data to confirm parity (and it was during the migration).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968:131,Usability,simpl,simply,131,"@cmnbroad, that's not wholly unreasonable, but i'd like to push back on a number of these points. . 1) First - would GATK consider simply letting us take over VariantEval and maintain as a GATK4-based tool in another repo? My understanding from GATK4 issues is that plan was to never migrate VariantEval (i think in favor of other picard/gatk QC tools). There is a bit of a conflict between keeping a lean core engine and having all these tools built off it. I would think there's an argument for keeping your core engine and the many tools built off it separated (GATK3 seemed to include some dead tools, for example). I appreciate we're the ones pushing this migration, but I hope on the other side you can appreciate the bar is pretty significant on our time. . 2) What new plugins are you talking about? VariantStratification and VariantEvaluator are part of GATK3's VariantEval? Yeah, I wrote a base PluginDescriptor class patterned on how ReadFilters work. It probably should exist in a more core position in code. While there's some good ideas in the argument-parsing/plugin code of GATK/Barlcay, frankly seems like much of it isnt fully developed yet, which is why I kept this separated at the moment. . 3) Be aware, the GATK3 tests depend on ~30GB of files. I dont know the limits of git lfs, but I did not currently have plans to check those in. I assumed I would convert these to use GATK4 chr20/21 data for a final commit, but felt there was a lot of value in using unaltered GATK3 data to confirm parity (and it was during the migration).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:412,Modifiability,plugin,plugins,412,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:529,Modifiability,plugin,plugin,529,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:604,Modifiability,plugin,plugin,604,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:680,Modifiability,plugin,plugins,680,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:792,Modifiability,plugin,plugin,792,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:837,Modifiability,plugin,plugin,837,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:135,Testability,test,tests,135,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:145,Testability,test,test,145,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:765,Testability,test,test,765,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:1006,Testability,test,test,1006,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:1216,Testability,test,tests,1216,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:1317,Testability,test,tests,1317,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:1442,Testability,test,tests,1442,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:1536,Testability,test,test,1536,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:1681,Testability,test,test,1681,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:1705,Testability,test,tests,1705,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:913,Usability,learn,learn,913,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633:1074,Usability,guid,guidelines,1074,"On the first question, we definitely appreciate how much work this will take. Often, porting the code is the easy part; developing new tests and test data can be a huge effort. I can try to find out if it would be possible for you to take the tool over - I know this kind of thing has come up before for other tools, but I'd have to ask around to find that out. @vdauwera do you have input on this ?. As for the plugins, currently in your branch `VariantStratification` and `VariantEvaluator` are modeled as Barclay command line plugin descriptors, and I was questioning whether thats necessary. Being a plugin is not necessarily required - `ReadFilter` and `Annotation` are both plugins, but they didn't have to be, and it takes quite a bit of work (again, mostly test development) to get a plugin right. Also, I'd consider the Barclay plugin framework to be pretty developed at this point, so I'd be curious to learn more about what issues you see. And yes, definitely don't check any of the large GATK3 test files into the repo, even temporarily. Take a look at [General guidelines for GATK4 developers](https://github.com/broadinstitute/gatk#dev_guidelines) if you haven't already. As you pointed out, new GATK4 tests that use smaller files would have to be developed. We'd want those to be included, and passing tests on the CI server, before we started reviewing the branch, so we know we're reviewing code that works and is covered by tests as much as possible. The second commit in my list above would have only your GATK3 java test files, etc (but not the big files, which you appear to have locally). The third commit would have your ported tool code, as well as the new test code, with the new tests enabled, as well as the smaller input files and expected results files. At the end we'd remove commit #2.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407185633
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:992,Availability,robust,robust,992,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:312,Modifiability,plugin,plugins,312,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:415,Modifiability,plugin,plugins,415,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:648,Modifiability,plugin,plugins,648,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:779,Modifiability,plugin,plugins,779,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:847,Modifiability,plugin,plugins,847,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:1016,Modifiability,plugin,plugins,1016,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:1229,Modifiability,plugin,plugins,1229,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:1252,Modifiability,plugin,plugins,1252,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:1308,Modifiability,plugin,plugins,1308,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:211,Testability,test,testing,211,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501:67,Usability,simpl,simply,67,"Let's hear what others say, but I think I would strongly prefer to simply take over VariantEval in another repo if this was something you'd consider. I'd likely do much of what you propose anyway (certainly WRT testing); however, perhaps not the microscope we went through with the core GATK changes earlier. On plugins: I like what seems to be shaping up w/ Barclay. I carried over the Stratifier and Evaluator as plugins because it seems like it would make sense to allow tools to provide extensions (VariantEval, our tool, does). If I took this PR a step further, I would have migrated many arguments currently top-level on VariantEval into the plugins themselves (a good feature in Barclay). As an aside: I dont think VariantAnnotator is migrated yet, but we have many GATK3 plugins related to annotation, and hope that tool retains Annotator plugins when it get migrated. My impressions of barclay are probably a little out of date. I agree the main argument parsing framework is pretty robust. Specifically on plugins, it seems a little less so, or at least there are not many tools I visibly see exercising that part of the code. For example, there really should be a default implmentation or base class between Barclay's plugins and ReadFilter plugins. I'm guessing if more tools in GATK4 were using plugins this would have happened. I created something like this for VariantEval, and without a ton of work that could probably get generalized; however, doing so would throw a lot higher bar on me and as noted above I'm trying to take on less, not more at the moment. If we do take over VariantEval, I'm certainly happy to try to contribute code and experiences to improve the core, through more targeted PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407202501
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407469692:284,Modifiability,plugin,plugins,284,"@magicDGS I agree that a fully implemented AbstractPluginDescritor class is a good idea. Why not do this in a separate PR, and would this be most appropriate in Barclay? I would be happy to take a stab or let you. We should look at the usage pattern of ReadFilters, VariantEval's two plugins, VariantAnnotation and perhaps others I'm not thinking about.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407469692
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-408101219:169,Usability,simpl,simplifies,169,"@magicDGS If you think an AbstractPluginDescriptor would be useful, I'd suggest initially creating a separate PR in GATK, since that would make it easy to see to how it simplifies the existing descriptors. Then once that converges, we can move the abstract part to Barclay.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-408101219
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-408101894:0,Availability,ping,ping,0,ping @vdauwera. Do you know what we need to do to respond to @bbimber's request to take over VariantEval in a separate repo ?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-408101894
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-411741842:10,Availability,ping,ping,10,"@vdauwera ping - Can you help us figure out how to proceed with making a determination on this, or who else we need to consult ? Thx.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-411741842
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413526947:303,Testability,test,tests,303,"@bbimber I haven't heard anything from @vdauwera, but based on discussions with @droazen now that he is back, I think we're inclined to prefer to keep this as part of GATK. We can certainly work with you on making this less onerous than the last PR, which involved engine level changes. We will require tests that use data contained in the repo, though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413526947
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:116,Availability,robust,robust,116,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:78,Deployability,update,updated,78,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:398,Deployability,update,updates,398,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:611,Deployability,update,updated,611,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:561,Safety,avoid,avoided,561,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:49,Testability,test,tests,49,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:123,Testability,test,testing,123,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544:594,Testability,test,tests,594,"@cmnbroad : thanks for the reply. yes, obviously tests would need to be added/updated. there's no question it needs robust testing. . my main concern is that VariantEval is a fairly sprawling tool with all sorts of add-ons. The majority of the untouched code taken verbatim from GATK3 isnt going to pass muster based on the bar of our last PR without a lot of petty revision (and maybe some useful updates). There are certainly some code improvements one could make across VariantEval, but I'm just not that keen on combing through the whole thing if it can be avoided. . how about this: while tests need to be updated (as discussed above, they work on the GATK3 data, which isnt checked in), the code in this PR is functional. Would you be willing to review a couple classes, maybe VariantEval itself and a few ancillary classes to see what scope of work we're talking about?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413642544
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413988997:458,Deployability,update,updated,458,"@bbimber I did start to take a look at this today. We'd probably take many of the peripheral classes from GATK3 as they are (though there will be some exceptions, i.e., `VariantEvalUtils` calls `System.exit`, which we wouldn't want to do). And in some cases we may want to make tickets for places where we want to do refactoring, like we did for MendelianViolations. The code will need to conform to GATK4 in some areas (use hyphen-separated argument names, updated javadoc where it's GATK3-specific, etc). The easiest way to do this would be to add a commit with the raw GATK3 code as I mentioned above. We would then focus on reviewing the diffs, instead of line-by-line for all of the code. I can add that commit if you like - we'd just need to coordinate since I would have to push to your branch. Also, FYI, I'll be away all of next week so I won't be able to do any more on this until I return.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413988997
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413988997:317,Modifiability,refactor,refactoring,317,"@bbimber I did start to take a look at this today. We'd probably take many of the peripheral classes from GATK3 as they are (though there will be some exceptions, i.e., `VariantEvalUtils` calls `System.exit`, which we wouldn't want to do). And in some cases we may want to make tickets for places where we want to do refactoring, like we did for MendelianViolations. The code will need to conform to GATK4 in some areas (use hyphen-separated argument names, updated javadoc where it's GATK3-specific, etc). The easiest way to do this would be to add a commit with the raw GATK3 code as I mentioned above. We would then focus on reviewing the diffs, instead of line-by-line for all of the code. I can add that commit if you like - we'd just need to coordinate since I would have to push to your branch. Also, FYI, I'll be away all of next week so I won't be able to do any more on this until I return.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413988997
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413991721:314,Deployability,update,updates,314,"@cmnbroad OK. I have two grants in progress so time is a little tight. I can probably carve out some time though. If you dont mind doing the raw GATK3 commit I'll work off that. If we can take this plus my baseline here, then I will go through everything to clean up what I can pick out as obviously needing GATK4 updates. Thanks for working with us on this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-413991721
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416303132:19,Deployability,update,updated,19,"@bbimber I have an updated version of this branch that contains the raw GATK3 sources as the first commit, but I don't want to clobber anything you may be in the process of pushing up, so I'll wait for you to tell me when to push it. One thing to note is that currently this branch doesn't compile (even without my commit). I just want to make sure github has all of your changes, since I know you had the old tests working with it. With my commit, the history looks like this:. ![image](https://user-images.githubusercontent.com/10062863/44674969-25280580-a9fd-11e8-94d2-c41c2d9be61e.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416303132
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416303132:410,Testability,test,tests,410,"@bbimber I have an updated version of this branch that contains the raw GATK3 sources as the first commit, but I don't want to clobber anything you may be in the process of pushing up, so I'll wait for you to tell me when to push it. One thing to note is that currently this branch doesn't compile (even without my commit). I just want to make sure github has all of your changes, since I know you had the old tests working with it. With my commit, the history looks like this:. ![image](https://user-images.githubusercontent.com/10062863/44674969-25280580-a9fd-11e8-94d2-c41c2d9be61e.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416303132
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416325843:113,Testability,test,test,113,"Done. I wasn't sure if I'd be able to push to your fork, but it seems to have worked. Also, I added one new unit test file that wasn't previously in your branch (SnpEffUtilsUnitTest.java), since it already exists. It should be a quick port.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416325843
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416341795:33,Deployability,integrat,integration,33,"Yes, if you have Version Control integration enabled, you can select the branch, and then any commit, or group of commits, in order to see the diffs. So once its read, I'll be able to look at just the diffs between the initial GATK3 commit and your commit(s) right from within IntelliJ.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416341795
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416341795:33,Integrability,integrat,integration,33,"Yes, if you have Version Control integration enabled, you can select the branch, and then any commit, or group of commits, in order to see the diffs. So once its read, I'll be able to look at just the diffs between the initial GATK3 commit and your commit(s) right from within IntelliJ.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-416341795
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430743842:157,Security,access,access,157,"@bbimber We just added full versions of the B37 and HG38 references to the repo a couple of days ago. You'll have to rebase this branch on current master to access them, but it might make it easier to port some of the GATK3 tests that use b37.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430743842
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430743842:224,Testability,test,tests,224,"@bbimber We just added full versions of the B37 and HG38 references to the repo a couple of days ago. You'll have to rebase this branch on current master to access them, but it might make it easier to port some of the GATK3 tests that use b37.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430743842
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430755318:162,Testability,test,tests,162,"good timing. as you might have seen, i found some time to work on this. I now have everything 100% backwards compatible w/ GATK3's behavior. I started to migrate tests. In many cases, it was actually using 20/21 anyway, so it's not a big deal. For any GATK3 tests files that were tiny, I just checked them in, and the tests should work as-is. However, there's 5ish ""large"" VCFs (meaning more than ~250kb), and a couple into the MBs. I could either:. 1) Rework the tests to use another larger VCF already checked into GATK4 (this is what I assumed I'd do); 2) Check in the GATK3 VCFs to the large file repo; 3) Perhaps subset the GATK3 VCFs to chr20/21 if not already, and check in?. Do you have other opinions on how to approach that? You'll see I checked in a handful of small files into the resources dir. Is that going to be OK for merging?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430755318
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430755318:258,Testability,test,tests,258,"good timing. as you might have seen, i found some time to work on this. I now have everything 100% backwards compatible w/ GATK3's behavior. I started to migrate tests. In many cases, it was actually using 20/21 anyway, so it's not a big deal. For any GATK3 tests files that were tiny, I just checked them in, and the tests should work as-is. However, there's 5ish ""large"" VCFs (meaning more than ~250kb), and a couple into the MBs. I could either:. 1) Rework the tests to use another larger VCF already checked into GATK4 (this is what I assumed I'd do); 2) Check in the GATK3 VCFs to the large file repo; 3) Perhaps subset the GATK3 VCFs to chr20/21 if not already, and check in?. Do you have other opinions on how to approach that? You'll see I checked in a handful of small files into the resources dir. Is that going to be OK for merging?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430755318
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430755318:318,Testability,test,tests,318,"good timing. as you might have seen, i found some time to work on this. I now have everything 100% backwards compatible w/ GATK3's behavior. I started to migrate tests. In many cases, it was actually using 20/21 anyway, so it's not a big deal. For any GATK3 tests files that were tiny, I just checked them in, and the tests should work as-is. However, there's 5ish ""large"" VCFs (meaning more than ~250kb), and a couple into the MBs. I could either:. 1) Rework the tests to use another larger VCF already checked into GATK4 (this is what I assumed I'd do); 2) Check in the GATK3 VCFs to the large file repo; 3) Perhaps subset the GATK3 VCFs to chr20/21 if not already, and check in?. Do you have other opinions on how to approach that? You'll see I checked in a handful of small files into the resources dir. Is that going to be OK for merging?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430755318
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430755318:464,Testability,test,tests,464,"good timing. as you might have seen, i found some time to work on this. I now have everything 100% backwards compatible w/ GATK3's behavior. I started to migrate tests. In many cases, it was actually using 20/21 anyway, so it's not a big deal. For any GATK3 tests files that were tiny, I just checked them in, and the tests should work as-is. However, there's 5ish ""large"" VCFs (meaning more than ~250kb), and a couple into the MBs. I could either:. 1) Rework the tests to use another larger VCF already checked into GATK4 (this is what I assumed I'd do); 2) Check in the GATK3 VCFs to the large file repo; 3) Perhaps subset the GATK3 VCFs to chr20/21 if not already, and check in?. Do you have other opinions on how to approach that? You'll see I checked in a handful of small files into the resources dir. Is that going to be OK for merging?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430755318
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430772183:185,Testability,test,tests,185,"The 250k-ish ones are probably ok in large. For any of them, especially the MB+ ones, anything you can reasonably subset (or use a different vcf) without sacrificing the utility of the tests would be good though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-430772183
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431013796:180,Availability,error,errors,180,"Are there substantially stricter new compile requirements on this project? I may have missed it earlier when I first merged this code, but there's a lot of raw type / generic type errors I'm needing to deal with, taking straight from GATK3 code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431013796
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431061346:25,Availability,error,errors,25,"GATK4 treats warnings as errors, if thats what you mean. I don't think GATK3 did. They're usually pretty easy to remedy though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431061346
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431068842:158,Testability,test,tests,158,"Yes, that's it. Somehow I missed that until now. Most are easy to address, but there's a couple trickier GATK3 patterns I'll need to figure out. At least the tests might be close to working.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431068842
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431280748:99,Availability,error,errors,99,"One more question: I have everything passing locally. When tests run on travis, they fail with odd errors suggesting the VCF idx files are wrong. These were all created by IndexFactory.createDynamicIndex(), and work file for me. Have you ever seen a situation like that where indexes created on one machine doesnt transport? My machine is a windows laptop, if that's relevant.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431280748
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431280748:59,Testability,test,tests,59,"One more question: I have everything passing locally. When tests run on travis, they fail with odd errors suggesting the VCF idx files are wrong. These were all created by IndexFactory.createDynamicIndex(), and work file for me. Have you ever seen a situation like that where indexes created on one machine doesnt transport? My machine is a windows laptop, if that's relevant.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431280748
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431361093:151,Testability,test,test,151,"Hm, Windows. I ran testAC0 (on a Mac) and it failed the same way as on Travis. I then regenerated the index using GATK4 IndexFeatureFile, and then the test passed, so there is definitely something wrong with the index files.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431361093
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431470219:331,Availability,error,errors,331,"I'm somewhat at a loss here. I make a clean enlistment (on the theory maybe something about roundtripping the VCFs to/from github matters), remade the indexes, and same problem. . Next, I copied the VCFs to a linux machine, ran GATK4 IndexFeatureFile there, copied the indexes back to my windows laptop and checked in. Same travis errors. . Interestingly, this might only be a problem for VCFs I added to the main source tree, not gitlfs. For example, VariantEvalIntegrationTest.testFunctionClassWithSnpeff isnt erroring (i dont believe), and its VCF file lives in gitlfs, not the main repo. I do not know why this would matter.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431470219
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431470219:512,Availability,error,erroring,512,"I'm somewhat at a loss here. I make a clean enlistment (on the theory maybe something about roundtripping the VCFs to/from github matters), remade the indexes, and same problem. . Next, I copied the VCFs to a linux machine, ran GATK4 IndexFeatureFile there, copied the indexes back to my windows laptop and checked in. Same travis errors. . Interestingly, this might only be a problem for VCFs I added to the main source tree, not gitlfs. For example, VariantEvalIntegrationTest.testFunctionClassWithSnpeff isnt erroring (i dont believe), and its VCF file lives in gitlfs, not the main repo. I do not know why this would matter.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431470219
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431470219:479,Testability,test,testFunctionClassWithSnpeff,479,"I'm somewhat at a loss here. I make a clean enlistment (on the theory maybe something about roundtripping the VCFs to/from github matters), remade the indexes, and same problem. . Next, I copied the VCFs to a linux machine, ran GATK4 IndexFeatureFile there, copied the indexes back to my windows laptop and checked in. Same travis errors. . Interestingly, this might only be a problem for VCFs I added to the main source tree, not gitlfs. For example, VariantEvalIntegrationTest.testFunctionClassWithSnpeff isnt erroring (i dont believe), and its VCF file lives in gitlfs, not the main repo. I do not know why this would matter.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431470219
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431474812:88,Deployability,Configurat,Configuration,88,Probably git. See `core.autocrlf` at https://git-scm.com/book/id/v2/Customizing-Git-Git-Configuration.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431474812
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431474812:88,Modifiability,Config,Configuration,88,Probably git. See `core.autocrlf` at https://git-scm.com/book/id/v2/Customizing-Git-Git-Configuration.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431474812
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201:859,Energy Efficiency,reduce,reduce,859,"OK, tests are finally passing. I think we are close to where a review is useful; however, i have three known questions:. 1) Do you have advise on dealing with raw -> generic lists/maps in StratificationManager and VariantEvalReportWriter? You'll see I put a placeholder cast() method in each that copies the collection as a placeholder. I didnt see a more elegant option. 2) From way back in this thread, there was discussion of making a proper DefaultPluginDescriptor. Currently I have a functional DefaultPluginDescriptor in the varianteval package, but this isnt fully fleshed out for general use. Would you be OK finishing this PR with that in place, after which I would be willing to do a separate PR to make that general purpose, or does this need to be done before this?. 3) What do you think about the total size of test files being added? One way to reduce some file sizes is to subset to only the sites relevant to the variant eval tests. In the case of more generic reference files this reduces size, but also lessens their potential utility for future tests that may share them. . Also, the stub from the GATK3 VariantEval3IntegrationTest is still there should you want to run it. It should pass every GATK3 test using GATK3 inputs, though it might take a little work to put all the GATK3 files in the same location (i received them as one data dump in one directory).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201:998,Energy Efficiency,reduce,reduces,998,"OK, tests are finally passing. I think we are close to where a review is useful; however, i have three known questions:. 1) Do you have advise on dealing with raw -> generic lists/maps in StratificationManager and VariantEvalReportWriter? You'll see I put a placeholder cast() method in each that copies the collection as a placeholder. I didnt see a more elegant option. 2) From way back in this thread, there was discussion of making a proper DefaultPluginDescriptor. Currently I have a functional DefaultPluginDescriptor in the varianteval package, but this isnt fully fleshed out for general use. Would you be OK finishing this PR with that in place, after which I would be willing to do a separate PR to make that general purpose, or does this need to be done before this?. 3) What do you think about the total size of test files being added? One way to reduce some file sizes is to subset to only the sites relevant to the variant eval tests. In the case of more generic reference files this reduces size, but also lessens their potential utility for future tests that may share them. . Also, the stub from the GATK3 VariantEval3IntegrationTest is still there should you want to run it. It should pass every GATK3 test using GATK3 inputs, though it might take a little work to put all the GATK3 files in the same location (i received them as one data dump in one directory).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201:4,Testability,test,tests,4,"OK, tests are finally passing. I think we are close to where a review is useful; however, i have three known questions:. 1) Do you have advise on dealing with raw -> generic lists/maps in StratificationManager and VariantEvalReportWriter? You'll see I put a placeholder cast() method in each that copies the collection as a placeholder. I didnt see a more elegant option. 2) From way back in this thread, there was discussion of making a proper DefaultPluginDescriptor. Currently I have a functional DefaultPluginDescriptor in the varianteval package, but this isnt fully fleshed out for general use. Would you be OK finishing this PR with that in place, after which I would be willing to do a separate PR to make that general purpose, or does this need to be done before this?. 3) What do you think about the total size of test files being added? One way to reduce some file sizes is to subset to only the sites relevant to the variant eval tests. In the case of more generic reference files this reduces size, but also lessens their potential utility for future tests that may share them. . Also, the stub from the GATK3 VariantEval3IntegrationTest is still there should you want to run it. It should pass every GATK3 test using GATK3 inputs, though it might take a little work to put all the GATK3 files in the same location (i received them as one data dump in one directory).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201:824,Testability,test,test,824,"OK, tests are finally passing. I think we are close to where a review is useful; however, i have three known questions:. 1) Do you have advise on dealing with raw -> generic lists/maps in StratificationManager and VariantEvalReportWriter? You'll see I put a placeholder cast() method in each that copies the collection as a placeholder. I didnt see a more elegant option. 2) From way back in this thread, there was discussion of making a proper DefaultPluginDescriptor. Currently I have a functional DefaultPluginDescriptor in the varianteval package, but this isnt fully fleshed out for general use. Would you be OK finishing this PR with that in place, after which I would be willing to do a separate PR to make that general purpose, or does this need to be done before this?. 3) What do you think about the total size of test files being added? One way to reduce some file sizes is to subset to only the sites relevant to the variant eval tests. In the case of more generic reference files this reduces size, but also lessens their potential utility for future tests that may share them. . Also, the stub from the GATK3 VariantEval3IntegrationTest is still there should you want to run it. It should pass every GATK3 test using GATK3 inputs, though it might take a little work to put all the GATK3 files in the same location (i received them as one data dump in one directory).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201:942,Testability,test,tests,942,"OK, tests are finally passing. I think we are close to where a review is useful; however, i have three known questions:. 1) Do you have advise on dealing with raw -> generic lists/maps in StratificationManager and VariantEvalReportWriter? You'll see I put a placeholder cast() method in each that copies the collection as a placeholder. I didnt see a more elegant option. 2) From way back in this thread, there was discussion of making a proper DefaultPluginDescriptor. Currently I have a functional DefaultPluginDescriptor in the varianteval package, but this isnt fully fleshed out for general use. Would you be OK finishing this PR with that in place, after which I would be willing to do a separate PR to make that general purpose, or does this need to be done before this?. 3) What do you think about the total size of test files being added? One way to reduce some file sizes is to subset to only the sites relevant to the variant eval tests. In the case of more generic reference files this reduces size, but also lessens their potential utility for future tests that may share them. . Also, the stub from the GATK3 VariantEval3IntegrationTest is still there should you want to run it. It should pass every GATK3 test using GATK3 inputs, though it might take a little work to put all the GATK3 files in the same location (i received them as one data dump in one directory).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201:1064,Testability,test,tests,1064,"OK, tests are finally passing. I think we are close to where a review is useful; however, i have three known questions:. 1) Do you have advise on dealing with raw -> generic lists/maps in StratificationManager and VariantEvalReportWriter? You'll see I put a placeholder cast() method in each that copies the collection as a placeholder. I didnt see a more elegant option. 2) From way back in this thread, there was discussion of making a proper DefaultPluginDescriptor. Currently I have a functional DefaultPluginDescriptor in the varianteval package, but this isnt fully fleshed out for general use. Would you be OK finishing this PR with that in place, after which I would be willing to do a separate PR to make that general purpose, or does this need to be done before this?. 3) What do you think about the total size of test files being added? One way to reduce some file sizes is to subset to only the sites relevant to the variant eval tests. In the case of more generic reference files this reduces size, but also lessens their potential utility for future tests that may share them. . Also, the stub from the GATK3 VariantEval3IntegrationTest is still there should you want to run it. It should pass every GATK3 test using GATK3 inputs, though it might take a little work to put all the GATK3 files in the same location (i received them as one data dump in one directory).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201:1103,Testability,stub,stub,1103,"OK, tests are finally passing. I think we are close to where a review is useful; however, i have three known questions:. 1) Do you have advise on dealing with raw -> generic lists/maps in StratificationManager and VariantEvalReportWriter? You'll see I put a placeholder cast() method in each that copies the collection as a placeholder. I didnt see a more elegant option. 2) From way back in this thread, there was discussion of making a proper DefaultPluginDescriptor. Currently I have a functional DefaultPluginDescriptor in the varianteval package, but this isnt fully fleshed out for general use. Would you be OK finishing this PR with that in place, after which I would be willing to do a separate PR to make that general purpose, or does this need to be done before this?. 3) What do you think about the total size of test files being added? One way to reduce some file sizes is to subset to only the sites relevant to the variant eval tests. In the case of more generic reference files this reduces size, but also lessens their potential utility for future tests that may share them. . Also, the stub from the GATK3 VariantEval3IntegrationTest is still there should you want to run it. It should pass every GATK3 test using GATK3 inputs, though it might take a little work to put all the GATK3 files in the same location (i received them as one data dump in one directory).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201:1220,Testability,test,test,1220,"OK, tests are finally passing. I think we are close to where a review is useful; however, i have three known questions:. 1) Do you have advise on dealing with raw -> generic lists/maps in StratificationManager and VariantEvalReportWriter? You'll see I put a placeholder cast() method in each that copies the collection as a placeholder. I didnt see a more elegant option. 2) From way back in this thread, there was discussion of making a proper DefaultPluginDescriptor. Currently I have a functional DefaultPluginDescriptor in the varianteval package, but this isnt fully fleshed out for general use. Would you be OK finishing this PR with that in place, after which I would be willing to do a separate PR to make that general purpose, or does this need to be done before this?. 3) What do you think about the total size of test files being added? One way to reduce some file sizes is to subset to only the sites relevant to the variant eval tests. In the case of more generic reference files this reduces size, but also lessens their potential utility for future tests that may share them. . Also, the stub from the GATK3 VariantEval3IntegrationTest is still there should you want to run it. It should pass every GATK3 test using GATK3 inputs, though it might take a little work to put all the GATK3 files in the same location (i received them as one data dump in one directory).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431583201
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:1089,Availability,down,down,1089,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:342,Modifiability,plugin,plugin,342,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:570,Modifiability,plugin,plugins,570,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:599,Modifiability,plugin,plugins,599,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:629,Modifiability,plugin,plugins,629,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:737,Modifiability,plugin,plugin,737,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:758,Modifiability,extend,extending,758,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:423,Testability,test,tests,423,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008:660,Testability,test,test,660,"It looks like all the changes in my original commit with the raw GATK3 code (except for one file) got squashed out somehow, so I can't see just the changes from GATK3 anymore. I'll probably have to go back and re-commit those when you're ready to make this tractable to review. I'll wait to comment on #1 until that happens. As for a default plugin descriptor, I'd prefer not to take one unless its fully implemented, with tests. Plus, although we could develop it here, it should really live in the Barclay repo if its truly generic. More importantly, I'm not sure the plugins in this PR should be plugins at all. Historically, plugins have required a lot of test development and iteration because they have command line arguments (the plugin system is for extending the command line parser with discoverable, re-useable components that are shared across multiple tools, and need shared command line arguments). I haven't looked at the new ones closely, but I'm not sure they're a good fit. As for the files, it look like about 400MB (?) Thats pretty big - you should try to squeeze them down or target some existing files if you can.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431839008
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:656,Availability,down,down,656,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:69,Modifiability,refactor,refactored,69,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:749,Modifiability,plugin,plugin,749,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:967,Modifiability,plugin,plugins,967,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:1210,Modifiability,plugin,plugin,1210,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:579,Security,validat,validation,579,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:60,Testability,test,tests,60,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735:188,Usability,clear,clearly,188,"@cmnbroad : first - would it be possible to kick off travis tests? i refactored this and dont seem to be able to do that. Second, yes, I was trying to reorder and condense the commits but clearly didnt work. I think the problem was trying to put your GATK3 commit first (which would seem to make sense). in any case, I just recreated this, putting a pristine GATK3 first, following a consolidated set of my commits with 1) the limited core changes, 2) the meat of the VariantEval port, and 3) A separate commit with a port of GATK3 VariantEvalIntegrationTest which is useful for validation but should not be merged. To your points:. 1) I substantially cut down the incoming large files, mostly by limiting the intervals of new large VCFs. 2) On the plugin: this was discussed above, and I initially also pointed out this should ultimately go into Barclay. You are actually the one who proposed staging it in GATK. I am not entirely sure I understand the reticence on plugins; however, my goal is to get VariantEval ported by touching as little of it as possible. This is already sucking up a ton of time. I flipped VariantEvalUtils to gather a list of classes from the appropriate package instead of a full-on plugin. That should satisfy that concern?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431913735
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431916861:38,Availability,outage,outage,38,@bbimber There's some [github service outage](https://status.github.com) right now and it's preventing travis from running. I'm not sure how to work around it. Hopefully it will be resolved soon.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-431916861
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432235415:64,Availability,failure,failure,64,"It looks like the tests ran on Travis but there is a legitimate failure (testMultipleCompTracks), which fails for me locally as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432235415
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432235415:18,Testability,test,tests,18,"It looks like the tests ran on Travis but there is a legitimate failure (testMultipleCompTracks), which fails for me locally as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432235415
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432235415:73,Testability,test,testMultipleCompTracks,73,"It looks like the tests ran on Travis but there is a legitimate failure (testMultipleCompTracks), which fails for me locally as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432235415
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432261666:69,Testability,test,tests,69,"@cmnbroad - yes, missed one expected file after subsetting the data. tests passed. is seeing the status something i could have seen by myself? in travis i only see the projects I own, with no clear way to look up this unless i'm linked from the PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432261666
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432261666:192,Usability,clear,clear,192,"@cmnbroad - yes, missed one expected file after subsetting the data. tests passed. is seeing the status something i could have seen by myself? in travis i only see the projects I own, with no clear way to look up this unless i'm linked from the PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432261666
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432388063:288,Availability,down,down,288,"I'm not sure if there is another way to see the reports on travis without going through the PR link. Looks like tests are passing now, though. There is quite a bot of code here - I'll start going through it in the next day or so and see where we stand. Also, thx for reducing those files down...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432388063
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432388063:112,Testability,test,tests,112,"I'm not sure if there is another way to see the reports on travis without going through the PR link. Looks like tests are passing now, though. There is quite a bot of code here - I'll start going through it in the next day or so and see where we stand. Also, thx for reducing those files down...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-432388063
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433415826:735,Availability,down,down,735,"@bbimber I'm making way through this, and will focus on the diffs from GATK3, especially the tool itself. There are a few things that I mentioned above that will absolutely need to be done though; the VariantEval tool javadoc needs to be updated to reflect GATK4 syntax (i.e. references to GenomeAnalysisTK.jar need to be updated, etc. - see other tools for examples), and the tool command line arguments need to be changed to reflect GATK4 conventions (i.e. `selectName` -> `select-name`). Ideally those would be done before I go any further. Also, it would be much easier if we could start this review process/comments with just two commits - the initial GATK3 source code commit, and one commit with all the changes. Can you squash down all of your commits (except the initial one) into a single commit ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433415826
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433415826:238,Deployability,update,updated,238,"@bbimber I'm making way through this, and will focus on the diffs from GATK3, especially the tool itself. There are a few things that I mentioned above that will absolutely need to be done though; the VariantEval tool javadoc needs to be updated to reflect GATK4 syntax (i.e. references to GenomeAnalysisTK.jar need to be updated, etc. - see other tools for examples), and the tool command line arguments need to be changed to reflect GATK4 conventions (i.e. `selectName` -> `select-name`). Ideally those would be done before I go any further. Also, it would be much easier if we could start this review process/comments with just two commits - the initial GATK3 source code commit, and one commit with all the changes. Can you squash down all of your commits (except the initial one) into a single commit ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433415826
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433415826:322,Deployability,update,updated,322,"@bbimber I'm making way through this, and will focus on the diffs from GATK3, especially the tool itself. There are a few things that I mentioned above that will absolutely need to be done though; the VariantEval tool javadoc needs to be updated to reflect GATK4 syntax (i.e. references to GenomeAnalysisTK.jar need to be updated, etc. - see other tools for examples), and the tool command line arguments need to be changed to reflect GATK4 conventions (i.e. `selectName` -> `select-name`). Ideally those would be done before I go any further. Also, it would be much easier if we could start this review process/comments with just two commits - the initial GATK3 source code commit, and one commit with all the changes. Can you squash down all of your commits (except the initial one) into a single commit ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433415826
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437:77,Deployability,integrat,integration,77,"Point taken on the squash, though I deliberately separated the copy of GATK3 integration tests using GATK3 data, since this would not get merged. It seems to make sense to keep that separate still?. i'll update examples, etc. i am honestly not that familiar updates to argument conventions for GATK4 - i'll give this a look but if you have more specifics that would help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437:204,Deployability,update,update,204,"Point taken on the squash, though I deliberately separated the copy of GATK3 integration tests using GATK3 data, since this would not get merged. It seems to make sense to keep that separate still?. i'll update examples, etc. i am honestly not that familiar updates to argument conventions for GATK4 - i'll give this a look but if you have more specifics that would help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437:258,Deployability,update,updates,258,"Point taken on the squash, though I deliberately separated the copy of GATK3 integration tests using GATK3 data, since this would not get merged. It seems to make sense to keep that separate still?. i'll update examples, etc. i am honestly not that familiar updates to argument conventions for GATK4 - i'll give this a look but if you have more specifics that would help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437:77,Integrability,integrat,integration,77,"Point taken on the squash, though I deliberately separated the copy of GATK3 integration tests using GATK3 data, since this would not get merged. It seems to make sense to keep that separate still?. i'll update examples, etc. i am honestly not that familiar updates to argument conventions for GATK4 - i'll give this a look but if you have more specifics that would help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437:89,Testability,test,tests,89,"Point taken on the squash, though I deliberately separated the copy of GATK3 integration tests using GATK3 data, since this would not get merged. It seems to make sense to keep that separate still?. i'll update examples, etc. i am honestly not that familiar updates to argument conventions for GATK4 - i'll give this a look but if you have more specifics that would help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433417437
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433419539:250,Deployability,update,update,250,"just curious, what's the reasoning for changing all the arguments from camel case to snake case (which seems to be the standard now)? that seems like a big swap across tools, without a lot of benefit, that's going to cause a lot of people to need to update existing scripts if they try to migrate from GATK3 to 4?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433419539
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433425006:37,Testability,test,tests,37,"Yeah, good idea on keeping the GATK3 tests separate as well. The javadoc changes should be pretty easy, mostly removing the `-T`, `GenomeAnalysisTK.jar` -> `./gatk'. Command line args are all lower case, hyphen-separated, and for most args except the commone ones (-V, -I, -R) we don'e use a separate short name. Just take a stab at it and I'll review them as part of the rest. Take a look at SelectVariants (though it seems to have a lot of neccessary short names...) or ask questions.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433425006
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433425363:198,Deployability,release,released,198,"We wanted to standardize on something since before there was a mix of various styles. See https://github.com/broadinstitute/gatk/issues/2596. We did this change for all of the GTAK4 tools before we released 4.0, so almost a year ago now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433425363
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433489089:110,Deployability,update,updated,110,@cmnbroad I think that does it. let me know if there are rebase issues or argument conventions that should be updated,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-433489089
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-437043604:17,Deployability,update,update,17,@bbimber Just an update that I'm making my way through this and expect to have a review back to you some time next week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-437043604
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-437071849:22,Deployability,update,update,22,"great, thanks for the update",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-437071849
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816:66,Safety,timeout,timeout,66,"@cmnbroad one of the tests failed; however, it seems to just be a timeout:. https://api.travis-ci.org/v3/job/457478297/log.txt. are you able to restart them? again, I believe this addresses all concerns listed above except for the iteration (which will be addressed in the engine in a new PR), and the naming of CompRod and EvalRod classes. I'm fine changing these and associated outputs; however, I would appreciate suggestions on the best new names. CompInput, CompFeatureInput, CompSource, CompTrack, or something like that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816:21,Testability,test,tests,21,"@cmnbroad one of the tests failed; however, it seems to just be a timeout:. https://api.travis-ci.org/v3/job/457478297/log.txt. are you able to restart them? again, I believe this addresses all concerns listed above except for the iteration (which will be addressed in the engine in a new PR), and the naming of CompRod and EvalRod classes. I'm fine changing these and associated outputs; however, I would appreciate suggestions on the best new names. CompInput, CompFeatureInput, CompSource, CompTrack, or something like that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816:119,Testability,log,log,119,"@cmnbroad one of the tests failed; however, it seems to just be a timeout:. https://api.travis-ci.org/v3/job/457478297/log.txt. are you able to restart them? again, I believe this addresses all concerns listed above except for the iteration (which will be addressed in the engine in a new PR), and the naming of CompRod and EvalRod classes. I'm fine changing these and associated outputs; however, I would appreciate suggestions on the best new names. CompInput, CompFeatureInput, CompSource, CompTrack, or something like that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440500843:33,Testability,test,tests,33,@cmnbroad just dropped the GATK3 tests and squashed. let's hope this is it!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440500843
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440739574:131,Integrability,depend,depends,131,@cmnbroad Great - thanks for working with us on this. One related question: our VariantQC tool is a separate project (gradle) that depends on GATK4. Is there a way to depend on some kind of dev version of GATK4 that will include the VariantEval code?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440739574
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440739574:167,Integrability,depend,depend,167,@cmnbroad Great - thanks for working with us on this. One related question: our VariantQC tool is a separate project (gradle) that depends on GATK4. Is there a way to depend on some kind of dev version of GATK4 that will include the VariantEval code?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440739574
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:568,Deployability,install,install,568,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:593,Deployability,install,install,593,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:852,Integrability,depend,dependency,852,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:977,Integrability,depend,dependent,977,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:1018,Integrability,interface,interface,1018,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:1209,Integrability,interface,interfaces,1209,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:737,Modifiability,plugin,plugin,737,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:1131,Modifiability,refactor,refactoring,1131,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:1147,Modifiability,evolve,evolve,1147,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:89,Security,access,accessible,89,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:312,Security,access,access,312,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440806347:524,Deployability,update,update,524,"VariantQC is a tool we made that is somewhat analogous to FastQC. Given an input VCF, it runs VariantEval to generate various summary tables of data, and then makes an HTML report (borrowing a lot from the tool MultiQC) summarizing that VCF. . I wrote this originally by forking GATK3 and wrote a new walker that internally called and run VariantEval. That was never the final plan. I dont know what this will need to look like in GATK4 yet. I'm fine with the expectation that GATK4 VariantEval will evolve and we'd need to update our code wrapping it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440806347
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440806347:540,Integrability,wrap,wrapping,540,"VariantQC is a tool we made that is somewhat analogous to FastQC. Given an input VCF, it runs VariantEval to generate various summary tables of data, and then makes an HTML report (borrowing a lot from the tool MultiQC) summarizing that VCF. . I wrote this originally by forking GATK3 and wrote a new walker that internally called and run VariantEval. That was never the final plan. I dont know what this will need to look like in GATK4 yet. I'm fine with the expectation that GATK4 VariantEval will evolve and we'd need to update our code wrapping it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440806347
https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440806347:500,Modifiability,evolve,evolve,500,"VariantQC is a tool we made that is somewhat analogous to FastQC. Given an input VCF, it runs VariantEval to generate various summary tables of data, and then makes an HTML report (borrowing a lot from the tool MultiQC) summarizing that VCF. . I wrote this originally by forking GATK3 and wrote a new walker that internally called and run VariantEval. That was never the final plan. I dont know what this will need to look like in GATK4 yet. I'm fine with the expectation that GATK4 VariantEval will evolve and we'd need to update our code wrapping it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440806347
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407450035:14,Availability,error,errors,14,"These kind of errors are typically seen when the field description in the VCF header is incorrect. For example, describing the field length to be a fixed integer when the field is really variable length. I would recommend closely scanning the VCF header for inconsistencies first.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407450035
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407450035:187,Modifiability,variab,variable,187,"These kind of errors are typically seen when the field description in the VCF header is incorrect. For example, describing the field length to be a fixed integer when the field is really variable length. I would recommend closely scanning the VCF header for inconsistencies first.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407450035
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343:53,Security,validat,validator,53,"Hi,. Not sure if it is applicable but I just ran vcf-validator on the input gvcf file (also not sure if you can run vcf-validator on a gvcf): . ```; vcf-validator Sample_1__CDL-164-04P-gatk-haplotype-annotated-rnaedit-annotated-gemini.vcf.gz; ```. Here are the first few lines from the logs:. ```; The header tag 'reference' not present. (Not required but highly recommended.); INFO field at 1:14599 .. INFO tag [max_aaf_all=0.2096] expected different number of values (expected 2, found 1); INFO field at 1:14604 .. INFO tag [max_aaf_all=0.2096] expected different number of values (expected 2, found 1); INFO field at 1:14930 .. INFO tag [max_aaf_all=0.5231] expected different number of values (expected 2, found 1); INFO field at 1:15211 .. INFO tag [max_aaf_all=0.7316] expected different number of values (expected 2, found 1); INFO field at 1:15274 .. INFO tag [max_aaf_all=0.7205] expected different number of values (expected 3, found 1); INFO field at 1:16949 .. INFO tag [max_aaf_all=0.0227] expected different number of values (expected 2, found 1); INFO field at 1:17365 .. INFO tag [max_aaf_all=0.3841] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_afr=; 0.1603] expected different number of values (expected 2, found 1),INFO tag [af_exac_all=0.2553] expected different number of values (expect; ed 2, found 1),INFO tag [af_adj_exac_nfe=0.2715] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_sas=0.2883; ] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_oth=0.2581] expected different number of values (expected; 2, found 1),INFO tag [af_adj_exac_eas=0.3841] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_amr=0.221] e; xpected different number of values (expected 2, found 1),INFO tag [af_adj_exac_fin=0.2245] expected different number of values (expected 2,; found 1); INFO field at 1:17373 .. INFO tag [af_adj_exac_amr=0.028] expected different number ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343:120,Security,validat,validator,120,"Hi,. Not sure if it is applicable but I just ran vcf-validator on the input gvcf file (also not sure if you can run vcf-validator on a gvcf): . ```; vcf-validator Sample_1__CDL-164-04P-gatk-haplotype-annotated-rnaedit-annotated-gemini.vcf.gz; ```. Here are the first few lines from the logs:. ```; The header tag 'reference' not present. (Not required but highly recommended.); INFO field at 1:14599 .. INFO tag [max_aaf_all=0.2096] expected different number of values (expected 2, found 1); INFO field at 1:14604 .. INFO tag [max_aaf_all=0.2096] expected different number of values (expected 2, found 1); INFO field at 1:14930 .. INFO tag [max_aaf_all=0.5231] expected different number of values (expected 2, found 1); INFO field at 1:15211 .. INFO tag [max_aaf_all=0.7316] expected different number of values (expected 2, found 1); INFO field at 1:15274 .. INFO tag [max_aaf_all=0.7205] expected different number of values (expected 3, found 1); INFO field at 1:16949 .. INFO tag [max_aaf_all=0.0227] expected different number of values (expected 2, found 1); INFO field at 1:17365 .. INFO tag [max_aaf_all=0.3841] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_afr=; 0.1603] expected different number of values (expected 2, found 1),INFO tag [af_exac_all=0.2553] expected different number of values (expect; ed 2, found 1),INFO tag [af_adj_exac_nfe=0.2715] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_sas=0.2883; ] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_oth=0.2581] expected different number of values (expected; 2, found 1),INFO tag [af_adj_exac_eas=0.3841] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_amr=0.221] e; xpected different number of values (expected 2, found 1),INFO tag [af_adj_exac_fin=0.2245] expected different number of values (expected 2,; found 1); INFO field at 1:17373 .. INFO tag [af_adj_exac_amr=0.028] expected different number ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343:153,Security,validat,validator,153,"Hi,. Not sure if it is applicable but I just ran vcf-validator on the input gvcf file (also not sure if you can run vcf-validator on a gvcf): . ```; vcf-validator Sample_1__CDL-164-04P-gatk-haplotype-annotated-rnaedit-annotated-gemini.vcf.gz; ```. Here are the first few lines from the logs:. ```; The header tag 'reference' not present. (Not required but highly recommended.); INFO field at 1:14599 .. INFO tag [max_aaf_all=0.2096] expected different number of values (expected 2, found 1); INFO field at 1:14604 .. INFO tag [max_aaf_all=0.2096] expected different number of values (expected 2, found 1); INFO field at 1:14930 .. INFO tag [max_aaf_all=0.5231] expected different number of values (expected 2, found 1); INFO field at 1:15211 .. INFO tag [max_aaf_all=0.7316] expected different number of values (expected 2, found 1); INFO field at 1:15274 .. INFO tag [max_aaf_all=0.7205] expected different number of values (expected 3, found 1); INFO field at 1:16949 .. INFO tag [max_aaf_all=0.0227] expected different number of values (expected 2, found 1); INFO field at 1:17365 .. INFO tag [max_aaf_all=0.3841] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_afr=; 0.1603] expected different number of values (expected 2, found 1),INFO tag [af_exac_all=0.2553] expected different number of values (expect; ed 2, found 1),INFO tag [af_adj_exac_nfe=0.2715] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_sas=0.2883; ] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_oth=0.2581] expected different number of values (expected; 2, found 1),INFO tag [af_adj_exac_eas=0.3841] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_amr=0.221] e; xpected different number of values (expected 2, found 1),INFO tag [af_adj_exac_fin=0.2245] expected different number of values (expected 2,; found 1); INFO field at 1:17373 .. INFO tag [af_adj_exac_amr=0.028] expected different number ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343:286,Testability,log,logs,286,"Hi,. Not sure if it is applicable but I just ran vcf-validator on the input gvcf file (also not sure if you can run vcf-validator on a gvcf): . ```; vcf-validator Sample_1__CDL-164-04P-gatk-haplotype-annotated-rnaedit-annotated-gemini.vcf.gz; ```. Here are the first few lines from the logs:. ```; The header tag 'reference' not present. (Not required but highly recommended.); INFO field at 1:14599 .. INFO tag [max_aaf_all=0.2096] expected different number of values (expected 2, found 1); INFO field at 1:14604 .. INFO tag [max_aaf_all=0.2096] expected different number of values (expected 2, found 1); INFO field at 1:14930 .. INFO tag [max_aaf_all=0.5231] expected different number of values (expected 2, found 1); INFO field at 1:15211 .. INFO tag [max_aaf_all=0.7316] expected different number of values (expected 2, found 1); INFO field at 1:15274 .. INFO tag [max_aaf_all=0.7205] expected different number of values (expected 3, found 1); INFO field at 1:16949 .. INFO tag [max_aaf_all=0.0227] expected different number of values (expected 2, found 1); INFO field at 1:17365 .. INFO tag [max_aaf_all=0.3841] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_afr=; 0.1603] expected different number of values (expected 2, found 1),INFO tag [af_exac_all=0.2553] expected different number of values (expect; ed 2, found 1),INFO tag [af_adj_exac_nfe=0.2715] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_sas=0.2883; ] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_oth=0.2581] expected different number of values (expected; 2, found 1),INFO tag [af_adj_exac_eas=0.3841] expected different number of values (expected 2, found 1),INFO tag [af_adj_exac_amr=0.221] e; xpected different number of values (expected 2, found 1),INFO tag [af_adj_exac_fin=0.2245] expected different number of values (expected 2,; found 1); INFO field at 1:17373 .. INFO tag [af_adj_exac_amr=0.028] expected different number ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407494531:263,Safety,avoid,avoid,263,"Komal -- thanks for raising this issue and providing so much detail. Karthik -- Thanks for the debugging and pointers on this, I hadn't thought from the core dump to be looking at the annotation fields so this is a really helpful lead. What we can do in bcbio is avoid adding any of these until after running the joint calling so they all get on the final joint VCF rather than the gVCFs. This should hopefully avoid needing to dig too deeply into this and we can take our lesson as: don't annotate gVCFs with too much information. Thank you again for helping with diagnosing the underlying issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407494531
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407494531:411,Safety,avoid,avoid,411,"Komal -- thanks for raising this issue and providing so much detail. Karthik -- Thanks for the debugging and pointers on this, I hadn't thought from the core dump to be looking at the annotation fields so this is a really helpful lead. What we can do in bcbio is avoid adding any of these until after running the joint calling so they all get on the final joint VCF rather than the gVCFs. This should hopefully avoid needing to dig too deeply into this and we can take our lesson as: don't annotate gVCFs with too much information. Thank you again for helping with diagnosing the underlying issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407494531
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407497476:88,Availability,error,error,88,"@kgururaj . So I found out that there are other fields that are also throwing a similar error with `vcf-validator`:. Below you will find this: `INFO tag [an_adj_exac_oth=16,16] expected different number of values (1)`. ```; # from the vcf-validator; INFO field at 4:2044128 .. INFO tag [af_exac_all=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_fin=0] expected different number of values (expected 3, found 1),INFO tag [an_adj_exac_oth=16,16] expected different number of values (1),INFO tag [an_adj_exac_nfe=202,202] expected different number of values (1),INFO tag [an_adj_exac_afr=20,20] expected different number of values (1),INFO tag [af_adj_exac_amr=0] expected different number of values (expected 3, found 1),INFO tag [an_exac_all=1246,1246] expected different number of values (1),INFO tag [an_adj_exac_amr=10,10] expected different number of values (1),INFO tag [af_adj_exac_oth=0] expected different number of values (expected 3, found 1),INFO tag [an_adj_exac_eas=30,30] expected different number of values (1),INFO tag [an_adj_exac_fin=2,2] expected different number of values (1),INFO tag [an_adj_exac_sas=966,966] expected different number of values (1),INFO tag [af_adj_exac_sas=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_afr=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_nfe=0] expected different number of values (expected 3, found 1),INFO tag [max_aaf_all=1] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_eas=0] expected different number of values (expected 3, found 1); ```. In this case, `an_adj_exac_oth` has > 1 values and only 1 is allowed:. ```; grep ; ##INFO=<ID=an_adj_exac_oth,Number=1,Type=Integer,Description=""Other Chromosome Count (from /mnt/isilon/cbmi/variome/bin/bcbio-nextgen/bcbio/gemini_data/ExAC.r0.3.sites.vep.tidy.vcf.gz)"">. # the corresponding variant in the vcf ; 4	2044128	.	C	T,CGCT,<NON_REF>	3476.7	.	DP=97",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407497476
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407497476:104,Security,validat,validator,104,"@kgururaj . So I found out that there are other fields that are also throwing a similar error with `vcf-validator`:. Below you will find this: `INFO tag [an_adj_exac_oth=16,16] expected different number of values (1)`. ```; # from the vcf-validator; INFO field at 4:2044128 .. INFO tag [af_exac_all=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_fin=0] expected different number of values (expected 3, found 1),INFO tag [an_adj_exac_oth=16,16] expected different number of values (1),INFO tag [an_adj_exac_nfe=202,202] expected different number of values (1),INFO tag [an_adj_exac_afr=20,20] expected different number of values (1),INFO tag [af_adj_exac_amr=0] expected different number of values (expected 3, found 1),INFO tag [an_exac_all=1246,1246] expected different number of values (1),INFO tag [an_adj_exac_amr=10,10] expected different number of values (1),INFO tag [af_adj_exac_oth=0] expected different number of values (expected 3, found 1),INFO tag [an_adj_exac_eas=30,30] expected different number of values (1),INFO tag [an_adj_exac_fin=2,2] expected different number of values (1),INFO tag [an_adj_exac_sas=966,966] expected different number of values (1),INFO tag [af_adj_exac_sas=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_afr=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_nfe=0] expected different number of values (expected 3, found 1),INFO tag [max_aaf_all=1] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_eas=0] expected different number of values (expected 3, found 1); ```. In this case, `an_adj_exac_oth` has > 1 values and only 1 is allowed:. ```; grep ; ##INFO=<ID=an_adj_exac_oth,Number=1,Type=Integer,Description=""Other Chromosome Count (from /mnt/isilon/cbmi/variome/bin/bcbio-nextgen/bcbio/gemini_data/ExAC.r0.3.sites.vep.tidy.vcf.gz)"">. # the corresponding variant in the vcf ; 4	2044128	.	C	T,CGCT,<NON_REF>	3476.7	.	DP=97",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407497476
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407497476:239,Security,validat,validator,239,"@kgururaj . So I found out that there are other fields that are also throwing a similar error with `vcf-validator`:. Below you will find this: `INFO tag [an_adj_exac_oth=16,16] expected different number of values (1)`. ```; # from the vcf-validator; INFO field at 4:2044128 .. INFO tag [af_exac_all=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_fin=0] expected different number of values (expected 3, found 1),INFO tag [an_adj_exac_oth=16,16] expected different number of values (1),INFO tag [an_adj_exac_nfe=202,202] expected different number of values (1),INFO tag [an_adj_exac_afr=20,20] expected different number of values (1),INFO tag [af_adj_exac_amr=0] expected different number of values (expected 3, found 1),INFO tag [an_exac_all=1246,1246] expected different number of values (1),INFO tag [an_adj_exac_amr=10,10] expected different number of values (1),INFO tag [af_adj_exac_oth=0] expected different number of values (expected 3, found 1),INFO tag [an_adj_exac_eas=30,30] expected different number of values (1),INFO tag [an_adj_exac_fin=2,2] expected different number of values (1),INFO tag [an_adj_exac_sas=966,966] expected different number of values (1),INFO tag [af_adj_exac_sas=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_afr=0] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_nfe=0] expected different number of values (expected 3, found 1),INFO tag [max_aaf_all=1] expected different number of values (expected 3, found 1),INFO tag [af_adj_exac_eas=0] expected different number of values (expected 3, found 1); ```. In this case, `an_adj_exac_oth` has > 1 values and only 1 is allowed:. ```; grep ; ##INFO=<ID=an_adj_exac_oth,Number=1,Type=Integer,Description=""Other Chromosome Count (from /mnt/isilon/cbmi/variome/bin/bcbio-nextgen/bcbio/gemini_data/ExAC.r0.3.sites.vep.tidy.vcf.gz)"">. # the corresponding variant in the vcf ; 4	2044128	.	C	T,CGCT,<NON_REF>	3476.7	.	DP=97",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407497476
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684:365,Availability,error,error,365,"Yep, that will definitely cause a crash - variable length fields need a length value stored while fixed length fields don't. I can add checks for this scenario in GenomicsDB. Please let me know if the following make sense:; Header says that the field F is a fixed length field with length = N. In the data section, if; * length(F) < N - pad with missing values, no error message, continue; * length(F) > N - error, throw exception and print descriptive error message",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684:408,Availability,error,error,408,"Yep, that will definitely cause a crash - variable length fields need a length value stored while fixed length fields don't. I can add checks for this scenario in GenomicsDB. Please let me know if the following make sense:; Header says that the field F is a fixed length field with length = N. In the data section, if; * length(F) < N - pad with missing values, no error message, continue; * length(F) > N - error, throw exception and print descriptive error message",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684:453,Availability,error,error,453,"Yep, that will definitely cause a crash - variable length fields need a length value stored while fixed length fields don't. I can add checks for this scenario in GenomicsDB. Please let me know if the following make sense:; Header says that the field F is a fixed length field with length = N. In the data section, if; * length(F) < N - pad with missing values, no error message, continue; * length(F) > N - error, throw exception and print descriptive error message",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684:371,Integrability,message,message,371,"Yep, that will definitely cause a crash - variable length fields need a length value stored while fixed length fields don't. I can add checks for this scenario in GenomicsDB. Please let me know if the following make sense:; Header says that the field F is a fixed length field with length = N. In the data section, if; * length(F) < N - pad with missing values, no error message, continue; * length(F) > N - error, throw exception and print descriptive error message",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684:459,Integrability,message,message,459,"Yep, that will definitely cause a crash - variable length fields need a length value stored while fixed length fields don't. I can add checks for this scenario in GenomicsDB. Please let me know if the following make sense:; Header says that the field F is a fixed length field with length = N. In the data section, if; * length(F) < N - pad with missing values, no error message, continue; * length(F) > N - error, throw exception and print descriptive error message",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684:42,Modifiability,variab,variable,42,"Yep, that will definitely cause a crash - variable length fields need a length value stored while fixed length fields don't. I can add checks for this scenario in GenomicsDB. Please let me know if the following make sense:; Header says that the field F is a fixed length field with length = N. In the data section, if; * length(F) < N - pad with missing values, no error message, continue; * length(F) > N - error, throw exception and print descriptive error message",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407503807:40,Safety,avoid,avoid,40,"@chapmanb ; _What we can do in bcbio is avoid adding any of these until after running the joint calling so they all get on the final joint VCF rather than the gVCFs._. I think that would be the right way to go (irrespective of the inconsistencies in the headers). My understanding as a layman (I'm not a bioinformatician) is that many of these annotation fields are (population/group) statistics. By storing these annotations in the individual gVCFs and then importing them into GenomicsDB, the size of the storage and the time to import are increased significantly (since the statistics are being stored in every sample for every position with a record in the gVCF).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407503807
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407512076:157,Availability,down,down,157,"Karthik;; Thanks for this, I've done that in bcbio so hopefully will avoid the issue going forward. Feel free to close here unless you want to try and trace down further what is happening. Thanks again for the pointer that led us to the underlying issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407512076
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407512076:69,Safety,avoid,avoid,69,"Karthik;; Thanks for this, I've done that in bcbio so hopefully will avoid the issue going forward. Feel free to close here unless you want to try and trace down further what is happening. Thanks again for the pointer that led us to the underlying issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407512076
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-408081250:125,Integrability,message,message,125,"@kgururaj @ldgauthier I'd propose that we add defensive code to detect this, as @kgururaj proposed above. Maybe throw with a message identifying the name of the field and the issue ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-408081250
https://github.com/broadinstitute/gatk/issues/5045#issuecomment-408081250:64,Safety,detect,detect,64,"@kgururaj @ldgauthier I'd propose that we add defensive code to detect this, as @kgururaj proposed above. Maybe throw with a message identifying the name of the field and the issue ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5045#issuecomment-408081250
https://github.com/broadinstitute/gatk/pull/5046#issuecomment-407144823:34,Availability,failure,failures,34,@jonn-smith Looks like the travis failures are transient...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5046#issuecomment-407144823
https://github.com/broadinstitute/gatk/pull/5046#issuecomment-413336498:31,Testability,test,tests,31,@jonn-smith Can I merge if the tests pass?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5046#issuecomment-413336498
https://github.com/broadinstitute/gatk/pull/5046#issuecomment-413377463:7,Availability,error,error,7,Travis error is transient.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5046#issuecomment-413377463
https://github.com/broadinstitute/gatk/pull/5047#issuecomment-407173065:2164,Deployability,pipeline,pipelines,2164,BvcnQuamF2YQ==) | `79.098% <ø> (-0.985%)` | `52 <0> (ø)` | |; | [...titute/hellbender/tools/walkers/GenotypeGVCFs.java](https://codecov.io/gh/broadinstitute/gatk/pull/5047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL0dlbm90eXBlR1ZDRnMuamF2YQ==) | `89.916% <ø> (ø)` | `49 <0> (ø)` | :arrow_down: |; | [...ender/tools/spark/sv/utils/GATKSVVCFConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9HQVRLU1ZWQ0ZDb25zdGFudHMuamF2YQ==) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlVdGlscy5qYXZh) | `2.564% <0%> (-34.749%)` | `1% <0%> (-7%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5047/d,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5047#issuecomment-407173065
https://github.com/broadinstitute/gatk/pull/5048#issuecomment-407457135:2892,Deployability,integrat,integration,2892, |; | [...tools/copynumber/ModelSegmentsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL01vZGVsU2VnbWVudHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `89.308% <100%> (+0.206%)` | `20 <0> (ø)` | :arrow_down: |; | [...ools/copynumber/formats/records/LegacySegment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvcmVjb3Jkcy9MZWdhY3lTZWdtZW50LmphdmE=) | `46.875% <46.875%> (ø)` | `7 <7> (?)` | |; | [...r/formats/collections/LegacySegmentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvTGVnYWN5U2VnbWVudENvbGxlY3Rpb24uamF2YQ==) | `72.222% <72.222%> (ø)` | `4 <4> (?)` | |; | [.../sv/integration/SVIntegrationTestDataProvider.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9TVkludGVncmF0aW9uVGVzdERhdGFQcm92aWRlci5qYXZh) | `90.909% <0%> (-3.209%)` | `2% <0%> (+1%)` | |; | [...te/hellbender/tools/spark/sv/utils/SVInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkludGVydmFsLmphdmE=) | `85.507% <0%> (-1.993%)` | `48% <0%> (+12%)` | |; | [...on/FindBreakpointEvidenceSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9GaW5kQnJlYWtwb2ludEV2aWRlbmNlU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `13% <0%> (+6%)` | :arrow_up: |; | [...spark/sv/evidence/BreakpointDensityFilterTest.jav,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5048#issuecomment-407457135
https://github.com/broadinstitute/gatk/pull/5048#issuecomment-407457135:2892,Integrability,integrat,integration,2892, |; | [...tools/copynumber/ModelSegmentsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL01vZGVsU2VnbWVudHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `89.308% <100%> (+0.206%)` | `20 <0> (ø)` | :arrow_down: |; | [...ools/copynumber/formats/records/LegacySegment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvcmVjb3Jkcy9MZWdhY3lTZWdtZW50LmphdmE=) | `46.875% <46.875%> (ø)` | `7 <7> (?)` | |; | [...r/formats/collections/LegacySegmentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvTGVnYWN5U2VnbWVudENvbGxlY3Rpb24uamF2YQ==) | `72.222% <72.222%> (ø)` | `4 <4> (?)` | |; | [.../sv/integration/SVIntegrationTestDataProvider.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9TVkludGVncmF0aW9uVGVzdERhdGFQcm92aWRlci5qYXZh) | `90.909% <0%> (-3.209%)` | `2% <0%> (+1%)` | |; | [...te/hellbender/tools/spark/sv/utils/SVInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkludGVydmFsLmphdmE=) | `85.507% <0%> (-1.993%)` | `48% <0%> (+12%)` | |; | [...on/FindBreakpointEvidenceSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5048/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9GaW5kQnJlYWtwb2ludEV2aWRlbmNlU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `13% <0%> (+6%)` | :arrow_up: |; | [...spark/sv/evidence/BreakpointDensityFilterTest.jav,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5048#issuecomment-407457135
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407736504:914,Deployability,pipeline,pipeline,914,"Hi @Tintest,. Thanks for checking out GermlineCNVCaller! That is indeed a large cohort. The theano computational graph that represents the probabilistic model will be quite large and may require more memory than you have to successfully compile. We typically select a training cohort (perhaps 100-200 samples) to train the denoising model; ideally, all of your samples are from the same batch, but if not, you may want to train separate cohorts for each batch. These trained models can then be used to call subsequent samples in case mode using the appropriate model for each batch. Another strategy we use is to scatter gCNV runs across the exome/genome. I'd recommend including at least 10,000 intervals in each scatter shard, but you may be able to get away with more. I'd recommend studying the WDL at https://github.com/broadinstitute/gatk/tree/master/scripts/cnv_wdl/germline to see how we typically run the pipeline. @sooheelee is also working on a tutorial that will hopefully provide a useful hands-on example of running the workflow in this manner.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407736504
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407750916:929,Integrability,depend,depend,929,"See the ScatterIntervals and related tasks in the gCNV WDLs at the link above. The idea is to performs multiple runs of gCNV in shards of >10,000 intervals each across the exome. These shards can be specified by passing the set of intervals for each shard via the -L argument to GermlineCNVCaller. The gCNV model is independently fit in each shard, using the global depth and contig-level ploidy parameters determined across the whole exome in the DetermineGermlineContigPloidy step. The shards are then stitched together in the PostprocessGermlineCNVCalls step. I believe we typically run shards of 10,000 intervals for cohorts of 100-200 samples using n1-standard-8 machines, which have 30GB of memory (although looking at some recent runs, I think we've used as few as 5,000 intervals per shard). I think as few as several tens of samples could be sufficient to train a batch, but 100-200 is preferable---of course, this will depend on the specifics of your particular data set.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407750916
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407750916:94,Performance,perform,performs,94,"See the ScatterIntervals and related tasks in the gCNV WDLs at the link above. The idea is to performs multiple runs of gCNV in shards of >10,000 intervals each across the exome. These shards can be specified by passing the set of intervals for each shard via the -L argument to GermlineCNVCaller. The gCNV model is independently fit in each shard, using the global depth and contig-level ploidy parameters determined across the whole exome in the DetermineGermlineContigPloidy step. The shards are then stitched together in the PostprocessGermlineCNVCalls step. I believe we typically run shards of 10,000 intervals for cohorts of 100-200 samples using n1-standard-8 machines, which have 30GB of memory (although looking at some recent runs, I think we've used as few as 5,000 intervals per shard). I think as few as several tens of samples could be sufficient to train a batch, but 100-200 is preferable---of course, this will depend on the specifics of your particular data set.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407750916
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407771160:64,Deployability,pipeline,pipeline,64,"Hi @Tintest,. If you need some guidance in interpreting the WDL pipeline script that @samuelklee linked, please let me know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407771160
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407771160:31,Usability,guid,guidance,31,"Hi @Tintest,. If you need some guidance in interpreting the WDL pipeline script that @samuelklee linked, please let me know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-407771160
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231:296,Availability,error,error,296,"Hi, . Thanks @sooheelee for your offer, but I tried to do something ""exotic"" but maybe a bit too ambitious... And I got another ""problem"" ! :). ## Bug Report. ### Affected tool(s) or class(es); GermlineCNVCaller. ### Affected version(s); - GATK4 4.0.5.1. ### Description ; Related to my previous error and the advices you gave me, I decided to split my data not per segments or batch but per chromosomes. I did 4 groups, with pretty much the same number of intervals in my target (Refseq bed file) for each group. The CollectReadCounts, DetermineGermlineContigPloidy and GermlineCNVCaller were a success. But something went wrong during the PostprocessGermlineCNVCalls. Here is an example with one of my four groups, with bam files containing only reads within the 1,3,9,17,Y and M chromosomes, a bed file containing only the intervals within the 1,3,9,17,Y and M chromosomes and a fasta reference file containing only the chromosomes 1,3,9,17,Y and M sequences. #### Steps to reproduce; Try to do a PostprocessGermlineCNVCalls with not all the autosomal chromosomes. #### Command. ```/home/tintest/miniconda2/bin/java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/tintest/miniconda2/share/gatk4-4.0.5.1-0/gatk-package-4.0.5.1-local.jar PostprocessGermlineCNVCalls -L Refseq_GrCh38_1-3-9-17-Y-M.bed -R hg38_1-3-9-17-Y-M.fasta --calls-shard-path GermlineCNVCaller/GermlineCNVCaller-calls/ --contig-ploidy-calls DetermineGermlineContigPloidy/DetermineGermlineContigPloidy-calls/ --model-shard-path GermlineCNVCaller/GermlineCNVCaller-model --sample-index 274 --autosomal-ref-copy-number 2 --allosomal-contig Y --output-genotyped-intervals intervals/SAMPLE_274_PostprocessGermlineCNVCalls_interval.vcf --output-genotyped-segments segments/SAMPLE_274_PostprocessGermlineCNVCalls_segments.vcf```. #### Output; ```14:21:35.446 INFO NativeLibraryLoader - Loading libgkl_compression.so fro",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231:4651,Availability,down,down,4651,"s - Inflater: IntelInflater; 14:21:35.554 INFO PostprocessGermlineCNVCalls - GCS max retries/reopens: 20; 14:21:35.555 INFO PostprocessGermlineCNVCalls - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 14:21:35.556 WARN PostprocessGermlineCNVCalls -. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: PostprocessGermlineCNVCalls is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. 14:21:35.557 INFO PostprocessGermlineCNVCalls - Initializing engine; 14:21:35.976 INFO FeatureManager - Using codec BEDCodec to read file file:///bettik/tintest/NTM/bam/1-3-9-17-Y-M/Refseq_GrCh38_1-3-9-17-Y-M.bed; 14:21:36.034 INFO IntervalArgumentCollection - Processing 251589470 bp from intervals; 14:21:38.716 INFO PostprocessGermlineCNVCalls - Done initializing engine; 14:21:38.879 INFO PostprocessGermlineCNVCalls - Shutting down engine; [August 1, 2018 2:21:38 PM CEST] org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=2267545600; java.lang.IllegalArgumentException: The specified allosomal contigs must be contained in the SAM sequence dictionary of the call-set (specified allosomal contigs: [Y], all contigs: [chr9, chr7, chr8, chr5, chr6, chr3, chr21, chr4, chr22, chr1, chr2, chr20, chrY, chrX, chr10, chr11, chr12, chr13, chrM, chr18, chr19, chr14, chr15, chr16, chr17]); at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:722); at org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls.onTraversalStart(PostprocessGermlineCNVCalls.java:277); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:992); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:135); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseA",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231:3830,Deployability,patch,patch,3830,"------------------------------------------------; 14:21:35.543 INFO PostprocessGermlineCNVCalls - ------------------------------------------------------------; 14:21:35.544 INFO PostprocessGermlineCNVCalls - HTSJDK Version: 2.15.1; 14:21:35.545 INFO PostprocessGermlineCNVCalls - Picard Version: 2.18.2; 14:21:35.547 INFO PostprocessGermlineCNVCalls - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 14:21:35.548 INFO PostprocessGermlineCNVCalls - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 14:21:35.549 INFO PostprocessGermlineCNVCalls - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 14:21:35.550 INFO PostprocessGermlineCNVCalls - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 14:21:35.552 INFO PostprocessGermlineCNVCalls - Deflater: IntelDeflater; 14:21:35.553 INFO PostprocessGermlineCNVCalls - Inflater: IntelInflater; 14:21:35.554 INFO PostprocessGermlineCNVCalls - GCS max retries/reopens: 20; 14:21:35.555 INFO PostprocessGermlineCNVCalls - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 14:21:35.556 WARN PostprocessGermlineCNVCalls -. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: PostprocessGermlineCNVCalls is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. 14:21:35.557 INFO PostprocessGermlineCNVCalls - Initializing engine; 14:21:35.976 INFO FeatureManager - Using codec BEDCodec to read file file:///bettik/tintest/NTM/bam/1-3-9-17-Y-M/Refseq_GrCh38_1-3-9-17-Y-M.bed; 14:21:36.034 INFO IntervalArgumentCollection - Processing 251589470 bp from intervals; 14:21:38.716 INFO PostprocessGermlineCNVCalls - Done initializing engine; 14:21:38.879 INFO PostprocessGermlineCNVCalls - Shutting down engine; [August 1, 2018 2:21:38 PM CEST] org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=226",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231:6055,Deployability,pipeline,pipeline,6055,"om intervals; 14:21:38.716 INFO PostprocessGermlineCNVCalls - Done initializing engine; 14:21:38.879 INFO PostprocessGermlineCNVCalls - Shutting down engine; [August 1, 2018 2:21:38 PM CEST] org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=2267545600; java.lang.IllegalArgumentException: The specified allosomal contigs must be contained in the SAM sequence dictionary of the call-set (specified allosomal contigs: [Y], all contigs: [chr9, chr7, chr8, chr5, chr6, chr3, chr21, chr4, chr22, chr1, chr2, chr20, chrY, chrX, chr10, chr11, chr12, chr13, chrM, chr18, chr19, chr14, chr15, chr16, chr17]); at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:722); at org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls.onTraversalStart(PostprocessGermlineCNVCalls.java:277); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:992); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:135); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:180); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:199); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. ----. ## Notes. During all the procedures of the gCNV calling pipeline, I provided a target bed interval file with the 1,3,9,17,Y and M chromosomes, except for the DetermineGermlineContigPloidy were I provided a prior_contig_diploidy.tsv with all the infrerred ploidy. But the calls show only the requested chromosomes so I guessed it was fine but maybe not. It's like, in the PostprocessGermlineCNVCalls step, it's ignoring my filtered target (""-L"") or my reference (""-R). ----. Any solution ? . Thank you again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231:1968,Performance,Load,Loading,1968,"# Steps to reproduce; Try to do a PostprocessGermlineCNVCalls with not all the autosomal chromosomes. #### Command. ```/home/tintest/miniconda2/bin/java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/tintest/miniconda2/share/gatk4-4.0.5.1-0/gatk-package-4.0.5.1-local.jar PostprocessGermlineCNVCalls -L Refseq_GrCh38_1-3-9-17-Y-M.bed -R hg38_1-3-9-17-Y-M.fasta --calls-shard-path GermlineCNVCaller/GermlineCNVCaller-calls/ --contig-ploidy-calls DetermineGermlineContigPloidy/DetermineGermlineContigPloidy-calls/ --model-shard-path GermlineCNVCaller/GermlineCNVCaller-model --sample-index 274 --autosomal-ref-copy-number 2 --allosomal-contig Y --output-genotyped-intervals intervals/SAMPLE_274_PostprocessGermlineCNVCalls_interval.vcf --output-genotyped-segments segments/SAMPLE_274_PostprocessGermlineCNVCalls_segments.vcf```. #### Output; ```14:21:35.446 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/tintest/miniconda2/share/gatk4-4.0.5.1-0/gatk-package-4.0.5.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; 14:21:35.534 INFO PostprocessGermlineCNVCalls - ------------------------------------------------------------; 14:21:35.536 INFO PostprocessGermlineCNVCalls - The Genome Analysis Toolkit (GATK) v4.0.5.1; 14:21:35.537 INFO PostprocessGermlineCNVCalls - For support and documentation go to https://software.broadinstitute.org/gatk/; 14:21:35.538 INFO PostprocessGermlineCNVCalls - Executing as tintest@dahu63 on Linux v4.9.0-6-amd64 amd64; 14:21:35.539 INFO PostprocessGermlineCNVCalls - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_121-b15; 14:21:35.541 INFO PostprocessGermlineCNVCalls - Start Date/Time: August 1, 2018 2:21:35 PM CEST; 14:21:35.542 INFO PostprocessGermlineCNVCalls - ------------------------------------------------------------; 14:21:35.543 INFO PostprocessGermlineCNVCalls - ------------------------------------",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231
https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231:5233,Security,validat,validateArg,5233,"rocessGermlineCNVCalls - Initializing engine; 14:21:35.976 INFO FeatureManager - Using codec BEDCodec to read file file:///bettik/tintest/NTM/bam/1-3-9-17-Y-M/Refseq_GrCh38_1-3-9-17-Y-M.bed; 14:21:36.034 INFO IntervalArgumentCollection - Processing 251589470 bp from intervals; 14:21:38.716 INFO PostprocessGermlineCNVCalls - Done initializing engine; 14:21:38.879 INFO PostprocessGermlineCNVCalls - Shutting down engine; [August 1, 2018 2:21:38 PM CEST] org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=2267545600; java.lang.IllegalArgumentException: The specified allosomal contigs must be contained in the SAM sequence dictionary of the call-set (specified allosomal contigs: [Y], all contigs: [chr9, chr7, chr8, chr5, chr6, chr3, chr21, chr4, chr22, chr1, chr2, chr20, chrY, chrX, chr10, chr11, chr12, chr13, chrM, chr18, chr19, chr14, chr15, chr16, chr17]); at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:722); at org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls.onTraversalStart(PostprocessGermlineCNVCalls.java:277); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:992); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:135); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:180); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:199); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. ----. ## Notes. During all the procedures of the gCNV calling pipeline, I provided a target bed interval file with the 1,3,9,17,Y and M chromosomes, except for the DetermineGermlineContigPloidy were I provided a prior_contig_diploidy.tsv with all th",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231
https://github.com/broadinstitute/gatk/issues/5054#issuecomment-408629583:201,Availability,error,errors,201,"I think we should do this in 2 PRs. First @asmirnov239 can first add his modification to run multiple samples in case mode. I can do a subsequent PR for ""double-chunking"" intervals to avoid PAPI/quota errors for high-resolution WGS.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5054#issuecomment-408629583
https://github.com/broadinstitute/gatk/issues/5054#issuecomment-408629583:184,Safety,avoid,avoid,184,"I think we should do this in 2 PRs. First @asmirnov239 can first add his modification to run multiple samples in case mode. I can do a subsequent PR for ""double-chunking"" intervals to avoid PAPI/quota errors for high-resolution WGS.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5054#issuecomment-408629583
https://github.com/broadinstitute/gatk/pull/5055#issuecomment-407810486:947,Usability,Simpl,SimpleCountCollection,947,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5055?src=pr&el=h1) Report; > Merging [#5055](https://codecov.io/gh/broadinstitute/gatk/pull/5055?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/dca22bc32f4b080da642030d9975c610bb3cb261?src=pr&el=desc) will **decrease** coverage by `<.001%`.; > The diff coverage is `87.5%`. ```diff; @@ Coverage Diff @@; ## master #5055 +/- ##; ===============================================; - Coverage 86.347% 86.347% -<.001% ; - Complexity 28822 28823 +1 ; ===============================================; Files 1791 1791 ; Lines 133601 133615 +14 ; Branches 14920 14920 ; ===============================================; + Hits 115361 115373 +12 ; - Misses 12837 12839 +2 ; Partials 5403 5403; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5055?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ber/formats/collections/SimpleCountCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5055/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uLmphdmE=) | `100% <100%> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5055/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `86.667% <83.333%> (-2.222%)` | `4 <1> (+1)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5055#issuecomment-407810486
https://github.com/broadinstitute/gatk/pull/5055#issuecomment-407810486:1273,Usability,Simpl,SimpleCountCollectionUnitTest,1273,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5055?src=pr&el=h1) Report; > Merging [#5055](https://codecov.io/gh/broadinstitute/gatk/pull/5055?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/dca22bc32f4b080da642030d9975c610bb3cb261?src=pr&el=desc) will **decrease** coverage by `<.001%`.; > The diff coverage is `87.5%`. ```diff; @@ Coverage Diff @@; ## master #5055 +/- ##; ===============================================; - Coverage 86.347% 86.347% -<.001% ; - Complexity 28822 28823 +1 ; ===============================================; Files 1791 1791 ; Lines 133601 133615 +14 ; Branches 14920 14920 ; ===============================================; + Hits 115361 115373 +12 ; - Misses 12837 12839 +2 ; Partials 5403 5403; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5055?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ber/formats/collections/SimpleCountCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5055/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uLmphdmE=) | `100% <100%> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5055/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `86.667% <83.333%> (-2.222%)` | `4 <1> (+1)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5055#issuecomment-407810486
https://github.com/broadinstitute/gatk/pull/5055#issuecomment-408412233:64,Deployability,release,release,64,"@cmnbroad Another short one that might be easy to get in before release. However, as you can see from the comments here and in the code, there might be a better way to handle this issue. I was hoping @lbergelson might have some ideas (I think he previously suggested just suppressing stderr/stdout, not sure if that's preferred to hacky try-catches), but if you have bandwidth to review, I'd appreciate any suggestions you might have. For more context, you can see previous chatter in the dsde-methods Slack channel---just search for HDF5.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5055#issuecomment-408412233
https://github.com/broadinstitute/gatk/pull/5055#issuecomment-408514058:225,Testability,test,test,225,"@samuelklee I think HDF files have a unique signature that is intended to be used to identify them (including a non-ascii first byte to ensure they're not confused with text files). i.e.:. ```; ~/projects/gatk od -c -N 8 src/test/resources/large/cnv_somatic_workflows_test_files/wes-do-gc.pon.hdf5; 0000000 211 H D F \r \n 032 \n ; 0000010; ```. We can take this PR for the short-term if you want, but we should add an `isHDF5File` utility method, maybe in the hdf5-java-bindings repo. I think we might be able to use it the CNN tools as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5055#issuecomment-408514058
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408047593:127,Testability,test,test,127,"@lbergelson - maybe you can have a look, as you commented in the original issue. As the commit isn't in the repo yet, I cannot test if it is working here. But here are the logs for the commit in the repo where I did the change: https://jitpack.io/com/github/bioinformagik/gatk/6270fa279/build.log",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408047593
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408047593:172,Testability,log,logs,172,"@lbergelson - maybe you can have a look, as you commented in the original issue. As the commit isn't in the repo yet, I cannot test if it is working here. But here are the logs for the commit in the repo where I did the change: https://jitpack.io/com/github/bioinformagik/gatk/6270fa279/build.log",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408047593
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408047593:293,Testability,log,log,293,"@lbergelson - maybe you can have a look, as you commented in the original issue. As the commit isn't in the repo yet, I cannot test if it is working here. But here are the logs for the commit in the repo where I did the change: https://jitpack.io/com/github/bioinformagik/gatk/6270fa279/build.log",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408047593
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675:1563,Deployability,pipeline,pipelines,1563,===; Files 1791 1814 +23 ; Lines 133601 135364 +1763 ; Branches 14920 15042 +122 ; ============================================; + Hits 115364 116914 +1550 ; - Misses 12834 12996 +162 ; - Partials 5403 5454 +51; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5056?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/tools/spark/sv/utils/GATKSVVCFConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9HQVRLU1ZWQ0ZDb25zdGFudHMuamF2YQ==) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675:1879,Testability,test,test,1879, | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/tools/spark/sv/utils/GATKSVVCFConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9HQVRLU1ZWQ0ZDb25zdGFudHMuamF2YQ==) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675:3358,Testability,test,test,3358,vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...bender/tools/walkers/annotator/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9SZWZlcmVuY2VCYXNlcy5qYXZh) | `83.333% <0%> (-16.667%)` | `6% <0%> (+1%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...org/broadinstitute/hellbender/utils/BaseUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9CYXNlVXRpbHMuamF2YQ==) | `86.726% <0%> (-3.54%)` | `46% <0%> (-2%)` | |; | ... and [106 more](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413108251:47,Testability,log,logs,47,@lbergelson - the last commit works. Check the logs and artifacts in this folder: https://jitpack.io/com/github/bioinformagik/gatk/336d389ecc605f4138226dddda41981f78278e09,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413108251
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413614200:48,Deployability,install,install,48,@magicDGS It looks like jitpack runs `./gradlew install` ( https://jitpack.io/docs/BUILDING/#gradle-projects ) which will create both the normal and testutils jars after that's split out. So it should be fine. You'll obviously have to change how you import the jars to include the test utils jar but there's no getting around that.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413614200
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413614200:149,Testability,test,testutils,149,@magicDGS It looks like jitpack runs `./gradlew install` ( https://jitpack.io/docs/BUILDING/#gradle-projects ) which will create both the normal and testutils jars after that's split out. So it should be fine. You'll obviously have to change how you import the jars to include the test utils jar but there's no getting around that.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413614200
https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413614200:281,Testability,test,test,281,@magicDGS It looks like jitpack runs `./gradlew install` ( https://jitpack.io/docs/BUILDING/#gradle-projects ) which will create both the normal and testutils jars after that's split out. So it should be fine. You'll obviously have to change how you import the jars to include the test utils jar but there's no getting around that.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413614200
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408416074:65,Testability,test,test,65,"@davidbenjamin This filter looks fine to me, but could you add a test? You should have the data from the mitochondria bug already, right? Also if this potentially affects HaplotypeCaller should this fix be somewhere deeper so the filter is used by both tools or would we want the fix to be different?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408416074
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408417885:304,Testability,test,test,304,"It probably makes sense to fix HaplotypeCaller as well eventually, but the time scale for changes to HC is much slower and M2 can't afford to wait because, as it turns out, the bug you found doesn't just appear in mitochondria and is hurting sensitivity in the evaluation for our paper. . I will write a test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408417885
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991:53,Deployability,integrat,integration,53,"Back to @meganshand. I put in a simple mitochondrial integration test. Given that our MC3 validation already covers this particular bug I actually don't think it needs a new test for mitochondria. Also, for later, are any of your spike-in bams public (or rather, public + public)? I noticed that the NA12878 truth doesn't have very low AFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991:53,Integrability,integrat,integration,53,"Back to @meganshand. I put in a simple mitochondrial integration test. Given that our MC3 validation already covers this particular bug I actually don't think it needs a new test for mitochondria. Also, for later, are any of your spike-in bams public (or rather, public + public)? I noticed that the NA12878 truth doesn't have very low AFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991:90,Security,validat,validation,90,"Back to @meganshand. I put in a simple mitochondrial integration test. Given that our MC3 validation already covers this particular bug I actually don't think it needs a new test for mitochondria. Also, for later, are any of your spike-in bams public (or rather, public + public)? I noticed that the NA12878 truth doesn't have very low AFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991:65,Testability,test,test,65,"Back to @meganshand. I put in a simple mitochondrial integration test. Given that our MC3 validation already covers this particular bug I actually don't think it needs a new test for mitochondria. Also, for later, are any of your spike-in bams public (or rather, public + public)? I noticed that the NA12878 truth doesn't have very low AFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991:174,Testability,test,test,174,"Back to @meganshand. I put in a simple mitochondrial integration test. Given that our MC3 validation already covers this particular bug I actually don't think it needs a new test for mitochondria. Also, for later, are any of your spike-in bams public (or rather, public + public)? I noticed that the NA12878 truth doesn't have very low AFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991:32,Usability,simpl,simple,32,"Back to @meganshand. I put in a simple mitochondrial integration test. Given that our MC3 validation already covers this particular bug I actually don't think it needs a new test for mitochondria. Also, for later, are any of your spike-in bams public (or rather, public + public)? I noticed that the NA12878 truth doesn't have very low AFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408863715:219,Availability,down,down,219,"@davidbenjamin Thanks for the test! Unfortunately none of the spike-in bams I have are public, but I will ask Sarah Calvo if she knows of any samples that would work as a spike-in and are public. Maybe we can track one down.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408863715
https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408863715:30,Testability,test,test,30,"@davidbenjamin Thanks for the test! Unfortunately none of the spike-in bams I have are public, but I will ask Sarah Calvo if she knows of any samples that would work as a spike-in and are public. Maybe we can track one down.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408863715
https://github.com/broadinstitute/gatk/issues/5059#issuecomment-408433167:97,Security,validat,validated,97,"For now, the tool will just supply the count and not make any decision as to whether the variant validated.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5059#issuecomment-408433167
https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408470885:23,Availability,failure,failure,23,@davidbenjamin Testing failure is transient. Please review...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408470885
https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408470885:15,Testability,Test,Testing,15,@davidbenjamin Testing failure is transient. Please review...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408470885
https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408490831:1248,Energy Efficiency,Power,PowerCalculationUtils,1248,a7258df116ba2a3af7df191ebc8a?src=pr&el=desc) will **decrease** coverage by `<.001%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #5062 +/- ##; ==============================================; - Coverage 86.35% 86.349% -<.001% ; - Complexity 28824 28826 +2 ; ==============================================; Files 1791 1791 ; Lines 133601 133619 +18 ; Branches 14920 14920 ; ==============================================; + Hits 115364 115379 +15 ; - Misses 12834 12837 +3 ; Partials 5403 5403; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5062?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...bender/utils/GATKProtectedVariantContextUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9HQVRLUHJvdGVjdGVkVmFyaWFudENvbnRleHRVdGlscy5qYXZh) | `65.746% <ø> (ø)` | `61 <0> (ø)` | :arrow_down: |; | [...ion/basicshortmutpileup/PowerCalculationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9Qb3dlckNhbGN1bGF0aW9uVXRpbHMuamF2YQ==) | `96.667% <100%> (+1.429%)` | `18 <7> (+3)` | :arrow_up: |; | [...tmutpileup/BasicSomaticShortMutationValidator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CYXNpY1NvbWF0aWNTaG9ydE11dGF0aW9uVmFsaWRhdG9yLmphdmE=) | `62.5% <100%> (+1.974%)` | `5 <0> (ø)` | :arrow_down: |; | [...ion/basicshortmutpileup/BasicValidationResult.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CYXNpY1ZhbGlkYXRpb25SZXN1bHQuamF2YQ==) | `96.774% <10,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408490831
https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408490831:2311,Security,Validat,ValidateBasicSomaticShortMutations,2311,5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9Qb3dlckNhbGN1bGF0aW9uVXRpbHMuamF2YQ==) | `96.667% <100%> (+1.429%)` | `18 <7> (+3)` | :arrow_up: |; | [...tmutpileup/BasicSomaticShortMutationValidator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CYXNpY1NvbWF0aWNTaG9ydE11dGF0aW9uVmFsaWRhdG9yLmphdmE=) | `62.5% <100%> (+1.974%)` | `5 <0> (ø)` | :arrow_down: |; | [...ion/basicshortmutpileup/BasicValidationResult.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CYXNpY1ZhbGlkYXRpb25SZXN1bHQuamF2YQ==) | `96.774% <100%> (+0.222%)` | `16 <2> (+1)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `83.636% <100%> (+0.15%)` | `19 <0> (ø)` | :arrow_down: |; | [...dateBasicSomaticShortMutationsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <100%> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5062/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408490831
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408466937:151,Availability,error,error,151,"Hey Chris. Tagging you for some triage help. User has reported ""Figured it out, this is what you get when you run out of disk space. Please could this error message be made more helpful please?"" Is there anything you can do? A better error message would help, but not sure who to assign this to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408466937
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408466937:234,Availability,error,error,234,"Hey Chris. Tagging you for some triage help. User has reported ""Figured it out, this is what you get when you run out of disk space. Please could this error message be made more helpful please?"" Is there anything you can do? A better error message would help, but not sure who to assign this to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408466937
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408466937:157,Integrability,message,message,157,"Hey Chris. Tagging you for some triage help. User has reported ""Figured it out, this is what you get when you run out of disk space. Please could this error message be made more helpful please?"" Is there anything you can do? A better error message would help, but not sure who to assign this to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408466937
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408466937:240,Integrability,message,message,240,"Hey Chris. Tagging you for some triage help. User has reported ""Figured it out, this is what you get when you run out of disk space. Please could this error message be made more helpful please?"" Is there anything you can do? A better error message would help, but not sure who to assign this to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408466937
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408492983:73,Availability,error,error,73,@kgururaj Can you take a look and see if we can issue a more informative error message.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408492983
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408492983:79,Integrability,message,message,79,@kgururaj Can you take a look and see if we can issue a more informative error message.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408492983
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408509569:0,Availability,Error,Error,0,"Error reporting was improved in https://github.com/broadinstitute/gatk/pull/4645. It should at least print out - ""file could not be opened etc""",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-408509569
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-439983479:9,Availability,error,error,9,"Improved error message sounds like a good solution, thank you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-439983479
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-439983479:15,Integrability,message,message,15,"Improved error message sounds like a good solution, thank you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-439983479
https://github.com/broadinstitute/gatk/issues/5064#issuecomment-592092332:129,Testability,test,test,129,"There have been a lot of GDB improvements since then. If this is still an issue in the latest GATK we can reopen, but there's no test data here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5064#issuecomment-592092332
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462:278,Availability,down,downside,278,"@kgururaj As I start to think about upgrading exome joint calling to use GenomicsDBImport the 100 interval threshold seems like it might be problematic. I've been working with WGS data, so I don't have much intuition for benchmarking with missing data. Is there any performance downside to running over larger intervals that include missing data? For example, if we want to scatter the exome 50 ways, each subset of the exome interval list will have ~4000 intervals, but the GVCFs won't have data outside those intervals. Does it make sense to pass to GenomicsDBImport a single interval encompassing all of those?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462:266,Performance,perform,performance,266,"@kgururaj As I start to think about upgrading exome joint calling to use GenomicsDBImport the 100 interval threshold seems like it might be problematic. I've been working with WGS data, so I don't have much intuition for benchmarking with missing data. Is there any performance downside to running over larger intervals that include missing data? For example, if we want to scatter the exome 50 ways, each subset of the exome interval list will have ~4000 intervals, but the GVCFs won't have data outside those intervals. Does it make sense to pass to GenomicsDBImport a single interval encompassing all of those?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462:221,Testability,benchmark,benchmarking,221,"@kgururaj As I start to think about upgrading exome joint calling to use GenomicsDBImport the 100 interval threshold seems like it might be problematic. I've been working with WGS data, so I don't have much intuition for benchmarking with missing data. Is there any performance downside to running over larger intervals that include missing data? For example, if we want to scatter the exome 50 ways, each subset of the exome interval list will have ~4000 intervals, but the GVCFs won't have data outside those intervals. Does it make sense to pass to GenomicsDBImport a single interval encompassing all of those?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462:207,Usability,intuit,intuition,207,"@kgururaj As I start to think about upgrading exome joint calling to use GenomicsDBImport the 100 interval threshold seems like it might be problematic. I've been working with WGS data, so I don't have much intuition for benchmarking with missing data. Is there any performance downside to running over larger intervals that include missing data? For example, if we want to scatter the exome 50 ways, each subset of the exome interval list will have ~4000 intervals, but the GVCFs won't have data outside those intervals. Does it make sense to pass to GenomicsDBImport a single interval encompassing all of those?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757:1659,Integrability,message,message,1659,"* _Large number of open file handles_: this was an issue in TileDB which got fixed as part of the restructuring that @nalinigans did for supporting HDFS/S3/GCS (#5017). I was too lazy to fix this again. If it's going to take some time for PR #5017 to be merged, I can submit a separate fix for this. This would fix any crashes/termination issues.; * _Performance of a single import process with a large number of intervals_; * Restating the obvious, but this is a single process (and by default, a single thread) with many intervals to import. As you increase the number of samples, this will become a performance pain point.; * More important than the number of intervals is the amount of data imported per interval. Each interval import involves opening the VCF files (loading index structures while creating FeatureReader objects), writing to TileDB/GenomicsDB. and closing the VCF file handles (destroying FeatureReader objects). If the amount of data written for each interval is sufficiently large, the cost of opening/closing the VCF files (creating/destroying FeatureReaders) is small relative to the total time taken.; * In the test cases I and Chris were trying, the amount of data written per interval was small (or 0 in many cases). The time taken in opening/closing the VCF files (and loading/destroying the index) dominates the total time.; * For a single import process (single thread), creating a large interval is better (or no worse) than passing several small intervals. TileDB/GenomicsDB has 0 overhead for regions with no data (for example, WES gVCFs). Having larger intervals will likely avoid issues described above. Hence, an advisory message will be beneficial.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757:602,Performance,perform,performance,602,"* _Large number of open file handles_: this was an issue in TileDB which got fixed as part of the restructuring that @nalinigans did for supporting HDFS/S3/GCS (#5017). I was too lazy to fix this again. If it's going to take some time for PR #5017 to be merged, I can submit a separate fix for this. This would fix any crashes/termination issues.; * _Performance of a single import process with a large number of intervals_; * Restating the obvious, but this is a single process (and by default, a single thread) with many intervals to import. As you increase the number of samples, this will become a performance pain point.; * More important than the number of intervals is the amount of data imported per interval. Each interval import involves opening the VCF files (loading index structures while creating FeatureReader objects), writing to TileDB/GenomicsDB. and closing the VCF file handles (destroying FeatureReader objects). If the amount of data written for each interval is sufficiently large, the cost of opening/closing the VCF files (creating/destroying FeatureReaders) is small relative to the total time taken.; * In the test cases I and Chris were trying, the amount of data written per interval was small (or 0 in many cases). The time taken in opening/closing the VCF files (and loading/destroying the index) dominates the total time.; * For a single import process (single thread), creating a large interval is better (or no worse) than passing several small intervals. TileDB/GenomicsDB has 0 overhead for regions with no data (for example, WES gVCFs). Having larger intervals will likely avoid issues described above. Hence, an advisory message will be beneficial.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757:771,Performance,load,loading,771,"* _Large number of open file handles_: this was an issue in TileDB which got fixed as part of the restructuring that @nalinigans did for supporting HDFS/S3/GCS (#5017). I was too lazy to fix this again. If it's going to take some time for PR #5017 to be merged, I can submit a separate fix for this. This would fix any crashes/termination issues.; * _Performance of a single import process with a large number of intervals_; * Restating the obvious, but this is a single process (and by default, a single thread) with many intervals to import. As you increase the number of samples, this will become a performance pain point.; * More important than the number of intervals is the amount of data imported per interval. Each interval import involves opening the VCF files (loading index structures while creating FeatureReader objects), writing to TileDB/GenomicsDB. and closing the VCF file handles (destroying FeatureReader objects). If the amount of data written for each interval is sufficiently large, the cost of opening/closing the VCF files (creating/destroying FeatureReaders) is small relative to the total time taken.; * In the test cases I and Chris were trying, the amount of data written per interval was small (or 0 in many cases). The time taken in opening/closing the VCF files (and loading/destroying the index) dominates the total time.; * For a single import process (single thread), creating a large interval is better (or no worse) than passing several small intervals. TileDB/GenomicsDB has 0 overhead for regions with no data (for example, WES gVCFs). Having larger intervals will likely avoid issues described above. Hence, an advisory message will be beneficial.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757:1298,Performance,load,loading,1298,"* _Large number of open file handles_: this was an issue in TileDB which got fixed as part of the restructuring that @nalinigans did for supporting HDFS/S3/GCS (#5017). I was too lazy to fix this again. If it's going to take some time for PR #5017 to be merged, I can submit a separate fix for this. This would fix any crashes/termination issues.; * _Performance of a single import process with a large number of intervals_; * Restating the obvious, but this is a single process (and by default, a single thread) with many intervals to import. As you increase the number of samples, this will become a performance pain point.; * More important than the number of intervals is the amount of data imported per interval. Each interval import involves opening the VCF files (loading index structures while creating FeatureReader objects), writing to TileDB/GenomicsDB. and closing the VCF file handles (destroying FeatureReader objects). If the amount of data written for each interval is sufficiently large, the cost of opening/closing the VCF files (creating/destroying FeatureReaders) is small relative to the total time taken.; * In the test cases I and Chris were trying, the amount of data written per interval was small (or 0 in many cases). The time taken in opening/closing the VCF files (and loading/destroying the index) dominates the total time.; * For a single import process (single thread), creating a large interval is better (or no worse) than passing several small intervals. TileDB/GenomicsDB has 0 overhead for regions with no data (for example, WES gVCFs). Having larger intervals will likely avoid issues described above. Hence, an advisory message will be beneficial.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757:1610,Safety,avoid,avoid,1610,"* _Large number of open file handles_: this was an issue in TileDB which got fixed as part of the restructuring that @nalinigans did for supporting HDFS/S3/GCS (#5017). I was too lazy to fix this again. If it's going to take some time for PR #5017 to be merged, I can submit a separate fix for this. This would fix any crashes/termination issues.; * _Performance of a single import process with a large number of intervals_; * Restating the obvious, but this is a single process (and by default, a single thread) with many intervals to import. As you increase the number of samples, this will become a performance pain point.; * More important than the number of intervals is the amount of data imported per interval. Each interval import involves opening the VCF files (loading index structures while creating FeatureReader objects), writing to TileDB/GenomicsDB. and closing the VCF file handles (destroying FeatureReader objects). If the amount of data written for each interval is sufficiently large, the cost of opening/closing the VCF files (creating/destroying FeatureReaders) is small relative to the total time taken.; * In the test cases I and Chris were trying, the amount of data written per interval was small (or 0 in many cases). The time taken in opening/closing the VCF files (and loading/destroying the index) dominates the total time.; * For a single import process (single thread), creating a large interval is better (or no worse) than passing several small intervals. TileDB/GenomicsDB has 0 overhead for regions with no data (for example, WES gVCFs). Having larger intervals will likely avoid issues described above. Hence, an advisory message will be beneficial.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757
https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757:1137,Testability,test,test,1137,"* _Large number of open file handles_: this was an issue in TileDB which got fixed as part of the restructuring that @nalinigans did for supporting HDFS/S3/GCS (#5017). I was too lazy to fix this again. If it's going to take some time for PR #5017 to be merged, I can submit a separate fix for this. This would fix any crashes/termination issues.; * _Performance of a single import process with a large number of intervals_; * Restating the obvious, but this is a single process (and by default, a single thread) with many intervals to import. As you increase the number of samples, this will become a performance pain point.; * More important than the number of intervals is the amount of data imported per interval. Each interval import involves opening the VCF files (loading index structures while creating FeatureReader objects), writing to TileDB/GenomicsDB. and closing the VCF file handles (destroying FeatureReader objects). If the amount of data written for each interval is sufficiently large, the cost of opening/closing the VCF files (creating/destroying FeatureReaders) is small relative to the total time taken.; * In the test cases I and Chris were trying, the amount of data written per interval was small (or 0 in many cases). The time taken in opening/closing the VCF files (and loading/destroying the index) dominates the total time.; * For a single import process (single thread), creating a large interval is better (or no worse) than passing several small intervals. TileDB/GenomicsDB has 0 overhead for regions with no data (for example, WES gVCFs). Having larger intervals will likely avoid issues described above. Hence, an advisory message will be beneficial.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-417006227:91,Integrability,synchroniz,synchronization,91,"I was able to trigger the ArrayIndexOutOfBoundException (and subsequently fix it with your synchronization) with the following code, so perhaps a test similar to this would be useful to include:; ``` @Test(); public void testRaceCondition(){; final GenotypeLikelihoodCalculators calculator = new GenotypeLikelihoodCalculators();. List<int[]> counts = new ArrayList<>();; Random random = new Random(10);; for (int i = 1; i < 19; i++) {; counts.add(new int[]{random.nextInt(i), random.nextInt(i)});; }. Utils.stream(counts).parallel().forEach(params -> calculator.getInstance(params[0]+1, params[1]+1));; }```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-417006227
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-417006227:146,Testability,test,test,146,"I was able to trigger the ArrayIndexOutOfBoundException (and subsequently fix it with your synchronization) with the following code, so perhaps a test similar to this would be useful to include:; ``` @Test(); public void testRaceCondition(){; final GenotypeLikelihoodCalculators calculator = new GenotypeLikelihoodCalculators();. List<int[]> counts = new ArrayList<>();; Random random = new Random(10);; for (int i = 1; i < 19; i++) {; counts.add(new int[]{random.nextInt(i), random.nextInt(i)});; }. Utils.stream(counts).parallel().forEach(params -> calculator.getInstance(params[0]+1, params[1]+1));; }```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-417006227
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-417006227:201,Testability,Test,Test,201,"I was able to trigger the ArrayIndexOutOfBoundException (and subsequently fix it with your synchronization) with the following code, so perhaps a test similar to this would be useful to include:; ``` @Test(); public void testRaceCondition(){; final GenotypeLikelihoodCalculators calculator = new GenotypeLikelihoodCalculators();. List<int[]> counts = new ArrayList<>();; Random random = new Random(10);; for (int i = 1; i < 19; i++) {; counts.add(new int[]{random.nextInt(i), random.nextInt(i)});; }. Utils.stream(counts).parallel().forEach(params -> calculator.getInstance(params[0]+1, params[1]+1));; }```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-417006227
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-417006227:221,Testability,test,testRaceCondition,221,"I was able to trigger the ArrayIndexOutOfBoundException (and subsequently fix it with your synchronization) with the following code, so perhaps a test similar to this would be useful to include:; ``` @Test(); public void testRaceCondition(){; final GenotypeLikelihoodCalculators calculator = new GenotypeLikelihoodCalculators();. List<int[]> counts = new ArrayList<>();; Random random = new Random(10);; for (int i = 1; i < 19; i++) {; counts.add(new int[]{random.nextInt(i), random.nextInt(i)});; }. Utils.stream(counts).parallel().forEach(params -> calculator.getInstance(params[0]+1, params[1]+1));; }```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-417006227
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422154723:22,Availability,down,down,22,"@tomwhite We just sat down and had a look at this class. @droazen was suggesting that this might still be unsafe, and that the outer layer where we compute the genotype likelihood should either be synchronized as well or the whole thing should be wrapped in a thread local object",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422154723
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422154723:197,Integrability,synchroniz,synchronized,197,"@tomwhite We just sat down and had a look at this class. @droazen was suggesting that this might still be unsafe, and that the outer layer where we compute the genotype likelihood should either be synchronized as well or the whole thing should be wrapped in a thread local object",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422154723
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422154723:247,Integrability,wrap,wrapped,247,"@tomwhite We just sat down and had a look at this class. @droazen was suggesting that this might still be unsafe, and that the outer layer where we compute the genotype likelihood should either be synchronized as well or the whole thing should be wrapped in a thread local object",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422154723
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422154723:106,Safety,unsafe,unsafe,106,"@tomwhite We just sat down and had a look at this class. @droazen was suggesting that this might still be unsafe, and that the outer layer where we compute the genotype likelihood should either be synchronized as well or the whole thing should be wrapped in a thread local object",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422154723
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244:162,Integrability,synchroniz,synchronized,162,"@tomwhite To clarify, I think that the caller of `ensureCapacity()`, namely `GenotypeLikelihoodCalculators.calculateGenotypeCountUsingTables()`, also needs to be synchronized in order to avoid some unlikely but still-possible races. Given this, I think that we should consider whether `ThreadLocal` might be a better option here. It's not 100% clear to me whether a `ThreadLocal` `get()` call is cheaper than a synchronized method call, but some casual googling suggests that it might be. If we're going to end up entering a synchronized method on every single call to `GenotypeLikelihoodCalculators.getInstance()`, we might want to do some research into whether `ThreadLocal` + no synchronization would be faster, since I believe that this is a performance-sensitive section of code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244:411,Integrability,synchroniz,synchronized,411,"@tomwhite To clarify, I think that the caller of `ensureCapacity()`, namely `GenotypeLikelihoodCalculators.calculateGenotypeCountUsingTables()`, also needs to be synchronized in order to avoid some unlikely but still-possible races. Given this, I think that we should consider whether `ThreadLocal` might be a better option here. It's not 100% clear to me whether a `ThreadLocal` `get()` call is cheaper than a synchronized method call, but some casual googling suggests that it might be. If we're going to end up entering a synchronized method on every single call to `GenotypeLikelihoodCalculators.getInstance()`, we might want to do some research into whether `ThreadLocal` + no synchronization would be faster, since I believe that this is a performance-sensitive section of code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244:525,Integrability,synchroniz,synchronized,525,"@tomwhite To clarify, I think that the caller of `ensureCapacity()`, namely `GenotypeLikelihoodCalculators.calculateGenotypeCountUsingTables()`, also needs to be synchronized in order to avoid some unlikely but still-possible races. Given this, I think that we should consider whether `ThreadLocal` might be a better option here. It's not 100% clear to me whether a `ThreadLocal` `get()` call is cheaper than a synchronized method call, but some casual googling suggests that it might be. If we're going to end up entering a synchronized method on every single call to `GenotypeLikelihoodCalculators.getInstance()`, we might want to do some research into whether `ThreadLocal` + no synchronization would be faster, since I believe that this is a performance-sensitive section of code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244:682,Integrability,synchroniz,synchronization,682,"@tomwhite To clarify, I think that the caller of `ensureCapacity()`, namely `GenotypeLikelihoodCalculators.calculateGenotypeCountUsingTables()`, also needs to be synchronized in order to avoid some unlikely but still-possible races. Given this, I think that we should consider whether `ThreadLocal` might be a better option here. It's not 100% clear to me whether a `ThreadLocal` `get()` call is cheaper than a synchronized method call, but some casual googling suggests that it might be. If we're going to end up entering a synchronized method on every single call to `GenotypeLikelihoodCalculators.getInstance()`, we might want to do some research into whether `ThreadLocal` + no synchronization would be faster, since I believe that this is a performance-sensitive section of code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244:746,Performance,perform,performance-sensitive,746,"@tomwhite To clarify, I think that the caller of `ensureCapacity()`, namely `GenotypeLikelihoodCalculators.calculateGenotypeCountUsingTables()`, also needs to be synchronized in order to avoid some unlikely but still-possible races. Given this, I think that we should consider whether `ThreadLocal` might be a better option here. It's not 100% clear to me whether a `ThreadLocal` `get()` call is cheaper than a synchronized method call, but some casual googling suggests that it might be. If we're going to end up entering a synchronized method on every single call to `GenotypeLikelihoodCalculators.getInstance()`, we might want to do some research into whether `ThreadLocal` + no synchronization would be faster, since I believe that this is a performance-sensitive section of code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244:187,Safety,avoid,avoid,187,"@tomwhite To clarify, I think that the caller of `ensureCapacity()`, namely `GenotypeLikelihoodCalculators.calculateGenotypeCountUsingTables()`, also needs to be synchronized in order to avoid some unlikely but still-possible races. Given this, I think that we should consider whether `ThreadLocal` might be a better option here. It's not 100% clear to me whether a `ThreadLocal` `get()` call is cheaper than a synchronized method call, but some casual googling suggests that it might be. If we're going to end up entering a synchronized method on every single call to `GenotypeLikelihoodCalculators.getInstance()`, we might want to do some research into whether `ThreadLocal` + no synchronization would be faster, since I believe that this is a performance-sensitive section of code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244:344,Usability,clear,clear,344,"@tomwhite To clarify, I think that the caller of `ensureCapacity()`, namely `GenotypeLikelihoodCalculators.calculateGenotypeCountUsingTables()`, also needs to be synchronized in order to avoid some unlikely but still-possible races. Given this, I think that we should consider whether `ThreadLocal` might be a better option here. It's not 100% clear to me whether a `ThreadLocal` `get()` call is cheaper than a synchronized method call, but some casual googling suggests that it might be. If we're going to end up entering a synchronized method on every single call to `GenotypeLikelihoodCalculators.getInstance()`, we might want to do some research into whether `ThreadLocal` + no synchronization would be faster, since I believe that this is a performance-sensitive section of code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-422171244
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586:116,Integrability,synchroniz,synchronized,116,"@jamesemery I agree - all access (read and write) to `GenotypeLikelihoodCalculators` instance variables needs to be synchronized to make it safe. I think it would be sufficient to make `getInstance()` and `calculateGenotypeCountUsingTables()` synchronized. @droazen, are you concerned about performance for the Spark case? For the walker version, presumably the access is single-threaded, and hence [uncontended, which is very cheap](https://books.google.co.uk/books?id=mzgFCAAAQBAJ&pg=PA230&lpg=PA230&dq=java+uncontended+synchronization+goetz&source=bl&ots=7W4J807faW&sig=YALE1qdWoAUELPqLRhIedz-bZ20&hl=en&sa=X&ved=2ahUKEwj4jJeko8zdAhXVFsAKHazkBrcQ6AEwB3oECAIQAQ#v=onepage&q=java%20uncontended%20synchronization%20goetz&f=false). Another option would be to maintain a separate instance of `GenotypeLikelihoodCalculators` per genotyping engine. The size of the table is ploidy * alleles, so not too large?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586:243,Integrability,synchroniz,synchronized,243,"@jamesemery I agree - all access (read and write) to `GenotypeLikelihoodCalculators` instance variables needs to be synchronized to make it safe. I think it would be sufficient to make `getInstance()` and `calculateGenotypeCountUsingTables()` synchronized. @droazen, are you concerned about performance for the Spark case? For the walker version, presumably the access is single-threaded, and hence [uncontended, which is very cheap](https://books.google.co.uk/books?id=mzgFCAAAQBAJ&pg=PA230&lpg=PA230&dq=java+uncontended+synchronization+goetz&source=bl&ots=7W4J807faW&sig=YALE1qdWoAUELPqLRhIedz-bZ20&hl=en&sa=X&ved=2ahUKEwj4jJeko8zdAhXVFsAKHazkBrcQ6AEwB3oECAIQAQ#v=onepage&q=java%20uncontended%20synchronization%20goetz&f=false). Another option would be to maintain a separate instance of `GenotypeLikelihoodCalculators` per genotyping engine. The size of the table is ploidy * alleles, so not too large?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586:522,Integrability,synchroniz,synchronization,522,"@jamesemery I agree - all access (read and write) to `GenotypeLikelihoodCalculators` instance variables needs to be synchronized to make it safe. I think it would be sufficient to make `getInstance()` and `calculateGenotypeCountUsingTables()` synchronized. @droazen, are you concerned about performance for the Spark case? For the walker version, presumably the access is single-threaded, and hence [uncontended, which is very cheap](https://books.google.co.uk/books?id=mzgFCAAAQBAJ&pg=PA230&lpg=PA230&dq=java+uncontended+synchronization+goetz&source=bl&ots=7W4J807faW&sig=YALE1qdWoAUELPqLRhIedz-bZ20&hl=en&sa=X&ved=2ahUKEwj4jJeko8zdAhXVFsAKHazkBrcQ6AEwB3oECAIQAQ#v=onepage&q=java%20uncontended%20synchronization%20goetz&f=false). Another option would be to maintain a separate instance of `GenotypeLikelihoodCalculators` per genotyping engine. The size of the table is ploidy * alleles, so not too large?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586:94,Modifiability,variab,variables,94,"@jamesemery I agree - all access (read and write) to `GenotypeLikelihoodCalculators` instance variables needs to be synchronized to make it safe. I think it would be sufficient to make `getInstance()` and `calculateGenotypeCountUsingTables()` synchronized. @droazen, are you concerned about performance for the Spark case? For the walker version, presumably the access is single-threaded, and hence [uncontended, which is very cheap](https://books.google.co.uk/books?id=mzgFCAAAQBAJ&pg=PA230&lpg=PA230&dq=java+uncontended+synchronization+goetz&source=bl&ots=7W4J807faW&sig=YALE1qdWoAUELPqLRhIedz-bZ20&hl=en&sa=X&ved=2ahUKEwj4jJeko8zdAhXVFsAKHazkBrcQ6AEwB3oECAIQAQ#v=onepage&q=java%20uncontended%20synchronization%20goetz&f=false). Another option would be to maintain a separate instance of `GenotypeLikelihoodCalculators` per genotyping engine. The size of the table is ploidy * alleles, so not too large?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586:291,Performance,perform,performance,291,"@jamesemery I agree - all access (read and write) to `GenotypeLikelihoodCalculators` instance variables needs to be synchronized to make it safe. I think it would be sufficient to make `getInstance()` and `calculateGenotypeCountUsingTables()` synchronized. @droazen, are you concerned about performance for the Spark case? For the walker version, presumably the access is single-threaded, and hence [uncontended, which is very cheap](https://books.google.co.uk/books?id=mzgFCAAAQBAJ&pg=PA230&lpg=PA230&dq=java+uncontended+synchronization+goetz&source=bl&ots=7W4J807faW&sig=YALE1qdWoAUELPqLRhIedz-bZ20&hl=en&sa=X&ved=2ahUKEwj4jJeko8zdAhXVFsAKHazkBrcQ6AEwB3oECAIQAQ#v=onepage&q=java%20uncontended%20synchronization%20goetz&f=false). Another option would be to maintain a separate instance of `GenotypeLikelihoodCalculators` per genotyping engine. The size of the table is ploidy * alleles, so not too large?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586:140,Safety,safe,safe,140,"@jamesemery I agree - all access (read and write) to `GenotypeLikelihoodCalculators` instance variables needs to be synchronized to make it safe. I think it would be sufficient to make `getInstance()` and `calculateGenotypeCountUsingTables()` synchronized. @droazen, are you concerned about performance for the Spark case? For the walker version, presumably the access is single-threaded, and hence [uncontended, which is very cheap](https://books.google.co.uk/books?id=mzgFCAAAQBAJ&pg=PA230&lpg=PA230&dq=java+uncontended+synchronization+goetz&source=bl&ots=7W4J807faW&sig=YALE1qdWoAUELPqLRhIedz-bZ20&hl=en&sa=X&ved=2ahUKEwj4jJeko8zdAhXVFsAKHazkBrcQ6AEwB3oECAIQAQ#v=onepage&q=java%20uncontended%20synchronization%20goetz&f=false). Another option would be to maintain a separate instance of `GenotypeLikelihoodCalculators` per genotyping engine. The size of the table is ploidy * alleles, so not too large?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586:26,Security,access,access,26,"@jamesemery I agree - all access (read and write) to `GenotypeLikelihoodCalculators` instance variables needs to be synchronized to make it safe. I think it would be sufficient to make `getInstance()` and `calculateGenotypeCountUsingTables()` synchronized. @droazen, are you concerned about performance for the Spark case? For the walker version, presumably the access is single-threaded, and hence [uncontended, which is very cheap](https://books.google.co.uk/books?id=mzgFCAAAQBAJ&pg=PA230&lpg=PA230&dq=java+uncontended+synchronization+goetz&source=bl&ots=7W4J807faW&sig=YALE1qdWoAUELPqLRhIedz-bZ20&hl=en&sa=X&ved=2ahUKEwj4jJeko8zdAhXVFsAKHazkBrcQ6AEwB3oECAIQAQ#v=onepage&q=java%20uncontended%20synchronization%20goetz&f=false). Another option would be to maintain a separate instance of `GenotypeLikelihoodCalculators` per genotyping engine. The size of the table is ploidy * alleles, so not too large?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586:362,Security,access,access,362,"@jamesemery I agree - all access (read and write) to `GenotypeLikelihoodCalculators` instance variables needs to be synchronized to make it safe. I think it would be sufficient to make `getInstance()` and `calculateGenotypeCountUsingTables()` synchronized. @droazen, are you concerned about performance for the Spark case? For the walker version, presumably the access is single-threaded, and hence [uncontended, which is very cheap](https://books.google.co.uk/books?id=mzgFCAAAQBAJ&pg=PA230&lpg=PA230&dq=java+uncontended+synchronization+goetz&source=bl&ots=7W4J807faW&sig=YALE1qdWoAUELPqLRhIedz-bZ20&hl=en&sa=X&ved=2ahUKEwj4jJeko8zdAhXVFsAKHazkBrcQ6AEwB3oECAIQAQ#v=onepage&q=java%20uncontended%20synchronization%20goetz&f=false). Another option would be to maintain a separate instance of `GenotypeLikelihoodCalculators` per genotyping engine. The size of the table is ploidy * alleles, so not too large?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-423546586
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:26,Deployability,update,updated,26,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:135,Integrability,synchroniz,synchronized,135,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:377,Integrability,synchroniz,synchronization,377,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:975,Integrability,synchroniz,synchronization,975,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:1087,Integrability,synchroniz,synchronization,1087,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:1142,Safety,safe,safety,1142,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:299,Security,access,access,299,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:172,Testability,test,test,172,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:543,Testability,test,test,543,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:597,Testability,test,test,597,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:1035,Testability,test,test,1035,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479
https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089:281,Availability,down,downsampler,281,@droazen I profiled a lot and did some unit test experiments and basically there's no difference. Depending on average depths one or the other can be faster by up to 15 seconds per billion sites. I really just wanted to cull the list of open issues and had nothing against the old downsampler code. How about we close this PR *and* close Adam's GATK issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089
https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089:98,Integrability,Depend,Depending,98,@droazen I profiled a lot and did some unit test experiments and basically there's no difference. Depending on average depths one or the other can be faster by up to 15 seconds per billion sites. I really just wanted to cull the list of open issues and had nothing against the old downsampler code. How about we close this PR *and* close Adam's GATK issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089
https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089:44,Testability,test,test,44,@droazen I profiled a lot and did some unit test experiments and basically there's no difference. Depending on average depths one or the other can be faster by up to 15 seconds per billion sites. I really just wanted to cull the list of open issues and had nothing against the old downsampler code. How about we close this PR *and* close Adam's GATK issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089
https://github.com/broadinstitute/gatk/pull/5074#issuecomment-434027785:930,Availability,down,downsampling,930,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5074?src=pr&el=h1) Report; > Merging [#5074](https://codecov.io/gh/broadinstitute/gatk/pull/5074?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/0c39882f4c2290dc664dd8791c5149d5bed330c4?src=pr&el=desc) will **increase** coverage by `<.001%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #5074 +/- ##; ===============================================; + Coverage 86.928% 86.928% +<.001% ; + Complexity 30319 30318 -1 ; ===============================================; Files 1849 1849 ; Lines 140737 140738 +1 ; Branches 15476 15475 -1 ; ===============================================; + Hits 122340 122341 +1 ; Misses 12789 12789 ; Partials 5608 5608; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5074?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/utils/downsampling/ReservoirDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXIuamF2YQ==) | `100% <100%> (ø)` | `18 <3> (-3)` | :arrow_down: |; | [...ils/downsampling/ReservoirDownsamplerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXJVbml0VGVzdC5qYXZh) | `77.049% <100%> (ø)` | `10 <2> (ø)` | :arrow_down: |; | [...llbender/utils/downsampling/MutectDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvTXV0ZWN0RG93bnNhbXBsZXIuamF2YQ==) | `68.182% <100%> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...dinstitute/hellbender/utils/MathUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL3Rlc3Qva,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-434027785
https://github.com/broadinstitute/gatk/pull/5074#issuecomment-434027785:1233,Availability,down,downsampling,1233,64dd8791c5149d5bed330c4?src=pr&el=desc) will **increase** coverage by `<.001%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #5074 +/- ##; ===============================================; + Coverage 86.928% 86.928% +<.001% ; + Complexity 30319 30318 -1 ; ===============================================; Files 1849 1849 ; Lines 140737 140738 +1 ; Branches 15476 15475 -1 ; ===============================================; + Hits 122340 122341 +1 ; Misses 12789 12789 ; Partials 5608 5608; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5074?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/utils/downsampling/ReservoirDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXIuamF2YQ==) | `100% <100%> (ø)` | `18 <3> (-3)` | :arrow_down: |; | [...ils/downsampling/ReservoirDownsamplerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXJVbml0VGVzdC5qYXZh) | `77.049% <100%> (ø)` | `10 <2> (ø)` | :arrow_down: |; | [...llbender/utils/downsampling/MutectDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvTXV0ZWN0RG93bnNhbXBsZXIuamF2YQ==) | `68.182% <100%> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...dinstitute/hellbender/utils/MathUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9NYXRoVXRpbHNVbml0VGVzdC5qYXZh) | `92.44% <100%> (+0.071%)` | `145 <2> (+2)` | :arrow_up: |; | [...lbender/utils/locusiterator/SamplePartitioner.java](https://codecov.io/gh/broadinstitute/gatk/pull/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-434027785
https://github.com/broadinstitute/gatk/pull/5074#issuecomment-434027785:1565,Availability,down,downsampling,1565,===========; + Coverage 86.928% 86.928% +<.001% ; + Complexity 30319 30318 -1 ; ===============================================; Files 1849 1849 ; Lines 140737 140738 +1 ; Branches 15476 15475 -1 ; ===============================================; + Hits 122340 122341 +1 ; Misses 12789 12789 ; Partials 5608 5608; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5074?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/utils/downsampling/ReservoirDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXIuamF2YQ==) | `100% <100%> (ø)` | `18 <3> (-3)` | :arrow_down: |; | [...ils/downsampling/ReservoirDownsamplerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXJVbml0VGVzdC5qYXZh) | `77.049% <100%> (ø)` | `10 <2> (ø)` | :arrow_down: |; | [...llbender/utils/downsampling/MutectDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvTXV0ZWN0RG93bnNhbXBsZXIuamF2YQ==) | `68.182% <100%> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...dinstitute/hellbender/utils/MathUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9NYXRoVXRpbHNVbml0VGVzdC5qYXZh) | `92.44% <100%> (+0.071%)` | `145 <2> (+2)` | :arrow_up: |; | [...lbender/utils/locusiterator/SamplePartitioner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5074/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9sb2N1c2l0ZXJhdG9yL1NhbXBsZVBhcnRpdGlvbmVyLmphdmE=) | `94.286% <100%> (ø)` | `11 <0> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-434027785
https://github.com/broadinstitute/gatk/issues/5075#issuecomment-424103872:13,Deployability,update,update,13,Is there any update of this ?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5075#issuecomment-424103872
https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443586548:58,Availability,down,downsampling,58,"@droazen The issue here is that `ReadWalker` doesn't have downsampling, right? It seems like it would be straightforward to downsample the streamed reads in its `traverse` method. Thoughts / am I missing something?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443586548
https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443586548:124,Availability,down,downsample,124,"@droazen The issue here is that `ReadWalker` doesn't have downsampling, right? It seems like it would be straightforward to downsample the streamed reads in its `traverse` method. Thoughts / am I missing something?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443586548
https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443864289:51,Availability,down,downsampling,51,"@davidbenjamin We could easily add in `ReadWalker` downsampling, yes -- it would be simple to add alignment-start-based downsampling like GATK3 ReadWalkers had (and the GATK4 HaplotypeCaller currently has) using a `ReadsDownsamplingIterator` + a `PositionalDownsampler`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443864289
https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443864289:120,Availability,down,downsampling,120,"@davidbenjamin We could easily add in `ReadWalker` downsampling, yes -- it would be simple to add alignment-start-based downsampling like GATK3 ReadWalkers had (and the GATK4 HaplotypeCaller currently has) using a `ReadsDownsamplingIterator` + a `PositionalDownsampler`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443864289
https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443864289:84,Usability,simpl,simple,84,"@davidbenjamin We could easily add in `ReadWalker` downsampling, yes -- it would be simple to add alignment-start-based downsampling like GATK3 ReadWalkers had (and the GATK4 HaplotypeCaller currently has) using a `ReadsDownsamplingIterator` + a `PositionalDownsampler`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5075#issuecomment-443864289
https://github.com/broadinstitute/gatk/issues/5079#issuecomment-409967138:59,Usability,learn,learn,59,"I can do this but first, since it seems like a nice way to learn about the GATK engine, I'll open it up to @TedBrookings @MartonKN @takutosato @meganshand @sjfleming @madduran @dalessioluca.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5079#issuecomment-409967138
https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721:872,Deployability,install,installed,872,"I feel like this is going to be problematic in a different way than what @magicDGS is mentioning. We expect many versions of gatk to be compatible with the same python environment. Also for performance reasons we want to start avoid rebuilding the conda environment on every push and bake it into the base docker instead. This change means we definitely have to build it every time. . It feels like we need something more sophisticated. Instead of stamping the conda environment with the gatk version that matches it, maybe we should be stamping the gatk jar and the conda environment with some version based on the conda.env? Maybe we can do something like taking the md5 of the conda.yml and pushing that into both the jar manifest and the conda environment in some way? I'm guessing this scheme has an issue with the actual python code in the gatk since I think that's installed with conda as well? I'd really like to be able to preinstall the various dependencies though and then only update the code that's part of the gatk.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721
https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721:989,Deployability,update,update,989,"I feel like this is going to be problematic in a different way than what @magicDGS is mentioning. We expect many versions of gatk to be compatible with the same python environment. Also for performance reasons we want to start avoid rebuilding the conda environment on every push and bake it into the base docker instead. This change means we definitely have to build it every time. . It feels like we need something more sophisticated. Instead of stamping the conda environment with the gatk version that matches it, maybe we should be stamping the gatk jar and the conda environment with some version based on the conda.env? Maybe we can do something like taking the md5 of the conda.yml and pushing that into both the jar manifest and the conda environment in some way? I'm guessing this scheme has an issue with the actual python code in the gatk since I think that's installed with conda as well? I'd really like to be able to preinstall the various dependencies though and then only update the code that's part of the gatk.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721
https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721:955,Integrability,depend,dependencies,955,"I feel like this is going to be problematic in a different way than what @magicDGS is mentioning. We expect many versions of gatk to be compatible with the same python environment. Also for performance reasons we want to start avoid rebuilding the conda environment on every push and bake it into the base docker instead. This change means we definitely have to build it every time. . It feels like we need something more sophisticated. Instead of stamping the conda environment with the gatk version that matches it, maybe we should be stamping the gatk jar and the conda environment with some version based on the conda.env? Maybe we can do something like taking the md5 of the conda.yml and pushing that into both the jar manifest and the conda environment in some way? I'm guessing this scheme has an issue with the actual python code in the gatk since I think that's installed with conda as well? I'd really like to be able to preinstall the various dependencies though and then only update the code that's part of the gatk.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721
https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721:190,Performance,perform,performance,190,"I feel like this is going to be problematic in a different way than what @magicDGS is mentioning. We expect many versions of gatk to be compatible with the same python environment. Also for performance reasons we want to start avoid rebuilding the conda environment on every push and bake it into the base docker instead. This change means we definitely have to build it every time. . It feels like we need something more sophisticated. Instead of stamping the conda environment with the gatk version that matches it, maybe we should be stamping the gatk jar and the conda environment with some version based on the conda.env? Maybe we can do something like taking the md5 of the conda.yml and pushing that into both the jar manifest and the conda environment in some way? I'm guessing this scheme has an issue with the actual python code in the gatk since I think that's installed with conda as well? I'd really like to be able to preinstall the various dependencies though and then only update the code that's part of the gatk.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721
https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721:227,Safety,avoid,avoid,227,"I feel like this is going to be problematic in a different way than what @magicDGS is mentioning. We expect many versions of gatk to be compatible with the same python environment. Also for performance reasons we want to start avoid rebuilding the conda environment on every push and bake it into the base docker instead. This change means we definitely have to build it every time. . It feels like we need something more sophisticated. Instead of stamping the conda environment with the gatk version that matches it, maybe we should be stamping the gatk jar and the conda environment with some version based on the conda.env? Maybe we can do something like taking the md5 of the conda.yml and pushing that into both the jar manifest and the conda environment in some way? I'm guessing this scheme has an issue with the actual python code in the gatk since I think that's installed with conda as well? I'd really like to be able to preinstall the various dependencies though and then only update the code that's part of the gatk.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411214721
https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411290953:668,Availability,down,downstream,668,"@lbergelson - I did not think about that, but as you said it might be a problem. My 2 cents for the md5 proposal is: what will happen if people install the python requirements without a conda environment? If I understood correctly how the GATK python executor works, the package version that should be checked should be the one in [src/main/python/org/broadinstitute/hellbender/gatktool/_version.py](https://github.com/broadinstitute/gatk/blob/master/src/main/python/org/broadinstitute/hellbender/gatktool/_version.py) - the manifest can include a `gatk-tool-Version` entry that is populated from the previous file and that will fix @lbergelson's comment and also for downstream toolkits (althought populating the manifest entries might be difficult). Something better for downstream toolkits will be to create a `gatk.properties` file with entries for both the GATK-jar version and gatktool-python version; it can be easily parsed by gradle to populate the values. Maybe this is also in-line with making gatk4 a multi-module project (https://github.com/broadinstitute/gatk/issues/3900), to handle specific versioning issues in a module-wise way.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411290953
https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411290953:773,Availability,down,downstream,773,"@lbergelson - I did not think about that, but as you said it might be a problem. My 2 cents for the md5 proposal is: what will happen if people install the python requirements without a conda environment? If I understood correctly how the GATK python executor works, the package version that should be checked should be the one in [src/main/python/org/broadinstitute/hellbender/gatktool/_version.py](https://github.com/broadinstitute/gatk/blob/master/src/main/python/org/broadinstitute/hellbender/gatktool/_version.py) - the manifest can include a `gatk-tool-Version` entry that is populated from the previous file and that will fix @lbergelson's comment and also for downstream toolkits (althought populating the manifest entries might be difficult). Something better for downstream toolkits will be to create a `gatk.properties` file with entries for both the GATK-jar version and gatktool-python version; it can be easily parsed by gradle to populate the values. Maybe this is also in-line with making gatk4 a multi-module project (https://github.com/broadinstitute/gatk/issues/3900), to handle specific versioning issues in a module-wise way.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411290953
https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411290953:144,Deployability,install,install,144,"@lbergelson - I did not think about that, but as you said it might be a problem. My 2 cents for the md5 proposal is: what will happen if people install the python requirements without a conda environment? If I understood correctly how the GATK python executor works, the package version that should be checked should be the one in [src/main/python/org/broadinstitute/hellbender/gatktool/_version.py](https://github.com/broadinstitute/gatk/blob/master/src/main/python/org/broadinstitute/hellbender/gatktool/_version.py) - the manifest can include a `gatk-tool-Version` entry that is populated from the previous file and that will fix @lbergelson's comment and also for downstream toolkits (althought populating the manifest entries might be difficult). Something better for downstream toolkits will be to create a `gatk.properties` file with entries for both the GATK-jar version and gatktool-python version; it can be easily parsed by gradle to populate the values. Maybe this is also in-line with making gatk4 a multi-module project (https://github.com/broadinstitute/gatk/issues/3900), to handle specific versioning issues in a module-wise way.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5081#issuecomment-411290953
https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867:3741,Energy Efficiency,Power,PowerCalculationUtils,3741,| `86.667% <83.333%> (-2.222%)` | `4 <1> (+1)` | |; | [...bender/tools/walkers/annotator/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9SZWZlcmVuY2VCYXNlcy5qYXZh) | `87.5% <0%> (-12.5%)` | `9% <0%> (+4%)` | |; | [...institute/hellbender/utils/test/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRUZXN0VXRpbHMuamF2YQ==) | `94.34% <0%> (-2.803%)` | `5% <0%> (+2%)` | |; | [...itute/hellbender/tools/walkers/mutect/Mutect2.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyLmphdmE=) | `87.273% <0%> (-2.013%)` | `35% <0%> (+17%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `92% <0%> (-1.75%)` | `14% <0%> (+7%)` | |; | [...r/tools/spark/sv/utils/GATKSVVCFUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9HQVRLU1ZWQ0ZVdGlsc1VuaXRUZXN0LmphdmE=) | `91.379% <0%> (-1.644%)` | `18% <0%> (+5%)` | |; | [...ion/basicshortmutpileup/PowerCalculationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9Qb3dlckNhbGN1bGF0aW9uVXRpbHMuamF2YQ==) | `95.122% <0%> (-1.545%)` | `31% <0%> (+13%)` | |; | ... and [81 more](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867
https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867:2542,Testability,test,test,2542,(ø)` | `12 <0> (+1)` | :arrow_up: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `69.948% <71.429%> (+0.056%)` | `51 <1> (+1)` | :arrow_up: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `86.667% <83.333%> (-2.222%)` | `4 <1> (+1)` | |; | [...bender/tools/walkers/annotator/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9SZWZlcmVuY2VCYXNlcy5qYXZh) | `87.5% <0%> (-12.5%)` | `9% <0%> (+4%)` | |; | [...institute/hellbender/utils/test/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRUZXN0VXRpbHMuamF2YQ==) | `94.34% <0%> (-2.803%)` | `5% <0%> (+2%)` | |; | [...itute/hellbender/tools/walkers/mutect/Mutect2.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyLmphdmE=) | `87.273% <0%> (-2.013%)` | `35% <0%> (+17%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `92% <0%> (-1.75%)` | `14% <0%> (+7%)` | |; | [...r/tools/spark/sv/utils/GATKSVVCFUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3Jj,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867
https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867:1272,Usability,Simpl,SimpleCountCollection,1272,1de8?src=pr&el=desc) will **increase** coverage by `0.285%`.; > The diff coverage is `86.667%`. ```diff; @@ Coverage Diff @@; ## master #5082 +/- ##; ===============================================; + Coverage 86.387% 86.672% +0.285% ; - Complexity 28815 29937 +1122 ; ===============================================; Files 1791 1814 +23 ; Lines 133696 138145 +4449 ; Branches 14896 15679 +783 ; ===============================================; + Hits 115496 119733 +4237 ; - Misses 12797 12908 +111 ; - Partials 5403 5504 +101; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5082?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/utils/io/IOUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzVW5pdFRlc3QuamF2YQ==) | `87.248% <100%> (+0.917%)` | `26 <2> (+2)` | :arrow_up: |; | [...ber/formats/collections/SimpleCountCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uLmphdmE=) | `100% <100%> (ø)` | `12 <0> (+1)` | :arrow_up: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `69.948% <71.429%> (+0.056%)` | `51 <1> (+1)` | :arrow_up: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `86.667% <83.333%> (-2.222%)` | `4 <1> (+1)` | |; | [...bender/tools/walkers/annotator/ReferenceBases.java](http,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867
https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867:1886,Usability,Simpl,SimpleCountCollectionUnitTest,1886, Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/utils/io/IOUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzVW5pdFRlc3QuamF2YQ==) | `87.248% <100%> (+0.917%)` | `26 <2> (+2)` | :arrow_up: |; | [...ber/formats/collections/SimpleCountCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uLmphdmE=) | `100% <100%> (ø)` | `12 <0> (+1)` | :arrow_up: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `69.948% <71.429%> (+0.056%)` | `51 <1> (+1)` | :arrow_up: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `86.667% <83.333%> (-2.222%)` | `4 <1> (+1)` | |; | [...bender/tools/walkers/annotator/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9SZWZlcmVuY2VCYXNlcy5qYXZh) | `87.5% <0%> (-12.5%)` | `9% <0%> (+4%)` | |; | [...institute/hellbender/utils/test/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRUZXN0VXRpbHMuamF2YQ==) | `94.34% <0%> (-2.803%)` | `5% <0%> (+2%)` | |; | [...itute/hellbender/tools/walkers/mutect/Mutect2.java](https://codecov.io/gh/broadinstitute/gat,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867
https://github.com/broadinstitute/gatk/issues/5087#issuecomment-411051092:194,Security,validat,validate,194,"@kachulis Thanks for the report. The fix will be slightly complicated by the fact that there is also a (GATK-tool) level arg called `masterSequenceDictionary`. So in the override, we'll want to validate/resolve that argument against the others as well. If you need a short term workaround, you can try disabling on-they-fly indexing (`--create-output-variant-index false`, and then index the output separately using `IndexFeatureFile`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5087#issuecomment-411051092
https://github.com/broadinstitute/gatk/pull/5093#issuecomment-411427321:1233,Deployability,Update,UpdateVCFSequenceDictionary,1233,fe053c62266decf848fdebda56a372ed12704?src=pr&el=desc) will **decrease** coverage by `0.001%`.; > The diff coverage is `90.476%`. ```diff; @@ Coverage Diff @@; ## master #5093 +/- ##; ===============================================; - Coverage 87.037% 87.036% -0.001% ; - Complexity 31728 31735 +7 ; ===============================================; Files 1943 1943 ; Lines 146193 146213 +20 ; Branches 16141 16145 +4 ; ===============================================; + Hits 127242 127258 +16 ; - Misses 13064 13068 +4 ; Partials 5887 5887; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5093?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/engine/VariantWalkerBase.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVmFyaWFudFdhbGtlckJhc2UuamF2YQ==) | `100% <ø> (ø)` | `14 <0> (ø)` | :arrow_down: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9VcGRhdGVWQ0ZTZXF1ZW5jZURpY3Rpb25hcnkuamF2YQ==) | `88.462% <85.714%> (+1.505%)` | `16 <5> (+2)` | :arrow_up: |; | [...ls/UpdateVCFSequenceDictionaryIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9VcGRhdGVWQ0ZTZXF1ZW5jZURpY3Rpb25hcnlJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `92.727% <92.857%> (+0.044%)` | `16 <6> (+7)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/S,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5093#issuecomment-411427321
https://github.com/broadinstitute/gatk/pull/5093#issuecomment-411427321:1559,Deployability,Update,UpdateVCFSequenceDictionaryIntegrationTest,1559,===========================================; Files 1943 1943 ; Lines 146193 146213 +20 ; Branches 16141 16145 +4 ; ===============================================; + Hits 127242 127258 +16 ; - Misses 13064 13068 +4 ; Partials 5887 5887; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5093?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/engine/VariantWalkerBase.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVmFyaWFudFdhbGtlckJhc2UuamF2YQ==) | `100% <ø> (ø)` | `14 <0> (ø)` | :arrow_down: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9VcGRhdGVWQ0ZTZXF1ZW5jZURpY3Rpb25hcnkuamF2YQ==) | `88.462% <85.714%> (+1.505%)` | `16 <5> (+2)` | :arrow_up: |; | [...ls/UpdateVCFSequenceDictionaryIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9VcGRhdGVWQ0ZTZXF1ZW5jZURpY3Rpb25hcnlJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `92.727% <92.857%> (+0.044%)` | `16 <6> (+7)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5093/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5093#issuecomment-411427321
https://github.com/broadinstitute/gatk/pull/5093#issuecomment-417749401:32,Deployability,update,update,32,Answers inline and made a minor update based on review comments. Back to @jonn-smith. Also this branch has conflict now I'll rebase and run test again once we're ready to merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5093#issuecomment-417749401
https://github.com/broadinstitute/gatk/pull/5093#issuecomment-417749401:140,Testability,test,test,140,Answers inline and made a minor update based on review comments. Back to @jonn-smith. Also this branch has conflict now I'll rebase and run test again once we're ready to merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5093#issuecomment-417749401
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411500413:34,Testability,test,tests,34,"@magicDGS I don't think so. Those tests have been failing forever. I think someone finally fixed the bug that was causing the email notifications to not happen. They're useless and annoying though, so I disabled that test... We haven't fixed it in years, so we're unlikely to do so now...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411500413
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411500413:217,Testability,test,test,217,"@magicDGS I don't think so. Those tests have been failing forever. I think someone finally fixed the bug that was causing the email notifications to not happen. They're useless and annoying though, so I disabled that test... We haven't fixed it in years, so we're unlikely to do so now...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411500413
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411500763:19,Usability,feedback,feedback,19,"Ok, thanks for the feedback @lbergelson!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411500763
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:345,Availability,Error,Error,345,"I've also seen UnknownHostException: metadata, which seems like it's probably related. My favorite part about that exception is `This is likely because code is not running on Google Compute Engine.`. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleT",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:356,Availability,Failure,Failure,356,"I've also seen UnknownHostException: metadata, which seems like it's probably related. My favorite part about that exception is `This is likely because code is not running on Google Compute Engine.`. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleT",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:1267,Availability,Error,Error,1267,tReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	... 3 more; Caused by: java.util.concurrent.ExecutionException: org.broadinstitute,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:1278,Availability,Failure,Failure,1278,tReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	... 3 more; Caused by: java.util.concurrent.ExecutionException: org.broadinstitute,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:3498,Availability,error,error,3498,"fe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:602); 	... 8 more; Caused by: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReaderFromPath(GenomicsDBImport.java:640); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$600(GenomicsDBImport.java:593); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	... 3 more; Caused by: htsjdk.tribble.TribbleException$MalformedFeatureFile: Unable to parse header with error: ComputeEngineCredentials cannot find the metadata server. This is likely because code is not running on Google Compute Engine., for input source: gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at htsjdk.tribble.TabixFeatureReader.readHeader(TabixFeatureReader.java:97); 	at htsjdk.tribble.TabixFeatureReader.<init>(TabixFeatureReader.java:82); 	at htsjdk.tribble.AbstractFeatureReader.getFeatureReader(AbstractFeatureReader.java:109); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReaderFromPath(GenomicsDBImport.java:638); 	... 5 more; Caused by: com.google.cloud.storage.StorageException: ComputeEngineCredentials cannot find the metadata server. This is likely because code is not running on Google Compute Engine.; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.Http",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:8104,Integrability,protocol,protocol,8104,tFactory.java:93); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); 	... 24 more; Caused by: java.net.UnknownHostException: metadata; 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.refreshAccessToken(ComputeEngineCredentials.java:104); 	... 34 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:8199,Integrability,protocol,protocol,8199,tFactory.java:93); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); 	... 24 more; Caused by: java.net.UnknownHostException: metadata; 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.refreshAccessToken(ComputeEngineCredentials.java:104); 	... 34 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:8291,Integrability,protocol,protocol,8291,tFactory.java:93); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); 	... 24 more; Caused by: java.net.UnknownHostException: metadata; 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.refreshAccessToken(ComputeEngineCredentials.java:104); 	... 34 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:8382,Integrability,protocol,protocol,8382,tFactory.java:93); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); 	... 24 more; Caused by: java.net.UnknownHostException: metadata; 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.refreshAccessToken(ComputeEngineCredentials.java:104); 	... 34 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:215,Performance,concurren,concurrent,215,"I've also seen UnknownHostException: metadata, which seems like it's probably related. My favorite part about that exception is `This is likely because code is not running on Google Compute Engine.`. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleT",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:692,Performance,concurren,concurrent,692,"I've also seen UnknownHostException: metadata, which seems like it's probably related. My favorite part about that exception is `This is likely because code is not running on Google Compute Engine.`. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleT",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:780,Performance,concurren,concurrent,780,"I've also seen UnknownHostException: metadata, which seems like it's probably related. My favorite part about that exception is `This is likely because code is not running on Google Compute Engine.`. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleT",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:870,Performance,concurren,concurrent,870,"I've also seen UnknownHostException: metadata, which seems like it's probably related. My favorite part about that exception is `This is likely because code is not running on Google Compute Engine.`. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleT",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:959,Performance,concurren,concurrent,959,"I've also seen UnknownHostException: metadata, which seems like it's probably related. My favorite part about that exception is `This is likely because code is not running on Google Compute Engine.`. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleT",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:1044,Performance,concurren,concurrent,1044,ich seems like it's probably related. My favorite part about that exception is `This is likely because code is not running on Google Compute Engine.`. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); 	at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); 	at com.in,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:2151,Performance,concurren,concurrent,2151,; Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	... 3 more; Caused by: java.util.concurrent.ExecutionException: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:602); 	... 8 more; Caused by: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReade,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:2260,Performance,concurren,concurrent,2260,. Error was: Failure while waiting for FeatureReader to initialize with exception: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	... 3 more; Caused by: java.util.concurrent.ExecutionException: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:602); 	... 8 more; Caused by: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReaderFromPath(GenomicsDBImport.java:640); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lam,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:2557,Performance,concurren,concurrent,2557,6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	... 3 more; Caused by: java.util.concurrent.ExecutionException: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:602); 	... 8 more; Caused by: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReaderFromPath(GenomicsDBImport.java:640); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$600(GenomicsDBImport.java:593); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	... 3 more; Caused by: htsjdk.tribble.TribbleException$MalformedFeatureFile: Unable to parse header with error: ComputeEngineCredentials cannot find the metadata server. ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:2622,Performance,concurren,concurrent,2622,bender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:605); 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	... 3 more; Caused by: java.util.concurrent.ExecutionException: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:602); 	... 8 more; Caused by: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReaderFromPath(GenomicsDBImport.java:640); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$600(GenomicsDBImport.java:593); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	... 3 more; Caused by: htsjdk.tribble.TribbleException$MalformedFeatureFile: Unable to parse header with error: ComputeEngineCredentials cannot find the metadata server. This is likely because code is not running on Google Compute Engi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423:3344,Performance,concurren,concurrent,3344,"iled to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$601(GenomicsDBImport.java:602); 	... 8 more; Caused by: org.broadinstitute.hellbender.exceptions.UserException: Failed to create reader from gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReaderFromPath(GenomicsDBImport.java:640); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$600(GenomicsDBImport.java:593); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	... 3 more; Caused by: htsjdk.tribble.TribbleException$MalformedFeatureFile: Unable to parse header with error: ComputeEngineCredentials cannot find the metadata server. This is likely because code is not running on Google Compute Engine., for input source: gs://fc-c64a0fcd-fb30-4a7e-bdc6-3c09a9286941/f6aeb0ce-044a-4b36-a5f0-d3fda62252a5/ReblockGVCF/66c24439-cfeb-4b85-bc02-aefe693177b6/call-GenotypeGVCF/NWD197223.vcf.gz; 	at htsjdk.tribble.TabixFeatureReader.readHeader(TabixFeatureReader.java:97); 	at htsjdk.tribble.TabixFeatureReader.<init>(TabixFeatureReader.java:82); 	at htsjdk.tribble.AbstractFeatureReader.getFeatureReader(AbstractFeatureReader.java:109); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReaderFromPath(GenomicsDBImport.java:638); 	... 5 more; Caused by: com.google.cloud.storage.StorageException: ComputeEngineCredentials cannot find the metadata server. This is likely because code is not running on Goog",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411503423
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420:389,Availability,error,errors,389,"See https://github.com/broadinstitute/gatk/issues/4888, which is an older report for the same issue. As mentioned there, I think we should patch our fork of `google-cloud-java` to do a channel reopen on `UnknownHostException` for now as a quick fix. @jean-philippe-martin is eventually going to add an official configuration mechanism for clients of `google-cloud-java` to customize which errors should trigger a retry/reopen, which should provide a better way to deal with these errors as they crop up without having to modify the NIO library itself.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420:480,Availability,error,errors,480,"See https://github.com/broadinstitute/gatk/issues/4888, which is an older report for the same issue. As mentioned there, I think we should patch our fork of `google-cloud-java` to do a channel reopen on `UnknownHostException` for now as a quick fix. @jean-philippe-martin is eventually going to add an official configuration mechanism for clients of `google-cloud-java` to customize which errors should trigger a retry/reopen, which should provide a better way to deal with these errors as they crop up without having to modify the NIO library itself.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420:139,Deployability,patch,patch,139,"See https://github.com/broadinstitute/gatk/issues/4888, which is an older report for the same issue. As mentioned there, I think we should patch our fork of `google-cloud-java` to do a channel reopen on `UnknownHostException` for now as a quick fix. @jean-philippe-martin is eventually going to add an official configuration mechanism for clients of `google-cloud-java` to customize which errors should trigger a retry/reopen, which should provide a better way to deal with these errors as they crop up without having to modify the NIO library itself.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420:311,Deployability,configurat,configuration,311,"See https://github.com/broadinstitute/gatk/issues/4888, which is an older report for the same issue. As mentioned there, I think we should patch our fork of `google-cloud-java` to do a channel reopen on `UnknownHostException` for now as a quick fix. @jean-philippe-martin is eventually going to add an official configuration mechanism for clients of `google-cloud-java` to customize which errors should trigger a retry/reopen, which should provide a better way to deal with these errors as they crop up without having to modify the NIO library itself.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420:311,Modifiability,config,configuration,311,"See https://github.com/broadinstitute/gatk/issues/4888, which is an older report for the same issue. As mentioned there, I think we should patch our fork of `google-cloud-java` to do a channel reopen on `UnknownHostException` for now as a quick fix. @jean-philippe-martin is eventually going to add an official configuration mechanism for clients of `google-cloud-java` to customize which errors should trigger a retry/reopen, which should provide a better way to deal with these errors as they crop up without having to modify the NIO library itself.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412134420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:43,Availability,error,error,43,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:548,Availability,Error,Error,548,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:559,Availability,Failure,Failure,559,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:1325,Availability,Error,Error,1325,utes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); ... 3 more; Caused by: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.FutureTask.report(FutureTas,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:1336,Availability,Failure,Failure,1336,utes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); ... 3 more; Caused by: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.FutureTask.report(FutureTas,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:77,Deployability,patch,patch,77,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:146,Deployability,patch,patch,146,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:6756,Integrability,protocol,protocol,6756,buildRequest(HttpRequestFactory.java:93); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); ... 17 more; Caused by: java.net.UnknownHostException: metadata; at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); at sun.net.www.http.HttpClient.New(HttpClient.java:308); at sun.net.www.http.HttpClient.New(HttpClient.java:326); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.refreshAccessToken(ComputeEngineCredentials.java:104); ... 27 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:6850,Integrability,protocol,protocol,6850,buildRequest(HttpRequestFactory.java:93); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); ... 17 more; Caused by: java.net.UnknownHostException: metadata; at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); at sun.net.www.http.HttpClient.New(HttpClient.java:308); at sun.net.www.http.HttpClient.New(HttpClient.java:326); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.refreshAccessToken(ComputeEngineCredentials.java:104); ... 27 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:6941,Integrability,protocol,protocol,6941,buildRequest(HttpRequestFactory.java:93); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); ... 17 more; Caused by: java.net.UnknownHostException: metadata; at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); at sun.net.www.http.HttpClient.New(HttpClient.java:308); at sun.net.www.http.HttpClient.New(HttpClient.java:326); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.refreshAccessToken(ComputeEngineCredentials.java:104); ... 27 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:7031,Integrability,protocol,protocol,7031,buildRequest(HttpRequestFactory.java:93); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); ... 17 more; Caused by: java.net.UnknownHostException: metadata; at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); at sun.net.www.http.HttpClient.New(HttpClient.java:308); at sun.net.www.http.HttpClient.New(HttpClient.java:326); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.refreshAccessToken(ComputeEngineCredentials.java:104); ... 27 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:418,Performance,concurren,concurrent,418,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:755,Performance,concurren,concurrent,755,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:842,Performance,concurren,concurrent,842,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:931,Performance,concurren,concurrent,931,"Reopening -- @ldgauthier reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:1019,Performance,concurren,concurrent,1019," reports that this error still occurs even after the patch in https://github.com/broadinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(Geno",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:1103,Performance,concurren,concurrent,1103,"adinstitute/gatk/pull/5099. With that patch, we are now retrying on `UnknownHostException`, but the retries are all failing: . ```; [August 14, 2018 7:09:18 AM UTC] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 896.64 minutes.; Runtime.totalMemory()=3966238720; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:273); at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:280); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1592); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); at java.util.concurrent.CompletableFuture$AsyncSupply.run(",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:2064,Performance,concurren,concurrent,2064,Executor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); ... 3 more; Caused by: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:602); ... 8 more; Caused by: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleReopenForStorageException(CloudStorageRetryHandler.java:124); at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleStorageException(CloudStorageRetryHandler.java:94); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSyst,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:2172,Performance,concurren,concurrent,2172,java.lang.Thread.run(Thread.java:745); Caused by: org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); ... 3 more; Caused by: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:602); ... 8 more; Caused by: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleReopenForStorageException(CloudStorageRetryHandler.java:124); at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleStorageException(CloudStorageRetryHandler.java:94); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:621); at java.nio.file.Files.exists(Files.java:2385); at htsjdk.tribble.util.ParsingUtils.re,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:2329,Performance,concurren,concurrent,2329,: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); ... 3 more; Caused by: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:602); ... 8 more; Caused by: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleReopenForStorageException(CloudStorageRetryHandler.java:124); at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleStorageException(CloudStorageRetryHandler.java:94); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:621); at java.nio.file.Files.exists(Files.java:2385); at htsjdk.tribble.util.ParsingUtils.resourceExists(ParsingUtils.java:419); at htsjdk.tribble.AbstractFeatureReader.isTabix(AbstractFeatureReader.java:222); at htsjdk.tribble.AbstractFeatureReader,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:2393,Performance,concurren,concurrent,2393,eption: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:605); at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getFeatureReadersInParallel(GenomicsDBImport.java:600); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.createSampleToReaderMap(GenomicsDBImport.java:491); at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:602); at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); ... 3 more; Caused by: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$614(GenomicsDBImport.java:602); ... 8 more; Caused by: com.google.cloud.storage.StorageException: All 20 reopens failed. Waited a total of 1918000 ms between attempts; at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleReopenForStorageException(CloudStorageRetryHandler.java:124); at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleStorageException(CloudStorageRetryHandler.java:94); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:621); at java.nio.file.Files.exists(Files.java:2385); at htsjdk.tribble.util.ParsingUtils.resourceExists(ParsingUtils.java:419); at htsjdk.tribble.AbstractFeatureReader.isTabix(AbstractFeatureReader.java:222); at htsjdk.tribble.AbstractFeatureReader$ComponentMethods.isTabix(AbstractFeatureReader.java:228); at ht,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420:3744,Performance,concurren,concurrent,3744,o.CloudStorageRetryHandler.handleReopenForStorageException(CloudStorageRetryHandler.java:124); at com.google.cloud.storage.contrib.nio.CloudStorageRetryHandler.handleStorageException(CloudStorageRetryHandler.java:94); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:621); at java.nio.file.Files.exists(Files.java:2385); at htsjdk.tribble.util.ParsingUtils.resourceExists(ParsingUtils.java:419); at htsjdk.tribble.AbstractFeatureReader.isTabix(AbstractFeatureReader.java:222); at htsjdk.tribble.AbstractFeatureReader$ComponentMethods.isTabix(AbstractFeatureReader.java:228); at htsjdk.tribble.AbstractFeatureReader.getFeatureReader(AbstractFeatureReader.java:106); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.getReaderFromPath(GenomicsDBImport.java:638); at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.lambda$getFeatureReadersInParallel$613(GenomicsDBImport.java:593); at java.util.concurrent.FutureTask.run(FutureTask.java:266); ... 3 more; Caused by: com.google.cloud.storage.StorageException: ComputeEngineCredentials cannot find the metadata server. This is likely because code is not running on Google Compute Engine.; at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:335); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:191); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:188); at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:94); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:54); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:188); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:614); ... 11 more; Caused by: java.io.IOException: ComputeEngineCredentials cannot find the ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412904420
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931:46,Availability,error,error,46,"@jean-philippe-martin Can you comment on this error with your thoughts? Despite now doing a channel reopen on `UnknownHostException` in our fork of the NIO library, all reopens are failing, which implies that this error can't be recovered from via a simple retry. Could there be something wrong in our authentication setup?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931:214,Availability,error,error,214,"@jean-philippe-martin Can you comment on this error with your thoughts? Despite now doing a channel reopen on `UnknownHostException` in our fork of the NIO library, all reopens are failing, which implies that this error can't be recovered from via a simple retry. Could there be something wrong in our authentication setup?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931:229,Availability,recover,recovered,229,"@jean-philippe-martin Can you comment on this error with your thoughts? Despite now doing a channel reopen on `UnknownHostException` in our fork of the NIO library, all reopens are failing, which implies that this error can't be recovered from via a simple retry. Could there be something wrong in our authentication setup?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931:229,Safety,recover,recovered,229,"@jean-philippe-martin Can you comment on this error with your thoughts? Despite now doing a channel reopen on `UnknownHostException` in our fork of the NIO library, all reopens are failing, which implies that this error can't be recovered from via a simple retry. Could there be something wrong in our authentication setup?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931:302,Security,authenticat,authentication,302,"@jean-philippe-martin Can you comment on this error with your thoughts? Despite now doing a channel reopen on `UnknownHostException` in our fork of the NIO library, all reopens are failing, which implies that this error can't be recovered from via a simple retry. Could there be something wrong in our authentication setup?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931:250,Usability,simpl,simple,250,"@jean-philippe-martin Can you comment on this error with your thoughts? Despite now doing a channel reopen on `UnknownHostException` in our fork of the NIO library, all reopens are failing, which implies that this error can't be recovered from via a simple retry. Could there be something wrong in our authentication setup?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412906931
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412917164:371,Availability,error,error,371,"More info from @ldgauthier:. ```; I’ve only been trying the same GenomicsDBImport over and over again. I estimate it to take about; 30 hours if it’s ever successful. The exception happens in different batches every time. Sam F. ; said he saw the exception too but he could eventually resubmit his way through it. His jobs are; shorter running.; ```. So it seems like the error is nondeterministic, but can't be recovered from within the same VM instance / process.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412917164
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412917164:411,Availability,recover,recovered,411,"More info from @ldgauthier:. ```; I’ve only been trying the same GenomicsDBImport over and over again. I estimate it to take about; 30 hours if it’s ever successful. The exception happens in different batches every time. Sam F. ; said he saw the exception too but he could eventually resubmit his way through it. His jobs are; shorter running.; ```. So it seems like the error is nondeterministic, but can't be recovered from within the same VM instance / process.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412917164
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412917164:411,Safety,recover,recovered,411,"More info from @ldgauthier:. ```; I’ve only been trying the same GenomicsDBImport over and over again. I estimate it to take about; 30 hours if it’s ever successful. The exception happens in different batches every time. Sam F. ; said he saw the exception too but he could eventually resubmit his way through it. His jobs are; shorter running.; ```. So it seems like the error is nondeterministic, but can't be recovered from within the same VM instance / process.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412917164
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932:15,Availability,error,error,15,"@ldgauthier 's error sounds like what I saw before when trying to run the joint genotyping pipeline. When I spoke about it with @ruchim she said that based on some experiments she did and conversations with the production team she thought it was a symptom VM's running under PAPI; Slack excerpt:. ```; rmunshi [9:59 AM]; Last night I reached out to the Pipelines API folks; I ran a script that outputs the external IP address of the VM every 5 mins; and I see that after about ~17 hours, the request fails with. `curl: (6) Could not resolve host: metadata.google.internal` (edited); ```. So we decided that there's an effective limit of about 17 hours for VMs managed by PAPI at which point either the network configuration or metadata process server on the VMs changes, causing these failures. I worked around the issue by increasing my scatter interval count such that no tasks took longer than the ~17 hours that seems to be the critical point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932:785,Availability,failure,failures,785,"@ldgauthier 's error sounds like what I saw before when trying to run the joint genotyping pipeline. When I spoke about it with @ruchim she said that based on some experiments she did and conversations with the production team she thought it was a symptom VM's running under PAPI; Slack excerpt:. ```; rmunshi [9:59 AM]; Last night I reached out to the Pipelines API folks; I ran a script that outputs the external IP address of the VM every 5 mins; and I see that after about ~17 hours, the request fails with. `curl: (6) Could not resolve host: metadata.google.internal` (edited); ```. So we decided that there's an effective limit of about 17 hours for VMs managed by PAPI at which point either the network configuration or metadata process server on the VMs changes, causing these failures. I worked around the issue by increasing my scatter interval count such that no tasks took longer than the ~17 hours that seems to be the critical point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932:91,Deployability,pipeline,pipeline,91,"@ldgauthier 's error sounds like what I saw before when trying to run the joint genotyping pipeline. When I spoke about it with @ruchim she said that based on some experiments she did and conversations with the production team she thought it was a symptom VM's running under PAPI; Slack excerpt:. ```; rmunshi [9:59 AM]; Last night I reached out to the Pipelines API folks; I ran a script that outputs the external IP address of the VM every 5 mins; and I see that after about ~17 hours, the request fails with. `curl: (6) Could not resolve host: metadata.google.internal` (edited); ```. So we decided that there's an effective limit of about 17 hours for VMs managed by PAPI at which point either the network configuration or metadata process server on the VMs changes, causing these failures. I worked around the issue by increasing my scatter interval count such that no tasks took longer than the ~17 hours that seems to be the critical point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932:353,Deployability,Pipeline,Pipelines,353,"@ldgauthier 's error sounds like what I saw before when trying to run the joint genotyping pipeline. When I spoke about it with @ruchim she said that based on some experiments she did and conversations with the production team she thought it was a symptom VM's running under PAPI; Slack excerpt:. ```; rmunshi [9:59 AM]; Last night I reached out to the Pipelines API folks; I ran a script that outputs the external IP address of the VM every 5 mins; and I see that after about ~17 hours, the request fails with. `curl: (6) Could not resolve host: metadata.google.internal` (edited); ```. So we decided that there's an effective limit of about 17 hours for VMs managed by PAPI at which point either the network configuration or metadata process server on the VMs changes, causing these failures. I worked around the issue by increasing my scatter interval count such that no tasks took longer than the ~17 hours that seems to be the critical point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932:710,Deployability,configurat,configuration,710,"@ldgauthier 's error sounds like what I saw before when trying to run the joint genotyping pipeline. When I spoke about it with @ruchim she said that based on some experiments she did and conversations with the production team she thought it was a symptom VM's running under PAPI; Slack excerpt:. ```; rmunshi [9:59 AM]; Last night I reached out to the Pipelines API folks; I ran a script that outputs the external IP address of the VM every 5 mins; and I see that after about ~17 hours, the request fails with. `curl: (6) Could not resolve host: metadata.google.internal` (edited); ```. So we decided that there's an effective limit of about 17 hours for VMs managed by PAPI at which point either the network configuration or metadata process server on the VMs changes, causing these failures. I worked around the issue by increasing my scatter interval count such that no tasks took longer than the ~17 hours that seems to be the critical point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932:710,Modifiability,config,configuration,710,"@ldgauthier 's error sounds like what I saw before when trying to run the joint genotyping pipeline. When I spoke about it with @ruchim she said that based on some experiments she did and conversations with the production team she thought it was a symptom VM's running under PAPI; Slack excerpt:. ```; rmunshi [9:59 AM]; Last night I reached out to the Pipelines API folks; I ran a script that outputs the external IP address of the VM every 5 mins; and I see that after about ~17 hours, the request fails with. `curl: (6) Could not resolve host: metadata.google.internal` (edited); ```. So we decided that there's an effective limit of about 17 hours for VMs managed by PAPI at which point either the network configuration or metadata process server on the VMs changes, causing these failures. I worked around the issue by increasing my scatter interval count such that no tasks took longer than the ~17 hours that seems to be the critical point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-412938932
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-415867155:23,Deployability,patch,patch,23,This was resolved by a patch to PAPIv1 just released by Google (see https://partnerissuetracker.corp.google.com/issues/112704449). Closing!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-415867155
https://github.com/broadinstitute/gatk/issues/5094#issuecomment-415867155:44,Deployability,release,released,44,This was resolved by a patch to PAPIv1 just released by Google (see https://partnerissuetracker.corp.google.com/issues/112704449). Closing!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-415867155
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-412152056:233,Testability,test,test,233,Would it be possible to terminate the python process first and then check stderr? That seems like by the time python terminates you'd be guaranteed to have flushed to stderr? If that makes no sense I think it's better to remove this test like you're suggesting than have it fail annoyingly at random.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-412152056
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:356,Availability,error,error,356,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:428,Deployability,install,installed,428,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:561,Deployability,integrat,integration,561,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:866,Deployability,integrat,integration,866,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:305,Integrability,depend,dependent,305,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:336,Integrability,synchroniz,synchronization,336,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:561,Integrability,integrat,integration,561,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:866,Integrability,integrat,integration,866,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:270,Performance,race condition,race condition,270,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:362,Safety,detect,detection,362,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:553,Testability,log,logging,553,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:858,Testability,log,logging,858,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698
https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413576167:76,Testability,test,test,76,That was a long winded way of saying I think we should just get rid of this test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413576167
https://github.com/broadinstitute/gatk/pull/5099#issuecomment-412166037:59,Testability,test,tests,59,@lbergelson please review. Note that this branch will fail tests until the new maven artifact is published later today. I'll re-run tests at that time.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5099#issuecomment-412166037
https://github.com/broadinstitute/gatk/pull/5099#issuecomment-412166037:132,Testability,test,tests,132,@lbergelson please review. Note that this branch will fail tests until the new maven artifact is published later today. I'll re-run tests at that time.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5099#issuecomment-412166037
https://github.com/broadinstitute/gatk/pull/5099#issuecomment-412516013:0,Testability,Test,Tests,0,Tests passed -- merging!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5099#issuecomment-412516013
https://github.com/broadinstitute/gatk/issues/5101#issuecomment-412996579:322,Modifiability,variab,variable,322,"@lucidtronix . Thanks for the explanation. Here are a few lines with the FILTER and INFO fields. Let me know if you need a larger subset. I would guess that since DP is the total depth for 5000 subjects instead of just 1 that would likely be the culprit. Maybe average depth across samples could be used for a replacement variable when there are multiple samples. . ```; VQSRTrancheSNP99.70to99.80 AC=8;AF=0.0008391;AN=9532;BaseQRankSum=-0.915;CNN_1D=-16.118;ClippingRankSum=0;DP=177452;ExcessHet=3.0267;FS=6.543;InbreedingCoeff=-0.002;MLEAC=8;MLEAF=0.0008391;MQ=71.41;MQRankSum=0.005;NEGATIVE_TRAIN_SITE;QD=10.23;ReadPosRankSum=0.483;SOR=1.039;VQSLOD=-3.08;culprit=MQRankSum; VQSRTrancheSNP99.70to99.80 AC=62,81;AF=0.006477,0.008462;AN=9570;BaseQRankSum=0.398;CNN_1D=-16.118;ClippingRankSum=0;DP=196764;ExcessHet=2.802;FS=0;InbreedingCoeff=-0.0026;MLEAC=61,67;MLEAF=0.006373,0.007;MQ=68.23;MQRankSum=-0.961;NEGATIVE_TRAIN_SITE;QD=3.96;ReadPosRankSum=-0.318;SOR=0.666;VQSLOD=-5.206;culprit=MQRankSum; VQSRTrancheSNP99.70to99.80 AC=117;AF=0.012;AN=9574;BaseQRankSum=0;CNN_1D=-16.118;ClippingRankSum=0;DP=203481;ExcessHet=1.8042;FS=0.593;InbreedingCoeff=0.0034;MLEAC=117;MLEAF=0.012;MQ=55.51;MQRankSum=1.32;NEGATIVE_TRAIN_SITE;QD=6.25;ReadPosRankSum=0.087;SOR=0.642;VQSLOD=-5.629;culprit=MQRankSum; VQSRTrancheSNP99.70to99.80 AC=21;AF=0.002193;AN=9574;BaseQRankSum=0;CNN_1D=-16.118;ClippingRankSum=0;DP=209533;ExcessHet=3.1253;FS=0;InbreedingCoeff=-0.0027;MLEAC=21;MLEAF=0.002193;MQ=57.8;MQRankSum=1.19;NEGATIVE_TRAIN_SITE;QD=4.35;ReadPosRankSum=-0.075;SOR=0.695;VQSLOD=-5.57;culprit=DP; VQSRTrancheSNP99.80to99.90 AC=1;AF=0.0001044;AN=9572;BaseQRankSum=-2.379;CNN_1D=-16.118;ClippingRankSum=0;DP=212253;ExcessHet=3.0108;FS=0;InbreedingCoeff=-0.0003;MLEAC=1;MLEAF=0.0001044;MQ=186.25;MQRankSum=0.084;QD=0.28;ReadPosRankSum=-0.743;SOR=0.798;VQSLOD=-17.7;culprit=MQ; VQSRTrancheSNP99.80to99.90 AC=5214;AF=0.545;AN=9570;BaseQRankSum=-1.071;CNN_1D=-16.118;ClippingRankSum=0;DP=276543;ExcessHet=160;FS=10.66;",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5101#issuecomment-412996579
https://github.com/broadinstitute/gatk/pull/5102#issuecomment-412629096:11,Testability,test,tests,11,Merge once tests pass :+1:,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5102#issuecomment-412629096
https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412896366:18,Performance,load,loads,18,"`KnownSitesCache` loads a VCF file and turns it into an in-memory `IntervalsSkipList`, which is shared by all tasks in the same VM. The Spark job stage that uses `KnownSitesCache` in BQSR takes 6 minutes to load the file into memory, but then the stage takes another 4 minutes to complete (total 10 minutes, stage name `treeAggregate at BaseRecalibratorSparkFn.java:39`). Another approach is to uses Spark's `--files` option to share the VCF file with all executors, then use the file as a `FeatureDataSource` directly. I did this using a `.vcf.gz` file and the accompanying `.vcf.gz.tbi`. See the code in this branch: https://github.com/broadinstitute/gatk/tree/tw_known_sites_perf_files. This however was slower, the same stage took 39 minutes to complete, compared to 10. This is probably because reading from a file is much slower than using an in-memory lookup to find variants overlapping each read.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412896366
https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412896366:207,Performance,load,load,207,"`KnownSitesCache` loads a VCF file and turns it into an in-memory `IntervalsSkipList`, which is shared by all tasks in the same VM. The Spark job stage that uses `KnownSitesCache` in BQSR takes 6 minutes to load the file into memory, but then the stage takes another 4 minutes to complete (total 10 minutes, stage name `treeAggregate at BaseRecalibratorSparkFn.java:39`). Another approach is to uses Spark's `--files` option to share the VCF file with all executors, then use the file as a `FeatureDataSource` directly. I did this using a `.vcf.gz` file and the accompanying `.vcf.gz.tbi`. See the code in this branch: https://github.com/broadinstitute/gatk/tree/tw_known_sites_perf_files. This however was slower, the same stage took 39 minutes to complete, compared to 10. This is probably because reading from a file is much slower than using an in-memory lookup to find variants overlapping each read.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412896366
https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412897602:196,Energy Efficiency,reduce,reduced,196,"I wondered how much of the time was due to parsing the VCF file. To test this, I used Kryo to serialize the `IntervalsSkipList` to a binary blob, then tried loading the binary blob directly. This reduced the load time from around 6 minutes to 4.7 minutes - so some speed improvement, but not a lot. See https://github.com/broadinstitute/gatk/tree/tw_known_sites_perf_kryo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412897602
https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412897602:157,Performance,load,loading,157,"I wondered how much of the time was due to parsing the VCF file. To test this, I used Kryo to serialize the `IntervalsSkipList` to a binary blob, then tried loading the binary blob directly. This reduced the load time from around 6 minutes to 4.7 minutes - so some speed improvement, but not a lot. See https://github.com/broadinstitute/gatk/tree/tw_known_sites_perf_kryo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412897602
https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412897602:208,Performance,load,load,208,"I wondered how much of the time was due to parsing the VCF file. To test this, I used Kryo to serialize the `IntervalsSkipList` to a binary blob, then tried loading the binary blob directly. This reduced the load time from around 6 minutes to 4.7 minutes - so some speed improvement, but not a lot. See https://github.com/broadinstitute/gatk/tree/tw_known_sites_perf_kryo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412897602
https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412897602:68,Testability,test,test,68,"I wondered how much of the time was due to parsing the VCF file. To test this, I used Kryo to serialize the `IntervalsSkipList` to a binary blob, then tried loading the binary blob directly. This reduced the load time from around 6 minutes to 4.7 minutes - so some speed improvement, but not a lot. See https://github.com/broadinstitute/gatk/tree/tw_known_sites_perf_kryo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412897602
https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412917472:455,Performance,cache,cache,455,"@tomwhite In your `--files` branch, you might try enabling feature caching on the `FeatureDataSource` (assuming your sequential queries are forward-only, increasing). Without that it will execute a separate index query for each `query(interval)` to find the overlaps. If you pass a non-zero `queryLookaheadBases` value (we usually use 100000) to the FeatureDataSource constructor in `BroadcastJoinReadsWithVariants`, it will use lookahead and the feature cache to satisfy queries - I would expect it to speed it up a lot.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5103#issuecomment-412917472
https://github.com/broadinstitute/gatk/issues/5103#issuecomment-414678660:57,Availability,down,down,57,I can report that this worked well - the BQSR stage came down in time from 10 min to 4.7 min - a very significant improvement. I'm going to look at doing something similar with the reference.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5103#issuecomment-414678660
https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465:94,Safety,risk,risk,94,"@kvinter1 In future, it's a good idea to wait for tests to pass before merging, otherwise you risk the potential penalty of having to buy the team beer if test fail once it's in master. Doc changes are pretty low risk, but you never know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465
https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465:213,Safety,risk,risk,213,"@kvinter1 In future, it's a good idea to wait for tests to pass before merging, otherwise you risk the potential penalty of having to buy the team beer if test fail once it's in master. Doc changes are pretty low risk, but you never know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465
https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465:50,Testability,test,tests,50,"@kvinter1 In future, it's a good idea to wait for tests to pass before merging, otherwise you risk the potential penalty of having to buy the team beer if test fail once it's in master. Doc changes are pretty low risk, but you never know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465
https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465:155,Testability,test,test,155,"@kvinter1 In future, it's a good idea to wait for tests to pass before merging, otherwise you risk the potential penalty of having to buy the team beer if test fail once it's in master. Doc changes are pretty low risk, but you never know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465
https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412917430:294,Safety,risk,risk,294,"Thanks!. Okay I will make sure to do that in the future. Thanks for the help!. On Tue, Aug 14, 2018 at 11:30 AM, Louis Bergelson <notifications@github.com>; wrote:. > @kvinter1 <https://github.com/kvinter1> In future, it's a good idea to; > wait for tests to pass before merging, otherwise you risk the potential; > penalty of having to buy the team beer if test fail once it's in master.; > Doc changes are pretty low risk, but you never know.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AoMkWKCRyhFXvfzSUI7C26_4qRZPivIoks5uQu0NgaJpZM4V8n05>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412917430
https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412917430:419,Safety,risk,risk,419,"Thanks!. Okay I will make sure to do that in the future. Thanks for the help!. On Tue, Aug 14, 2018 at 11:30 AM, Louis Bergelson <notifications@github.com>; wrote:. > @kvinter1 <https://github.com/kvinter1> In future, it's a good idea to; > wait for tests to pass before merging, otherwise you risk the potential; > penalty of having to buy the team beer if test fail once it's in master.; > Doc changes are pretty low risk, but you never know.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AoMkWKCRyhFXvfzSUI7C26_4qRZPivIoks5uQu0NgaJpZM4V8n05>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412917430
https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412917430:250,Testability,test,tests,250,"Thanks!. Okay I will make sure to do that in the future. Thanks for the help!. On Tue, Aug 14, 2018 at 11:30 AM, Louis Bergelson <notifications@github.com>; wrote:. > @kvinter1 <https://github.com/kvinter1> In future, it's a good idea to; > wait for tests to pass before merging, otherwise you risk the potential; > penalty of having to buy the team beer if test fail once it's in master.; > Doc changes are pretty low risk, but you never know.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AoMkWKCRyhFXvfzSUI7C26_4qRZPivIoks5uQu0NgaJpZM4V8n05>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412917430
https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412917430:358,Testability,test,test,358,"Thanks!. Okay I will make sure to do that in the future. Thanks for the help!. On Tue, Aug 14, 2018 at 11:30 AM, Louis Bergelson <notifications@github.com>; wrote:. > @kvinter1 <https://github.com/kvinter1> In future, it's a good idea to; > wait for tests to pass before merging, otherwise you risk the potential; > penalty of having to buy the team beer if test fail once it's in master.; > Doc changes are pretty low risk, but you never know.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AoMkWKCRyhFXvfzSUI7C26_4qRZPivIoks5uQu0NgaJpZM4V8n05>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412917430
https://github.com/broadinstitute/gatk/pull/5106#issuecomment-412982588:2620,Usability,Simpl,SimpleCountCollectionUnitTest,2620,iderForPik3caTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvRGF0YVByb3ZpZGVyRm9yUGlrM2NhVGVzdERhdGEuamF2YQ==) | `98.684% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...dataSources/gencode/GencodeFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvR2VuY29kZUZ1bmNvdGF0aW9uRmFjdG9yeS5qYXZh) | `83.871% <100%> (+0.487%)` | `166 <6> (+5)` | :arrow_up: |; | [...e/hellbender/tools/funcotator/FuncotatorUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JVdGlscy5qYXZh) | `80.485% <90%> (+0.539%)` | `175 <6> (+7)` | :arrow_up: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `83.784% <0%> (-5.105%)` | `4% <0%> (+1%)` | |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [...ber/formats/collections/SimpleCountCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uLmphdmE=) | `100% <0%> (ø)` | `12% <0%> (+1%)` | :arrow_up: |; | [...institute/hellbender/utils/io/IOUtilsUnitTest.java](https,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5106#issuecomment-412982588
https://github.com/broadinstitute/gatk/pull/5106#issuecomment-412982588:3260,Usability,Simpl,SimpleCountCollection,3260,gencode/GencodeFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvR2VuY29kZUZ1bmNvdGF0aW9uRmFjdG9yeS5qYXZh) | `83.871% <100%> (+0.487%)` | `166 <6> (+5)` | :arrow_up: |; | [...e/hellbender/tools/funcotator/FuncotatorUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JVdGlscy5qYXZh) | `80.485% <90%> (+0.539%)` | `175 <6> (+7)` | :arrow_up: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `83.784% <0%> (-5.105%)` | `4% <0%> (+1%)` | |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [...ber/formats/collections/SimpleCountCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uLmphdmE=) | `100% <0%> (ø)` | `12% <0%> (+1%)` | :arrow_up: |; | [...institute/hellbender/utils/io/IOUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzVW5pdFRlc3QuamF2YQ==) | `86.458% <0%> (+0.127%)` | `32% <0%> (+8%)` | :arrow_up: |; | ... and [1 more](https://codecov.io/gh/broadinstitute/gatk/pull/5106/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5106#issuecomment-412982588
https://github.com/broadinstitute/gatk/pull/5107#issuecomment-415053972:12,Availability,ping,ping,12,@mwalker174 ping?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5107#issuecomment-415053972
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-413436528:190,Deployability,integrat,integration,190,"Now that htsjdk has support for indexed block-compressed FASTA, maybe the best approach is to add support also in GATK to allow this test resource to be smaller (and at the same time, check integration with other tools). @droazen - is there any plan to include support for bgzip FASTA in GATK soon? I can take that as a small project if you are interested, but I should plan it somehow to be sure about the rettirements in GATK to support them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-413436528
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-413436528:190,Integrability,integrat,integration,190,"Now that htsjdk has support for indexed block-compressed FASTA, maybe the best approach is to add support also in GATK to allow this test resource to be smaller (and at the same time, check integration with other tools). @droazen - is there any plan to include support for bgzip FASTA in GATK soon? I can take that as a small project if you are interested, but I should plan it somehow to be sure about the rettirements in GATK to support them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-413436528
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-413436528:133,Testability,test,test,133,"Now that htsjdk has support for indexed block-compressed FASTA, maybe the best approach is to add support also in GATK to allow this test resource to be smaller (and at the same time, check integration with other tools). @droazen - is there any plan to include support for bgzip FASTA in GATK soon? I can take that as a small project if you are interested, but I should plan it somehow to be sure about the rettirements in GATK to support them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-413436528
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423568585:696,Testability,test,tests,696,"Now that the `fasta.gz` support has been merged, this ticket is unblocked. As a first step, we need to select exactly which references go in. . HG38 is easy -- I'd suggest we just use the official copy in the Broad filesystem at `/seq/references/Homo_sapiens_assembly38/v0/Homo_sapiens_assembly38.fasta`, and make our compressed version from that. HG19 is more complicated, since we need to choose between several different variations (like ""b37""). The official copy in the Broad filesystem at `/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta` appears to actually be b37 going by the contig naming convention (""1"" vs. ""chr1""). It's worth noting that most of our existing tests are written against a subsetted version of b37 in large (`human_g1k_v37.20.21.fasta`). @jonn-smith and @SHuang-Broad please weigh in as to whether a b37 reference would be ok, or whether you require a different HG19 variant. I don't think we can afford to check in more than one.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423568585
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423582005:259,Usability,Simpl,SimpleInterval,259,"I'm OK with the HG38 only, considering that we are evaluating against HG38, unless other SV team members have different opinions.; Also, it's OK to remove those HLA stuff, since we don't evaluate SV calls on them, AND they can reck __havoc__ for constructor `SimpleInterval(String)`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423582005
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423616950:42,Testability,test,test,42,"The full GRCh38 analysis set allows us to test allosomal contig contexts, e.g. as presented by DetermineGermlineContigPloidy.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423616950
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603:138,Availability,down,downloading,138,"I'm opposed to including 2 entire references since it will raise our git lfs files to somewhere around 5gb. This is a significant drag on downloading / building / testing gatk and should be avoided if possible. I understand that I may be overruled here, but keeping the test files to a reasonable size was and should remain an important goal of gatk4. . It looks like there may be some options to slim down the existing test files that we should take advantage of if possible. There are a number of large vcfs and fasta files which are NOT currently compressed in our large files. We should compress them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603:402,Availability,down,down,402,"I'm opposed to including 2 entire references since it will raise our git lfs files to somewhere around 5gb. This is a significant drag on downloading / building / testing gatk and should be avoided if possible. I understand that I may be overruled here, but keeping the test files to a reasonable size was and should remain an important goal of gatk4. . It looks like there may be some options to slim down the existing test files that we should take advantage of if possible. There are a number of large vcfs and fasta files which are NOT currently compressed in our large files. We should compress them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603:190,Safety,avoid,avoided,190,"I'm opposed to including 2 entire references since it will raise our git lfs files to somewhere around 5gb. This is a significant drag on downloading / building / testing gatk and should be avoided if possible. I understand that I may be overruled here, but keeping the test files to a reasonable size was and should remain an important goal of gatk4. . It looks like there may be some options to slim down the existing test files that we should take advantage of if possible. There are a number of large vcfs and fasta files which are NOT currently compressed in our large files. We should compress them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603:163,Testability,test,testing,163,"I'm opposed to including 2 entire references since it will raise our git lfs files to somewhere around 5gb. This is a significant drag on downloading / building / testing gatk and should be avoided if possible. I understand that I may be overruled here, but keeping the test files to a reasonable size was and should remain an important goal of gatk4. . It looks like there may be some options to slim down the existing test files that we should take advantage of if possible. There are a number of large vcfs and fasta files which are NOT currently compressed in our large files. We should compress them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603:270,Testability,test,test,270,"I'm opposed to including 2 entire references since it will raise our git lfs files to somewhere around 5gb. This is a significant drag on downloading / building / testing gatk and should be avoided if possible. I understand that I may be overruled here, but keeping the test files to a reasonable size was and should remain an important goal of gatk4. . It looks like there may be some options to slim down the existing test files that we should take advantage of if possible. There are a number of large vcfs and fasta files which are NOT currently compressed in our large files. We should compress them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603:420,Testability,test,test,420,"I'm opposed to including 2 entire references since it will raise our git lfs files to somewhere around 5gb. This is a significant drag on downloading / building / testing gatk and should be avoided if possible. I understand that I may be overruled here, but keeping the test files to a reasonable size was and should remain an important goal of gatk4. . It looks like there may be some options to slim down the existing test files that we should take advantage of if possible. There are a number of large vcfs and fasta files which are NOT currently compressed in our large files. We should compress them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423617603
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423621352:87,Testability,test,test,87,"A rough estimate of reduction from compressing uncompressed vcf and fasta files in our test data is that we'll go from ~2.8G in the large folder currently -> 2.1G. We may not want to compress everything, since we probably want tests on uncompressed files as well, but it would be a good thing to look into.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423621352
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423621352:227,Testability,test,tests,227,"A rough estimate of reduction from compressing uncompressed vcf and fasta files in our test data is that we'll go from ~2.8G in the large folder currently -> 2.1G. We may not want to compress everything, since we probably want tests on uncompressed files as well, but it would be a good thing to look into.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423621352
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423628659:45,Availability,avail,available,45,"@lbergelson Not having these full references available is a significant drag on development, has wasted massive amounts of both Jonn's and Steve's time (and others too), and resulted in inferior tests compared to what we could have. I think this outweighs the other considerations you mention. I think that we can afford the extra lfs usage purely from a quota perspective given that we've just cut total usage in ~half. Removing or compressing some existing files should help quite a bit as well, as you suggested.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423628659
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423628659:195,Testability,test,tests,195,"@lbergelson Not having these full references available is a significant drag on development, has wasted massive amounts of both Jonn's and Steve's time (and others too), and resulted in inferior tests compared to what we could have. I think this outweighs the other considerations you mention. I think that we can afford the extra lfs usage purely from a quota perspective given that we've just cut total usage in ~half. Removing or compressing some existing files should help quite a bit as well, as you suggested.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423628659
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423630341:73,Testability,test,tests,73,"@lbergelson We can't, unfortunately -- in order to write good Funcotator tests we need b37/hg19 as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423630341
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:26,Testability,test,test,26,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:290,Testability,test,tests,290,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:474,Testability,test,tests,474,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:557,Testability,test,tests,557,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:602,Testability,test,testing,602,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:651,Testability,test,testing,651,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:708,Testability,test,tests,708,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:806,Testability,test,test,806,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264:1023,Testability,test,tests,1023,"I've created a regression test corpus for Funcotator that exercises all of the variant classifications that it can produce, but to do so I pulled from data sets that I had already been annotating. As such, it spans more than the chromosomes that are checked in as references for Funcotator tests already. These are also `HG19` (really, B37) variants, because Oncotator can't do `HG38` and I needed ground truth. So I need the B37 reference to go in so that these regression tests can be run. It will also preemptively solve the issue of needing to add unit tests for variants outside of the ""supported testing regions"" in Funcotator (where ""supported testing regions"" are loci supported by references in the tests) . This would be for when we find a problem variant in user data and need to add a new unit test. Anecdotally, I have found cases like this in some of the germline data that I've been running. On the plus side, adding in a complete HG19 reference will allow me to delete the references checked in for my unit tests. It won't be much saved space, but it will be some (~120Mb).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423636264
https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677:130,Integrability,depend,dependency,130,"@jamesemery @cmnbroad This fixes a personal pet peeve of mine, which is that we're packaging a bunch of test classes as a runtime dependency. It splits out a new test artifact which contains just the classes in utils.test and allows it to be published and consumed separately from the rest of the gatk. This allows us to make testng and minicluster no longer compile dependencies",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677
https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677:367,Integrability,depend,dependencies,367,"@jamesemery @cmnbroad This fixes a personal pet peeve of mine, which is that we're packaging a bunch of test classes as a runtime dependency. It splits out a new test artifact which contains just the classes in utils.test and allows it to be published and consumed separately from the rest of the gatk. This allows us to make testng and minicluster no longer compile dependencies",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677
https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677:104,Testability,test,test,104,"@jamesemery @cmnbroad This fixes a personal pet peeve of mine, which is that we're packaging a bunch of test classes as a runtime dependency. It splits out a new test artifact which contains just the classes in utils.test and allows it to be published and consumed separately from the rest of the gatk. This allows us to make testng and minicluster no longer compile dependencies",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677
https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677:162,Testability,test,test,162,"@jamesemery @cmnbroad This fixes a personal pet peeve of mine, which is that we're packaging a bunch of test classes as a runtime dependency. It splits out a new test artifact which contains just the classes in utils.test and allows it to be published and consumed separately from the rest of the gatk. This allows us to make testng and minicluster no longer compile dependencies",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677
https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677:217,Testability,test,test,217,"@jamesemery @cmnbroad This fixes a personal pet peeve of mine, which is that we're packaging a bunch of test classes as a runtime dependency. It splits out a new test artifact which contains just the classes in utils.test and allows it to be published and consumed separately from the rest of the gatk. This allows us to make testng and minicluster no longer compile dependencies",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677
https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677:326,Testability,test,testng,326,"@jamesemery @cmnbroad This fixes a personal pet peeve of mine, which is that we're packaging a bunch of test classes as a runtime dependency. It splits out a new test artifact which contains just the classes in utils.test and allows it to be published and consumed separately from the rest of the gatk. This allows us to make testng and minicluster no longer compile dependencies",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677
https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413033472:2256,Deployability,pipeline,pipelines,2256, :arrow_down: |; | [...hellbender/tools/CountVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5112/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Db3VudFZhcmlhbnRzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <ø> (ø)` | `4 <0> (ø)` | :arrow_down: |; | [...ne/spark/datasources/ReadsSparkSourceUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5112/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZVVuaXRUZXN0LmphdmE=) | `91.852% <ø> (ø)` | `25 <0> (ø)` | :arrow_down: |; | [...ExampleReadWalkerWithReferenceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5112/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlUmVhZFdhbGtlcldpdGhSZWZlcmVuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...park/pipelines/PrintReadsSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5112/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRSZWFkc1NwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `88.293% <ø> (ø)` | `30 <0> (ø)` | :arrow_down: |; | [...ls/genomicsdb/GenomicsDBImportIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5112/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnRJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `89.356% <ø> (ø)` | `73 <0> (ø)` | :arrow_down: |; | [...ls/CalculateGenotypePosteriorsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5112/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9DYWxjdWxhdGVHZW5vdHlwZVBvc3RlcmlvcnNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `95.082% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...er/tools/funcotator/Funco,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413033472
https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413657197:0,Testability,Test,Tests,0,Tests are run.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413657197
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413201505:67,Deployability,release,release,67,"@ksw9 Can you check whether this is still an issue with the latest release (4.0.8.0)? That release introduced a new version of GenomicsDB. If it is still an issue in 4.0.8.0, can you provide a shareable test case to replicate the issue?. @kgururaj Could you comment on this one as well?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413201505
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413201505:91,Deployability,release,release,91,"@ksw9 Can you check whether this is still an issue with the latest release (4.0.8.0)? That release introduced a new version of GenomicsDB. If it is still an issue in 4.0.8.0, can you provide a shareable test case to replicate the issue?. @kgururaj Could you comment on this one as well?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413201505
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413201505:203,Testability,test,test,203,"@ksw9 Can you check whether this is still an issue with the latest release (4.0.8.0)? That release introduced a new version of GenomicsDB. If it is still an issue in 4.0.8.0, can you provide a shareable test case to replicate the issue?. @kgururaj Could you comment on this one as well?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413201505
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413282882:297,Safety,sanity check,sanity check,297,@ksw9 can you run the vcf validator tool suggested by @komalsrathi in #5045 [here](https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343)? The issue is primarily caused by mismatch in the field description in the VCF header and the data lines. @droazen can you comment on the [sanity check that I suggested here](https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684)?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413282882
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413282882:26,Security,validat,validator,26,@ksw9 can you run the vcf validator tool suggested by @komalsrathi in #5045 [here](https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407476343)? The issue is primarily caused by mismatch in the field description in the VCF header and the data lines. @droazen can you comment on the [sanity check that I suggested here](https://github.com/broadinstitute/gatk/issues/5045#issuecomment-407501684)?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413282882
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413289512:64,Availability,error,error,64,@kgururaj We should definitely add a defensive check to emit an error message when there's a mismatch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413289512
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413289512:70,Integrability,message,message,70,@kgururaj We should definitely add a defensive check to emit an error message when there's a mismatch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413289512
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413299560:400,Availability,error,error,400,"Let's take the SB field as an example - the header says it's a fixed length field of 4 integers. What should happen if one of the data lines only contains 2 integers?. Similarly, let's say the AD field (length R) in a specific line contains fewer elements than the total number of alleles (alt+1). What should happen? . This is irrespective of the internals of TileDB/GenomicsDB - should I report an error (exception) and exit? Print warning message, (pad if needed) and continue? Both those options are possible, it's a question of what is preferable.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413299560
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413299560:442,Integrability,message,message,442,"Let's take the SB field as an example - the header says it's a fixed length field of 4 integers. What should happen if one of the data lines only contains 2 integers?. Similarly, let's say the AD field (length R) in a specific line contains fewer elements than the total number of alleles (alt+1). What should happen? . This is irrespective of the internals of TileDB/GenomicsDB - should I report an error (exception) and exit? Print warning message, (pad if needed) and continue? Both those options are possible, it's a question of what is preferable.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413299560
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413562009:84,Availability,error,error,84,"@ldgauthier Do you think the cases described by @kgururaj above should result in an error, or should GenomicsDB pad out the missing values?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413562009
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356:27,Availability,error,error,27,I'd rather be rigorous and error out. If we pad the missing values there could still be other repercussions downstream.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356:108,Availability,down,downstream,108,I'd rather be rigorous and error out. If we pad the missing values there could still be other repercussions downstream.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413755772:192,Availability,error,errors,192,"Dear all, thank you for the quick reply! Yes, I tried this on the latest release (4.0.8.0), and it is still an issue. vcf-validator validates the input VCFs, however, in the output VCF, I get errors associated with the field descriptions for the VAF annotation (which I believe may be specific to DeepVariant), a few of which are pasted below:. The header tag 'reference' not present. (Not required but highly recommended.). column CDC1551_clean_mutated_9.fasta_1_1 at NC_000962.3:580772; \ .. FORMAT tag [VAF] expected different number of values (expected 1, found 2); column CDC1551_clean_mutated_2.fasta_1_1 at NC_000962.3:580772 .. FORMAT tag [VAF] expected different number of values (expected 1, found 2). I tried the above after changing the VAF field description label from Number=R to Number=A in my unmerged gVCF files. This did not solve the problem. I'm attaching two example VCF files which I am attempting to merge. My commands are below: . ```. # Create GenomicsDBImport; gatk GenomicsDBImport \; -R ${REF_DIR}${ref} \; -V CDC1551_clean_mutated_1.fasta_1_1.bwa_deep.g.vcf.gz \; -V CDC1551_clean_mutated_2.fasta_1_1.bwa_deep.g.vcf.gz \; --reader-threads 8 \; --genomicsdb-workspace-path ${mapper}_${caller}_comb \; --intervals 'NC_000962.3' \; --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true' \; --overwrite-existing-genomicsdb-workspace true . ## Joint Genotype VCF; gatk GenotypeGVCFs \; -R ${REF_DIR}${ref} \; -V gendb://${mapper}_${caller}_comb \; -O ${mapper}_${caller}_joint.vcf; ```. [test_vcfs.zip](https://github.com/broadinstitute/gatk/files/2295977/test_vcfs.zip). Thank you for your support on this problem!; Best,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413755772
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413755772:73,Deployability,release,release,73,"Dear all, thank you for the quick reply! Yes, I tried this on the latest release (4.0.8.0), and it is still an issue. vcf-validator validates the input VCFs, however, in the output VCF, I get errors associated with the field descriptions for the VAF annotation (which I believe may be specific to DeepVariant), a few of which are pasted below:. The header tag 'reference' not present. (Not required but highly recommended.). column CDC1551_clean_mutated_9.fasta_1_1 at NC_000962.3:580772; \ .. FORMAT tag [VAF] expected different number of values (expected 1, found 2); column CDC1551_clean_mutated_2.fasta_1_1 at NC_000962.3:580772 .. FORMAT tag [VAF] expected different number of values (expected 1, found 2). I tried the above after changing the VAF field description label from Number=R to Number=A in my unmerged gVCF files. This did not solve the problem. I'm attaching two example VCF files which I am attempting to merge. My commands are below: . ```. # Create GenomicsDBImport; gatk GenomicsDBImport \; -R ${REF_DIR}${ref} \; -V CDC1551_clean_mutated_1.fasta_1_1.bwa_deep.g.vcf.gz \; -V CDC1551_clean_mutated_2.fasta_1_1.bwa_deep.g.vcf.gz \; --reader-threads 8 \; --genomicsdb-workspace-path ${mapper}_${caller}_comb \; --intervals 'NC_000962.3' \; --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true' \; --overwrite-existing-genomicsdb-workspace true . ## Joint Genotype VCF; gatk GenotypeGVCFs \; -R ${REF_DIR}${ref} \; -V gendb://${mapper}_${caller}_comb \; -O ${mapper}_${caller}_joint.vcf; ```. [test_vcfs.zip](https://github.com/broadinstitute/gatk/files/2295977/test_vcfs.zip). Thank you for your support on this problem!; Best,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413755772
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413755772:122,Security,validat,validator,122,"Dear all, thank you for the quick reply! Yes, I tried this on the latest release (4.0.8.0), and it is still an issue. vcf-validator validates the input VCFs, however, in the output VCF, I get errors associated with the field descriptions for the VAF annotation (which I believe may be specific to DeepVariant), a few of which are pasted below:. The header tag 'reference' not present. (Not required but highly recommended.). column CDC1551_clean_mutated_9.fasta_1_1 at NC_000962.3:580772; \ .. FORMAT tag [VAF] expected different number of values (expected 1, found 2); column CDC1551_clean_mutated_2.fasta_1_1 at NC_000962.3:580772 .. FORMAT tag [VAF] expected different number of values (expected 1, found 2). I tried the above after changing the VAF field description label from Number=R to Number=A in my unmerged gVCF files. This did not solve the problem. I'm attaching two example VCF files which I am attempting to merge. My commands are below: . ```. # Create GenomicsDBImport; gatk GenomicsDBImport \; -R ${REF_DIR}${ref} \; -V CDC1551_clean_mutated_1.fasta_1_1.bwa_deep.g.vcf.gz \; -V CDC1551_clean_mutated_2.fasta_1_1.bwa_deep.g.vcf.gz \; --reader-threads 8 \; --genomicsdb-workspace-path ${mapper}_${caller}_comb \; --intervals 'NC_000962.3' \; --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true' \; --overwrite-existing-genomicsdb-workspace true . ## Joint Genotype VCF; gatk GenotypeGVCFs \; -R ${REF_DIR}${ref} \; -V gendb://${mapper}_${caller}_comb \; -O ${mapper}_${caller}_joint.vcf; ```. [test_vcfs.zip](https://github.com/broadinstitute/gatk/files/2295977/test_vcfs.zip). Thank you for your support on this problem!; Best,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413755772
https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413755772:132,Security,validat,validates,132,"Dear all, thank you for the quick reply! Yes, I tried this on the latest release (4.0.8.0), and it is still an issue. vcf-validator validates the input VCFs, however, in the output VCF, I get errors associated with the field descriptions for the VAF annotation (which I believe may be specific to DeepVariant), a few of which are pasted below:. The header tag 'reference' not present. (Not required but highly recommended.). column CDC1551_clean_mutated_9.fasta_1_1 at NC_000962.3:580772; \ .. FORMAT tag [VAF] expected different number of values (expected 1, found 2); column CDC1551_clean_mutated_2.fasta_1_1 at NC_000962.3:580772 .. FORMAT tag [VAF] expected different number of values (expected 1, found 2). I tried the above after changing the VAF field description label from Number=R to Number=A in my unmerged gVCF files. This did not solve the problem. I'm attaching two example VCF files which I am attempting to merge. My commands are below: . ```. # Create GenomicsDBImport; gatk GenomicsDBImport \; -R ${REF_DIR}${ref} \; -V CDC1551_clean_mutated_1.fasta_1_1.bwa_deep.g.vcf.gz \; -V CDC1551_clean_mutated_2.fasta_1_1.bwa_deep.g.vcf.gz \; --reader-threads 8 \; --genomicsdb-workspace-path ${mapper}_${caller}_comb \; --intervals 'NC_000962.3' \; --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true' \; --overwrite-existing-genomicsdb-workspace true . ## Joint Genotype VCF; gatk GenotypeGVCFs \; -R ${REF_DIR}${ref} \; -V gendb://${mapper}_${caller}_comb \; -O ${mapper}_${caller}_joint.vcf; ```. [test_vcfs.zip](https://github.com/broadinstitute/gatk/files/2295977/test_vcfs.zip). Thank you for your support on this problem!; Best,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413755772
https://github.com/broadinstitute/gatk/issues/5114#issuecomment-413203475:16,Security,expose,expose,16,Don't forget to expose the file in the WDL.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5114#issuecomment-413203475
https://github.com/broadinstitute/gatk/pull/5115#issuecomment-413221307:2871,Testability,test,test,2871,%> (ø)` | `7 <7> (?)` | |; | [...pynumber/CallCopyRatioSegmentsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NhbGxDb3B5UmF0aW9TZWdtZW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `94.737% <80%> (-5.263%)` | `4 <0> (ø)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `92% <0%> (-1.75%)` | `14% <0%> (+7%)` | |; | [...r/utils/read/markduplicates/sparkrecords/Pair.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9QYWlyLmphdmE=) | `98.276% <0%> (-1.724%)` | `49% <0%> (+22%)` | |; | [...institute/hellbender/utils/test/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRUZXN0VXRpbHMuamF2YQ==) | `94.34% <0%> (-1.115%)` | `5% <0%> (ø)` | |; | [...idation/CompareDuplicatesSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `96.296% <0%> (-0.37%)` | `10% <0%> (+3%)` | |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5115#issuecomment-413221307
https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793:232,Availability,error,error-reference,232,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@43750e9`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `93.478%`. ```diff; @@ Coverage Diff @@; ## master #5116 +/- ##; ==========================================; Coverage ? 86.707% ; Complexity ? 29097 ; ==========================================; Files ? 1810 ; Lines ? 134816 ; Branches ? 14939 ; ==========================================; Hits ? 116895 ; Misses ? 12521 ; Partials ? 5400; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <ø> (ø)` | `13 <0> (?)` | |; | [...e/hellbender/tools/spark/sv/utils/SVFileUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkZpbGVVdGlscy5qYXZh) | `24.691% <ø> (ø)` | `4 <0> (?)` | |; | [...tsFromContigAlignmentsSAMSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTQU1TcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `97.561% <ø> (ø)` | `6 <0> (?)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlVdGlscy5,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793
https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793:801,Testability,Test,TestUtilsForAssemblyBasedSVDiscovery,801,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@43750e9`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `93.478%`. ```diff; @@ Coverage Diff @@; ## master #5116 +/- ##; ==========================================; Coverage ? 86.707% ; Complexity ? 29097 ; ==========================================; Files ? 1810 ; Lines ? 134816 ; Branches ? 14939 ; ==========================================; Hits ? 116895 ; Misses ? 12521 ; Partials ? 5400; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <ø> (ø)` | `13 <0> (?)` | |; | [...e/hellbender/tools/spark/sv/utils/SVFileUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkZpbGVVdGlscy5qYXZh) | `24.691% <ø> (ø)` | `4 <0> (?)` | |; | [...tsFromContigAlignmentsSAMSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTQU1TcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `97.561% <ø> (ø)` | `6 <0> (?)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlVdGlscy5,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793
https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793:180,Usability,learn,learn,180,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@43750e9`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `93.478%`. ```diff; @@ Coverage Diff @@; ## master #5116 +/- ##; ==========================================; Coverage ? 86.707% ; Complexity ? 29097 ; ==========================================; Files ? 1810 ; Lines ? 134816 ; Branches ? 14939 ; ==========================================; Hits ? 116895 ; Misses ? 12521 ; Partials ? 5400; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <ø> (ø)` | `13 <0> (?)` | |; | [...e/hellbender/tools/spark/sv/utils/SVFileUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkZpbGVVdGlscy5qYXZh) | `24.691% <ø> (ø)` | `4 <0> (?)` | |; | [...tsFromContigAlignmentsSAMSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTQU1TcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `97.561% <ø> (ø)` | `6 <0> (?)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlVdGlscy5,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793
https://github.com/broadinstitute/gatk/pull/5117#issuecomment-413279333:952,Testability,Test,TestUtilsForAssemblyBasedSVDiscovery,952,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=h1) Report; > Merging [#5117](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/df3fb9d2715ba1db4877f4f77286573569c3314a?src=pr&el=desc) will **decrease** coverage by `0.171%`.; > The diff coverage is `32.061%`. ```diff; @@ Coverage Diff @@; ## master #5117 +/- ##; ===============================================; - Coverage 86.506% 86.335% -0.171% ; - Complexity 29259 29293 +34 ; ===============================================; Files 1814 1817 +3 ; Lines 135623 136028 +405 ; Branches 15063 15122 +59 ; ===============================================; + Hits 117322 117440 +118 ; - Misses 12833 13132 +299 ; + Partials 5468 5456 -12; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...e/hellbender/tools/spark/sv/utils/SVFileUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkZpbGVVdGlscy5qYXZh) | `24.691% <ø> (+1.235%)` | `4 <0> (ø)` | :arrow_down: |; | [...ne/AbstractIntervalTreeBasedConcordanceWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQWJzdHJhY3RJbnRlcnZhbFRyZWVCYXNlZENvbmNvcmRhbmNlV2Fsa2VyLmphdmE=) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5117#issuecomment-413279333
https://github.com/broadinstitute/gatk/pull/5119#issuecomment-414426377:30,Performance,cache,cache,30,Closing because of bad travis cache for builds. Will submit identical PR with cloned branch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5119#issuecomment-414426377
https://github.com/broadinstitute/gatk/pull/5120#issuecomment-420696255:12,Availability,Ping,Ping,12,@lbergelson Ping me once this is ready for a final pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5120#issuecomment-420696255
https://github.com/broadinstitute/gatk/pull/5120#issuecomment-420775417:96,Deployability,update,update,96,@droazen Could you take another look at this? I had to hit a lot of files to do the constructor update and close the readers where they weren't being closed already.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5120#issuecomment-420775417
https://github.com/broadinstitute/gatk/pull/5120#issuecomment-423018400:25,Performance,cache,cache,25,It was cursed with a bad cache.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5120#issuecomment-423018400
https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413603322:50,Deployability,patch,patch,50,@LeeTL1220 I put in a test that fails without the patch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413603322
https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413603322:22,Testability,test,test,22,@LeeTL1220 I put in a test that fails without the patch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413603322
https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413605275:40,Deployability,release,release,40,@davidbenjamin Do we need to do another release for this?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413605275
https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413611150:199,Security,validat,validations,199,"@droazen Yes, please. Sorry for not catching this! Turns out that unpaired reads that pass all the M2 read filters and show evidence of a SNV are rare enough that they don't show up in any of the M2 validations.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413611150
https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413612426:45,Testability,test,tests,45,@davidbenjamin @droazen Though the automated tests will now catch this (as of this PR).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413612426
https://github.com/broadinstitute/gatk/pull/5122#issuecomment-413995591:2805,Usability,Simpl,SimpleCountCollectionUnitTest,2805,5% <100%> (+0.228%)` | `16 <8> (+6)` | :arrow_up: |; | [...kers/haplotypecaller/AssemblyBasedCallerUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5122/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyVXRpbHMuamF2YQ==) | `70.297% <100%> (ø)` | `25 <0> (ø)` | :arrow_down: |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5122/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlVdGlscy5qYXZh) | `36.082% <0%> (-8.654%)` | `14% <0%> (+1%)` | |; | [...rg/broadinstitute/hellbender/utils/Nucleotide.java](https://codecov.io/gh/broadinstitute/gatk/pull/5122/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9OdWNsZW90aWRlLmphdmE=) | `95.266% <0%> (-4.734%)` | `59% <0%> (+52%)` | |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5122/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `83.784% <0%> (-2.883%)` | `4% <0%> (ø)` | |; | [...ngine/spark/AddContextDataToReadSparkUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5122/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvQWRkQ29udGV4dERhdGFUb1JlYWRTcGFya1VuaXRUZXN0LmphdmE=) | `92.453% <0%> (-2.142%)` | `12% <0%> (+6%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5122/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `90.909% <0%> (-1.948%)` | `12% <0%> (+6%)` | |; | [...r/utils/read/markduplicates/sparkrecords/Pair.java,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5122#issuecomment-413995591
https://github.com/broadinstitute/gatk/pull/5123#issuecomment-414350367:2586,Usability,Simpl,SimpleNovelAdjacencyInterpreter,2586,[...r/tools/walkers/mutect/Mutect2FilteringEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5123/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRmlsdGVyaW5nRW5naW5lLmphdmE=) | `84.375% <66.667%> (+0.164%)` | `50 <0> (ø)` | :arrow_down: |; | [...ellbender/tools/walkers/mutect/M2TestingUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5123/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NMlRlc3RpbmdVdGlscy5qYXZh) | `91.304% <91.304%> (ø)` | `6 <6> (?)` | |; | [...iscoverFromLocalAssemblyContigAlignmentsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5123/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlckZyb21Mb2NhbEFzc2VtYmx5Q29udGlnQWxpZ25tZW50c1NwYXJrLmphdmE=) | `72.193% <0%> (-18.334%)` | `9% <0%> (-15%)` | |; | [...ery/inference/SimpleNovelAdjacencyInterpreter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5123/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1NpbXBsZU5vdmVsQWRqYWNlbmN5SW50ZXJwcmV0ZXIuamF2YQ==) | `80.882% <0%> (-8.824%)` | `11% <0%> (-1%)` | |; | [...institute/hellbender/utils/NucleotideUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5123/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9OdWNsZW90aWRlVW5pdFRlc3QuamF2YQ==) | `90.698% <0%> (-4.795%)` | `34% <0%> (-91%)` | |; | [...ls/ExtractOriginalAlignmentRecordsByNameSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5123/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9FeHRyYWN0T3JpZ2luYWxBbGlnbm1lbnRSZWNvcmRzQnlOYW1lU3BhcmsuamF2YQ==) | `86.364% <0%> (-4.545%)` | `9% <0%> (-1%)` | |; | [...nalAlignmentRecordsByNameSparkIntegrationTest.java],MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5123#issuecomment-414350367
https://github.com/broadinstitute/gatk/pull/5123#issuecomment-414433802:36,Testability,test,test,36,@meganshand I added a very specific test to check for this bug that I introduced. I confirmed that the test fails before this change and passes after.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5123#issuecomment-414433802
https://github.com/broadinstitute/gatk/pull/5123#issuecomment-414433802:103,Testability,test,test,103,@meganshand I added a very specific test to check for this bug that I introduced. I confirmed that the test fails before this change and passes after.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5123#issuecomment-414433802
https://github.com/broadinstitute/gatk/pull/5124#issuecomment-414446194:1243,Usability,Simpl,SimpleKeyXsvFuncotationFactory,1243,f1c2f237a0caa1ae0e63e4ae?src=pr&el=desc) will **increase** coverage by `<.001%`.; > The diff coverage is `59.375%`. ```diff; @@ Coverage Diff @@; ## master #5124 +/- ##; =============================================; + Coverage 86.66% 86.66% +<.001% ; - Complexity 29043 29048 +5 ; =============================================; Files 1808 1808 ; Lines 134662 134686 +24 ; Branches 14935 14938 +3 ; =============================================; + Hits 116698 116719 +21 ; Misses 12552 12552 ; - Partials 5412 5415 +3; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5124?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...nder/tools/funcotator/FuncotatorTestConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5124/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JUZXN0Q29uc3RhbnRzLmphdmE=) | `96.97% <ø> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...ataSources/xsv/SimpleKeyXsvFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5124/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3hzdi9TaW1wbGVLZXlYc3ZGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `87.097% <100%> (ø)` | `27 <0> (ø)` | :arrow_down: |; | [...tils/codecs/xsvLocatableTable/XsvTableFeature.java](https://codecov.io/gh/broadinstitute/gatk/pull/5124/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb2RlY3MveHN2TG9jYXRhYmxlVGFibGUvWHN2VGFibGVGZWF0dXJlLmphdmE=) | `58.571% <100%> (+1.855%)` | `17 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/utils/nio/PathLineIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5124/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vUGF0aExpbmVJdGVyYXRvci5qYXZh) | `64.286% <25%> (-10.714%)` | `4 <1> (ø)` | |; | [...LocatableTable/XsvLocatableTableCodecUnitTest.java](https://codeco,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5124#issuecomment-414446194
https://github.com/broadinstitute/gatk/pull/5124#issuecomment-414813822:104,Availability,error,errors,104,That's correct. I ran into a character encoding issue with a test file at one point. This will make the errors a little more explanatory.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5124#issuecomment-414813822
https://github.com/broadinstitute/gatk/pull/5124#issuecomment-414813822:61,Testability,test,test,61,That's correct. I ran into a character encoding issue with a test file at one point. This will make the errors a little more explanatory.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5124#issuecomment-414813822
https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417345290:149,Availability,error,errors,149,I just noticed this but wanted to pass along the tidbit that with the SV tools we moved to Dataproc 1.3 (and Spark 2.3.0) because we started hitting errors like this:. `java.io.IOException: Failed to create local dir in /hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1535480872324_0648/blockmgr-1193ec43-c523-423b-bd88-e40ee0102cca/24`. In large jobs running on with the Dataproc 1.2 image after Google released Dataproc 1.3. I also hit the error trying to run Hail the other day and filed an issue with Google here:. https://issuetracker.google.com/issues/113360059,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417345290
https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417345290:456,Availability,error,error,456,I just noticed this but wanted to pass along the tidbit that with the SV tools we moved to Dataproc 1.3 (and Spark 2.3.0) because we started hitting errors like this:. `java.io.IOException: Failed to create local dir in /hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1535480872324_0648/blockmgr-1193ec43-c523-423b-bd88-e40ee0102cca/24`. In large jobs running on with the Dataproc 1.2 image after Google released Dataproc 1.3. I also hit the error trying to run Hail the other day and filed an issue with Google here:. https://issuetracker.google.com/issues/113360059,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417345290
https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417345290:418,Deployability,release,released,418,I just noticed this but wanted to pass along the tidbit that with the SV tools we moved to Dataproc 1.3 (and Spark 2.3.0) because we started hitting errors like this:. `java.io.IOException: Failed to create local dir in /hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1535480872324_0648/blockmgr-1193ec43-c523-423b-bd88-e40ee0102cca/24`. In large jobs running on with the Dataproc 1.2 image after Google released Dataproc 1.3. I also hit the error trying to run Hail the other day and filed an issue with Google here:. https://issuetracker.google.com/issues/113360059,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417345290
https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417706567:29,Deployability,update,update,29,@tomwhite @cwhelan Should we update our spark dependencies to 2.3.0 then?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417706567
https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417706567:46,Integrability,depend,dependencies,46,@tomwhite @cwhelan Should we update our spark dependencies to 2.3.0 then?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417706567
https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417720868:78,Integrability,depend,dependencies,78,"@lbergelson Our stuff runs fine using Dataproc image 1.3 and the current GATK dependencies, so I guess it's not crucial, but it's probably something we should investigate doing?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5125#issuecomment-417720868
https://github.com/broadinstitute/gatk/issues/5126#issuecomment-502788589:124,Availability,error,error,124,"Sorry to necrobump this, but were you able to figure out what the problem was, @chandrans ? I'm running into the exact same error in a slightly different context and was hoping that any insight you had would help me solve my issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5126#issuecomment-502788589
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-415802886:76,Deployability,pipeline,pipeline,76,"@lbergelson please take a look at this when you can. It reduces exome reads pipeline on Spark from 24min to 12min, and genome from 94min to 55min on the same clusters.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-415802886
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-415802886:56,Energy Efficiency,reduce,reduces,56,"@lbergelson please take a look at this when you can. It reduces exome reads pipeline on Spark from 24min to 12min, and genome from 94min to 55min on the same clusters.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-415802886
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416182781:484,Performance,perform,performs,484,"Thanks for the review James. Regarding keeping Broadcast for BQSR - I'm not sure we need to. The Spark files approach is superior for several reasons: it's a lot faster (~2x), it uses a lot less memory (MB vs GB), it works progressively (conversely, if the reference is read into memory it takes a few minutes and can't be parallelized, so can't be sped up as much due to Amdahl's law), it doesn't require conversion of `fasta` reference files to `2bit`. We don't know about how this performs on single multi-core machines (in Spark local mode), but I think we can examine and optimize that later.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416182781
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416182781:577,Performance,optimiz,optimize,577,"Thanks for the review James. Regarding keeping Broadcast for BQSR - I'm not sure we need to. The Spark files approach is superior for several reasons: it's a lot faster (~2x), it uses a lot less memory (MB vs GB), it works progressively (conversely, if the reference is read into memory it takes a few minutes and can't be parallelized, so can't be sped up as much due to Amdahl's law), it doesn't require conversion of `fasta` reference files to `2bit`. We don't know about how this performs on single multi-core machines (in Spark local mode), but I think we can examine and optimize that later.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416182781
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416211432:1237,Deployability,pipeline,pipelines,1237,1291503ae8ca71bccc?src=pr&el=desc) will **decrease** coverage by `0.041%`.; > The diff coverage is `72.662%`. ```diff; @@ Coverage Diff @@; ## master #5127 +/- ##; ===============================================; - Coverage 86.796% 86.755% -0.041% ; + Complexity 29779 29766 -13 ; ===============================================; Files 1822 1825 +3 ; Lines 137732 137726 -6 ; Branches 15184 15188 +4 ; ===============================================; - Hits 119546 119484 -62 ; - Misses 12665 12721 +56 ; Partials 5521 5521; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5127?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/tools/spark/transforms/ApplyBQSRSparkFn.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL0FwcGx5QlFTUlNwYXJrRm4uamF2YQ==) | `80% <100%> (-3.333%)` | `2 <0> (-2)` | |; | [...rk/pipelines/BQSRPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `90.476% <100%> (-2.627%)` | `4 <0> (-2)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `89.583% <100%> (+2.546%)` | `12 <4> (-5)` | :arrow_down: |; | [...der/tools/HaplotypeCallerSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `61.765% <100%> (ø)` | `13 <2> (ø)` | :arrow_down: |; | [.../hellbender/tools/spark/BaseRecalibratorSpark.java](https://code,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416211432
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416211432:1577,Deployability,pipeline,pipelines,1577,==; Files 1822 1825 +3 ; Lines 137732 137726 -6 ; Branches 15184 15188 +4 ; ===============================================; - Hits 119546 119484 -62 ; - Misses 12665 12721 +56 ; Partials 5521 5521; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5127?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/tools/spark/transforms/ApplyBQSRSparkFn.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL0FwcGx5QlFTUlNwYXJrRm4uamF2YQ==) | `80% <100%> (-3.333%)` | `2 <0> (-2)` | |; | [...rk/pipelines/BQSRPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `90.476% <100%> (-2.627%)` | `4 <0> (-2)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `89.583% <100%> (+2.546%)` | `12 <4> (-5)` | :arrow_down: |; | [...der/tools/HaplotypeCallerSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `61.765% <100%> (ø)` | `13 <2> (ø)` | :arrow_down: |; | [.../hellbender/tools/spark/BaseRecalibratorSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmsuamF2YQ==) | `93.333% <100%> (+6.377%)` | `6 <1> (-3)` | :arrow_down: |; | [...ools/spark/transforms/BaseRecalibratorSparkFn.java](https://codecov.io/gh/broad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416211432
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416211432:2835,Deployability,pipeline,pipelines,2835,| `12 <4> (-5)` | :arrow_down: |; | [...der/tools/HaplotypeCallerSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `61.765% <100%> (ø)` | `13 <2> (ø)` | :arrow_down: |; | [.../hellbender/tools/spark/BaseRecalibratorSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmsuamF2YQ==) | `93.333% <100%> (+6.377%)` | `6 <1> (-3)` | :arrow_down: |; | [...ools/spark/transforms/BaseRecalibratorSparkFn.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL0Jhc2VSZWNhbGlicmF0b3JTcGFya0ZuLmphdmE=) | `93.333% <100%> (-1.404%)` | `3 <3> (ø)` | |; | [...ender/tools/spark/pipelines/BQSRPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmsuamF2YQ==) | `100% <100%> (ø)` | `5 <1> (-3)` | :arrow_down: |; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `96.97% <100%> (+4.323%)` | `7 <0> (+1)` | :arrow_up: |; | [...der/utils/collections/AutoCloseableCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb2xsZWN0aW9ucy9BdXRvQ2xvc2VhYmxlQ29sbGVjdGlvbi5qYXZh) | `18.75% <18.75%> (ø)` | `1 <1> (?)` | |; | [...hellbender/utils/iterators/CloseAtEndIterator.java](https://codecov.io/gh/bro,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416211432
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416211432:3129,Deployability,pipeline,pipelines,3129, (ø)` | `13 <2> (ø)` | :arrow_down: |; | [.../hellbender/tools/spark/BaseRecalibratorSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmsuamF2YQ==) | `93.333% <100%> (+6.377%)` | `6 <1> (-3)` | :arrow_down: |; | [...ools/spark/transforms/BaseRecalibratorSparkFn.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL0Jhc2VSZWNhbGlicmF0b3JTcGFya0ZuLmphdmE=) | `93.333% <100%> (-1.404%)` | `3 <3> (ø)` | |; | [...ender/tools/spark/pipelines/BQSRPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmsuamF2YQ==) | `100% <100%> (ø)` | `5 <1> (-3)` | :arrow_down: |; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `96.97% <100%> (+4.323%)` | `7 <0> (+1)` | :arrow_up: |; | [...der/utils/collections/AutoCloseableCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb2xsZWN0aW9ucy9BdXRvQ2xvc2VhYmxlQ29sbGVjdGlvbi5qYXZh) | `18.75% <18.75%> (ø)` | `1 <1> (?)` | |; | [...hellbender/utils/iterators/CloseAtEndIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pdGVyYXRvcnMvQ2xvc2VBdEVuZEl0ZXJhdG9yLmphdmE=) | `37.5% <37.5%> (ø)` | `2 <2> (?)` | |; | ... and [20 more](https://codecov.io/gh/broadinstitute/gatk/pull/5127/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416211432
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416327226:383,Modifiability,variab,variable,383,"@tomwhite Like we discussed this morning, we can and should get rid of the broadcast code but we should ideally first get some sort of plot we can point to in order to justify the change. This will also be useful for future presentations of our performance improvements. The plot would ideally be a comparison between the new distribution strategy and broadcasting compared across a variable number of cores, so the performance improvement can be better understood.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416327226
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416327226:245,Performance,perform,performance,245,"@tomwhite Like we discussed this morning, we can and should get rid of the broadcast code but we should ideally first get some sort of plot we can point to in order to justify the change. This will also be useful for future presentations of our performance improvements. The plot would ideally be a comparison between the new distribution strategy and broadcasting compared across a variable number of cores, so the performance improvement can be better understood.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416327226
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416327226:416,Performance,perform,performance,416,"@tomwhite Like we discussed this morning, we can and should get rid of the broadcast code but we should ideally first get some sort of plot we can point to in order to justify the change. This will also be useful for future presentations of our performance improvements. The plot would ideally be a comparison between the new distribution strategy and broadcasting compared across a variable number of cores, so the performance improvement can be better understood.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-416327226
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-419120974:37,Testability,benchmark,benchmarks,37,"Thanks @jamesemery. I have run a few benchmarks with the old and new code for comparison. The raw data looks like this: . ```; dataset,executors,code,time; exome,10,old,24.10; exome,10,new,13.28; exome,20,old,17.03; exome,20,new,8.51; genome,20,old,94.23; genome,20,new,54.85; ```. Here is a bar graph comparing the exome data:. ![gatk-5127-exome](https://user-images.githubusercontent.com/85085/45165020-c7a96b00-b1eb-11e8-8bfb-4565dd0385a0.png). and the genome data:. ![gatk-5127-genome](https://user-images.githubusercontent.com/85085/45165026-cd06b580-b1eb-11e8-815b-afac12444d4e.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-419120974
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-426012345:268,Deployability,release,release,268,"@tomwhite If you can address the one issue I had with the classes, it could also be accomplished by sterner commenting on the relevant methods and classes just so long as we are avoiding confusion somehow, then I think we can try to get this in quickly for Wednesdays release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-426012345
https://github.com/broadinstitute/gatk/pull/5127#issuecomment-426012345:178,Safety,avoid,avoiding,178,"@tomwhite If you can address the one issue I had with the classes, it could also be accomplished by sterner commenting on the relevant methods and classes just so long as we are avoiding confusion somehow, then I think we can try to get this in quickly for Wednesdays release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5127#issuecomment-426012345
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415436791:86,Availability,redundant,redundant,86,@ldgauthier Thanks for the comments! I made the changes you requested and deleted the redundant test. Let me know if you have any more edits in mind.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415436791
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415436791:86,Safety,redund,redundant,86,@ldgauthier Thanks for the comments! I made the changes you requested and deleted the redundant test. Let me know if you have any more edits in mind.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415436791
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415436791:96,Testability,test,test,96,@ldgauthier Thanks for the comments! I made the changes you requested and deleted the redundant test. Let me know if you have any more edits in mind.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415436791
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415456740:1610,Usability,Simpl,SimpleCountCollectionUnitTest,1610,686 140269 +5583 ; Branches 14938 15772 +834 ; ===============================================; + Hits 116712 121568 +4856 ; - Misses 12559 13160 +601 ; - Partials 5415 5541 +126; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5129?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...rs/variantutils/SelectVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5129/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `100% <100%> (ø)` | `69 <3> (+3)` | :arrow_up: |; | [...der/tools/walkers/variantutils/SelectVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5129/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50cy5qYXZh) | `79.646% <100%> (+0.06%)` | `119 <3> (+4)` | :arrow_up: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5129/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `83.784% <0%> (-2.883%)` | `4% <0%> (ø)` | |; | [...ngine/spark/AddContextDataToReadSparkUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5129/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvQWRkQ29udGV4dERhdGFUb1JlYWRTcGFya1VuaXRUZXN0LmphdmE=) | `92.453% <0%> (-2.142%)` | `12% <0%> (+6%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5129/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `90.909% <0%> (-1.948%)` | `12% <0%> (+6%)` | |; | [...r/utils/read/markduplicates/sparkrecords/Pair.java,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415456740
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417095082:134,Availability,Down,Downloads,134,"I just tested your branch @kvinter1 with some data at hand with the following command:; ```; ./gatk SelectVariants \; -V /Users/shlee/Downloads/gatk_bundle_1807/2-germline/input_vcfs/trio.vcf.gz \; -sn NA12878 \; --exclude-non-variants ; --remove-unused-alternates \; -O trio_excludeNVrmvUA.vcf.gz; ```. And when I grep for the spanning deletion with `gzcat trio_excludeNVrmvUA.vcf.gz | grep -v '##' | grep '*' | awk '$5=""*""' | wc -l`, I see two records pop up:; ```; 20 19013133 . C * 2084.57 . AC=1,1;AF=0.500,0.500;AN=2;BaseQRankSum=1.46;ClippingRankSum=0.00;DP=48;ExcessHet=3.9794;FS=0.000;MQ=44.84;MQRankSum=-4.256e+00;QD=18.29;ReadPosRankSum=-3.990e-01;SOR=0.672 GT:AD:DP:GQ:PL 1/2:0,0,18:48:1:732,732,732,1,0,178; 20 25939208 . A * 352.14 . AC=1,1;AF=0.500,0.500;AN=2;BaseQRankSum=1.14;ClippingRankSum=0.00;DP=12;ExcessHet=3.0103;FS=21.733;MQ=31.92;MQRankSum=-3.331e+00;QD=11.74;ReadPosRankSum=1.99;SOR=1.570 GT:AD:DP:GQ:PL 1/2:1,0,6:12:15:195,156,177,15,0,923; ```. I assume testing functionality is what you meant for review? In terms of updating the JavaDoc portion, is this something you can write a draft of, e.g. a summary of the functionality implemented. I noticed there were no changes to the doc portions. Your synopsis is something I can then review for clarity and style. P.S. I should mention otherwise your branch removed 511 such unwanted records. Nice.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417095082
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417095082:7,Testability,test,tested,7,"I just tested your branch @kvinter1 with some data at hand with the following command:; ```; ./gatk SelectVariants \; -V /Users/shlee/Downloads/gatk_bundle_1807/2-germline/input_vcfs/trio.vcf.gz \; -sn NA12878 \; --exclude-non-variants ; --remove-unused-alternates \; -O trio_excludeNVrmvUA.vcf.gz; ```. And when I grep for the spanning deletion with `gzcat trio_excludeNVrmvUA.vcf.gz | grep -v '##' | grep '*' | awk '$5=""*""' | wc -l`, I see two records pop up:; ```; 20 19013133 . C * 2084.57 . AC=1,1;AF=0.500,0.500;AN=2;BaseQRankSum=1.46;ClippingRankSum=0.00;DP=48;ExcessHet=3.9794;FS=0.000;MQ=44.84;MQRankSum=-4.256e+00;QD=18.29;ReadPosRankSum=-3.990e-01;SOR=0.672 GT:AD:DP:GQ:PL 1/2:0,0,18:48:1:732,732,732,1,0,178; 20 25939208 . A * 352.14 . AC=1,1;AF=0.500,0.500;AN=2;BaseQRankSum=1.14;ClippingRankSum=0.00;DP=12;ExcessHet=3.0103;FS=21.733;MQ=31.92;MQRankSum=-3.331e+00;QD=11.74;ReadPosRankSum=1.99;SOR=1.570 GT:AD:DP:GQ:PL 1/2:1,0,6:12:15:195,156,177,15,0,923; ```. I assume testing functionality is what you meant for review? In terms of updating the JavaDoc portion, is this something you can write a draft of, e.g. a summary of the functionality implemented. I noticed there were no changes to the doc portions. Your synopsis is something I can then review for clarity and style. P.S. I should mention otherwise your branch removed 511 such unwanted records. Nice.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417095082
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417095082:983,Testability,test,testing,983,"I just tested your branch @kvinter1 with some data at hand with the following command:; ```; ./gatk SelectVariants \; -V /Users/shlee/Downloads/gatk_bundle_1807/2-germline/input_vcfs/trio.vcf.gz \; -sn NA12878 \; --exclude-non-variants ; --remove-unused-alternates \; -O trio_excludeNVrmvUA.vcf.gz; ```. And when I grep for the spanning deletion with `gzcat trio_excludeNVrmvUA.vcf.gz | grep -v '##' | grep '*' | awk '$5=""*""' | wc -l`, I see two records pop up:; ```; 20 19013133 . C * 2084.57 . AC=1,1;AF=0.500,0.500;AN=2;BaseQRankSum=1.46;ClippingRankSum=0.00;DP=48;ExcessHet=3.9794;FS=0.000;MQ=44.84;MQRankSum=-4.256e+00;QD=18.29;ReadPosRankSum=-3.990e-01;SOR=0.672 GT:AD:DP:GQ:PL 1/2:0,0,18:48:1:732,732,732,1,0,178; 20 25939208 . A * 352.14 . AC=1,1;AF=0.500,0.500;AN=2;BaseQRankSum=1.14;ClippingRankSum=0.00;DP=12;ExcessHet=3.0103;FS=21.733;MQ=31.92;MQRankSum=-3.331e+00;QD=11.74;ReadPosRankSum=1.99;SOR=1.570 GT:AD:DP:GQ:PL 1/2:1,0,6:12:15:195,156,177,15,0,923; ```. I assume testing functionality is what you meant for review? In terms of updating the JavaDoc portion, is this something you can write a draft of, e.g. a summary of the functionality implemented. I noticed there were no changes to the doc portions. Your synopsis is something I can then review for clarity and style. P.S. I should mention otherwise your branch removed 511 such unwanted records. Nice.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417095082
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417312492:95,Deployability,integrat,integration,95,@sooheelee can you share that input file with Katie so she can add the het-non-ref case to the integration tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417312492
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417312492:95,Integrability,integrat,integration,95,@sooheelee can you share that input file with Katie so she can add the het-non-ref case to the integration tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417312492
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417312492:107,Testability,test,tests,107,@sooheelee can you share that input file with Katie so she can add the het-non-ref case to the integration tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417312492
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417326998:17,Availability,avail,available,17,It is publically available in the GATK workshop bundle but here it is for convenience:. [forKatieFromSooHee.zip](https://github.com/broadinstitute/gatk/files/2336419/forKatieFromSooHee.zip),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417326998
https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417441866:5,Usability,learn,learned,5,"Just learned `awk '$5=""*""'` replaces `T,*` with `*` and the correct usage is `awk '5~""*""'`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417441866
https://github.com/broadinstitute/gatk/issues/5130#issuecomment-416759214:25,Availability,error,error,25,"I am getting the similar error (gatk 4.0.8.1), and in my case, it does not help even if I trim end by 1-base. Does trimming one base also apply to length of an entire chromosome if I am supplying `-L 1:1-100000`?. ```; [August 28, 2018 6:10:37 PM EDT] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.45 minutes.; Runtime.totalMemory()=2649751552; java.lang.StringIndexOutOfBoundsException: String index out of range: 177; at java.lang.String.substring(String.java:1963); at org.broadinstitute.hellbender.tools.walkers.annotator.ReferenceBases.annotate(ReferenceBases.java:48); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.annotateContext(VariantAnnotatorEngine.java:270); at org.broadinstitute.hellbender.tools.walkers.mutect.SomaticGenotypingEngine.callMutations(SomaticGenotypingEngine.java:176); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.callRegion(Mutect2Engine.java:211); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.apply(Mutect2.java:212); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:291); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:979); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:137); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:182); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:201); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5130#issuecomment-416759214
https://github.com/broadinstitute/gatk/issues/5130#issuecomment-416777409:131,Safety,avoid,avoiding,131,"Samir;; I'm not entirely sure about the fix, but based on where I think it's coming from you'll want to work around the problem by avoiding at least 10bp towards the start/end of a chromosome. That's the amount of sequence context it's filling around the variant. Hope this helps for your problem case.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5130#issuecomment-416777409
https://github.com/broadinstitute/gatk/issues/5130#issuecomment-417475637:48,Availability,error,error,48,"@chapmanb, @sbamin, thank you for reporting the error. I fixed the bug by padding the reference bases with N's when we reach the end of the chromosome, with the variant base in the middle . But in retrospect, I'm pretty sure @davidbenjamin would rather slide the center and get real bases (i.e. variant need not be in the center). So I'll write that version tomorrow. PR is #5151",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5130#issuecomment-417475637
https://github.com/broadinstitute/gatk/pull/5132#issuecomment-422530496:69,Testability,test,tests,69,@broadinstitute/gatk-sv-methods ready for review. Need to write some tests though.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5132#issuecomment-422530496
https://github.com/broadinstitute/gatk/pull/5132#issuecomment-729911578:81,Deployability,pipeline,pipeline,81,"There's some good stuff here that I don't want to lose, but it won't work in the pipeline in its current form. I'm going to close the PR, but let's keep the branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5132#issuecomment-729911578
https://github.com/broadinstitute/gatk/issues/5133#issuecomment-415874170:0,Deployability,Update,Update,0,"Update: I have looked as far back as gatk4.0 and found the same issue, so it likely isn't a recent Hadoop-BAM issue (like the new split guessing).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5133#issuecomment-415874170
https://github.com/broadinstitute/gatk/issues/5133#issuecomment-419539317:96,Deployability,update,updated,96,"Based on testing performed on google cloud, this problem seems to have resolved itself after we updated to the newest googleCloudJava package in this #5135. Something fixed by switching off of our ancient fork must have been responsible for the file being misread by spark. I suggest we close this issue as it appears to be resolved unless @droazen you want to do a post-mortem to figure out what the relevant change must have been?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5133#issuecomment-419539317
https://github.com/broadinstitute/gatk/issues/5133#issuecomment-419539317:17,Performance,perform,performed,17,"Based on testing performed on google cloud, this problem seems to have resolved itself after we updated to the newest googleCloudJava package in this #5135. Something fixed by switching off of our ancient fork must have been responsible for the file being misread by spark. I suggest we close this issue as it appears to be resolved unless @droazen you want to do a post-mortem to figure out what the relevant change must have been?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5133#issuecomment-419539317
https://github.com/broadinstitute/gatk/issues/5133#issuecomment-419539317:9,Testability,test,testing,9,"Based on testing performed on google cloud, this problem seems to have resolved itself after we updated to the newest googleCloudJava package in this #5135. Something fixed by switching off of our ancient fork must have been responsible for the file being misread by spark. I suggest we close this issue as it appears to be resolved unless @droazen you want to do a post-mortem to figure out what the relevant change must have been?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5133#issuecomment-419539317
https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416313694:41,Testability,test,tests,41,"@jonn-smith @droazen I forgot to run the tests on my laptop before PR. Anyway, should be okay now. If not, I'll fix (again).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416313694
https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416596440:87,Testability,test,tests,87,@jonn-smith @droazen Had to make two very small changes. Should be ready for review if tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416596440
https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416624628:2501,Usability,Simpl,SimpleKeyXsvFuncotationFactory,2501,8)` | :arrow_up: |; | [...uncotator/mafOutput/MafOutputRendererUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5134/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL21hZk91dHB1dC9NYWZPdXRwdXRSZW5kZXJlclVuaXRUZXN0LmphdmE=) | `98.535% <ø> (ø)` | `16 <0> (?)` | |; | [...decs/xsvLocatableTable/XsvLocatableTableCodec.java](https://codecov.io/gh/broadinstitute/gatk/pull/5134/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb2RlY3MveHN2TG9jYXRhYmxlVGFibGUvWHN2TG9jYXRhYmxlVGFibGVDb2RlYy5qYXZh) | `82.716% <ø> (+74.074%)` | `60 <0> (+54)` | :arrow_up: |; | [...te/hellbender/tools/funcotator/FuncotationMap.java](https://codecov.io/gh/broadinstitute/gatk/pull/5134/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0aW9uTWFwLmphdmE=) | `84.211% <ø> (+84.211%)` | `28 <0> (+28)` | :arrow_up: |; | [...ataSources/xsv/SimpleKeyXsvFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5134/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3hzdi9TaW1wbGVLZXlYc3ZGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `87.097% <ø> (+87.097%)` | `27 <0> (+27)` | :arrow_up: |; | [...tools/funcotator/FuncotatorArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5134/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JBcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `100% <100%> (ø)` | `1 <1> (?)` | |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5134/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `86.364% <100%> (+69.697%)` | `16 <5> (+12)` | :arrow_up: |; | [...oadinstitute/hellbender/engine/FeatureCont,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416624628
https://github.com/broadinstitute/gatk/pull/5135#issuecomment-415870522:70,Testability,test,test,70,"Confirmed that `0.59.0` fixes #3591, whereas `0.58.0` failed the same test case.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5135#issuecomment-415870522
https://github.com/broadinstitute/gatk/pull/5137#issuecomment-417765778:46,Availability,error,errors,46,@magicDGS This PR appears to have compilation errors -- could you fix these before I review?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5137#issuecomment-417765778
https://github.com/broadinstitute/gatk/pull/5137#issuecomment-419719177:3236,Deployability,pipeline,pipelines,3236,| `97.826% <100%> (ø)` | `22 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/cmdline/CommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/5137/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0NvbW1hbmRMaW5lUHJvZ3JhbS5qYXZh) | `82.639% <73.333%> (-0.478%)` | `43 <7> (ø)` | |; | [...GATKDefaultCLPConfigurationArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5137/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvR0FUS0RlZmF1bHRDTFBDb25maWd1cmF0aW9uQXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `95.455% <95.455%> (ø)` | `10 <10> (?)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5137/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5137/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5137/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `57.143% <0%> (-23.377%)` | `31% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/5137/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | ... and [6 more](https://codecov.io/gh/broadinstitute/gatk/pull/5137/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5137#issuecomment-419719177
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035:561,Availability,down,down,561,"There are currently two failing tests, both of which need fixes in htsjdk.; * CountVariantsSparkIntegrationTest. This is a concurrency issue where VCFCodec (which isn't threadsafe) is being shared by multiple tasks in each Spark executor. The fix is for each task (partition) to have its own VCFCodec. This needs a couple of small changes in htsjdk to make it possible to access the codec's version and header fields so the codec can be recreated. See https://github.com/samtools/htsjdk/pull/1176.; * CpxVariantReInterpreterSparkIntegrationTest. I tracked this down to a problem with the buffer in htsjdk's SeekableBufferedStream. See https://github.com/samtools/htsjdk/pull/1175 for the fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035:123,Performance,concurren,concurrency,123,"There are currently two failing tests, both of which need fixes in htsjdk.; * CountVariantsSparkIntegrationTest. This is a concurrency issue where VCFCodec (which isn't threadsafe) is being shared by multiple tasks in each Spark executor. The fix is for each task (partition) to have its own VCFCodec. This needs a couple of small changes in htsjdk to make it possible to access the codec's version and header fields so the codec can be recreated. See https://github.com/samtools/htsjdk/pull/1176.; * CpxVariantReInterpreterSparkIntegrationTest. I tracked this down to a problem with the buffer in htsjdk's SeekableBufferedStream. See https://github.com/samtools/htsjdk/pull/1175 for the fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035:372,Security,access,access,372,"There are currently two failing tests, both of which need fixes in htsjdk.; * CountVariantsSparkIntegrationTest. This is a concurrency issue where VCFCodec (which isn't threadsafe) is being shared by multiple tasks in each Spark executor. The fix is for each task (partition) to have its own VCFCodec. This needs a couple of small changes in htsjdk to make it possible to access the codec's version and header fields so the codec can be recreated. See https://github.com/samtools/htsjdk/pull/1176.; * CpxVariantReInterpreterSparkIntegrationTest. I tracked this down to a problem with the buffer in htsjdk's SeekableBufferedStream. See https://github.com/samtools/htsjdk/pull/1175 for the fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035:32,Testability,test,tests,32,"There are currently two failing tests, both of which need fixes in htsjdk.; * CountVariantsSparkIntegrationTest. This is a concurrency issue where VCFCodec (which isn't threadsafe) is being shared by multiple tasks in each Spark executor. The fix is for each task (partition) to have its own VCFCodec. This needs a couple of small changes in htsjdk to make it possible to access the codec's version and header fields so the codec can be recreated. See https://github.com/samtools/htsjdk/pull/1176.; * CpxVariantReInterpreterSparkIntegrationTest. I tracked this down to a problem with the buffer in htsjdk's SeekableBufferedStream. See https://github.com/samtools/htsjdk/pull/1175 for the fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235:133,Deployability,toggle,toggle,133,"@tomwhite After spending some time searching for this feature for my testing purposes, it would be helpful to expose the NIO adapter toggle directly from the command line in this branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235:125,Energy Efficiency,adapt,adapter,125,"@tomwhite After spending some time searching for this feature for my testing purposes, it would be helpful to expose the NIO adapter toggle directly from the command line in this branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235:125,Integrability,adapter,adapter,125,"@tomwhite After spending some time searching for this feature for my testing purposes, it would be helpful to expose the NIO adapter toggle directly from the command line in this branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235:125,Modifiability,adapt,adapter,125,"@tomwhite After spending some time searching for this feature for my testing purposes, it would be helpful to expose the NIO adapter toggle directly from the command line in this branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235:110,Security,expose,expose,110,"@tomwhite After spending some time searching for this feature for my testing purposes, it would be helpful to expose the NIO adapter toggle directly from the command line in this branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235:69,Testability,test,testing,69,"@tomwhite After spending some time searching for this feature for my testing purposes, it would be helpful to expose the NIO adapter toggle directly from the command line in this branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-422341161:39,Deployability,update,updated,39,Htsjdk and the Disq snapshot have been updated and now the previously failing tests are passing.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-422341161
https://github.com/broadinstitute/gatk/pull/5138#issuecomment-422341161:78,Testability,test,tests,78,Htsjdk and the Disq snapshot have been updated and now the previously failing tests are passing.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-422341161
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910:267,Availability,down,downloads,267,"@EdwardDixon Thanks for trying this - it would be great if we were able to have a single conda env, but a couple of questions:. - We'd need to understand the affect of this change on our build times. It looks like the travis builds are failing because the dependency downloads are resulting in so many progress messages that we're exceeding the allowable log length, probably because the download is either large or slow. I'm not sure if thats transient or not.; - We try to carefully control the size of our (already sizable) docker image. We'll need to understand how this impacts that.; - @lucidtronix Any thoughts on moving from tensorflow 1.4 to 1.9 ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910:388,Availability,down,download,388,"@EdwardDixon Thanks for trying this - it would be great if we were able to have a single conda env, but a couple of questions:. - We'd need to understand the affect of this change on our build times. It looks like the travis builds are failing because the dependency downloads are resulting in so many progress messages that we're exceeding the allowable log length, probably because the download is either large or slow. I'm not sure if thats transient or not.; - We try to carefully control the size of our (already sizable) docker image. We'll need to understand how this impacts that.; - @lucidtronix Any thoughts on moving from tensorflow 1.4 to 1.9 ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910:256,Integrability,depend,dependency,256,"@EdwardDixon Thanks for trying this - it would be great if we were able to have a single conda env, but a couple of questions:. - We'd need to understand the affect of this change on our build times. It looks like the travis builds are failing because the dependency downloads are resulting in so many progress messages that we're exceeding the allowable log length, probably because the download is either large or slow. I'm not sure if thats transient or not.; - We try to carefully control the size of our (already sizable) docker image. We'll need to understand how this impacts that.; - @lucidtronix Any thoughts on moving from tensorflow 1.4 to 1.9 ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910:311,Integrability,message,messages,311,"@EdwardDixon Thanks for trying this - it would be great if we were able to have a single conda env, but a couple of questions:. - We'd need to understand the affect of this change on our build times. It looks like the travis builds are failing because the dependency downloads are resulting in so many progress messages that we're exceeding the allowable log length, probably because the download is either large or slow. I'm not sure if thats transient or not.; - We try to carefully control the size of our (already sizable) docker image. We'll need to understand how this impacts that.; - @lucidtronix Any thoughts on moving from tensorflow 1.4 to 1.9 ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910:355,Testability,log,log,355,"@EdwardDixon Thanks for trying this - it would be great if we were able to have a single conda env, but a couple of questions:. - We'd need to understand the affect of this change on our build times. It looks like the travis builds are failing because the dependency downloads are resulting in so many progress messages that we're exceeding the allowable log length, probably because the download is either large or slow. I'm not sure if thats transient or not.; - We try to carefully control the size of our (already sizable) docker image. We'll need to understand how this impacts that.; - @lucidtronix Any thoughts on moving from tensorflow 1.4 to 1.9 ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416943910
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416991160:48,Availability,avail,available,48,"@EdwardDixon What is the behavior if AVX is not available? Does it crash/refuse to run, or is there a graceful automatic fallback to non-vectorized code? Without such a fallback in place, I'm not sure we could switch to it exclusively.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-416991160
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417041021:678,Availability,avail,available,678,"No AVX = it'll crash... sounds bad, I admit. But remember we are talking about running a deep neural network over a large dataset: is someone really going to want to do that on hardware that is 8 years old (pre-AVX)? This version of TensorFlow is now the _default_ for all Anaconda users, which in practice probably means a sizeable fraction of the machine learning community, and so having minimum hardware requirements in line with theirs is perhaps not so unreasonable?. Another option would be to change the default: have the gatk enviroment use the accelerated TensorFlow (since almost everyone has AVX, and they can get a 10X or so speedup), but make a second environment available for people that want to try to run a deep neural network on very old hardware - gatk-old?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417041021
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417041021:357,Usability,learn,learning,357,"No AVX = it'll crash... sounds bad, I admit. But remember we are talking about running a deep neural network over a large dataset: is someone really going to want to do that on hardware that is 8 years old (pre-AVX)? This version of TensorFlow is now the _default_ for all Anaconda users, which in practice probably means a sizeable fraction of the machine learning community, and so having minimum hardware requirements in line with theirs is perhaps not so unreasonable?. Another option would be to change the default: have the gatk enviroment use the accelerated TensorFlow (since almost everyone has AVX, and they can get a 10X or so speedup), but make a second environment available for people that want to try to run a deep neural network on very old hardware - gatk-old?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417041021
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151:415,Deployability,patch,patched,415,"@EdwardDixon Well, you'd be surprised at some of the hardware we have to deal with. Even some machines here at the Broad don't have AVX. In general, our policy with hardware-dependent optimizations in GATK has been to insist on having a transparent fallback mechanism when the required hardware isn't present -- I'd really prefer not to start making exceptions to that rule. Could the Intel-optimized Tensorflow be patched to fall back to vanilla tensorflow when AVX is not present? Is that an option? Or could it at least be patched to not actually crash in that case?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151:526,Deployability,patch,patched,526,"@EdwardDixon Well, you'd be surprised at some of the hardware we have to deal with. Even some machines here at the Broad don't have AVX. In general, our policy with hardware-dependent optimizations in GATK has been to insist on having a transparent fallback mechanism when the required hardware isn't present -- I'd really prefer not to start making exceptions to that rule. Could the Intel-optimized Tensorflow be patched to fall back to vanilla tensorflow when AVX is not present? Is that an option? Or could it at least be patched to not actually crash in that case?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151:174,Integrability,depend,dependent,174,"@EdwardDixon Well, you'd be surprised at some of the hardware we have to deal with. Even some machines here at the Broad don't have AVX. In general, our policy with hardware-dependent optimizations in GATK has been to insist on having a transparent fallback mechanism when the required hardware isn't present -- I'd really prefer not to start making exceptions to that rule. Could the Intel-optimized Tensorflow be patched to fall back to vanilla tensorflow when AVX is not present? Is that an option? Or could it at least be patched to not actually crash in that case?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151:184,Performance,optimiz,optimizations,184,"@EdwardDixon Well, you'd be surprised at some of the hardware we have to deal with. Even some machines here at the Broad don't have AVX. In general, our policy with hardware-dependent optimizations in GATK has been to insist on having a transparent fallback mechanism when the required hardware isn't present -- I'd really prefer not to start making exceptions to that rule. Could the Intel-optimized Tensorflow be patched to fall back to vanilla tensorflow when AVX is not present? Is that an option? Or could it at least be patched to not actually crash in that case?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151:391,Performance,optimiz,optimized,391,"@EdwardDixon Well, you'd be surprised at some of the hardware we have to deal with. Even some machines here at the Broad don't have AVX. In general, our policy with hardware-dependent optimizations in GATK has been to insist on having a transparent fallback mechanism when the required hardware isn't present -- I'd really prefer not to start making exceptions to that rule. Could the Intel-optimized Tensorflow be patched to fall back to vanilla tensorflow when AVX is not present? Is that an option? Or could it at least be patched to not actually crash in that case?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417073151
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417366430:335,Usability,Learn,Learning,335,"This sounds like a good rule, in general. In this case though, if users are going to run deep neural networks, there is going to be a substantial computational burden, such that running them is unlikely to appeal to users with older hardware (about 95% of users who _train_ these models use accelerators, for example - one reason Deep Learning didn't really take off till 2014). If you could see your way to making AVX (i.e. 8 year old hardware) the minimum requirement for your default docker image, you would be giving a 10X speedup to almost every user.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417366430
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038:281,Availability,avail,available,281,"@EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including university clusters that they have no power to upgrade), and we can't just cut these users off by imposing such a minimum hardware requirement. The best we can do is to use AVX when it's available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they are often hard to diagnose and deal with. Things like `SIGSEGV` or `SIGILL` are a nightmare for our support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message when AVX is not present rather than a crash, before we could make this the default in GATK.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038:589,Availability,failure,failure,589,"@EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including university clusters that they have no power to upgrade), and we can't just cut these users off by imposing such a minimum hardware requirement. The best we can do is to use AVX when it's available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they are often hard to diagnose and deal with. Things like `SIGSEGV` or `SIGILL` are a nightmare for our support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message when AVX is not present rather than a crash, before we could make this the default in GATK.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038:624,Availability,error,error,624,"@EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including university clusters that they have no power to upgrade), and we can't just cut these users off by imposing such a minimum hardware requirement. The best we can do is to use AVX when it's available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they are often hard to diagnose and deal with. Things like `SIGSEGV` or `SIGILL` are a nightmare for our support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message when AVX is not present rather than a crash, before we could make this the default in GATK.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038:141,Deployability,upgrade,upgrade,141,"@EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including university clusters that they have no power to upgrade), and we can't just cut these users off by imposing such a minimum hardware requirement. The best we can do is to use AVX when it's available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they are often hard to diagnose and deal with. Things like `SIGSEGV` or `SIGILL` are a nightmare for our support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message when AVX is not present rather than a crash, before we could make this the default in GATK.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038:132,Energy Efficiency,power,power,132,"@EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including university clusters that they have no power to upgrade), and we can't just cut these users off by imposing such a minimum hardware requirement. The best we can do is to use AVX when it's available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they are often hard to diagnose and deal with. Things like `SIGSEGV` or `SIGILL` are a nightmare for our support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message when AVX is not present rather than a crash, before we could make this the default in GATK.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038:630,Integrability,message,message,630,"@EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including university clusters that they have no power to upgrade), and we can't just cut these users off by imposing such a minimum hardware requirement. The best we can do is to use AVX when it's available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they are often hard to diagnose and deal with. Things like `SIGSEGV` or `SIGILL` are a nightmare for our support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message when AVX is not present rather than a crash, before we could make this the default in GATK.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417383038
https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417385009:134,Availability,failure,failures,134,"Aside from the users with old hardware, very few of the GCS zones guarantee processors that support AVX, which would lead to sporadic failures except in central-1f, for example.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5142#issuecomment-417385009
https://github.com/broadinstitute/gatk/issues/5143#issuecomment-416985644:60,Usability,clear,clear,60,"Interesting, thanks for doing this experiment. It's already clear to me that Funcotator will need a different caching strategy for https://github.com/broadinstitute/gatk/issues/4771 -- I was going to implement one after merging your reads caching PR. Re-assigning this ticket to myself.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5143#issuecomment-416985644
https://github.com/broadinstitute/gatk/issues/5143#issuecomment-416986210:98,Performance,perform,performance,98,I'll add that we do already know that the existing caching strategy massively improves Funcotator performance (by about an order of magnitude!) due to an evaluation that @lbergelson did.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5143#issuecomment-416986210
https://github.com/broadinstitute/gatk/pull/5144#issuecomment-418897366:10,Testability,test,testing,10,"Again, my testing is outlined in https://github.com/broadinstitute/gatk/issues/3487.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-418897366
https://github.com/broadinstitute/gatk/pull/5144#issuecomment-419220822:62,Testability,test,tested,62,Thank you for the much-improved stdout messaging @kachulis. I tested it out and noted the changes again in the issue ticket. 👍🏽,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-419220822
https://github.com/broadinstitute/gatk/pull/5144#issuecomment-420384916:161,Testability,test,tests,161,"@jamesemery I consolidated the additions to ``GATKVariantContextUtils`` to use the methods in ``AlleleSubsettingUtils`` as much as possible, and also added more tests of pathological case (long alleles in long repeats, etc.) so now back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-420384916
https://github.com/broadinstitute/gatk/issues/5145#issuecomment-417355592:255,Availability,down,download,255,"It appears that the linux version of the packaged libfml was compiled with a different version of gcc than the one on jprnz's machine. (We compile so that we have the right version for a Google dataproc cluster.); I think the best thing to do would be to download git@github.com:broadinstitute/gatk-fermilite-jni.git, and follow the instructions in the last paragraph of the readme for doing a local recompilation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5145#issuecomment-417355592
https://github.com/broadinstitute/gatk/pull/5146#issuecomment-419549217:103,Performance,multi-thread,multi-threading,103,"In addition, I haven't been very through about how the random number generator is interacting with the multi-threading part, so just to be cautious: https://stackoverflow.com/questions/22313552/contention-in-concurrent-use-of-java-util-random",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5146#issuecomment-419549217
https://github.com/broadinstitute/gatk/pull/5146#issuecomment-419549217:208,Performance,concurren,concurrent-use-of-java-util-random,208,"In addition, I haven't been very through about how the random number generator is interacting with the multi-threading part, so just to be cautious: https://stackoverflow.com/questions/22313552/contention-in-concurrent-use-of-java-util-random",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5146#issuecomment-419549217
https://github.com/broadinstitute/gatk/pull/5147#issuecomment-454122013:69,Deployability,release,release,69,@samuelklee Is this PR something your team wants to get into the 4.1 release?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5147#issuecomment-454122013
https://github.com/broadinstitute/gatk/pull/5150#issuecomment-417719781:189,Testability,test,tested,189,"@LeeTL1220 - correct. It does bucket/local transfers in any combination. Really, it should handle transfers between any two valid NIO endpoints (though right now only buckets and local are tested in the unit tests).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5150#issuecomment-417719781
https://github.com/broadinstitute/gatk/pull/5150#issuecomment-417719781:208,Testability,test,tests,208,"@LeeTL1220 - correct. It does bucket/local transfers in any combination. Really, it should handle transfers between any two valid NIO endpoints (though right now only buckets and local are tested in the unit tests).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5150#issuecomment-417719781
https://github.com/broadinstitute/gatk/pull/5150#issuecomment-419589879:11,Testability,test,tests,11,"The Travis tests are failing because the FIFOFILE that I created in the expected output dir for the tar.gz extraction tests does not seem to exist in git lfs. @droazen @lbergelson Do either of you know if this is a limitation or if there is some way to fix it? I can make a system call to extract the files for the expected results, but that's gross.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5150#issuecomment-419589879
https://github.com/broadinstitute/gatk/pull/5150#issuecomment-419589879:118,Testability,test,tests,118,"The Travis tests are failing because the FIFOFILE that I created in the expected output dir for the tar.gz extraction tests does not seem to exist in git lfs. @droazen @lbergelson Do either of you know if this is a limitation or if there is some way to fix it? I can make a system call to extract the files for the expected results, but that's gross.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5150#issuecomment-419589879
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418496216:47,Usability,Simpl,SimpleInterval,47,Have you considered merging `SVInterval` with `SimpleInterval`? What's the rationale for keeping them separate?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418496216
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418501188:63,Availability,down,down,63,"I wonder if we could factor out a common base interface to cut down on code duplication, and ensure a more consistent API across `SimpleInterval` and `SVInterval`?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418501188
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418501188:46,Integrability,interface,interface,46,"I wonder if we could factor out a common base interface to cut down on code duplication, and ensure a more consistent API across `SimpleInterval` and `SVInterval`?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418501188
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418501188:130,Usability,Simpl,SimpleInterval,130,"I wonder if we could factor out a common base interface to cut down on code duplication, and ensure a more consistent API across `SimpleInterval` and `SVInterval`?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418501188
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418509374:245,Performance,perform,performance,245,"Hmmm....as an alternate proposal, what if we implemented a custom serializer for `SimpleInterval` that does the contig name -> index and index -> contig name conversion transparently at serialization/deserialization time? Would that address the performance issue with shuffles and allow us all to share the same interval class?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418509374
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418509374:82,Usability,Simpl,SimpleInterval,82,"Hmmm....as an alternate proposal, what if we implemented a custom serializer for `SimpleInterval` that does the contig name -> index and index -> contig name conversion transparently at serialization/deserialization time? Would that address the performance issue with shuffles and allow us all to share the same interval class?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418509374
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720:388,Performance,cache,cache,388,"SVIntervals are comparable, and provide the same total order as coordinate-sorted BAMs. They can encode any contiguous stretch of bases on the reference, or strand-sensitively on its reverse complement. They can encode 0-length intervals (i.e., locations) to indicate things like the precise, unambiguous location of an insert between two reference bases. They're super light-weight, and cache friendly (no references), and they can be compared and tested for equality quickly and locally. They know how to serialize themselves with Kryo. They have a much more complete set of operations to calculate overlaps and underlaps, total order, etc. How will we implement isUpstreamOf using SimpleIntervals, when SimpleIntervals has no concept of contig order?; I think we'd have a heck of a job retrofitting our code to use SimpleIntervals, and a lot of testing to do to prove that the performance loss isn't significant. I'm sorry we struck out in an incompatible direction, but SimpleInterval just didn't seem up to the job at the time we started the SV project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720:880,Performance,perform,performance,880,"SVIntervals are comparable, and provide the same total order as coordinate-sorted BAMs. They can encode any contiguous stretch of bases on the reference, or strand-sensitively on its reverse complement. They can encode 0-length intervals (i.e., locations) to indicate things like the precise, unambiguous location of an insert between two reference bases. They're super light-weight, and cache friendly (no references), and they can be compared and tested for equality quickly and locally. They know how to serialize themselves with Kryo. They have a much more complete set of operations to calculate overlaps and underlaps, total order, etc. How will we implement isUpstreamOf using SimpleIntervals, when SimpleIntervals has no concept of contig order?; I think we'd have a heck of a job retrofitting our code to use SimpleIntervals, and a lot of testing to do to prove that the performance loss isn't significant. I'm sorry we struck out in an incompatible direction, but SimpleInterval just didn't seem up to the job at the time we started the SV project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720:449,Testability,test,tested,449,"SVIntervals are comparable, and provide the same total order as coordinate-sorted BAMs. They can encode any contiguous stretch of bases on the reference, or strand-sensitively on its reverse complement. They can encode 0-length intervals (i.e., locations) to indicate things like the precise, unambiguous location of an insert between two reference bases. They're super light-weight, and cache friendly (no references), and they can be compared and tested for equality quickly and locally. They know how to serialize themselves with Kryo. They have a much more complete set of operations to calculate overlaps and underlaps, total order, etc. How will we implement isUpstreamOf using SimpleIntervals, when SimpleIntervals has no concept of contig order?; I think we'd have a heck of a job retrofitting our code to use SimpleIntervals, and a lot of testing to do to prove that the performance loss isn't significant. I'm sorry we struck out in an incompatible direction, but SimpleInterval just didn't seem up to the job at the time we started the SV project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720:848,Testability,test,testing,848,"SVIntervals are comparable, and provide the same total order as coordinate-sorted BAMs. They can encode any contiguous stretch of bases on the reference, or strand-sensitively on its reverse complement. They can encode 0-length intervals (i.e., locations) to indicate things like the precise, unambiguous location of an insert between two reference bases. They're super light-weight, and cache friendly (no references), and they can be compared and tested for equality quickly and locally. They know how to serialize themselves with Kryo. They have a much more complete set of operations to calculate overlaps and underlaps, total order, etc. How will we implement isUpstreamOf using SimpleIntervals, when SimpleIntervals has no concept of contig order?; I think we'd have a heck of a job retrofitting our code to use SimpleIntervals, and a lot of testing to do to prove that the performance loss isn't significant. I'm sorry we struck out in an incompatible direction, but SimpleInterval just didn't seem up to the job at the time we started the SV project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720:684,Usability,Simpl,SimpleIntervals,684,"SVIntervals are comparable, and provide the same total order as coordinate-sorted BAMs. They can encode any contiguous stretch of bases on the reference, or strand-sensitively on its reverse complement. They can encode 0-length intervals (i.e., locations) to indicate things like the precise, unambiguous location of an insert between two reference bases. They're super light-weight, and cache friendly (no references), and they can be compared and tested for equality quickly and locally. They know how to serialize themselves with Kryo. They have a much more complete set of operations to calculate overlaps and underlaps, total order, etc. How will we implement isUpstreamOf using SimpleIntervals, when SimpleIntervals has no concept of contig order?; I think we'd have a heck of a job retrofitting our code to use SimpleIntervals, and a lot of testing to do to prove that the performance loss isn't significant. I'm sorry we struck out in an incompatible direction, but SimpleInterval just didn't seem up to the job at the time we started the SV project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720:706,Usability,Simpl,SimpleIntervals,706,"SVIntervals are comparable, and provide the same total order as coordinate-sorted BAMs. They can encode any contiguous stretch of bases on the reference, or strand-sensitively on its reverse complement. They can encode 0-length intervals (i.e., locations) to indicate things like the precise, unambiguous location of an insert between two reference bases. They're super light-weight, and cache friendly (no references), and they can be compared and tested for equality quickly and locally. They know how to serialize themselves with Kryo. They have a much more complete set of operations to calculate overlaps and underlaps, total order, etc. How will we implement isUpstreamOf using SimpleIntervals, when SimpleIntervals has no concept of contig order?; I think we'd have a heck of a job retrofitting our code to use SimpleIntervals, and a lot of testing to do to prove that the performance loss isn't significant. I'm sorry we struck out in an incompatible direction, but SimpleInterval just didn't seem up to the job at the time we started the SV project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720:818,Usability,Simpl,SimpleIntervals,818,"SVIntervals are comparable, and provide the same total order as coordinate-sorted BAMs. They can encode any contiguous stretch of bases on the reference, or strand-sensitively on its reverse complement. They can encode 0-length intervals (i.e., locations) to indicate things like the precise, unambiguous location of an insert between two reference bases. They're super light-weight, and cache friendly (no references), and they can be compared and tested for equality quickly and locally. They know how to serialize themselves with Kryo. They have a much more complete set of operations to calculate overlaps and underlaps, total order, etc. How will we implement isUpstreamOf using SimpleIntervals, when SimpleIntervals has no concept of contig order?; I think we'd have a heck of a job retrofitting our code to use SimpleIntervals, and a lot of testing to do to prove that the performance loss isn't significant. I'm sorry we struck out in an incompatible direction, but SimpleInterval just didn't seem up to the job at the time we started the SV project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720
https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720:974,Usability,Simpl,SimpleInterval,974,"SVIntervals are comparable, and provide the same total order as coordinate-sorted BAMs. They can encode any contiguous stretch of bases on the reference, or strand-sensitively on its reverse complement. They can encode 0-length intervals (i.e., locations) to indicate things like the precise, unambiguous location of an insert between two reference bases. They're super light-weight, and cache friendly (no references), and they can be compared and tested for equality quickly and locally. They know how to serialize themselves with Kryo. They have a much more complete set of operations to calculate overlaps and underlaps, total order, etc. How will we implement isUpstreamOf using SimpleIntervals, when SimpleIntervals has no concept of contig order?; I think we'd have a heck of a job retrofitting our code to use SimpleIntervals, and a lot of testing to do to prove that the performance loss isn't significant. I'm sorry we struck out in an incompatible direction, but SimpleInterval just didn't seem up to the job at the time we started the SV project.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5154#issuecomment-418520720
https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789:89,Availability,down,download,89,"(you should see it in the travis logs where the tests are all being executed, a bunch of download statements)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789
https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789:33,Testability,log,logs,33,"(you should see it in the travis logs where the tests are all being executed, a bunch of download statements)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789
https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789:48,Testability,test,tests,48,"(you should see it in the travis logs where the tests are all being executed, a bunch of download statements)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789
https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418753777:59,Availability,down,download,59,"@lbergelson It looks like it did indeed still work to only download the gradle dependencies once, i'm going to squash and merge this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418753777
https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418753777:79,Integrability,depend,dependencies,79,"@lbergelson It looks like it did indeed still work to only download the gradle dependencies once, i'm going to squash and merge this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418753777
https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830:215,Availability,down,downloading,215,"@droazen I implemented the pr skipping on push builds if there's a pr branch. It seems to work. It has to spin up a vm to do the check, but that takes about a minute instead of many, and it avoids running tests and downloading lfs. The good things is that if it fails for some reason it should just continue on with the build, so flakiness in the github api or network connectivitiy will just result in some extra builds completing rather than extra failures. . <img width=""1054"" alt=""screen shot 2018-09-05 at 11 19 14 am"" src=""https://user-images.githubusercontent.com/4700332/45103843-c5b5ae00-b0fe-11e8-9934-0025af9836ee.png"">. I think I should add a github token though so we don't get api throttling. Should I just add one from my own account?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830
https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830:450,Availability,failure,failures,450,"@droazen I implemented the pr skipping on push builds if there's a pr branch. It seems to work. It has to spin up a vm to do the check, but that takes about a minute instead of many, and it avoids running tests and downloading lfs. The good things is that if it fails for some reason it should just continue on with the build, so flakiness in the github api or network connectivitiy will just result in some extra builds completing rather than extra failures. . <img width=""1054"" alt=""screen shot 2018-09-05 at 11 19 14 am"" src=""https://user-images.githubusercontent.com/4700332/45103843-c5b5ae00-b0fe-11e8-9934-0025af9836ee.png"">. I think I should add a github token though so we don't get api throttling. Should I just add one from my own account?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830
https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830:190,Safety,avoid,avoids,190,"@droazen I implemented the pr skipping on push builds if there's a pr branch. It seems to work. It has to spin up a vm to do the check, but that takes about a minute instead of many, and it avoids running tests and downloading lfs. The good things is that if it fails for some reason it should just continue on with the build, so flakiness in the github api or network connectivitiy will just result in some extra builds completing rather than extra failures. . <img width=""1054"" alt=""screen shot 2018-09-05 at 11 19 14 am"" src=""https://user-images.githubusercontent.com/4700332/45103843-c5b5ae00-b0fe-11e8-9934-0025af9836ee.png"">. I think I should add a github token though so we don't get api throttling. Should I just add one from my own account?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830
https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830:205,Testability,test,tests,205,"@droazen I implemented the pr skipping on push builds if there's a pr branch. It seems to work. It has to spin up a vm to do the check, but that takes about a minute instead of many, and it avoids running tests and downloading lfs. The good things is that if it fails for some reason it should just continue on with the build, so flakiness in the github api or network connectivitiy will just result in some extra builds completing rather than extra failures. . <img width=""1054"" alt=""screen shot 2018-09-05 at 11 19 14 am"" src=""https://user-images.githubusercontent.com/4700332/45103843-c5b5ae00-b0fe-11e8-9934-0025af9836ee.png"">. I think I should add a github token though so we don't get api throttling. Should I just add one from my own account?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830
https://github.com/broadinstitute/gatk/pull/5156#issuecomment-419482292:0,Testability,test,testing,0,testing,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-419482292
https://github.com/broadinstitute/gatk/pull/5157#issuecomment-418868380:214,Security,validat,validation,214,"Here's an idea. It may be too much work, for now, and I'm fine with this code as it stands, but perhaps others are not. Anyway, the idea is this:. The constructor gets one extra argument: A lambda that serves as a validation function of the form; ```; void validate( int contig, int start, int end );; ```; It either throws an exception or returns silently.; Every client of SVInterval thus documents its intended conventions, and makes certain that those conventions are being adhered to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5157#issuecomment-418868380
https://github.com/broadinstitute/gatk/pull/5157#issuecomment-418868380:257,Security,validat,validate,257,"Here's an idea. It may be too much work, for now, and I'm fine with this code as it stands, but perhaps others are not. Anyway, the idea is this:. The constructor gets one extra argument: A lambda that serves as a validation function of the form; ```; void validate( int contig, int start, int end );; ```; It either throws an exception or returns silently.; Every client of SVInterval thus documents its intended conventions, and makes certain that those conventions are being adhered to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5157#issuecomment-418868380
https://github.com/broadinstitute/gatk/pull/5157#issuecomment-418886943:147,Modifiability,extend,extended,147,"@tedsharpe not sure if this is what you meant.; Also, I think the ""ultimate"" solution might be marking `SVInterval` not final, but allows it to be extended, and child classes should name themselves with convention baked in.; What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5157#issuecomment-418886943
https://github.com/broadinstitute/gatk/pull/5157#issuecomment-418943215:9,Safety,risk,risk,9,"Going to risk it and take the ""I like this"" as approval :smirk:",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5157#issuecomment-418943215
https://github.com/broadinstitute/gatk/issues/5158#issuecomment-455637958:19,Deployability,release,release,19,@butlermgb Using a release more recent than the the September 13 fix should resolve the issue.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5158#issuecomment-455637958
https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902:125,Availability,down,down,125,"@lbergelson I agree with you about moving tests up, though I would make the point that there were many tests that got pushed down in the first place because they would involve fixing bugs in MarkDuplicatesGATK that were already fixed in MarkDuplicatesSpark, I will audit the ones I did and didn't push up so i'm more confident there is a reason to have tests pushed down or not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902
https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902:366,Availability,down,down,366,"@lbergelson I agree with you about moving tests up, though I would make the point that there were many tests that got pushed down in the first place because they would involve fixing bugs in MarkDuplicatesGATK that were already fixed in MarkDuplicatesSpark, I will audit the ones I did and didn't push up so i'm more confident there is a reason to have tests pushed down or not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902
https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902:265,Security,audit,audit,265,"@lbergelson I agree with you about moving tests up, though I would make the point that there were many tests that got pushed down in the first place because they would involve fixing bugs in MarkDuplicatesGATK that were already fixed in MarkDuplicatesSpark, I will audit the ones I did and didn't push up so i'm more confident there is a reason to have tests pushed down or not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902
https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902:42,Testability,test,tests,42,"@lbergelson I agree with you about moving tests up, though I would make the point that there were many tests that got pushed down in the first place because they would involve fixing bugs in MarkDuplicatesGATK that were already fixed in MarkDuplicatesSpark, I will audit the ones I did and didn't push up so i'm more confident there is a reason to have tests pushed down or not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902
https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902:103,Testability,test,tests,103,"@lbergelson I agree with you about moving tests up, though I would make the point that there were many tests that got pushed down in the first place because they would involve fixing bugs in MarkDuplicatesGATK that were already fixed in MarkDuplicatesSpark, I will audit the ones I did and didn't push up so i'm more confident there is a reason to have tests pushed down or not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902
https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902:353,Testability,test,tests,353,"@lbergelson I agree with you about moving tests up, though I would make the point that there were many tests that got pushed down in the first place because they would involve fixing bugs in MarkDuplicatesGATK that were already fixed in MarkDuplicatesSpark, I will audit the ones I did and didn't push up so i'm more confident there is a reason to have tests pushed down or not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902
https://github.com/broadinstitute/gatk/issues/5169#issuecomment-419923524:159,Availability,error,error,159,@oldmikeyang Thank you for reporting and then following up. I'm going to reopen this because we should not be crashing with an NPE. We should provide a useful error message in this common error case.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5169#issuecomment-419923524
https://github.com/broadinstitute/gatk/issues/5169#issuecomment-419923524:188,Availability,error,error,188,@oldmikeyang Thank you for reporting and then following up. I'm going to reopen this because we should not be crashing with an NPE. We should provide a useful error message in this common error case.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5169#issuecomment-419923524
https://github.com/broadinstitute/gatk/issues/5169#issuecomment-419923524:165,Integrability,message,message,165,@oldmikeyang Thank you for reporting and then following up. I'm going to reopen this because we should not be crashing with an NPE. We should provide a useful error message in this common error case.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5169#issuecomment-419923524
https://github.com/broadinstitute/gatk/pull/5172#issuecomment-420743269:1165,Energy Efficiency,reduce,reduce,1165,"Looking back into this PR... at some point you are using 'N' to pad what seem to be gaps on the read sequence. Although the end result would be the same perhaps is better to be more explicit and just use '-' instead. In that case my suggestion of using `Nucleotide.intersect` wouldn't cover for the '-' character so you need a explicity ""&&"" or ""II"". When you compare the cost of each different alignment the gap-open and gap-ext are ignored (you only look at base call mismatches). I wonder whether it would be more correct to actually take them in consideration... so imagine that there is no gaps in the original alignment what-soever and that adding a 1bp gap decreases the number of mis-matches by just 1 which is typically Q30 increase in the Lk but the gap itself default penalty is Q45 so can one say that that read wouldn't still support the reference over a 1-bp gap alternative? . Example with a 2-bp gap making the trick:; ```; Ref: ....GCATGTGATATATATATATATATATATATACACACAC....; Read: ....GCATGTG--ATATATATATATATATATATAC <end-of-the-read>; ```. That could happen in STRs with impurities... but if the original alignment did not added itself the gap to reduce the number of mismatches is because precisely due to the added cost of the gap-open and necessary extends that we would be ignoring here. This is all hypothetical until some one quantifies how often this might occur ... so I'm happy to keep ignoring the gaps for now until we get a report on a real-live dataset that would benefit of such a change or some enthusiastic dsde-methods member investigates this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5172#issuecomment-420743269
https://github.com/broadinstitute/gatk/pull/5172#issuecomment-420743269:1270,Modifiability,extend,extends,1270,"Looking back into this PR... at some point you are using 'N' to pad what seem to be gaps on the read sequence. Although the end result would be the same perhaps is better to be more explicit and just use '-' instead. In that case my suggestion of using `Nucleotide.intersect` wouldn't cover for the '-' character so you need a explicity ""&&"" or ""II"". When you compare the cost of each different alignment the gap-open and gap-ext are ignored (you only look at base call mismatches). I wonder whether it would be more correct to actually take them in consideration... so imagine that there is no gaps in the original alignment what-soever and that adding a 1bp gap decreases the number of mis-matches by just 1 which is typically Q30 increase in the Lk but the gap itself default penalty is Q45 so can one say that that read wouldn't still support the reference over a 1-bp gap alternative? . Example with a 2-bp gap making the trick:; ```; Ref: ....GCATGTGATATATATATATATATATATATACACACAC....; Read: ....GCATGTG--ATATATATATATATATATATAC <end-of-the-read>; ```. That could happen in STRs with impurities... but if the original alignment did not added itself the gap to reduce the number of mismatches is because precisely due to the added cost of the gap-open and necessary extends that we would be ignoring here. This is all hypothetical until some one quantifies how often this might occur ... so I'm happy to keep ignoring the gaps for now until we get a report on a real-live dataset that would benefit of such a change or some enthusiastic dsde-methods member investigates this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5172#issuecomment-420743269
https://github.com/broadinstitute/gatk/pull/5172#issuecomment-421364491:111,Availability,failure,failures,111,@vruano I addressed your comments. The code is a lot cleaner. Let me know if there's anything else. The Travis failures look unrelated so I'm rerunning them.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5172#issuecomment-421364491
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354:4435,Deployability,update,update,4435,"5qYXZh) | `73.68% <77.14%> (-1.32%)` | `41 <17> (+1)` | |; | [...ools/walkers/validation/InfoConcordanceRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vSW5mb0NvbmNvcmRhbmNlUmVjb3JkLmphdmE=) | `93.93% <93.93%> (ø)` | `8 <8> (?)` | |; | [...n/EvaluateInfoFieldConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZUludGVncmF0aW9uVGVzdC5qYXZh) | `96% <96%> (ø)` | `3 <3> (?)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | ... and [2 more](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=footer). Last update [ce669d1...65d0edd](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354:4338,Energy Efficiency,Power,Powered,4338,"5qYXZh) | `73.68% <77.14%> (-1.32%)` | `41 <17> (+1)` | |; | [...ools/walkers/validation/InfoConcordanceRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vSW5mb0NvbmNvcmRhbmNlUmVjb3JkLmphdmE=) | `93.93% <93.93%> (ø)` | `8 <8> (?)` | |; | [...n/EvaluateInfoFieldConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZUludGVncmF0aW9uVGVzdC5qYXZh) | `96% <96%> (ø)` | `3 <3> (?)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | ... and [2 more](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=footer). Last update [ce669d1...65d0edd](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354:2067,Security,validat,validation,2067, Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...nder/tools/walkers/vqsr/FilterVariantTranches.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzLmphdmE=) | `92.24% <ø> (ø)` | `42 <0> (ø)` | :arrow_down: |; | [...der/tools/walkers/vqsr/CNNVariantWriteTensors.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OVmFyaWFudFdyaXRlVGVuc29ycy5qYXZh) | `85.71% <100%> (+2.38%)` | `4 <0> (ø)` | :arrow_down: |; | [...hellbender/tools/walkers/vqsr/CNNVariantTrain.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OVmFyaWFudFRyYWluLmphdmE=) | `60% <46.66%> (-20.65%)` | `4 <0> (ø)` | |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZS5qYXZh) | `72.58% <72.58%> (ø)` | `14 <14> (?)` | |; | [...ellbender/tools/walkers/vqsr/CNNScoreVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50cy5qYXZh) | `73.68% <77.14%> (-1.32%)` | `41 <17> (+1)` | |; | [...ools/walkers/validation/InfoConcordanceRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vSW5mb0NvbmNvcmRhbmNlUmVjb3JkLmphdmE=) | `93.93% <93.93%> (ø)` | `8 <8> (?)` | |; | [...n/EvaluateInfoFieldConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pul,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354:2692,Security,validat,validation,2692, `85.71% <100%> (+2.38%)` | `4 <0> (ø)` | :arrow_down: |; | [...hellbender/tools/walkers/vqsr/CNNVariantTrain.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OVmFyaWFudFRyYWluLmphdmE=) | `60% <46.66%> (-20.65%)` | `4 <0> (ø)` | |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZS5qYXZh) | `72.58% <72.58%> (ø)` | `14 <14> (?)` | |; | [...ellbender/tools/walkers/vqsr/CNNScoreVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50cy5qYXZh) | `73.68% <77.14%> (-1.32%)` | `41 <17> (+1)` | |; | [...ools/walkers/validation/InfoConcordanceRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vSW5mb0NvbmNvcmRhbmNlUmVjb3JkLmphdmE=) | `93.93% <93.93%> (ø)` | `8 <8> (?)` | |; | [...n/EvaluateInfoFieldConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZUludGVncmF0aW9uVGVzdC5qYXZh) | `96% <96%> (ø)` | `3 <3> (?)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/bro,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354:4201,Usability,learn,learn,4201,"5qYXZh) | `73.68% <77.14%> (-1.32%)` | `41 <17> (+1)` | |; | [...ools/walkers/validation/InfoConcordanceRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vSW5mb0NvbmNvcmRhbmNlUmVjb3JkLmphdmE=) | `93.93% <93.93%> (ø)` | `8 <8> (?)` | |; | [...n/EvaluateInfoFieldConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZUludGVncmF0aW9uVGVzdC5qYXZh) | `96% <96%> (ø)` | `3 <3> (?)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | ... and [2 more](https://codecov.io/gh/broadinstitute/gatk/pull/5175/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=footer). Last update [ce669d1...65d0edd](https://codecov.io/gh/broadinstitute/gatk/pull/5175?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-423756354
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-426366833:151,Modifiability,refactor,refactor,151,"@cmnbroad thanks for the review. I think addressed all comments except the arguments/weights simplification, which I would prefer to save for the PEP8 refactor we discussed. Back to you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-426366833
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-426366833:93,Usability,simpl,simplification,93,"@cmnbroad thanks for the review. I think addressed all comments except the arguments/weights simplification, which I would prefer to save for the PEP8 refactor we discussed. Back to you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-426366833
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-427118049:95,Deployability,update,updates,95,@cmnbroad back to you. The build.gradle conflict is from the genomicsdb and tensorflow version updates. I can resolve and rebase if it looks good to you.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-427118049
https://github.com/broadinstitute/gatk/pull/5175#issuecomment-428740780:79,Testability,test,tests,79,@lucidtronix Looks good now - lets squash and rebase/resolve on master and run tests again and should be good to go.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-428740780
https://github.com/broadinstitute/gatk/issues/5179#issuecomment-420762396:133,Usability,feedback,feedback,133,"Good point. In the cases when you're running a tool on a data set with a knowable number of records, it would be useful to have this feedback.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5179#issuecomment-420762396
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421012306:192,Availability,error,error,192,I'd feel much more comfortable if there was a check in GenotypeGVCFs. Can you add something to look for MNPs in the ReferenceConfidenceVariantContextMerger.merge() loop over the input vcs and error out if it finds one (and there's more than one input)?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421012306
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421357303:101,Testability,test,test,101,"Sorry I misled you. Old GATK3 habits die hard. Even though htsjdk is always perfect, I'd like a tiny test for MNP input. Also, I have no idea what will happen when MNPs go into GenomicsDBImport. The best we may be able to do there is parse the GATKCommandLine for HaplotypeCaller in the header during initializeHeaderAndSampleMappings().",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421357303
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421371522:31,Testability,test,test,31,"No worries. I'm happy to ada a test or two, just wanted to make sure I was on the right track first. Re: GenomcisDBImport - I'm sort of hoping that anyone advanced enough to be using GenomicsDB will understand/heed the warnings about not enabling MNPs during GVCF generation, since I'm assuming it's mostly Broad and other large-scale facilities using that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421371522
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421410100:225,Deployability,patch,patch,225,"@tfenne Well, `GenomicsDBImport` is starting to replace `CombineGVCFs` for some of our userbase as well, so I'm not sure we can assume users of that tool are necessarily more advanced than average... It should be possible to patch `GenomicsDBImport` to throw a `UserException` whenever it encounters a MNP, if @ldgauthier agrees that that's the right thing to do here. That tool creates a map of `FeatureReaders` up front for its inputs and passes them to GenomicsDB. We could pretty easily wrap the existing FeatureReaders within a custom FeatureReader implementation that throws whenever it sees a MNP (or returns an iterator of VariantContexts that throws).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421410100
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421410100:491,Integrability,wrap,wrap,491,"@tfenne Well, `GenomicsDBImport` is starting to replace `CombineGVCFs` for some of our userbase as well, so I'm not sure we can assume users of that tool are necessarily more advanced than average... It should be possible to patch `GenomicsDBImport` to throw a `UserException` whenever it encounters a MNP, if @ldgauthier agrees that that's the right thing to do here. That tool creates a map of `FeatureReaders` up front for its inputs and passes them to GenomicsDB. We could pretty easily wrap the existing FeatureReaders within a custom FeatureReader implementation that throws whenever it sees a MNP (or returns an iterator of VariantContexts that throws).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-421410100
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371:101,Integrability,wrap,wrapping,101,"@ldgauthier & @droazen I've done as you've suggested. There is now a check in `GenomicsDBImport`, by wrapping the FeatureReader. It's a little ugly but it gets the job done. I've also added a simple test for GenotypeGVCFs to genotype a GVCF that has an MNP in it. I _think_ this is probably now ready for review. Let me know if you think further tests are needed!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371:199,Testability,test,test,199,"@ldgauthier & @droazen I've done as you've suggested. There is now a check in `GenomicsDBImport`, by wrapping the FeatureReader. It's a little ugly but it gets the job done. I've also added a simple test for GenotypeGVCFs to genotype a GVCF that has an MNP in it. I _think_ this is probably now ready for review. Let me know if you think further tests are needed!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371:346,Testability,test,tests,346,"@ldgauthier & @droazen I've done as you've suggested. There is now a check in `GenomicsDBImport`, by wrapping the FeatureReader. It's a little ugly but it gets the job done. I've also added a simple test for GenotypeGVCFs to genotype a GVCF that has an MNP in it. I _think_ this is probably now ready for review. Let me know if you think further tests are needed!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371:192,Usability,simpl,simple,192,"@ldgauthier & @droazen I've done as you've suggested. There is now a check in `GenomicsDBImport`, by wrapping the FeatureReader. It's a little ugly but it gets the job done. I've also added a simple test for GenotypeGVCFs to genotype a GVCF that has an MNP in it. I _think_ this is probably now ready for review. Let me know if you think further tests are needed!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424124566:95,Testability,test,tests,95,"Thanks @ldgauthier. I've gone ahead and added a utility method to GATKVariantContextUtils, and tests for that, and used that in CombineGVCFs and GenomicsDBImport. Those tests pass for me now. Fingers crossed the travis build(s) pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424124566
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424124566:169,Testability,test,tests,169,"Thanks @ldgauthier. I've gone ahead and added a utility method to GATKVariantContextUtils, and tests for that, and used that in CombineGVCFs and GenomicsDBImport. Those tests pass for me now. Fingers crossed the travis build(s) pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424124566
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424340413:112,Testability,test,test,112,"New utility function looks good to me. I'm seeing ` java.nio.file.NoSuchFileException: /gatkCloneMountPoint/src/test/resources/org/broadinstitute/hellbender/tools/GenomicsDBImport/mnp.input.g.vcf` in the Travis log. Looks like you actually put the file in .../tools/CombineGVCFs/ ?. Also there seems to have been something weird that happened to one of the Funcotator files, perhaps during a rebase?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424340413
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424340413:211,Testability,log,log,211,"New utility function looks good to me. I'm seeing ` java.nio.file.NoSuchFileException: /gatkCloneMountPoint/src/test/resources/org/broadinstitute/hellbender/tools/GenomicsDBImport/mnp.input.g.vcf` in the Travis log. Looks like you actually put the file in .../tools/CombineGVCFs/ ?. Also there seems to have been something weird that happened to one of the Funcotator files, perhaps during a rebase?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424340413
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424345659:185,Testability,test,tests,185,"Oops, sorry. The missing file exception was just my forgetting to add files before committing. I wasn't sure what the right thing to do was - I'm using the sam gVCF for three different tests. It's tiny, so I added it in three places, so that changing one wouldn't break the other two tests. Hopefully that was the right thing to do. I have no idea what happened with that Oncotator file, but I've reset it back to how it was in master, and also squashed my commits, and it seems to have fixed the problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424345659
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424345659:284,Testability,test,tests,284,"Oops, sorry. The missing file exception was just my forgetting to add files before committing. I wasn't sure what the right thing to do was - I'm using the sam gVCF for three different tests. It's tiny, so I added it in three places, so that changing one wouldn't break the other two tests. Hopefully that was the right thing to do. I have no idea what happened with that Oncotator file, but I've reset it back to how it was in master, and also squashed my commits, and it seems to have fixed the problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424345659
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424378444:0,Testability,Test,Tests,0,"Tests are still failing, but other than that I'm on board.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424378444
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424422275:34,Testability,test,test,34,"Doh, I see the problem. There's a test for HC that MNP+GVCF should throw an exception. Which of course it now doesn't. I've removed that test and it looks like that was the only one failing. @droazen do you also want to review? Or is this ready for merge once the tests pass?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424422275
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424422275:137,Testability,test,test,137,"Doh, I see the problem. There's a test for HC that MNP+GVCF should throw an exception. Which of course it now doesn't. I've removed that test and it looks like that was the only one failing. @droazen do you also want to review? Or is this ready for merge once the tests pass?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424422275
https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424422275:264,Testability,test,tests,264,"Doh, I see the problem. There's a test for HC that MNP+GVCF should throw an exception. Which of course it now doesn't. I've removed that test and it looks like that was the only one failing. @droazen do you also want to review? Or is this ready for merge once the tests pass?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-424422275
https://github.com/broadinstitute/gatk/issues/5187#issuecomment-430779052:107,Safety,detect,detect,107,"@jonn-smith Does that happen in reality? That sounds like it would be a bug in the transcript data. If you detect that the transcript has no exons ""NA""?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5187#issuecomment-430779052
https://github.com/broadinstitute/gatk/issues/5189#issuecomment-421191038:208,Availability,error,error,208,"It looks like they're using a strange hybrid of Picard and Barclay syntax. If they just use pure Barclay syntax with no ""="" (`--RUN_DATE 2011-04-30T01:00:00+0100`) when running the Picard tool from gatk, the error message should go away. The only part I don't understand is that they say the hybrid syntax works if they leave out `RUN_DATE`. I wouldn't expect that - I'll have to look into it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5189#issuecomment-421191038
https://github.com/broadinstitute/gatk/issues/5189#issuecomment-421191038:214,Integrability,message,message,214,"It looks like they're using a strange hybrid of Picard and Barclay syntax. If they just use pure Barclay syntax with no ""="" (`--RUN_DATE 2011-04-30T01:00:00+0100`) when running the Picard tool from gatk, the error message should go away. The only part I don't understand is that they say the hybrid syntax works if they leave out `RUN_DATE`. I wouldn't expect that - I'll have to look into it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5189#issuecomment-421191038
https://github.com/broadinstitute/gatk/pull/5190#issuecomment-422108543:291,Modifiability,refactor,refactor,291,"@frank-y-liu As discussed in person, I think this is actually a symptom of https://github.com/broadinstitute/gatk/issues/4290 (using a double value as a key in a map get operation), in which case always returning 0.0 when a `get()` fails is not the right solution. I think we should instead refactor `MannWhitneyU` to not use doubles as keys -- I'll see if I can recruit a volunteer for that task.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5190#issuecomment-422108543
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-427039803:55,Availability,avail,available,55,"Hi,; May I ask when this mitochondria pipeline will be available? ; In the meanwhile, if I use Mutect2 for calling human MT variants (including indel), which is the best choice of parameters?; I have MT bam file to start with and read coverage is in thousand scale for MT.; Thanks",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-427039803
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-427039803:38,Deployability,pipeline,pipeline,38,"Hi,; May I ask when this mitochondria pipeline will be available? ; In the meanwhile, if I use Mutect2 for calling human MT variants (including indel), which is the best choice of parameters?; I have MT bam file to start with and read coverage is in thousand scale for MT.; Thanks",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-427039803
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-428195077:149,Integrability,wrap,wrapper,149,"I talked to comms and we agreed that a ""mitochondria-mode"" argument to Mutect2 was the right balance of clarity (you're really running Mutect2 not a wrapper) and simplicity (you don't need a laundry list of arguments to change which mode you're in if you just want to run with optimized defaults). . @ldgauthier @davidbenjamin @takutosato @rcmajovski Could you please take another look? Removing the wrapper tools has cleaned up the code so there are fewer changes now. I also changed TLOD to LOD in this version, but I'm happy to take that out and have that be future work if anyone is worried about it being a breaking change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-428195077
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-428195077:400,Integrability,wrap,wrapper,400,"I talked to comms and we agreed that a ""mitochondria-mode"" argument to Mutect2 was the right balance of clarity (you're really running Mutect2 not a wrapper) and simplicity (you don't need a laundry list of arguments to change which mode you're in if you just want to run with optimized defaults). . @ldgauthier @davidbenjamin @takutosato @rcmajovski Could you please take another look? Removing the wrapper tools has cleaned up the code so there are fewer changes now. I also changed TLOD to LOD in this version, but I'm happy to take that out and have that be future work if anyone is worried about it being a breaking change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-428195077
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-428195077:277,Performance,optimiz,optimized,277,"I talked to comms and we agreed that a ""mitochondria-mode"" argument to Mutect2 was the right balance of clarity (you're really running Mutect2 not a wrapper) and simplicity (you don't need a laundry list of arguments to change which mode you're in if you just want to run with optimized defaults). . @ldgauthier @davidbenjamin @takutosato @rcmajovski Could you please take another look? Removing the wrapper tools has cleaned up the code so there are fewer changes now. I also changed TLOD to LOD in this version, but I'm happy to take that out and have that be future work if anyone is worried about it being a breaking change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-428195077
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-428195077:162,Usability,simpl,simplicity,162,"I talked to comms and we agreed that a ""mitochondria-mode"" argument to Mutect2 was the right balance of clarity (you're really running Mutect2 not a wrapper) and simplicity (you don't need a laundry list of arguments to change which mode you're in if you just want to run with optimized defaults). . @ldgauthier @davidbenjamin @takutosato @rcmajovski Could you please take another look? Removing the wrapper tools has cleaned up the code so there are fewer changes now. I also changed TLOD to LOD in this version, but I'm happy to take that out and have that be future work if anyone is worried about it being a breaking change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-428195077
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430234800:86,Availability,avail,available,86,Could anyone please give an announcement when the mitochondria pipeline is officially available? . Thanks,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430234800
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430234800:63,Deployability,pipeline,pipeline,63,Could anyone please give an announcement when the mitochondria pipeline is officially available? . Thanks,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430234800
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430237566:140,Availability,ping,ping,140,"@SusieX Sorry for the delay, we're just trying to finalize some potentially disruptive changes before we merge. I'll open an issue so I can ping you there once this PR has been both merged and released. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430237566
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430237566:193,Deployability,release,released,193,"@SusieX Sorry for the delay, we're just trying to finalize some potentially disruptive changes before we merge. I'll open an issue so I can ping you there once this PR has been both merged and released. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430237566
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430238072:266,Availability,ping,ping,266,"Thank you!. On Tue, Oct 16, 2018 at 9:29 AM meganshand <notifications@github.com> wrote:. > @SusieX <https://github.com/SusieX> Sorry for the delay, we're just; > trying to finalize some potentially disruptive changes before we merge.; > I'll open an issue so I can ping you there once this PR has been both; > merged and released. Thanks!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430237566>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AQ4DHqWjVP9RQyGuRbbM-Nds_8l0RDtSks5uld84gaJpZM4WqV76>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430238072
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430238072:322,Deployability,release,released,322,"Thank you!. On Tue, Oct 16, 2018 at 9:29 AM meganshand <notifications@github.com> wrote:. > @SusieX <https://github.com/SusieX> Sorry for the delay, we're just; > trying to finalize some potentially disruptive changes before we merge.; > I'll open an issue so I can ping you there once this PR has been both; > merged and released. Thanks!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430237566>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AQ4DHqWjVP9RQyGuRbbM-Nds_8l0RDtSks5uld84gaJpZM4WqV76>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-430238072
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431849500:444,Deployability,pipeline,pipeline,444,"Hi Megan,; I'd like to get some more suggestion for pre-processing the bam for mitochondria calls. Are remove-duplicate and base-quality-recalibration recommended before mutect2 call?. For 1st step of base quality recalibration, what reference file to use for --known-sites? My reads are mapped to hg38. gatk BaseRecalibrator \; -I my_reads.bam \; -R reference.fasta \; --known-sites sites_of_variation.vcf \; -O recal_data.table. So the whole pipeline would be:; BAM -> remove dup -> BQ recalibrate -> Mutect2 call -> FilterMutectCalls . Am I missing anything?. Thanks a lot!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431849500
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996:114,Deployability,pipeline,pipeline,114,"@SusieX . Marking duplicates: I do recommend removing duplicates (we run MarkDuplicates from Picard). . BQSR: The pipeline we're developing is for Whole Genome data, so our bams have gone through BQSR in the whole genome pipeline. We're using those recalibrated base qualities. I haven't tested running BQSR only on the mitochondria so I don't know how well that would work. . If you do need to run BQSR only on the mitochondria I'd start by using the phylotree sites as `--known-sites`, but you'd need to have those sites in vcf format. Again, I haven't tested this so I don't know how well it will perform. If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996:221,Deployability,pipeline,pipeline,221,"@SusieX . Marking duplicates: I do recommend removing duplicates (we run MarkDuplicates from Picard). . BQSR: The pipeline we're developing is for Whole Genome data, so our bams have gone through BQSR in the whole genome pipeline. We're using those recalibrated base qualities. I haven't tested running BQSR only on the mitochondria so I don't know how well that would work. . If you do need to run BQSR only on the mitochondria I'd start by using the phylotree sites as `--known-sites`, but you'd need to have those sites in vcf format. Again, I haven't tested this so I don't know how well it will perform. If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996:649,Deployability,pipeline,pipeline,649,"@SusieX . Marking duplicates: I do recommend removing duplicates (we run MarkDuplicates from Picard). . BQSR: The pipeline we're developing is for Whole Genome data, so our bams have gone through BQSR in the whole genome pipeline. We're using those recalibrated base qualities. I haven't tested running BQSR only on the mitochondria so I don't know how well that would work. . If you do need to run BQSR only on the mitochondria I'd start by using the phylotree sites as `--known-sites`, but you'd need to have those sites in vcf format. Again, I haven't tested this so I don't know how well it will perform. If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996:600,Performance,perform,perform,600,"@SusieX . Marking duplicates: I do recommend removing duplicates (we run MarkDuplicates from Picard). . BQSR: The pipeline we're developing is for Whole Genome data, so our bams have gone through BQSR in the whole genome pipeline. We're using those recalibrated base qualities. I haven't tested running BQSR only on the mitochondria so I don't know how well that would work. . If you do need to run BQSR only on the mitochondria I'd start by using the phylotree sites as `--known-sites`, but you'd need to have those sites in vcf format. Again, I haven't tested this so I don't know how well it will perform. If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996:288,Testability,test,tested,288,"@SusieX . Marking duplicates: I do recommend removing duplicates (we run MarkDuplicates from Picard). . BQSR: The pipeline we're developing is for Whole Genome data, so our bams have gone through BQSR in the whole genome pipeline. We're using those recalibrated base qualities. I haven't tested running BQSR only on the mitochondria so I don't know how well that would work. . If you do need to run BQSR only on the mitochondria I'd start by using the phylotree sites as `--known-sites`, but you'd need to have those sites in vcf format. Again, I haven't tested this so I don't know how well it will perform. If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996:555,Testability,test,tested,555,"@SusieX . Marking duplicates: I do recommend removing duplicates (we run MarkDuplicates from Picard). . BQSR: The pipeline we're developing is for Whole Genome data, so our bams have gone through BQSR in the whole genome pipeline. We're using those recalibrated base qualities. I haven't tested running BQSR only on the mitochondria so I don't know how well that would work. . If you do need to run BQSR only on the mitochondria I'd start by using the phylotree sites as `--known-sites`, but you'd need to have those sites in vcf format. Again, I haven't tested this so I don't know how well it will perform. If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805:247,Deployability,pipeline,pipeline,247,"Thank you!. On Mon, Oct 22, 2018 at 10:33 AM meganshand <notifications@github.com>; wrote:. > @SusieX <https://github.com/SusieX>; >; > Marking duplicates: I do recommend removing duplicates (we run; > MarkDuplicates from Picard).; >; > BQSR: The pipeline we're developing is for Whole Genome data, so our bams; > have gone through BQSR in the whole genome pipeline. We're using those; > recalibrated base qualities. I haven't tested running BQSR only on the; > mitochondria so I don't know how well that would work.; >; > If you do need to run BQSR only on the mitochondria I'd start by using the; > phylotree sites as --known-sites, but you'd need to have those sites in; > vcf format. Again, I haven't tested this so I don't know how well it will; > perform.; >; > If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ; > recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AQ4DHh9X94wZ-4488FohFKnkv1SCe6c2ks5undccgaJpZM4WqV76>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805:357,Deployability,pipeline,pipeline,357,"Thank you!. On Mon, Oct 22, 2018 at 10:33 AM meganshand <notifications@github.com>; wrote:. > @SusieX <https://github.com/SusieX>; >; > Marking duplicates: I do recommend removing duplicates (we run; > MarkDuplicates from Picard).; >; > BQSR: The pipeline we're developing is for Whole Genome data, so our bams; > have gone through BQSR in the whole genome pipeline. We're using those; > recalibrated base qualities. I haven't tested running BQSR only on the; > mitochondria so I don't know how well that would work.; >; > If you do need to run BQSR only on the mitochondria I'd start by using the; > phylotree sites as --known-sites, but you'd need to have those sites in; > vcf format. Again, I haven't tested this so I don't know how well it will; > perform.; >; > If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ; > recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AQ4DHh9X94wZ-4488FohFKnkv1SCe6c2ks5undccgaJpZM4WqV76>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805:808,Deployability,pipeline,pipeline,808,"Thank you!. On Mon, Oct 22, 2018 at 10:33 AM meganshand <notifications@github.com>; wrote:. > @SusieX <https://github.com/SusieX>; >; > Marking duplicates: I do recommend removing duplicates (we run; > MarkDuplicates from Picard).; >; > BQSR: The pipeline we're developing is for Whole Genome data, so our bams; > have gone through BQSR in the whole genome pipeline. We're using those; > recalibrated base qualities. I haven't tested running BQSR only on the; > mitochondria so I don't know how well that would work.; >; > If you do need to run BQSR only on the mitochondria I'd start by using the; > phylotree sites as --known-sites, but you'd need to have those sites in; > vcf format. Again, I haven't tested this so I don't know how well it will; > perform.; >; > If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ; > recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AQ4DHh9X94wZ-4488FohFKnkv1SCe6c2ks5undccgaJpZM4WqV76>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805:753,Performance,perform,perform,753,"Thank you!. On Mon, Oct 22, 2018 at 10:33 AM meganshand <notifications@github.com>; wrote:. > @SusieX <https://github.com/SusieX>; >; > Marking duplicates: I do recommend removing duplicates (we run; > MarkDuplicates from Picard).; >; > BQSR: The pipeline we're developing is for Whole Genome data, so our bams; > have gone through BQSR in the whole genome pipeline. We're using those; > recalibrated base qualities. I haven't tested running BQSR only on the; > mitochondria so I don't know how well that would work.; >; > If you do need to run BQSR only on the mitochondria I'd start by using the; > phylotree sites as --known-sites, but you'd need to have those sites in; > vcf format. Again, I haven't tested this so I don't know how well it will; > perform.; >; > If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ; > recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AQ4DHh9X94wZ-4488FohFKnkv1SCe6c2ks5undccgaJpZM4WqV76>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805:427,Testability,test,tested,427,"Thank you!. On Mon, Oct 22, 2018 at 10:33 AM meganshand <notifications@github.com>; wrote:. > @SusieX <https://github.com/SusieX>; >; > Marking duplicates: I do recommend removing duplicates (we run; > MarkDuplicates from Picard).; >; > BQSR: The pipeline we're developing is for Whole Genome data, so our bams; > have gone through BQSR in the whole genome pipeline. We're using those; > recalibrated base qualities. I haven't tested running BQSR only on the; > mitochondria so I don't know how well that would work.; >; > If you do need to run BQSR only on the mitochondria I'd start by using the; > phylotree sites as --known-sites, but you'd need to have those sites in; > vcf format. Again, I haven't tested this so I don't know how well it will; > perform.; >; > If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ; > recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AQ4DHh9X94wZ-4488FohFKnkv1SCe6c2ks5undccgaJpZM4WqV76>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805:705,Testability,test,tested,705,"Thank you!. On Mon, Oct 22, 2018 at 10:33 AM meganshand <notifications@github.com>; wrote:. > @SusieX <https://github.com/SusieX>; >; > Marking duplicates: I do recommend removing duplicates (we run; > MarkDuplicates from Picard).; >; > BQSR: The pipeline we're developing is for Whole Genome data, so our bams; > have gone through BQSR in the whole genome pipeline. We're using those; > recalibrated base qualities. I haven't tested running BQSR only on the; > mitochondria so I don't know how well that would work.; >; > If you do need to run BQSR only on the mitochondria I'd start by using the; > phylotree sites as --known-sites, but you'd need to have those sites in; > vcf format. Again, I haven't tested this so I don't know how well it will; > perform.; >; > If you end up using BQSR I think you're pipeline (BAM -> remove dup -> BQ; > recalibrate -> Mutect2 call -> FilterMutectCalls) is correct. Good luck!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431852996>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AQ4DHh9X94wZ-4488FohFKnkv1SCe6c2ks5undccgaJpZM4WqV76>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-431899805
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-432443695:1776,Safety,detect,detect,1776,"Hi . I have a few questions about using Mutect2 versus HaplotypeCaller to call mitochondrial (or chloroplast) variants (I'm working on plants). 1) In article 11127, it says; ""The tool can run on unmatched tumors but this produces high rates of false positives. Technically speaking, somatic variants are both (i) different from the control sample and (ii) different from the reference."". In my case, there isn't a ""normal"" sample to compare the ""tumour"" (i.e. mitochondria) to, just a reference. Are my results likely to be prone to false positives then? Or is it that the case for mitochondria is different because we are not truly looking for somatic variants but rather variants in general that may not be 100% ""pure"" (because of heteroplasty?). Is the latter point the justification for Mutect vs HaplotypeCaller in the first place?. 2) I am interested in both variant and invariant sites (relative to the reference). Ultimately, I want to be able to go base for base and make a call (ref, alt, or ""N""; where ""N"" is used where I have no confidence in the base call at that site). The goal is to have a full haplotype sequence for the mitochondria/chloroplast of each sample. . In HaplotypeCaller, I read that I could use --emit-ref-confidence BP_RESOLUTION to get the confidence of a site being homozygous reference. Does --out-mode EMIT_ALL_CONFIDENT_SITES give similar information?. 3) In this thread, it's said that the --min-pruning argument is very important. I'm very new to this and don't fully understand what this parameter is doing. Is the advice to set this parameter = ceiling(average coverage/500) general? Or specific to the project mentioned above?. 4) I don't why we don't have to set the sample ploidy to 1? Is this only for applications where we want to detect heteroplasmy? If we are after the majority haplotype, does it make sense to set this parameter?. Many thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-432443695
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-432645864:1342,Availability,error,errors,1342,"only mode because you don't have a matched normal. We have found that the false positive rate is very reasonable and comparable to other tools for mitochondria (including HaplotypeCaller). Your latter point (we're looking for calls at various allele fractions) is exactly why we chose to use Mutect instead of HaplotypeCaller. 2. I don't think we can currently output bp resolution reference confidence in Mutect2. There is development being done to allow Mutect to output a GVCF (which would give you reference confidence) but this is still a work in progress. You might be able to use the ""Genotype Given Alleles"" argument to force Mutect to output qualities at each base, but I haven't tested this at all. 3. We found that value for --min-pruning by looking at whole genome sequencing data. Both HaplotypeCaller and Mutect do a local reassembly at a potential variant site. This reassembly builds a graph where each path is a potential haplotype. The min-pruning argument tells you how many reads each path needs to have in order to be considered (otherwise it is pruned from the graph). By default this value is 1 which makes sense for 30-60X data, but if your coverage is very high (which it usually is for mitochondria) the graph will be too messy due to errors unless you turn that argument up. Because the depth is so high, you need more evidence to be sure a path in the graph isn't just noise. 4. The ploidy argument isn't used by Mutect2 because it is always looking for variation at arbitrary allele fractions. If you are instead using HaplotypeCaller you would need to change that argument either to 1 (this would only allow you to call HomVar sites) or as high as you need to get desired resolution. In other words if you want to be able to call sites at 1% allele fraction, you will need to set the ploidy argument to 100 if you are running HaplotypeCaller. Mutect2 will look for sites at all allele fractions (both HomVar and low allele fraction sites) without changing that argument.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-432645864
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-432645864:770,Testability,test,tested,770,"@jullee . 1. Yes, running in mitochondria-mode is somewhat like running in tumor-only mode because you don't have a matched normal. We have found that the false positive rate is very reasonable and comparable to other tools for mitochondria (including HaplotypeCaller). Your latter point (we're looking for calls at various allele fractions) is exactly why we chose to use Mutect instead of HaplotypeCaller. 2. I don't think we can currently output bp resolution reference confidence in Mutect2. There is development being done to allow Mutect to output a GVCF (which would give you reference confidence) but this is still a work in progress. You might be able to use the ""Genotype Given Alleles"" argument to force Mutect to output qualities at each base, but I haven't tested this at all. 3. We found that value for --min-pruning by looking at whole genome sequencing data. Both HaplotypeCaller and Mutect do a local reassembly at a potential variant site. This reassembly builds a graph where each path is a potential haplotype. The min-pruning argument tells you how many reads each path needs to have in order to be considered (otherwise it is pruned from the graph). By default this value is 1 which makes sense for 30-60X data, but if your coverage is very high (which it usually is for mitochondria) the graph will be too messy due to errors unless you turn that argument up. Because the depth is so high, you need more evidence to be sure a path in the graph isn't just noise. 4. The ploidy argument isn't used by Mutect2 because it is always looking for variation at arbitrary allele fractions. If you are instead using HaplotypeCaller you would need to change that argument either to 1 (this would only allow you to call HomVar sites) or as high as you need to get desired resolution. In other words if you want to be able to call sites at 1% allele fraction, you will need to set the ploidy argument to 100 if you are running HaplotypeCaller. Mutect2 will look for sites at all allele fract",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-432645864
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-475701980:53,Deployability,release,release,53,"Hello, ; Just checking in to see if there is any new release for GATK mitochondria pipeline? Thanks",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-475701980
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-475701980:83,Deployability,pipeline,pipeline,83,"Hello, ; Just checking in to see if there is any new release for GATK mitochondria pipeline? Thanks",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-475701980
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488785797:218,Deployability,update,update,218,"Hey, . in the light of recent papers describing mtDNA as a great natural barcode to do lineage tracing in single human cells from scATAC-seq data, I think this is of relevance and I'd be very interested if there is an update on the pipeline as well. . Thanks!!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488785797
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488785797:232,Deployability,pipeline,pipeline,232,"Hey, . in the light of recent papers describing mtDNA as a great natural barcode to do lineage tracing in single human cells from scATAC-seq data, I think this is of relevance and I'd be very interested if there is an update on the pipeline as well. . Thanks!!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488785797
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488790341:216,Availability,reliab,reliable,216,There is a copy of the 4.1.0.0 pipeline here: https://app.terra.bio/#workspaces/help-gatk/Mitochondria-SNPs-Indels-hg38. We are working on some adjustments to this pipeline to make the low allele fraction calls more reliable with more aggressive filtering and we will put those updates in that same location once they're complete.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488790341
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488790341:31,Deployability,pipeline,pipeline,31,There is a copy of the 4.1.0.0 pipeline here: https://app.terra.bio/#workspaces/help-gatk/Mitochondria-SNPs-Indels-hg38. We are working on some adjustments to this pipeline to make the low allele fraction calls more reliable with more aggressive filtering and we will put those updates in that same location once they're complete.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488790341
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488790341:164,Deployability,pipeline,pipeline,164,There is a copy of the 4.1.0.0 pipeline here: https://app.terra.bio/#workspaces/help-gatk/Mitochondria-SNPs-Indels-hg38. We are working on some adjustments to this pipeline to make the low allele fraction calls more reliable with more aggressive filtering and we will put those updates in that same location once they're complete.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488790341
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488790341:278,Deployability,update,updates,278,There is a copy of the 4.1.0.0 pipeline here: https://app.terra.bio/#workspaces/help-gatk/Mitochondria-SNPs-Indels-hg38. We are working on some adjustments to this pipeline to make the low allele fraction calls more reliable with more aggressive filtering and we will put those updates in that same location once they're complete.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-488790341
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-575001931:532,Energy Efficiency,adapt,adapt,532,"Hi, I'm trying to generate a VCF with Mitochondrial mode of Mutect2 based on MT amplicon (PCR) sequencing. But I encountered two problems:; 1. The base site (Pos: MT:16320) has high depth and good quality, but the result of AF is low. In IGV, AF~=0.5; 2. The total depth(DP) is also quite different from the depth in bam; I tried changing various parameters but nothing seems to make a difference? and even tried turn on --disable-tool-default-read-filters. Is there a parameter I'm missing? What are the filtering criteria? How to adapt to PCR data?. version: GATK4.1.4.1; java -Xmx16g -Djava.io.tmpdir=./tmp -jar gatk-package-4.1.4.1-local.jar Mutect2 -I tmp.bam -R hs37d5.fa -L MT.bed -O raw.vcf --min-pruning 5 --mitochondria-mode --max-reads-per-alignment-start 10000. MT 16182 . A AC,ACC . . DP=262;ECNT=7;MBQ=31,26,29;MFRL=0,0,0;MMQ=60,60,60;MPOS=44,44;OCM=0;POPAF=2.40,2.40;TLOD=84.81,46.04 GT:AD:AF:DP:F1R2:F2R1:SB 0/1/2:157,72,31:0.261,0.118:260:122,48,21:0,0,0:0,157,0,103; MT 16183 . A C . . DP=262;ECNT=7;MBQ=30,34;MFRL=0,0;MMQ=60,60;MPOS=45;OCM=0;POPAF=2.40;TLOD=531.07 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:58,204:0.780:262:42,190:0,0:0,58,0,204; MT 16188 . CT C . . DP=262;ECNT=7;MBQ=34,29;MFRL=0,0;MMQ=60,60;MPOS=50;OCM=0;POPAF=2.40;TLOD=19.25 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:243,19:0.070:262:207,15:0,0:0,243,0,19; MT 16189 . T C . . DP=262;ECNT=7;MBQ=35,34;MFRL=0,0;MMQ=60,60;MPOS=51;OCM=0;POPAF=2.40;TLOD=931.43 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:2,260:0.989:262:2,237:0,0:0,2,0,260; MT 16266 . C A . . DP=1073;ECNT=4;MBQ=7,32;MFRL=0,0;MMQ=60,60;MPOS=50;OCM=0;POPAF=2.40;TLOD=3575.47 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:14,1039:0.996:1053:4,469:0,446:0,14,481,558; MT 16274 . G A . . DP=1073;ECNT=4;MBQ=33,12;MFRL=0,0;MMQ=60,60;MPOS=53;OCM=0;POPAF=2.40;TLOD=1.89 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:1057,11:5.214e-03:1068:571,1:337,4:467,590,10,1; MT 16320 . C T . . DP=643;ECNT=4;MBQ=27,36;MFRL=0,0;MMQ=60,60;MPOS=21;OCM=0;POPAF=2.40;TLOD=11.29 GT:AD:AF:DP:F1R2:F2R1:PGT:PID:PS:SB 0|1:564,60:0.017:624:48,60:358,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-575001931
https://github.com/broadinstitute/gatk/pull/5193#issuecomment-575001931:532,Modifiability,adapt,adapt,532,"Hi, I'm trying to generate a VCF with Mitochondrial mode of Mutect2 based on MT amplicon (PCR) sequencing. But I encountered two problems:; 1. The base site (Pos: MT:16320) has high depth and good quality, but the result of AF is low. In IGV, AF~=0.5; 2. The total depth(DP) is also quite different from the depth in bam; I tried changing various parameters but nothing seems to make a difference? and even tried turn on --disable-tool-default-read-filters. Is there a parameter I'm missing? What are the filtering criteria? How to adapt to PCR data?. version: GATK4.1.4.1; java -Xmx16g -Djava.io.tmpdir=./tmp -jar gatk-package-4.1.4.1-local.jar Mutect2 -I tmp.bam -R hs37d5.fa -L MT.bed -O raw.vcf --min-pruning 5 --mitochondria-mode --max-reads-per-alignment-start 10000. MT 16182 . A AC,ACC . . DP=262;ECNT=7;MBQ=31,26,29;MFRL=0,0,0;MMQ=60,60,60;MPOS=44,44;OCM=0;POPAF=2.40,2.40;TLOD=84.81,46.04 GT:AD:AF:DP:F1R2:F2R1:SB 0/1/2:157,72,31:0.261,0.118:260:122,48,21:0,0,0:0,157,0,103; MT 16183 . A C . . DP=262;ECNT=7;MBQ=30,34;MFRL=0,0;MMQ=60,60;MPOS=45;OCM=0;POPAF=2.40;TLOD=531.07 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:58,204:0.780:262:42,190:0,0:0,58,0,204; MT 16188 . CT C . . DP=262;ECNT=7;MBQ=34,29;MFRL=0,0;MMQ=60,60;MPOS=50;OCM=0;POPAF=2.40;TLOD=19.25 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:243,19:0.070:262:207,15:0,0:0,243,0,19; MT 16189 . T C . . DP=262;ECNT=7;MBQ=35,34;MFRL=0,0;MMQ=60,60;MPOS=51;OCM=0;POPAF=2.40;TLOD=931.43 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:2,260:0.989:262:2,237:0,0:0,2,0,260; MT 16266 . C A . . DP=1073;ECNT=4;MBQ=7,32;MFRL=0,0;MMQ=60,60;MPOS=50;OCM=0;POPAF=2.40;TLOD=3575.47 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:14,1039:0.996:1053:4,469:0,446:0,14,481,558; MT 16274 . G A . . DP=1073;ECNT=4;MBQ=33,12;MFRL=0,0;MMQ=60,60;MPOS=53;OCM=0;POPAF=2.40;TLOD=1.89 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:1057,11:5.214e-03:1068:571,1:337,4:467,590,10,1; MT 16320 . C T . . DP=643;ECNT=4;MBQ=27,36;MFRL=0,0;MMQ=60,60;MPOS=21;OCM=0;POPAF=2.40;TLOD=11.29 GT:AD:AF:DP:F1R2:F2R1:PGT:PID:PS:SB 0|1:564,60:0.017:624:48,60:358,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-575001931
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:202,Integrability,wrap,wrapper,202,Note that the PR build has failed twice in a row with:. ```; org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.ru,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:1123,Integrability,wrap,wrapper,1123,ocate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessor,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:1204,Integrability,wrap,wrapper,1204,r/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(Nati,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:1212,Integrability,Wrap,WrapperExecutor,1212,le-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAcce,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:1236,Integrability,Wrap,WrapperExecutor,1236,6ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:1278,Integrability,wrap,wrapper,1278,dle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImp,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:1478,Integrability,wrap,wrapper,1478, org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrappe,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:2399,Integrability,wrap,wrapper,2399,p.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:2480,Integrability,wrap,wrapper,2480,p.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:2488,Integrability,Wrap,WrapperExecutor,2488,p.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:2512,Integrability,Wrap,WrapperExecutor,2512,p.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482:2554,Integrability,wrap,wrapper,2554,p.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); org.gradle.api.internal.classpath.UnknownModuleException: Cannot locate JAR for module 'ant' in distribution directory '/home/travis/.gradle/wrapper/dists/gradle-3.1-bin/37qejo6a26ua35lyn7h1u9v2n/gradle-3.1'.; 	at org.gradle.api.internal.classpath.DefaultModuleRegistry.getExternalModule(DefaultModuleRegistry.java:69); 	at org.gradle.api.internal.DefaultClassPathProvider.findClassPath(DefaultClassPathProvider.java:46); 	at org.gradle.api.internal.DefaultClassPathRegistry.getClassPath(DefaultClassPathRegistry.java:34); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:48); 	at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:37); 	at org.gradle.launcher.GradleMain.main(GradleMain.java:23); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:31); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:108); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422122482
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422457574:61,Availability,error,error,61,@lbergelson This is failing deterministically with the above error on the OracleJDK only...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422457574
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422499733:31,Performance,cache,cache,31,"Aha, after clearing the travis cache for the PR build it passed! Merging",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422499733
https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422499733:11,Usability,clear,clearing,11,"Aha, after clearing the travis cache for the PR build it passed! Merging",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5194#issuecomment-422499733
https://github.com/broadinstitute/gatk/pull/5196#issuecomment-423184831:65,Deployability,release,release,65,@takutosato @droazen Can we make sure that this gets in the next release? Users may misinterpret the deprecation warning that is removed in this PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5196#issuecomment-423184831
https://github.com/broadinstitute/gatk/pull/5196#issuecomment-426017250:74,Deployability,release,release,74,@davidbenjamin @takutosato I approved this and it needs to be in the next release. What is holding up a merge?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5196#issuecomment-426017250
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247:32,Availability,failure,failures,32,@nalinigans There are some test failures in the GenomicsDB cloud tests. See: https://storage.googleapis.com/hellbender-test-logs/build_reports/master_22153.1/tests/test/index.html. We'll have to fix these before we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247:27,Testability,test,test,27,@nalinigans There are some test failures in the GenomicsDB cloud tests. See: https://storage.googleapis.com/hellbender-test-logs/build_reports/master_22153.1/tests/test/index.html. We'll have to fix these before we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247:65,Testability,test,tests,65,@nalinigans There are some test failures in the GenomicsDB cloud tests. See: https://storage.googleapis.com/hellbender-test-logs/build_reports/master_22153.1/tests/test/index.html. We'll have to fix these before we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247:119,Testability,test,test-logs,119,@nalinigans There are some test failures in the GenomicsDB cloud tests. See: https://storage.googleapis.com/hellbender-test-logs/build_reports/master_22153.1/tests/test/index.html. We'll have to fix these before we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247:158,Testability,test,tests,158,@nalinigans There are some test failures in the GenomicsDB cloud tests. See: https://storage.googleapis.com/hellbender-test-logs/build_reports/master_22153.1/tests/test/index.html. We'll have to fix these before we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247:164,Testability,test,test,164,@nalinigans There are some test failures in the GenomicsDB cloud tests. See: https://storage.googleapis.com/hellbender-test-logs/build_reports/master_22153.1/tests/test/index.html. We'll have to fix these before we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422843915:87,Security,authenticat,authenticating,87,"@droazen, will put some debug print statements in the two tests that are failing while authenticating with GCS and issue another pull request to _nalinigans_genomicsdb_uri_support_ branch. Hope that is OK. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422843915
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422843915:58,Testability,test,tests,58,"@droazen, will put some debug print statements in the two tests that are failing while authenticating with GCS and issue another pull request to _nalinigans_genomicsdb_uri_support_ branch. Hope that is OK. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422843915
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1290,Availability,error,error,1290,"g_dir) {; char *gcs_creds = getenv(""GOOGLE_APPLICATION_CREDENTIALS"");; if (gcs_creds) {; value = parse_json(gcs_creds, ""project_id""); // free value after hdfsBuilderConnect as it is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1576,Availability,error,error,1576,"t is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Creden",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1605,Availability,Error,Error,1605,"oud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); ... 77 more; [GenomicsDB::",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:2144,Availability,error,error,2144,"""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); ... 77 more; [GenomicsDB::StorageManagerConfig] Error: Error getting hdfs connection: Connection refused.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:2688,Availability,Error,Error,2688,"""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); ... 77 more; [GenomicsDB::StorageManagerConfig] Error: Error getting hdfs connection: Connection refused.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:2695,Availability,Error,Error,2695,"""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); ... 77 more; [GenomicsDB::StorageManagerConfig] Error: Error getting hdfs connection: Connection refused.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:83,Deployability,configurat,configuration,83,"@droazen, we have a free GCS account, so it is possible that Hadoop requires extra configuration for authenticating/connecting with the HELLBENDER travis service account. Can anyone help here? This the code we have for connecting to GCS via Hadoop. ```; hdfsFS gcs_connect(struct hdfsBuilder *builder, const std::string& working_dir) {; char *gcs_creds = getenv(""GOOGLE_APPLICATION_CREDENTIALS"");; if (gcs_creds) {; value = parse_json(gcs_creds, ""project_id""); // free value after hdfsBuilderConnect as it is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:83,Modifiability,config,configuration,83,"@droazen, we have a free GCS account, so it is possible that Hadoop requires extra configuration for authenticating/connecting with the HELLBENDER travis service account. Can anyone help here? This the code we have for connecting to GCS via Hadoop. ```; hdfsFS gcs_connect(struct hdfsBuilder *builder, const std::string& working_dir) {; char *gcs_creds = getenv(""GOOGLE_APPLICATION_CREDENTIALS"");; if (gcs_creds) {; value = parse_json(gcs_creds, ""project_id""); // free value after hdfsBuilderConnect as it is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:2017,Modifiability,config,configure,2017,"""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); ... 77 more; [GenomicsDB::StorageManagerConfig] Error: Error getting hdfs connection: Connection refused.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:101,Security,authenticat,authenticating,101,"@droazen, we have a free GCS account, so it is possible that Hadoop requires extra configuration for authenticating/connecting with the HELLBENDER travis service account. Can anyone help here? This the code we have for connecting to GCS via Hadoop. ```; hdfsFS gcs_connect(struct hdfsBuilder *builder, const std::string& working_dir) {; char *gcs_creds = getenv(""GOOGLE_APPLICATION_CREDENTIALS"");; if (gcs_creds) {; value = parse_json(gcs_creds, ""project_id""); // free value after hdfsBuilderConnect as it is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoo",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1619,Security,access,access,1619,"oud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); ... 77 more; [GenomicsDB::",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1308,Testability,log,logs,1308,"g_dir) {; char *gcs_creds = getenv(""GOOGLE_APPLICATION_CREDENTIALS"");; if (gcs_creds) {; value = parse_json(gcs_creds, ""project_id""); // free value after hdfsBuilderConnect as it is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1328,Testability,Test,Test,1328,"g_dir) {; char *gcs_creds = getenv(""GOOGLE_APPLICATION_CREDENTIALS"");; if (gcs_creds) {; value = parse_json(gcs_creds, ""project_id""); // free value after hdfsBuilderConnect as it is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1334,Testability,Test,Test,1334,"g_dir) {; char *gcs_creds = getenv(""GOOGLE_APPLICATION_CREDENTIALS"");; if (gcs_creds) {; value = parse_json(gcs_creds, ""project_id""); // free value after hdfsBuilderConnect as it is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1346,Testability,test,testWriteToAndQueryFromGCS,1346,"g_dir) {; char *gcs_creds = getenv(""GOOGLE_APPLICATION_CREDENTIALS"");; if (gcs_creds) {; value = parse_json(gcs_creds, ""project_id""); // free value after hdfsBuilderConnect as it is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1512,Testability,test,test-logs,1512,"t is shallow copied.; if (value) {; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.enable"", ""true"");; hdfsBuilderConfSetStr(builder, ""google.cloud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Creden",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:478,Availability,avail,available,478,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:768,Availability,error,error,768,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:232,Deployability,configurat,configuration,232,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:821,Deployability,configurat,configuration,821,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:899,Deployability,Configurat,ConfigurationUtil,899,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:936,Deployability,Configurat,ConfigurationUtil,936,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:232,Modifiability,config,configuration,232,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:544,Modifiability,config,configured,544,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:821,Modifiability,config,configuration,821,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:899,Modifiability,Config,ConfigurationUtil,899,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:936,Modifiability,Config,ConfigurationUtil,936,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:1158,Modifiability,config,configure,1158,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:89,Testability,test,tests,89,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:130,Testability,test,test,130,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:298,Testability,test,testing,298,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:405,Testability,test,tests,405,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:507,Testability,test,tests,507,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:704,Testability,test,test-logs,704,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429598743:294,Deployability,release,released,294,"PR is ready to be merged. The 2 GCS tests in GenomicsDBImportIntegrationTest.java are commented out, but they have been tested with the HELLBENDER test project and GOOGLE_APPLICATION_CREDENTIALS in the nalini_new_genomicsdb_jar branch and will be uncommented as soon as a new GenomicsDB jar is released.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429598743
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429598743:36,Testability,test,tests,36,"PR is ready to be merged. The 2 GCS tests in GenomicsDBImportIntegrationTest.java are commented out, but they have been tested with the HELLBENDER test project and GOOGLE_APPLICATION_CREDENTIALS in the nalini_new_genomicsdb_jar branch and will be uncommented as soon as a new GenomicsDB jar is released.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429598743
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429598743:120,Testability,test,tested,120,"PR is ready to be merged. The 2 GCS tests in GenomicsDBImportIntegrationTest.java are commented out, but they have been tested with the HELLBENDER test project and GOOGLE_APPLICATION_CREDENTIALS in the nalini_new_genomicsdb_jar branch and will be uncommented as soon as a new GenomicsDB jar is released.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429598743
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429598743:147,Testability,test,test,147,"PR is ready to be merged. The 2 GCS tests in GenomicsDBImportIntegrationTest.java are commented out, but they have been tested with the HELLBENDER test project and GOOGLE_APPLICATION_CREDENTIALS in the nalini_new_genomicsdb_jar branch and will be uncommented as soon as a new GenomicsDB jar is released.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429598743
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429975698:112,Testability,test,tests,112,@lbergelson is going to try regenerating our service account key and see if that allows us to uncomment the GCS tests in this branch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429975698
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430472483:66,Testability,test,tests,66,"@lbergelson, thanks for regenerating the service account key. All tests are enabled and pass now. ; @droazen, please feel free to merge with master.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430472483
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216:163,Performance,perform,performance,163,"@nalinigans Tests passed, but it's worth pointing out that the new `testWriteToAndQueryFromGCS()` test took 9 minutes to complete, which seems very slow. Possible performance issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216:12,Testability,Test,Tests,12,"@nalinigans Tests passed, but it's worth pointing out that the new `testWriteToAndQueryFromGCS()` test took 9 minutes to complete, which seems very slow. Possible performance issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216:68,Testability,test,testWriteToAndQueryFromGCS,68,"@nalinigans Tests passed, but it's worth pointing out that the new `testWriteToAndQueryFromGCS()` test took 9 minutes to complete, which seems very slow. Possible performance issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216
https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216:98,Testability,test,test,98,"@nalinigans Tests passed, but it's worth pointing out that the new `testWriteToAndQueryFromGCS()` test took 9 minutes to complete, which seems very slow. Possible performance issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216
https://github.com/broadinstitute/gatk/issues/5205#issuecomment-423304679:8,Performance,perform,performance,8,Reading performance is particularly important,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5205#issuecomment-423304679
https://github.com/broadinstitute/gatk/issues/5208#issuecomment-423307049:189,Deployability,pipeline,pipeline,189,"We want to know whether it's faster to convert upfront from cram to bam, and then read from bam in all of our tools, or skip the conversion and read directly from cram at every step in the pipeline.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5208#issuecomment-423307049
https://github.com/broadinstitute/gatk/issues/5212#issuecomment-424502910:17,Deployability,release,release,17,I've performed a release of 4.0.9.0 using the poms generated with https://github.com/broadinstitute/gatk/pull/5224 and a bit of manual work.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5212#issuecomment-424502910
https://github.com/broadinstitute/gatk/issues/5212#issuecomment-424502910:5,Performance,perform,performed,5,I've performed a release of 4.0.9.0 using the poms generated with https://github.com/broadinstitute/gatk/pull/5224 and a bit of manual work.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5212#issuecomment-424502910
https://github.com/broadinstitute/gatk/issues/5213#issuecomment-584447441:106,Usability,simpl,simply,106,"@lbergelson It's dawning on me that I completely misunderstood this ticket. Is the idea that a push build simply builds your (in general unrebased) commit, while a PR build intends to build the repo as would be upon merging? And is the PR build the Travis build that instantly reports passing when we issue PRs?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5213#issuecomment-584447441
https://github.com/broadinstitute/gatk/issues/5213#issuecomment-584454027:579,Usability,feedback,feedback,579,"You're partially correct. A push build builds exactly the branch as pushed, while the PR build essentially merges the branch into master and builds that, so it's what you would get on merging. Since the only result we really care about is what happens when we merge to master, we try to skip the push builds by instantly passing them and only building the PRs. . I think there's an issue though when there is a merge conflict, because then it can't build the PR build since you have to resolve the conflict manually, but it still skips the push build, so we don't get any useful feedback.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5213#issuecomment-584454027
https://github.com/broadinstitute/gatk/pull/5215#issuecomment-425465744:4814,Deployability,update,update,4814,"mE=) | `96.87% <85.71%> (-1.46%)` | `15 <1> (+1)` | |; | [...lotypecaller/AssemblyBasedCallerUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyVXRpbHNVbml0VGVzdC5qYXZh) | `95.77% <95.28%> (-4.23%)` | `45 <43> (+43)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...te/hellbender/utils/genotyper/ReadLikelihoods.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nZW5vdHlwZXIvUmVhZExpa2VsaWhvb2RzLmphdmE=) | `90.14% <0%> (+0.4%)` | `143% <0%> (ø)` | :arrow_down: |; | ... and [1 more](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=footer). Last update [8103bde...7d53fb9](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5215#issuecomment-425465744
https://github.com/broadinstitute/gatk/pull/5215#issuecomment-425465744:4717,Energy Efficiency,Power,Powered,4717,"mE=) | `96.87% <85.71%> (-1.46%)` | `15 <1> (+1)` | |; | [...lotypecaller/AssemblyBasedCallerUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyVXRpbHNVbml0VGVzdC5qYXZh) | `95.77% <95.28%> (-4.23%)` | `45 <43> (+43)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...te/hellbender/utils/genotyper/ReadLikelihoods.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nZW5vdHlwZXIvUmVhZExpa2VsaWhvb2RzLmphdmE=) | `90.14% <0%> (+0.4%)` | `143% <0%> (ø)` | :arrow_down: |; | ... and [1 more](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=footer). Last update [8103bde...7d53fb9](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5215#issuecomment-425465744
https://github.com/broadinstitute/gatk/pull/5215#issuecomment-425465744:4580,Usability,learn,learn,4580,"mE=) | `96.87% <85.71%> (-1.46%)` | `15 <1> (+1)` | |; | [...lotypecaller/AssemblyBasedCallerUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyVXRpbHNVbml0VGVzdC5qYXZh) | `95.77% <95.28%> (-4.23%)` | `45 <43> (+43)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...te/hellbender/utils/genotyper/ReadLikelihoods.java](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nZW5vdHlwZXIvUmVhZExpa2VsaWhvb2RzLmphdmE=) | `90.14% <0%> (+0.4%)` | `143% <0%> (ø)` | :arrow_down: |; | ... and [1 more](https://codecov.io/gh/broadinstitute/gatk/pull/5215/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=footer). Last update [8103bde...7d53fb9](https://codecov.io/gh/broadinstitute/gatk/pull/5215?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5215#issuecomment-425465744
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424367893:108,Energy Efficiency,monitor,monitor,108,The FireCloud Job is here https://portal.firecloud.org/#workspaces/broad-firecloud-dsde/dsde-methods-sv-dev/monitor/ecdb3b72-7b4b-4612-9c87-1c0124f62708,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424367893
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424372961:247,Availability,down,down,247,The folder containing all the outputs (scripts and staged inputs) in the cloud is in https://console.cloud.google.com/storage/browser/fc-6da0ee01-0ec0-4606-b918-216fe3f7f098/ecdb3b72-7b4b-4612-9c87-1c0124f62708?pli=1. You should be able to browse down to each tasks sub-folder.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424372961
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424415630:52,Security,access,access,52,"Thanks, @vruano, but I think you'll have to give me access to the FC workspace and bucket. I've opened a branch sl_revert_glob that I think will fix the issue. I'll test it out on FC and let you know how it goes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424415630
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424415630:165,Testability,test,test,165,"Thanks, @vruano, but I think you'll have to give me access to the FC workspace and bucket. I've opened a branch sl_revert_glob that I think will fix the issue. I'll test it out on FC and let you know how it goes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424415630
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424435081:39,Security,access,access,39,@cwhelan could you give andrei and sam access to the FC dsde-methods-sv-dev workspace can investigate the bug. I and Steve had tried without success.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424435081
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535:77,Availability,error,error,77,"Thanks, we have access now. I'm pretty sure that sl_revert_glob will fix the error. I've rebased my dev branch sl_filter (which includes the filtering steps Jack mentioned in the BSV meeting today) onto sl_revert and am testing cohort mode on FC now. I'll try to test scattered-case mode as well later today if that succeeds. As @asmirnov239 pointed out to me, this revert leaves #4397 unresolved, so we should go back and clean up at some point. However, our priority now is to get a stable v1 of the SFARI evaluation on FC.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535:16,Security,access,access,16,"Thanks, we have access now. I'm pretty sure that sl_revert_glob will fix the error. I've rebased my dev branch sl_filter (which includes the filtering steps Jack mentioned in the BSV meeting today) onto sl_revert and am testing cohort mode on FC now. I'll try to test scattered-case mode as well later today if that succeeds. As @asmirnov239 pointed out to me, this revert leaves #4397 unresolved, so we should go back and clean up at some point. However, our priority now is to get a stable v1 of the SFARI evaluation on FC.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535:220,Testability,test,testing,220,"Thanks, we have access now. I'm pretty sure that sl_revert_glob will fix the error. I've rebased my dev branch sl_filter (which includes the filtering steps Jack mentioned in the BSV meeting today) onto sl_revert and am testing cohort mode on FC now. I'll try to test scattered-case mode as well later today if that succeeds. As @asmirnov239 pointed out to me, this revert leaves #4397 unresolved, so we should go back and clean up at some point. However, our priority now is to get a stable v1 of the SFARI evaluation on FC.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535
https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535:263,Testability,test,test,263,"Thanks, we have access now. I'm pretty sure that sl_revert_glob will fix the error. I've rebased my dev branch sl_filter (which includes the filtering steps Jack mentioned in the BSV meeting today) onto sl_revert and am testing cohort mode on FC now. I'll try to test scattered-case mode as well later today if that succeeds. As @asmirnov239 pointed out to me, this revert leaves #4397 unresolved, so we should go back and clean up at some point. However, our priority now is to get a stable v1 of the SFARI evaluation on FC.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535
https://github.com/broadinstitute/gatk/issues/5218#issuecomment-424882567:576,Availability,avail,available,576,"@marchoeppner `MarkDuplicatesGATK` was removed because it had fallen out-of-date with respect to the version in Picard, and as an unmaintained tool was in our view not safe for use, and was causing confusion for our users. The loss of CRAM support is an unfortunate side effect of its removal. We've been doing a lot of work on our parallel version of `MarkDuplicates`, however, which is called `MarkDuplicatesSpark`. This version is fully up-to-date with respect to the Picard version, can run much faster than the Picard version when multiple cores or multiple machines are available, and will fully support CRAM in the future. CRAM support in that tool will come as a side effect of our migration to the new Disq library (https://github.com/disq-bio/disq), which is scheduled to happen within the next few months. In the meantime, I'd suggest continuing to request the Picard community to add CRAM support to their version. It's likely not a lot of work, and may simply require passing the reference through to the reader class, which could be a ~1 line change!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5218#issuecomment-424882567
https://github.com/broadinstitute/gatk/issues/5218#issuecomment-424882567:769,Energy Efficiency,schedul,scheduled,769,"@marchoeppner `MarkDuplicatesGATK` was removed because it had fallen out-of-date with respect to the version in Picard, and as an unmaintained tool was in our view not safe for use, and was causing confusion for our users. The loss of CRAM support is an unfortunate side effect of its removal. We've been doing a lot of work on our parallel version of `MarkDuplicates`, however, which is called `MarkDuplicatesSpark`. This version is fully up-to-date with respect to the Picard version, can run much faster than the Picard version when multiple cores or multiple machines are available, and will fully support CRAM in the future. CRAM support in that tool will come as a side effect of our migration to the new Disq library (https://github.com/disq-bio/disq), which is scheduled to happen within the next few months. In the meantime, I'd suggest continuing to request the Picard community to add CRAM support to their version. It's likely not a lot of work, and may simply require passing the reference through to the reader class, which could be a ~1 line change!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5218#issuecomment-424882567
https://github.com/broadinstitute/gatk/issues/5218#issuecomment-424882567:168,Safety,safe,safe,168,"@marchoeppner `MarkDuplicatesGATK` was removed because it had fallen out-of-date with respect to the version in Picard, and as an unmaintained tool was in our view not safe for use, and was causing confusion for our users. The loss of CRAM support is an unfortunate side effect of its removal. We've been doing a lot of work on our parallel version of `MarkDuplicates`, however, which is called `MarkDuplicatesSpark`. This version is fully up-to-date with respect to the Picard version, can run much faster than the Picard version when multiple cores or multiple machines are available, and will fully support CRAM in the future. CRAM support in that tool will come as a side effect of our migration to the new Disq library (https://github.com/disq-bio/disq), which is scheduled to happen within the next few months. In the meantime, I'd suggest continuing to request the Picard community to add CRAM support to their version. It's likely not a lot of work, and may simply require passing the reference through to the reader class, which could be a ~1 line change!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5218#issuecomment-424882567
https://github.com/broadinstitute/gatk/issues/5218#issuecomment-424882567:966,Usability,simpl,simply,966,"@marchoeppner `MarkDuplicatesGATK` was removed because it had fallen out-of-date with respect to the version in Picard, and as an unmaintained tool was in our view not safe for use, and was causing confusion for our users. The loss of CRAM support is an unfortunate side effect of its removal. We've been doing a lot of work on our parallel version of `MarkDuplicates`, however, which is called `MarkDuplicatesSpark`. This version is fully up-to-date with respect to the Picard version, can run much faster than the Picard version when multiple cores or multiple machines are available, and will fully support CRAM in the future. CRAM support in that tool will come as a side effect of our migration to the new Disq library (https://github.com/disq-bio/disq), which is scheduled to happen within the next few months. In the meantime, I'd suggest continuing to request the Picard community to add CRAM support to their version. It's likely not a lot of work, and may simply require passing the reference through to the reader class, which could be a ~1 line change!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5218#issuecomment-424882567
https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424376478:557,Usability,simpl,simpler,557,"@cmnbroad I haven't actually looked at the code yet, but we don't necessarily have to match GATK3 output. In the expected file at 20:10004769 where there's a deletion and then each position within the deletion reported out again with exactly the same attributes I'm not married to that representation. Furthermore, I don't know what SelectVariants will do if you ask for e.g. 20: 10004772 -- should you get the deletion? The deletion and the *-only context at the requested position _without_ the previous positions in the deletion? Does it make things any simpler if you don't have to output *-only sites?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424376478
https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424454872:403,Deployability,update,update,403,"@ldgauthier Emitting the spanning-deletion-only sites completely would definitely make things simpler, since I could then use EMIT_ALL_CONFIDENT_SITES and GenotypingEngine would just naturally do the right thing. Also, the result would comport with my own naive expectations. Using the current PR, outputs could contain LowQual sites that GATK3 wouldn't have included. So if you're good with that, I'll update the PR and tests to reflect that before any more reviewing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424454872
https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424454872:421,Testability,test,tests,421,"@ldgauthier Emitting the spanning-deletion-only sites completely would definitely make things simpler, since I could then use EMIT_ALL_CONFIDENT_SITES and GenotypingEngine would just naturally do the right thing. Also, the result would comport with my own naive expectations. Using the current PR, outputs could contain LowQual sites that GATK3 wouldn't have included. So if you're good with that, I'll update the PR and tests to reflect that before any more reviewing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424454872
https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424454872:94,Usability,simpl,simpler,94,"@ldgauthier Emitting the spanning-deletion-only sites completely would definitely make things simpler, since I could then use EMIT_ALL_CONFIDENT_SITES and GenotypingEngine would just naturally do the right thing. Also, the result would comport with my own naive expectations. Using the current PR, outputs could contain LowQual sites that GATK3 wouldn't have included. So if you're good with that, I'll update the PR and tests to reflect that before any more reviewing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424454872
https://github.com/broadinstitute/gatk/pull/5219#issuecomment-425956735:37,Deployability,update,updated,37,"Ok, based on internal discussions, I updated this to not emit the spanning-del only sites, but to include the LowQual sites.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5219#issuecomment-425956735
https://github.com/broadinstitute/gatk/issues/5220#issuecomment-426729414:8,Deployability,patch,patched,8,"They've patched the warning message to be an info message instead, but I think it will still show a stacktrace since info is our standard level.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5220#issuecomment-426729414
https://github.com/broadinstitute/gatk/issues/5220#issuecomment-426729414:28,Integrability,message,message,28,"They've patched the warning message to be an info message instead, but I think it will still show a stacktrace since info is our standard level.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5220#issuecomment-426729414
https://github.com/broadinstitute/gatk/issues/5220#issuecomment-426729414:50,Integrability,message,message,50,"They've patched the warning message to be an info message instead, but I think it will still show a stacktrace since info is our standard level.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5220#issuecomment-426729414
https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426274932:210,Availability,avail,available,210,"@jamesemery the use of padding is a little confusing. One use of padding is for providing extra reference bases around the reads. This is the case in `ReadWalkerSpark`, for example. When the whole reference is available via the Spark files mechanism (which is what this PR is about) then there is no need for padding (and in the case of `ReadWalkerSpark`, no need for sharding at all). Therefore it makes sense to remove the use of padding in these cases. Another use of padding was for providing more reads around an area of interest in assembly region/haplotype caller tools. This is no longer the case though, since the refactoring that @droazen did in `HaplotypeCaller` in #4031. However, `HaplotypeCallerSpark` has not been updated to reflect the changes from that refactoring, so it's probably best not to change the padding in that class. I've reverted the change there for this reason. The locus walkers never had any need for padding, except for padding reference bases in `LocusWalkerSpark`, mentioned above. I've added a comment in the code to clarify this. Hopefully that makes more sense now. Please let me know what you think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426274932
https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426274932:729,Deployability,update,updated,729,"@jamesemery the use of padding is a little confusing. One use of padding is for providing extra reference bases around the reads. This is the case in `ReadWalkerSpark`, for example. When the whole reference is available via the Spark files mechanism (which is what this PR is about) then there is no need for padding (and in the case of `ReadWalkerSpark`, no need for sharding at all). Therefore it makes sense to remove the use of padding in these cases. Another use of padding was for providing more reads around an area of interest in assembly region/haplotype caller tools. This is no longer the case though, since the refactoring that @droazen did in `HaplotypeCaller` in #4031. However, `HaplotypeCallerSpark` has not been updated to reflect the changes from that refactoring, so it's probably best not to change the padding in that class. I've reverted the change there for this reason. The locus walkers never had any need for padding, except for padding reference bases in `LocusWalkerSpark`, mentioned above. I've added a comment in the code to clarify this. Hopefully that makes more sense now. Please let me know what you think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426274932
https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426274932:623,Modifiability,refactor,refactoring,623,"@jamesemery the use of padding is a little confusing. One use of padding is for providing extra reference bases around the reads. This is the case in `ReadWalkerSpark`, for example. When the whole reference is available via the Spark files mechanism (which is what this PR is about) then there is no need for padding (and in the case of `ReadWalkerSpark`, no need for sharding at all). Therefore it makes sense to remove the use of padding in these cases. Another use of padding was for providing more reads around an area of interest in assembly region/haplotype caller tools. This is no longer the case though, since the refactoring that @droazen did in `HaplotypeCaller` in #4031. However, `HaplotypeCallerSpark` has not been updated to reflect the changes from that refactoring, so it's probably best not to change the padding in that class. I've reverted the change there for this reason. The locus walkers never had any need for padding, except for padding reference bases in `LocusWalkerSpark`, mentioned above. I've added a comment in the code to clarify this. Hopefully that makes more sense now. Please let me know what you think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426274932
https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426274932:770,Modifiability,refactor,refactoring,770,"@jamesemery the use of padding is a little confusing. One use of padding is for providing extra reference bases around the reads. This is the case in `ReadWalkerSpark`, for example. When the whole reference is available via the Spark files mechanism (which is what this PR is about) then there is no need for padding (and in the case of `ReadWalkerSpark`, no need for sharding at all). Therefore it makes sense to remove the use of padding in these cases. Another use of padding was for providing more reads around an area of interest in assembly region/haplotype caller tools. This is no longer the case though, since the refactoring that @droazen did in `HaplotypeCaller` in #4031. However, `HaplotypeCallerSpark` has not been updated to reflect the changes from that refactoring, so it's probably best not to change the padding in that class. I've reverted the change there for this reason. The locus walkers never had any need for padding, except for padding reference bases in `LocusWalkerSpark`, mentioned above. I've added a comment in the code to clarify this. Hopefully that makes more sense now. Please let me know what you think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426274932
https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426308250:1135,Deployability,pipeline,pipelines,1135,src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/2ee7df30bc5fab180ca395a2c5991826603bfd45?src=pr&el=desc) will **increase** coverage by `<.01%`.; > The diff coverage is `70.83%`. [![Impacted file tree graph](https://codecov.io/gh/broadinstitute/gatk/pull/5221/graphs/tree.svg?width=650&token=7RuX7LsQVf&height=150&src=pr)](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #5221 +/- ##; ============================================; + Coverage 86.75% 86.76% +<.01% ; - Complexity 29764 29766 +2 ; ============================================; Files 1825 1825 ; Lines 137726 137699 -27 ; Branches 15188 15176 -12 ; ============================================; - Hits 119481 119469 -12 ; + Misses 12724 12717 -7 ; + Partials 5521 5513 -8; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `96.87% <ø> (-0.1%)` | `7 <0> (ø)` | |; | [...bender/engine/spark/AssemblyRegionWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvQXNzZW1ibHlSZWdpb25XYWxrZXJTcGFyay5qYXZh) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/engine/spark/GATKSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1NwYXJrVG9vbC5qYXZh) | `81.81% <100%> (+0.25%)` | `68 <2> (+1)` | :arrow_up: |; | [...e/hellbender/engine/spark/IntervalWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/dif,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426308250
https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426308250:4594,Deployability,update,update,4594,"r&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvTG9jdXNXYWxrZXJTcGFyay5qYXZh) | `82.5% <83.33%> (+4.72%)` | `12 <2> (ø)` | :arrow_down: |; | [...itute/hellbender/engine/spark/ReadWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZFdhbGtlclNwYXJrLmphdmE=) | `72.22% <85.71%> (-5.2%)` | `8 <3> (-2)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `72.51% <0%> (+0.94%)` | `38% <0%> (+1%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `80% <0%> (+30%)` | `3% <0%> (+2%)` | :arrow_up: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=footer). Last update [2ee7df3...e40ce5e](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426308250
https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426308250:4497,Energy Efficiency,Power,Powered,4497,"r&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvTG9jdXNXYWxrZXJTcGFyay5qYXZh) | `82.5% <83.33%> (+4.72%)` | `12 <2> (ø)` | :arrow_down: |; | [...itute/hellbender/engine/spark/ReadWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZFdhbGtlclNwYXJrLmphdmE=) | `72.22% <85.71%> (-5.2%)` | `8 <3> (-2)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `72.51% <0%> (+0.94%)` | `38% <0%> (+1%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `80% <0%> (+30%)` | `3% <0%> (+2%)` | :arrow_up: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=footer). Last update [2ee7df3...e40ce5e](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426308250
https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426308250:4360,Usability,learn,learn,4360,"r&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvTG9jdXNXYWxrZXJTcGFyay5qYXZh) | `82.5% <83.33%> (+4.72%)` | `12 <2> (ø)` | :arrow_down: |; | [...itute/hellbender/engine/spark/ReadWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZFdhbGtlclNwYXJrLmphdmE=) | `72.22% <85.71%> (-5.2%)` | `8 <3> (-2)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `72.51% <0%> (+0.94%)` | `38% <0%> (+1%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5221/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `80% <0%> (+30%)` | `3% <0%> (+2%)` | :arrow_up: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=footer). Last update [2ee7df3...e40ce5e](https://codecov.io/gh/broadinstitute/gatk/pull/5221?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5221#issuecomment-426308250
https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398:152,Deployability,update,update,152,"@jamesemery, yes, I've opened #5248 with the isolated fix (and unit test). I'll leave this open for the `CollectAllelicCountsSpark` changes, which I'll update when the other changes it depends on are merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398
https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398:185,Integrability,depend,depends,185,"@jamesemery, yes, I've opened #5248 with the isolated fix (and unit test). I'll leave this open for the `CollectAllelicCountsSpark` changes, which I'll update when the other changes it depends on are merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398
https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398:68,Testability,test,test,68,"@jamesemery, yes, I've opened #5248 with the isolated fix (and unit test). I'll leave this open for the `CollectAllelicCountsSpark` changes, which I'll update when the other changes it depends on are merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398
https://github.com/broadinstitute/gatk/issues/5223#issuecomment-424440901:24,Testability,test,tested,24,These fields need to be tested:; - cdna change; - codon change; - protein change; - gene name; - variant classification; - strand; - annotation transcript; - genome change,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5223#issuecomment-424440901
https://github.com/broadinstitute/gatk/issues/5230#issuecomment-426410709:34,Testability,test,test,34,"@jamesemery, the bug report, i.e. test data from the researcher, is at `/humgen/gsa-scr1/pub/incoming/Exception_in_SplitNCigarReads.tgz`, as stated above.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5230#issuecomment-426410709
https://github.com/broadinstitute/gatk/issues/5233#issuecomment-425207954:56,Modifiability,inherit,inherited,56,"The problem seems to be that some of the ""deep"" filters inherited from ReadWalker require to look into the read-base/qualities (just to compare their lenghts) which seems to be quite costly to decode and some of the read-attributes when this particular tool does not need to look into those fields. . It seems to me that we could override these check with a more lightweight alternative. . <img width=""1009"" alt=""screen shot 2018-09-27 at 3 03 36 pm"" src=""https://user-images.githubusercontent.com/791104/46168553-d32a0800-c266-11e8-96fd-d60d7c0380d5.png"">",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5233#issuecomment-425207954
https://github.com/broadinstitute/gatk/issues/5233#issuecomment-425212036:49,Performance,optimiz,optimized,49,"Thanks for looking into this, @vruano. We've not optimized CollectReadCounts for runtime or experimented with how the filters might affect performance (the latter would be easier with the FC-based evaluation in place). Can you first try to use `disable-read-filter` on the offending filters to see if that affects runtime or the resulting counts?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5233#issuecomment-425212036
https://github.com/broadinstitute/gatk/issues/5233#issuecomment-425212036:139,Performance,perform,performance,139,"Thanks for looking into this, @vruano. We've not optimized CollectReadCounts for runtime or experimented with how the filters might affect performance (the latter would be easier with the FC-based evaluation in place). Can you first try to use `disable-read-filter` on the offending filters to see if that affects runtime or the resulting counts?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5233#issuecomment-425212036
https://github.com/broadinstitute/gatk/pull/5237#issuecomment-425450125:69,Deployability,upgrade,upgrade,69,"@jamesemery the only way I could get genomicsDB tests to pass was to upgrade to the latest version and use the protobuf implementation for the vidmap by merging in #4993. That PR is blocked because I asked for allele-specific features and it's looking like no one is going to do that anytime soon. But if you'd rather merge that first and then rebase this to keep things tidy, I understand.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5237#issuecomment-425450125
https://github.com/broadinstitute/gatk/pull/5237#issuecomment-425450125:48,Testability,test,tests,48,"@jamesemery the only way I could get genomicsDB tests to pass was to upgrade to the latest version and use the protobuf implementation for the vidmap by merging in #4993. That PR is blocked because I asked for allele-specific features and it's looking like no one is going to do that anytime soon. But if you'd rather merge that first and then rebase this to keep things tidy, I understand.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5237#issuecomment-425450125
https://github.com/broadinstitute/gatk/issues/5243#issuecomment-426388368:12,Availability,fault,fault,12,"This was my fault, sorry about that.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5243#issuecomment-426388368
https://github.com/broadinstitute/gatk/issues/5244#issuecomment-481806389:104,Usability,learn,learned,104,"@ldgauthier This ticket seems to be asking for genotype priors i.e. population allele frequencies to be learned within joint calling. If I interpret the request correctly, that's what new qual does. Can we close this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5244#issuecomment-481806389
https://github.com/broadinstitute/gatk/issues/5244#issuecomment-483664820:356,Usability,learn,learned,356,"Did you ever hook up the new qual to the genotyping? I read this ticket as; asking for genotype posteriors to be output by HC/GGVCFs. On Wed, Apr 10, 2019, 2:22 PM David Benjamin <notifications@github.com>; wrote:. > @ldgauthier <https://github.com/ldgauthier> This ticket seems to be; > asking for genotype priors i.e. population allele frequencies to be learned; > within joint calling. If I interpret the request correctly, that's what new; > qual does. Can we close this?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5244#issuecomment-481806389>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdFqZ7Nrl4o9sSY5GwbEAvb0e6XuUks5vfiv7gaJpZM4XCuSv>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5244#issuecomment-483664820
https://github.com/broadinstitute/gatk/issues/5245#issuecomment-447967733:101,Deployability,release,release,101,@bhanugandham Its fixed (https://github.com/broadinstitute/gatk/pull/5480) and should be in the next release (today).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5245#issuecomment-447967733
https://github.com/broadinstitute/gatk/issues/5245#issuecomment-448091892:52,Deployability,update,updates,52,Thanks @cmnbroad. Got swept away in Taiwan workshop updates.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5245#issuecomment-448091892
https://github.com/broadinstitute/gatk/pull/5248#issuecomment-426337698:1567,Deployability,pipeline,pipelines,1567,==========; Files 1822 1825 +3 ; Lines 137732 138108 +376 ; Branches 15184 15231 +47 ; ===============================================; + Hits 119546 119650 +104 ; - Misses 12665 12917 +252 ; - Partials 5521 5541 +20; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5248?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...nstitute/hellbender/engine/spark/SparkSharder.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtTaGFyZGVyLmphdmE=) | `91.156% <100%> (+0.184%)` | `30 <0> (-1)` | :arrow_down: |; | [.../hellbender/engine/spark/SparkSharderUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtTaGFyZGVyVW5pdFRlc3QuamF2YQ==) | `92.92% <100%> (+0.193%)` | `7 <0> (ø)` | :arrow_down: |; | [...ender/tools/spark/pipelines/BQSRPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmsuamF2YQ==) | `43.243% <0%> (-56.757%)` | `5% <0%> (-3%)` | |; | [...rk/pipelines/BQSRPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `50.649% <0%> (-42.454%)` | `4% <0%> (-2%)` | |; | [...ender/tools/spark/transforms/ApplyBQSRSparkFn.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL0FwcGx5QlFTUlNwYXJrRm4uamF2YQ==) | `44.444% <0%> (-38.889%)` | `2% <0%> (-2%)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5248#issuecomment-426337698
https://github.com/broadinstitute/gatk/pull/5248#issuecomment-426337698:1860,Deployability,pipeline,pipelines,1860,) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...nstitute/hellbender/engine/spark/SparkSharder.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtTaGFyZGVyLmphdmE=) | `91.156% <100%> (+0.184%)` | `30 <0> (-1)` | :arrow_down: |; | [.../hellbender/engine/spark/SparkSharderUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtTaGFyZGVyVW5pdFRlc3QuamF2YQ==) | `92.92% <100%> (+0.193%)` | `7 <0> (ø)` | :arrow_down: |; | [...ender/tools/spark/pipelines/BQSRPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmsuamF2YQ==) | `43.243% <0%> (-56.757%)` | `5% <0%> (-3%)` | |; | [...rk/pipelines/BQSRPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `50.649% <0%> (-42.454%)` | `4% <0%> (-2%)` | |; | [...ender/tools/spark/transforms/ApplyBQSRSparkFn.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL0FwcGx5QlFTUlNwYXJrRm4uamF2YQ==) | `44.444% <0%> (-38.889%)` | `2% <0%> (-2%)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `51.807% <0%> (-35.23%)` | `11% <0%> (-6%)` | |; | [...ls/spark/BaseRecalibratorSparkIntegrationTest.java](https://codecov.io/gh/broad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5248#issuecomment-426337698
https://github.com/broadinstitute/gatk/pull/5248#issuecomment-426337698:2510,Deployability,pipeline,pipelines,2510,<0> (ø)` | :arrow_down: |; | [...ender/tools/spark/pipelines/BQSRPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmsuamF2YQ==) | `43.243% <0%> (-56.757%)` | `5% <0%> (-3%)` | |; | [...rk/pipelines/BQSRPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQlFTUlBpcGVsaW5lU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `50.649% <0%> (-42.454%)` | `4% <0%> (-2%)` | |; | [...ender/tools/spark/transforms/ApplyBQSRSparkFn.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL0FwcGx5QlFTUlNwYXJrRm4uamF2YQ==) | `44.444% <0%> (-38.889%)` | `2% <0%> (-2%)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `51.807% <0%> (-35.23%)` | `11% <0%> (-6%)` | |; | [...ls/spark/BaseRecalibratorSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `23.626% <0%> (-27.453%)` | `5% <0%> (-1%)` | |; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `73.864% <0%> (-18.783%)` | `8% <0%> (+2%)` | |; | [...stitute/hellbender/tools/HaplotypeCallerSpark.java](https://codecov,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5248#issuecomment-426337698
https://github.com/broadinstitute/gatk/pull/5248#issuecomment-426337698:3123,Deployability,pipeline,pipelines,3123,amF2YQ==) | `50.649% <0%> (-42.454%)` | `4% <0%> (-2%)` | |; | [...ender/tools/spark/transforms/ApplyBQSRSparkFn.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL0FwcGx5QlFTUlNwYXJrRm4uamF2YQ==) | `44.444% <0%> (-38.889%)` | `2% <0%> (-2%)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `51.807% <0%> (-35.23%)` | `11% <0%> (-6%)` | |; | [...ls/spark/BaseRecalibratorSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `23.626% <0%> (-27.453%)` | `5% <0%> (-1%)` | |; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `73.864% <0%> (-18.783%)` | `8% <0%> (+2%)` | |; | [...stitute/hellbender/tools/HaplotypeCallerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFyay5qYXZh) | `70.13% <0%> (-9.87%)` | `31% <0%> (+5%)` | |; | [...stitute/hellbender/engine/spark/GATKSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1NwYXJrVG9vbC5qYXZh) | `79.835% <0%> (-4.462%)` | `95% <0%> (+32%)` | |; | ... and [7 more](https://codecov.io/gh/broadinstitute/gatk/pull/5248/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5248#issuecomment-426337698
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671:949,Deployability,pipeline,pipelines,949,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5251?src=pr&el=h1) Report; > Merging [#5251](https://codecov.io/gh/broadinstitute/gatk/pull/5251?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/fe62acc2402164cb4b2ba7d348fd64a90e7992e8?src=pr&el=desc) will **increase** coverage by `0.139%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #5251 +/- ##; ===============================================; + Coverage 86.903% 87.042% +0.139% ; - Complexity 30311 32163 +1852 ; ===============================================; Files 1849 1974 +125 ; Lines 140507 147466 +6959 ; Branches 15475 16232 +757 ; ===============================================; + Hits 122105 128358 +6253 ; - Misses 12793 13189 +396 ; - Partials 5609 5919 +310; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5251?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.563% <0%> (-95.313%)` | `1% <0%> (-6%)` | |; | [...adinstitute/hellbender/utils/IntegrationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9JbnRlZ3JhdGlvblV0aWxzLmphdmE=) | `0% <0%> (-95.238%)` | `0% <0%> (-5%)` | |; | [...spark/ReadsPreprocessingPipelineSparkTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZHNQcmVwcm9jZXNzaW5nUGlwZWxpbmVTcGFya1Rlc3REYXRhLmphdmE=) | `0% <0%> (-94.03%)` | `0% <0%> (-11%)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671:1303,Deployability,Integrat,IntegrationUtils,1303,**increase** coverage by `0.139%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #5251 +/- ##; ===============================================; + Coverage 86.903% 87.042% +0.139% ; - Complexity 30311 32163 +1852 ; ===============================================; Files 1849 1974 +125 ; Lines 140507 147466 +6959 ; Branches 15475 16232 +757 ; ===============================================; + Hits 122105 128358 +6253 ; - Misses 12793 13189 +396 ; - Partials 5609 5919 +310; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5251?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.563% <0%> (-95.313%)` | `1% <0%> (-6%)` | |; | [...adinstitute/hellbender/utils/IntegrationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9JbnRlZ3JhdGlvblV0aWxzLmphdmE=) | `0% <0%> (-95.238%)` | `0% <0%> (-5%)` | |; | [...spark/ReadsPreprocessingPipelineSparkTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZHNQcmVwcm9jZXNzaW5nUGlwZWxpbmVTcGFya1Rlc3REYXRhLmphdmE=) | `0% <0%> (-94.03%)` | `0% <0%> (-11%)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `0% <0%> (-89.583%)` | `0% <0%> (-12%)` | |; | [...adinstitute/hellbender/engine/ReadContextData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671:1889,Deployability,pipeline,pipelines,1889,rage Δ | Complexity Δ | |; |---|---|---|---|; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.563% <0%> (-95.313%)` | `1% <0%> (-6%)` | |; | [...adinstitute/hellbender/utils/IntegrationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9JbnRlZ3JhdGlvblV0aWxzLmphdmE=) | `0% <0%> (-95.238%)` | `0% <0%> (-5%)` | |; | [...spark/ReadsPreprocessingPipelineSparkTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZHNQcmVwcm9jZXNzaW5nUGlwZWxpbmVTcGFya1Rlc3REYXRhLmphdmE=) | `0% <0%> (-94.03%)` | `0% <0%> (-11%)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `0% <0%> (-89.583%)` | `0% <0%> (-12%)` | |; | [...adinstitute/hellbender/engine/ReadContextData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZENvbnRleHREYXRhLmphdmE=) | `0% <0%> (-70.37%)` | `0% <0%> (-6%)` | |; | [...n/java/org/broadinstitute/hellbender/utils/KV.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9LVi5qYXZh) | `0% <0%> (-57.143%)` | `0% <0%> (-5%)` | |; | [...walkers/genotyper/afcalc/AFCalculatorProvider.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlb,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671:1303,Integrability,Integrat,IntegrationUtils,1303,**increase** coverage by `0.139%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #5251 +/- ##; ===============================================; + Coverage 86.903% 87.042% +0.139% ; - Complexity 30311 32163 +1852 ; ===============================================; Files 1849 1974 +125 ; Lines 140507 147466 +6959 ; Branches 15475 16232 +757 ; ===============================================; + Hits 122105 128358 +6253 ; - Misses 12793 13189 +396 ; - Partials 5609 5919 +310; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5251?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...k/pipelines/ReadsPipelineSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.563% <0%> (-95.313%)` | `1% <0%> (-6%)` | |; | [...adinstitute/hellbender/utils/IntegrationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9JbnRlZ3JhdGlvblV0aWxzLmphdmE=) | `0% <0%> (-95.238%)` | `0% <0%> (-5%)` | |; | [...spark/ReadsPreprocessingPipelineSparkTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZHNQcmVwcm9jZXNzaW5nUGlwZWxpbmVTcGFya1Rlc3REYXRhLmphdmE=) | `0% <0%> (-94.03%)` | `0% <0%> (-11%)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `0% <0%> (-89.583%)` | `0% <0%> (-12%)` | |; | [...adinstitute/hellbender/engine/ReadContextData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671:3052,Performance,Concurren,ConcurrentAFCalculatorProvider,3052,0b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `0% <0%> (-89.583%)` | `0% <0%> (-12%)` | |; | [...adinstitute/hellbender/engine/ReadContextData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZENvbnRleHREYXRhLmphdmE=) | `0% <0%> (-70.37%)` | `0% <0%> (-6%)` | |; | [...n/java/org/broadinstitute/hellbender/utils/KV.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9LVi5qYXZh) | `0% <0%> (-57.143%)` | `0% <0%> (-5%)` | |; | [...walkers/genotyper/afcalc/AFCalculatorProvider.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9hZmNhbGMvQUZDYWxjdWxhdG9yUHJvdmlkZXIuamF2YQ==) | `22.222% <0%> (-44.444%)` | `2% <0%> (-2%)` | |; | [...notyper/afcalc/ConcurrentAFCalculatorProvider.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9hZmNhbGMvQ29uY3VycmVudEFGQ2FsY3VsYXRvclByb3ZpZGVyLmphdmE=) | `50% <0%> (-33.333%)` | `1% <0%> (-1%)` | |; | [...ls/funcotator/metadata/VcfFuncotationMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL21ldGFkYXRhL1ZjZkZ1bmNvdGF0aW9uTWV0YWRhdGEuamF2YQ==) | `71.429% <0%> (-28.571%)` | `8% <0%> (+3%)` | |; | [...titute/hellbender/engine/TwoPassVariantWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVHdvUGFzc1ZhcmlhbnRXYWxrZXIuamF2YQ==) | `69.231% <0%> (-26.007%)` | `6% <0%> (+2%)` | |; | ... and [600 more](https://codecov.io/gh/broadinstitute/gatk/pull/5251/diff?src=pr&,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-426437671
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-458251008:52,Deployability,release,release,52,@lucidtronix Do you want this PR merged for the 4.1 release?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-458251008
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476735064:154,Deployability,release,release,154,@ldgauthier sorry for the delay! Tests pass and I addressed all the easy comments. Would it be alright with you if we merge this in time for the upcoming release and then do a separate PR for the R code cleanups and cumulative Ti/Tv plot?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476735064
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476735064:33,Testability,Test,Tests,33,@ldgauthier sorry for the delay! Tests pass and I addressed all the easy comments. Would it be alright with you if we merge this in time for the upcoming release and then do a separate PR for the R code cleanups and cumulative Ti/Tv plot?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476735064
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476760922:372,Deployability,release,release,372,"You promise? I'm angling for the oldest PR award and I don't want any; competition from you. On Tue, Mar 26, 2019 at 12:35 PM Samuel Friedman <notifications@github.com>; wrote:. > @ldgauthier <https://github.com/ldgauthier> sorry for the delay! Tests; > pass and I addressed all the easy comments. Would it be alright with you if; > we merge this in time for the upcoming release and then do a separate PR; > for the R code cleanups and cumulative Ti/Tv plot?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476735064>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdPjsFog2NhJBJxubcBWjaPU18LIwks5vakxJgaJpZM4XE0cP>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476760922
https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476760922:245,Testability,Test,Tests,245,"You promise? I'm angling for the oldest PR award and I don't want any; competition from you. On Tue, Mar 26, 2019 at 12:35 PM Samuel Friedman <notifications@github.com>; wrote:. > @ldgauthier <https://github.com/ldgauthier> sorry for the delay! Tests; > pass and I addressed all the easy comments. Would it be alright with you if; > we merge this in time for the upcoming release and then do a separate PR; > for the R code cleanups and cumulative Ti/Tv plot?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476735064>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdPjsFog2NhJBJxubcBWjaPU18LIwks5vakxJgaJpZM4XE0cP>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476760922
https://github.com/broadinstitute/gatk/pull/5252#issuecomment-426488050:1261,Usability,Simpl,SimpleAnnotatedIntervalWriterUnitTest,1261,src=pr&el=desc) will **decrease** coverage by `6.127%`.; > The diff coverage is `89.756%`. ```diff; @@ Coverage Diff @@; ## master #5252 +/- ##; ===============================================; - Coverage 86.757% 80.631% -6.127% ; + Complexity 29763 28463 -1300 ; ===============================================; Files 1825 1830 +5 ; Lines 137699 138368 +669 ; Branches 15176 15237 +61 ; ===============================================; - Hits 119464 111567 -7897 ; - Misses 12721 21438 +8717 ; + Partials 5514 5363 -151; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5252?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...bender/tools/copynumber/CallCopyRatioSegments.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NhbGxDb3B5UmF0aW9TZWdtZW50cy5qYXZh) | `94.118% <ø> (ø)` | `6 <0> (ø)` | :arrow_down: |; | [...nterval/SimpleAnnotatedIntervalWriterUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL2Fubm90YXRlZGludGVydmFsL1NpbXBsZUFubm90YXRlZEludGVydmFsV3JpdGVyVW5pdFRlc3QuamF2YQ==) | `98.148% <ø> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [.../tools/copynumber/utils/MergeAnnotatedRegions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL01lcmdlQW5ub3RhdGVkUmVnaW9ucy5qYXZh) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...notatedinterval/SimpleAnnotatedIntervalWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL2Fubm90YXRlZGludGVydmFsL1NpbXBsZUFubm90YXRlZEludGVydmFsV3JpdGVyLmphdmE=) | `77.778% <ø> (+1.852%)` | `7 <0> (+1)` | :arrow_up: |; | [,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5252#issuecomment-426488050
https://github.com/broadinstitute/gatk/pull/5252#issuecomment-426488050:1941,Usability,Simpl,SimpleAnnotatedIntervalWriter,1941,bender/tools/copynumber/CallCopyRatioSegments.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NhbGxDb3B5UmF0aW9TZWdtZW50cy5qYXZh) | `94.118% <ø> (ø)` | `6 <0> (ø)` | :arrow_down: |; | [...nterval/SimpleAnnotatedIntervalWriterUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL2Fubm90YXRlZGludGVydmFsL1NpbXBsZUFubm90YXRlZEludGVydmFsV3JpdGVyVW5pdFRlc3QuamF2YQ==) | `98.148% <ø> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [.../tools/copynumber/utils/MergeAnnotatedRegions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL01lcmdlQW5ub3RhdGVkUmVnaW9ucy5qYXZh) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...notatedinterval/SimpleAnnotatedIntervalWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL2Fubm90YXRlZGludGVydmFsL1NpbXBsZUFubm90YXRlZEludGVydmFsV3JpdGVyLmphdmE=) | `77.778% <ø> (+1.852%)` | `7 <0> (+1)` | :arrow_up: |; | [...number/utils/TagGermlineEventsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `7.759% <0%> (-92.241%)` | `2 <0> (-7)` | |; | [...titute/hellbender/utils/IntervalUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9JbnRlcnZhbFV0aWxzVW5pdFRlc3QuamF2YQ==) | `91.916% <100%> (+0.204%)` | `144 <2> (+2)` | :arrow_up: |; | [...broadinstitute/hellbender/utils/IntervalUt,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5252#issuecomment-426488050
https://github.com/broadinstitute/gatk/pull/5252#issuecomment-426488050:3523,Usability,Simpl,SimpleGermlineTaggerUnitTest,3523,ls/TagGermlineEventsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `7.759% <0%> (-92.241%)` | `2 <0> (-7)` | |; | [...titute/hellbender/utils/IntervalUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9JbnRlcnZhbFV0aWxzVW5pdFRlc3QuamF2YQ==) | `91.916% <100%> (+0.204%)` | `144 <2> (+2)` | :arrow_up: |; | [...broadinstitute/hellbender/utils/IntervalUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9JbnRlcnZhbFV0aWxzLmphdmE=) | `91.474% <100%> (+0.123%)` | `185 <5> (+5)` | :arrow_up: |; | [...nder/tools/copynumber/utils/TagGermlineEvents.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzLmphdmE=) | `100% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [.../germlinetagging/SimpleGermlineTaggerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL2dlcm1saW5ldGFnZ2luZy9TaW1wbGVHZXJtbGluZVRhZ2dlclVuaXRUZXN0LmphdmE=) | `100% <100%> (ø)` | `4 <0> (ø)` | :arrow_down: |; | [...geAnnotatedRegionsByAnnotationIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL01lcmdlQW5ub3RhdGVkUmVnaW9uc0J5QW5ub3RhdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `16.667% <16.667%> (ø)` | `2 <2> (?)` | |; | ... and [183 more](https://codecov.io/gh/broadinstitute/gatk/pull/5252/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5252#issuecomment-426488050
https://github.com/broadinstitute/gatk/issues/5253#issuecomment-466518667:20,Deployability,update,updated,20,The WDL needs to be updated in general to be correct and include all the hooks for the latest Funcotator info.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5253#issuecomment-466518667
https://github.com/broadinstitute/gatk/issues/5255#issuecomment-448266343:77,Testability,test,tests,77,"Closing as obsolete, since we now have a single conda env which does have CI tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5255#issuecomment-448266343
https://github.com/broadinstitute/gatk/issues/5259#issuecomment-430327508:260,Availability,down,downloads,260,"This will seemingly make the clinical pipeline data sources so large they are completely unusable. Gnomad data for the whole genome is apparently **106Gb**, exome data is **16Gb** (this would be OK, but is at the upper limit) (http://gnomad.broadinstitute.org/downloads). @LeeTL1220 - what are your thoughts?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5259#issuecomment-430327508
https://github.com/broadinstitute/gatk/issues/5259#issuecomment-430327508:38,Deployability,pipeline,pipeline,38,"This will seemingly make the clinical pipeline data sources so large they are completely unusable. Gnomad data for the whole genome is apparently **106Gb**, exome data is **16Gb** (this would be OK, but is at the upper limit) (http://gnomad.broadinstitute.org/downloads). @LeeTL1220 - what are your thoughts?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5259#issuecomment-430327508
https://github.com/broadinstitute/gatk/issues/5259#issuecomment-442226791:55,Deployability,update,updates,55,We will just read from `gnomAD` directly using the NIO updates for Funcotator data sources. Should fix this at the same time as #5428 and #5429.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5259#issuecomment-442226791
https://github.com/broadinstitute/gatk/issues/5259#issuecomment-457704047:18,Availability,down,download,18,"To facilitate the download of gnomAD records, I removed all info annotations that had nothing to do with `allele frequency`, leaving behind only the fields that we would want to use for our use case. The WDLs/jsons are now in the `funcotator/scripts/data_sources` directory (separate PR). All variants were kept, even those that were filtered. . The network IO slows down Funcotator significantly, but not enough to make it unusable. For this reason, and partly because gnomAD requires an internet connection, the gnomAD data sources are disabled by default.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5259#issuecomment-457704047
https://github.com/broadinstitute/gatk/issues/5259#issuecomment-457704047:367,Availability,down,down,367,"To facilitate the download of gnomAD records, I removed all info annotations that had nothing to do with `allele frequency`, leaving behind only the fields that we would want to use for our use case. The WDLs/jsons are now in the `funcotator/scripts/data_sources` directory (separate PR). All variants were kept, even those that were filtered. . The network IO slows down Funcotator significantly, but not enough to make it unusable. For this reason, and partly because gnomAD requires an internet connection, the gnomAD data sources are disabled by default.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5259#issuecomment-457704047
https://github.com/broadinstitute/gatk/issues/5260#issuecomment-440420519:324,Testability,test,test,324,"@MartonKN It looks like the relevant code is lines 713-5 of `SelectVariants`:; ```; if (rsIDsToRemove != null && !rsIDsToRemove.isEmpty()) {; compositeFilter = compositeFilter.and(new CountingVariantFilter(new VariantIDsVariantFilter(rsIDsToRemove).negate()));; }; ```; and in `VariantIDsVariantFilter`; ```; public boolean test(final VariantContext vc) {; return includeIDs.contains(vc.getID());; }; ```; This seems like it should do the right thing, except that `vc.getID()` is a `String`, *not* a `List<String>`. @vdauwera can we assume that a `VariantContext` ID will not contain a semicolon, and therefore we can parse by splitting on `';'`?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5260#issuecomment-440420519
https://github.com/broadinstitute/gatk/issues/5263#issuecomment-460399213:34,Performance,perform,performance,34,"In particular, can we improve the performance of `--strict` mode to the point where it could become the default?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5263#issuecomment-460399213
https://github.com/broadinstitute/gatk/issues/5265#issuecomment-451206406:300,Performance,perform,performance,300,"@SaintBacchus Yes, this work is in progress. The first step was to add a ""strict"" mode to `HaplotypeCallerSpark` that causes it to match the output of the regular `HaplotypeCaller` very closely (this was done in https://github.com/broadinstitute/gatk/pull/5416). The next step will be to improve the performance of the Spark version.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5265#issuecomment-451206406
https://github.com/broadinstitute/gatk/issues/5265#issuecomment-460398930:133,Performance,perform,performance,133,Closing -- we now have a `--strict` mode that matches the regular `HaplotypeCaller` at the expense of speed. Next step is to work on performance (https://github.com/broadinstitute/gatk/issues/5263),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5265#issuecomment-460398930
https://github.com/broadinstitute/gatk/issues/5267#issuecomment-428735904:12,Integrability,message,message,12,"The previos message was written a bit quick from my phone. The concrete PR is https://github.com/samtools/htsjdk-next-beta/pull/12. @lbergelson - would like to have a look to it, or do you prefer that I open another one with the interface on top of the CIGAR part? I prefer to go step by step, as it is clearer than adding too many classes to review at once...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5267#issuecomment-428735904
https://github.com/broadinstitute/gatk/issues/5267#issuecomment-428735904:229,Integrability,interface,interface,229,"The previos message was written a bit quick from my phone. The concrete PR is https://github.com/samtools/htsjdk-next-beta/pull/12. @lbergelson - would like to have a look to it, or do you prefer that I open another one with the interface on top of the CIGAR part? I prefer to go step by step, as it is clearer than adding too many classes to review at once...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5267#issuecomment-428735904
https://github.com/broadinstitute/gatk/issues/5267#issuecomment-428735904:303,Usability,clear,clearer,303,"The previos message was written a bit quick from my phone. The concrete PR is https://github.com/samtools/htsjdk-next-beta/pull/12. @lbergelson - would like to have a look to it, or do you prefer that I open another one with the interface on top of the CIGAR part? I prefer to go step by step, as it is clearer than adding too many classes to review at once...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5267#issuecomment-428735904
https://github.com/broadinstitute/gatk/issues/5269#issuecomment-428735039:75,Availability,down,down,75,What are the specific requirements for this? It will be nice to write them down in the htsjdk-next-beta and add here the specific issue (easier to track the progress).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5269#issuecomment-428735039
https://github.com/broadinstitute/gatk/issues/5269#issuecomment-429064032:282,Security,authenticat,authentication,282,"@magicDGS Good question! The main requirement is that the APIs need to allow you to *optionally* pass in URIs/Paths for all of the ""companion files"" for a particular input. For example, the `fai` and `dict` files for a fasta, or the `bai` file for a bam. When using signed URIs for authentication, these would all have separate signed URIs that would need to be provided explicitly. Of course, there should also be API methods that don't require you to pass in all of the companion files, and instead infer them automatically from the Path to the primary input, as htsjdk currently does. We would use these whenever possible (eg., when using account-level authentication rather than signed URIs, or when no authentication is necessary).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5269#issuecomment-429064032
https://github.com/broadinstitute/gatk/issues/5269#issuecomment-429064032:656,Security,authenticat,authentication,656,"@magicDGS Good question! The main requirement is that the APIs need to allow you to *optionally* pass in URIs/Paths for all of the ""companion files"" for a particular input. For example, the `fai` and `dict` files for a fasta, or the `bai` file for a bam. When using signed URIs for authentication, these would all have separate signed URIs that would need to be provided explicitly. Of course, there should also be API methods that don't require you to pass in all of the companion files, and instead infer them automatically from the Path to the primary input, as htsjdk currently does. We would use these whenever possible (eg., when using account-level authentication rather than signed URIs, or when no authentication is necessary).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5269#issuecomment-429064032
https://github.com/broadinstitute/gatk/issues/5269#issuecomment-429064032:707,Security,authenticat,authentication,707,"@magicDGS Good question! The main requirement is that the APIs need to allow you to *optionally* pass in URIs/Paths for all of the ""companion files"" for a particular input. For example, the `fai` and `dict` files for a fasta, or the `bai` file for a bam. When using signed URIs for authentication, these would all have separate signed URIs that would need to be provided explicitly. Of course, there should also be API methods that don't require you to pass in all of the companion files, and instead infer them automatically from the Path to the primary input, as htsjdk currently does. We would use these whenever possible (eg., when using account-level authentication rather than signed URIs, or when no authentication is necessary).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5269#issuecomment-429064032
https://github.com/broadinstitute/gatk/issues/5275#issuecomment-464759148:37,Testability,benchmark,benchmarks,37,See https://github.com/tomwhite/disq-benchmarks,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5275#issuecomment-464759148
https://github.com/broadinstitute/gatk/issues/5276#issuecomment-427788213:75,Testability,test,tests,75,#5222 added `ExampleLocusWalkerSparkIntegrationTest.java`; #5289 adds more tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5276#issuecomment-427788213
https://github.com/broadinstitute/gatk/issues/5277#issuecomment-429598919:30,Deployability,release,releases,30,Have started testing snapshot releases from genomicsdb.org in nalini_new_genomicsdb_jar branch. Will wait for @kgururaj to finish his work and release a final jar from com.intel before finally moving gatk to the new fork.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5277#issuecomment-429598919
https://github.com/broadinstitute/gatk/issues/5277#issuecomment-429598919:143,Deployability,release,release,143,Have started testing snapshot releases from genomicsdb.org in nalini_new_genomicsdb_jar branch. Will wait for @kgururaj to finish his work and release a final jar from com.intel before finally moving gatk to the new fork.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5277#issuecomment-429598919
https://github.com/broadinstitute/gatk/issues/5277#issuecomment-429598919:13,Testability,test,testing,13,Have started testing snapshot releases from genomicsdb.org in nalini_new_genomicsdb_jar branch. Will wait for @kgururaj to finish his work and release a final jar from com.intel before finally moving gatk to the new fork.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5277#issuecomment-429598919
https://github.com/broadinstitute/gatk/issues/5279#issuecomment-429064810:91,Integrability,depend,dependency,91,"@magicDGS We'd like to, but are currently prevented from migrating to Java 11 by our Spark dependency (see https://issues.igniterealtime.org/browse/SPARK-2017). This ticket is specifically for the task of benchmarking alternate Java 8 JDKs, rather than upgrading to newer versions of Java.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5279#issuecomment-429064810
https://github.com/broadinstitute/gatk/issues/5279#issuecomment-429064810:205,Testability,benchmark,benchmarking,205,"@magicDGS We'd like to, but are currently prevented from migrating to Java 11 by our Spark dependency (see https://issues.igniterealtime.org/browse/SPARK-2017). This ticket is specifically for the task of benchmarking alternate Java 8 JDKs, rather than upgrading to newer versions of Java.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5279#issuecomment-429064810
https://github.com/broadinstitute/gatk/pull/5285#issuecomment-427496716:3701,Usability,Simpl,SimpleSampleMetadata,3701,93YWxrZXJzL2Fubm90YXRvci9STVNNYXBwaW5nUXVhbGl0eS5qYXZh) | `83.607% <0%> (-10.208%)` | `41% <0%> (+1%)` | |; | [...s/walkers/annotator/RMSMappingQualityUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5285/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9STVNNYXBwaW5nUXVhbGl0eVVuaXRUZXN0LmphdmE=) | `95.918% <0%> (-0.94%)` | `26% <0%> (ø)` | |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/5285/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `76.429% <0%> (-0.074%)` | `42% <0%> (-7%)` | |; | [...ute/hellbender/utils/variant/GATKVCFConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5285/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWQ0ZDb25zdGFudHMuamF2YQ==) | `80% <0%> (ø)` | `4% <0%> (ø)` | :arrow_down: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5285/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `100% <0%> (ø)` | `7% <0%> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/engine/FeatureInput.java](https://codecov.io/gh/broadinstitute/gatk/pull/5285/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZUlucHV0LmphdmE=) | `94.366% <0%> (ø)` | `18% <0%> (ø)` | :arrow_down: |; | [...ynumber/formats/metadata/SimpleSampleMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/5285/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvbWV0YWRhdGEvU2ltcGxlU2FtcGxlTWV0YWRhdGEuamF2YQ==) | `76.471% <0%> (ø)` | `6% <0%> (ø)` | :arrow_down: |; | ... and [15 more](https://codecov.io/gh/broadinstitute/gatk/pull/5285/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5285#issuecomment-427496716
https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428215790:12,Testability,Test,Tests,12,"@takutosato Tests appear to be failing, can you take a look at this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428215790
https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428288360:29,Testability,test,tests,29,"@fleharty fixed the bug, the tests should pass now",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428288360
https://github.com/broadinstitute/gatk/pull/5287#issuecomment-427535500:1282,Usability,Simpl,SimpleSampleMetadata,1282,pr&el=desc) will **increase** coverage by `0.004%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #5287 +/- ##; ===============================================; + Coverage 86.773% 86.776% +0.004% ; - Complexity 29864 29888 +24 ; ===============================================; Files 1830 1834 +4 ; Lines 138368 138473 +105 ; Branches 15237 15241 +4 ; ===============================================; + Hits 120066 120162 +96 ; - Misses 12753 12760 +7 ; - Partials 5549 5551 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5287?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...pynumber/datacollection/AllelicCountCollector.java](https://codecov.io/gh/broadinstitute/gatk/pull/5287/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2RhdGFjb2xsZWN0aW9uL0FsbGVsaWNDb3VudENvbGxlY3Rvci5qYXZh) | `65.789% <0%> (-14.856%)` | `13% <0%> (ø)` | |; | [...ynumber/formats/metadata/SimpleSampleMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/5287/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvbWV0YWRhdGEvU2ltcGxlU2FtcGxlTWV0YWRhdGEuamF2YQ==) | `76.471% <0%> (ø)` | `6% <0%> (ø)` | :arrow_down: |; | [...er/tools/copynumber/CollectAllelicCountsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5287/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NvbGxlY3RBbGxlbGljQ291bnRzU3BhcmsuamF2YQ==) | `96% <0%> (ø)` | `10% <0%> (?)` | |; | [...bender/tools/examples/ExampleLocusWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5287/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlTG9jdXNXYWxrZXJTcGFyay5qYXZh) | `92% <0%> (ø)` | `6% <0%> (?)` | |; | [...mber/CollectAllelicCountsSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5287#issuecomment-427535500
https://github.com/broadinstitute/gatk/pull/5287#issuecomment-427596828:12,Testability,Test,Test,12,@samuelklee Test completed successfully.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5287#issuecomment-427596828
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427548042:29,Testability,log,log,29,Also looking into the python log output perhaps the minimum of 10 epochs for training is too hi as the numbers that are spit out seem to indicated that things are quite settled in just a bunch of iteration (~4-5 or so).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427548042
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932:143,Availability,redundant,redundant,143,"How much does count collection cost at the desired bin size? How does this compare to bincov? Perhaps we could eliminate one of these steps if redundant. Note that the read counts are read once and stored in memory, so unless this takes a significant amount of time, then indexing is probably not the highest priority here (although I agree it would be nice to have in general). One related issue, as you mention, is file localization---since each shard only operates on a portion of the counts in each sample, it is a bit wasteful to localize the whole file. But how much does file localization cost? I can't imagine that it is the lowest hanging fruit. One of the more important issues, which you also mention, is optimizing parameters for inference. This includes not only the minimum number of epochs for training, but also things like the learning rate, annealing schedule, iterations per epoch, conditions for epoch convergence, etc. I'll be talking about how to tune these inference parameters---as well as other things in the pipeline---at the next BSV meeting. Let's brainstorm more things to try and prioritize them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932:1034,Deployability,pipeline,pipeline---at,1034,"How much does count collection cost at the desired bin size? How does this compare to bincov? Perhaps we could eliminate one of these steps if redundant. Note that the read counts are read once and stored in memory, so unless this takes a significant amount of time, then indexing is probably not the highest priority here (although I agree it would be nice to have in general). One related issue, as you mention, is file localization---since each shard only operates on a portion of the counts in each sample, it is a bit wasteful to localize the whole file. But how much does file localization cost? I can't imagine that it is the lowest hanging fruit. One of the more important issues, which you also mention, is optimizing parameters for inference. This includes not only the minimum number of epochs for training, but also things like the learning rate, annealing schedule, iterations per epoch, conditions for epoch convergence, etc. I'll be talking about how to tune these inference parameters---as well as other things in the pipeline---at the next BSV meeting. Let's brainstorm more things to try and prioritize them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932:869,Energy Efficiency,schedul,schedule,869,"How much does count collection cost at the desired bin size? How does this compare to bincov? Perhaps we could eliminate one of these steps if redundant. Note that the read counts are read once and stored in memory, so unless this takes a significant amount of time, then indexing is probably not the highest priority here (although I agree it would be nice to have in general). One related issue, as you mention, is file localization---since each shard only operates on a portion of the counts in each sample, it is a bit wasteful to localize the whole file. But how much does file localization cost? I can't imagine that it is the lowest hanging fruit. One of the more important issues, which you also mention, is optimizing parameters for inference. This includes not only the minimum number of epochs for training, but also things like the learning rate, annealing schedule, iterations per epoch, conditions for epoch convergence, etc. I'll be talking about how to tune these inference parameters---as well as other things in the pipeline---at the next BSV meeting. Let's brainstorm more things to try and prioritize them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932:716,Performance,optimiz,optimizing,716,"How much does count collection cost at the desired bin size? How does this compare to bincov? Perhaps we could eliminate one of these steps if redundant. Note that the read counts are read once and stored in memory, so unless this takes a significant amount of time, then indexing is probably not the highest priority here (although I agree it would be nice to have in general). One related issue, as you mention, is file localization---since each shard only operates on a portion of the counts in each sample, it is a bit wasteful to localize the whole file. But how much does file localization cost? I can't imagine that it is the lowest hanging fruit. One of the more important issues, which you also mention, is optimizing parameters for inference. This includes not only the minimum number of epochs for training, but also things like the learning rate, annealing schedule, iterations per epoch, conditions for epoch convergence, etc. I'll be talking about how to tune these inference parameters---as well as other things in the pipeline---at the next BSV meeting. Let's brainstorm more things to try and prioritize them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932:969,Performance,tune,tune,969,"How much does count collection cost at the desired bin size? How does this compare to bincov? Perhaps we could eliminate one of these steps if redundant. Note that the read counts are read once and stored in memory, so unless this takes a significant amount of time, then indexing is probably not the highest priority here (although I agree it would be nice to have in general). One related issue, as you mention, is file localization---since each shard only operates on a portion of the counts in each sample, it is a bit wasteful to localize the whole file. But how much does file localization cost? I can't imagine that it is the lowest hanging fruit. One of the more important issues, which you also mention, is optimizing parameters for inference. This includes not only the minimum number of epochs for training, but also things like the learning rate, annealing schedule, iterations per epoch, conditions for epoch convergence, etc. I'll be talking about how to tune these inference parameters---as well as other things in the pipeline---at the next BSV meeting. Let's brainstorm more things to try and prioritize them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932:143,Safety,redund,redundant,143,"How much does count collection cost at the desired bin size? How does this compare to bincov? Perhaps we could eliminate one of these steps if redundant. Note that the read counts are read once and stored in memory, so unless this takes a significant amount of time, then indexing is probably not the highest priority here (although I agree it would be nice to have in general). One related issue, as you mention, is file localization---since each shard only operates on a portion of the counts in each sample, it is a bit wasteful to localize the whole file. But how much does file localization cost? I can't imagine that it is the lowest hanging fruit. One of the more important issues, which you also mention, is optimizing parameters for inference. This includes not only the minimum number of epochs for training, but also things like the learning rate, annealing schedule, iterations per epoch, conditions for epoch convergence, etc. I'll be talking about how to tune these inference parameters---as well as other things in the pipeline---at the next BSV meeting. Let's brainstorm more things to try and prioritize them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932:844,Usability,learn,learning,844,"How much does count collection cost at the desired bin size? How does this compare to bincov? Perhaps we could eliminate one of these steps if redundant. Note that the read counts are read once and stored in memory, so unless this takes a significant amount of time, then indexing is probably not the highest priority here (although I agree it would be nice to have in general). One related issue, as you mention, is file localization---since each shard only operates on a portion of the counts in each sample, it is a bit wasteful to localize the whole file. But how much does file localization cost? I can't imagine that it is the lowest hanging fruit. One of the more important issues, which you also mention, is optimizing parameters for inference. This includes not only the minimum number of epochs for training, but also things like the learning rate, annealing schedule, iterations per epoch, conditions for epoch convergence, etc. I'll be talking about how to tune these inference parameters---as well as other things in the pipeline---at the next BSV meeting. Let's brainstorm more things to try and prioritize them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427562932
https://github.com/broadinstitute/gatk/issues/5288#issuecomment-526321218:66,Energy Efficiency,reduce,reduce,66,"@vruano @mwalker174 can this be closed (or revised, if we want to reduce the cost even further)?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-526321218
https://github.com/broadinstitute/gatk/pull/5290#issuecomment-427852825:2705,Deployability,update,update,2705,"==========; + Hits 120162 120170 +8 ; + Misses 12760 12758 -2 ; Partials 5551 5551; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...stitute/hellbender/engine/spark/GATKSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1NwYXJrVG9vbC5qYXZh) | `82.19% <100%> (+0.37%)` | `68 <0> (ø)` | :arrow_down: |; | [...ls/spark/BaseRecalibratorSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `40.54% <100%> (+1.09%)` | `5 <0> (ø)` | :arrow_down: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.97% <0%> (+2.73%)` | `11% <0%> (ø)` | :arrow_down: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=footer). Last update [158f7f7...2cb7fd4](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5290#issuecomment-427852825
https://github.com/broadinstitute/gatk/pull/5290#issuecomment-427852825:2608,Energy Efficiency,Power,Powered,2608,"==========; + Hits 120162 120170 +8 ; + Misses 12760 12758 -2 ; Partials 5551 5551; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...stitute/hellbender/engine/spark/GATKSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1NwYXJrVG9vbC5qYXZh) | `82.19% <100%> (+0.37%)` | `68 <0> (ø)` | :arrow_down: |; | [...ls/spark/BaseRecalibratorSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `40.54% <100%> (+1.09%)` | `5 <0> (ø)` | :arrow_down: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.97% <0%> (+2.73%)` | `11% <0%> (ø)` | :arrow_down: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=footer). Last update [158f7f7...2cb7fd4](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5290#issuecomment-427852825
https://github.com/broadinstitute/gatk/pull/5290#issuecomment-427852825:2471,Usability,learn,learn,2471,"==========; + Hits 120162 120170 +8 ; + Misses 12760 12758 -2 ; Partials 5551 5551; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...stitute/hellbender/engine/spark/GATKSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1NwYXJrVG9vbC5qYXZh) | `82.19% <100%> (+0.37%)` | `68 <0> (ø)` | :arrow_down: |; | [...ls/spark/BaseRecalibratorSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `40.54% <100%> (+1.09%)` | `5 <0> (ø)` | :arrow_down: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5290/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.97% <0%> (+2.73%)` | `11% <0%> (ø)` | :arrow_down: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=footer). Last update [158f7f7...2cb7fd4](https://codecov.io/gh/broadinstitute/gatk/pull/5290?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5290#issuecomment-427852825
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-427873520:88,Integrability,message,message,88,"@lucidtronix Hi Sam, wonder if you could take a look at this? Adding the ""AVX required"" message.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-427873520
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950:517,Availability,avail,available,517,"@EdwardDixon Isn't this a dupe of https://github.com/broadinstitute/gatk/pull/5142? Have you addressed our original concerns from that PR's discussion thread, some of which I've reproduced below?. ```; droazen commented on Aug 30; @EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including; university clusters that they have no power to upgrade), and we can't just cut these users off by ; imposing such a minimum hardware requirement. The best we can do is to use AVX when it's ; available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they; are often hard to diagnose and deal with. Things like SIGSEGV or SIGILL are a nightmare for our ; support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message; when AVX is not present rather than a crash, before we could make this the default in GATK. ldgauthier commented on Aug 30; Aside from the users with old hardware, very few of the GCS zones guarantee processors that ; support AVX, which would lead to sporadic failures except in central-1f, for example.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950:824,Availability,failure,failure,824,"@EdwardDixon Isn't this a dupe of https://github.com/broadinstitute/gatk/pull/5142? Have you addressed our original concerns from that PR's discussion thread, some of which I've reproduced below?. ```; droazen commented on Aug 30; @EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including; university clusters that they have no power to upgrade), and we can't just cut these users off by ; imposing such a minimum hardware requirement. The best we can do is to use AVX when it's ; available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they; are often hard to diagnose and deal with. Things like SIGSEGV or SIGILL are a nightmare for our ; support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message; when AVX is not present rather than a crash, before we could make this the default in GATK. ldgauthier commented on Aug 30; Aside from the users with old hardware, very few of the GCS zones guarantee processors that ; support AVX, which would lead to sporadic failures except in central-1f, for example.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950:859,Availability,error,error,859,"@EdwardDixon Isn't this a dupe of https://github.com/broadinstitute/gatk/pull/5142? Have you addressed our original concerns from that PR's discussion thread, some of which I've reproduced below?. ```; droazen commented on Aug 30; @EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including; university clusters that they have no power to upgrade), and we can't just cut these users off by ; imposing such a minimum hardware requirement. The best we can do is to use AVX when it's ; available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they; are often hard to diagnose and deal with. Things like SIGSEGV or SIGILL are a nightmare for our ; support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message; when AVX is not present rather than a crash, before we could make this the default in GATK. ldgauthier commented on Aug 30; Aside from the users with old hardware, very few of the GCS zones guarantee processors that ; support AVX, which would lead to sporadic failures except in central-1f, for example.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950:1134,Availability,failure,failures,1134,"@EdwardDixon Isn't this a dupe of https://github.com/broadinstitute/gatk/pull/5142? Have you addressed our original concerns from that PR's discussion thread, some of which I've reproduced below?. ```; droazen commented on Aug 30; @EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including; university clusters that they have no power to upgrade), and we can't just cut these users off by ; imposing such a minimum hardware requirement. The best we can do is to use AVX when it's ; available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they; are often hard to diagnose and deal with. Things like SIGSEGV or SIGILL are a nightmare for our ; support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message; when AVX is not present rather than a crash, before we could make this the default in GATK. ldgauthier commented on Aug 30; Aside from the users with old hardware, very few of the GCS zones guarantee processors that ; support AVX, which would lead to sporadic failures except in central-1f, for example.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950:373,Deployability,upgrade,upgrade,373,"@EdwardDixon Isn't this a dupe of https://github.com/broadinstitute/gatk/pull/5142? Have you addressed our original concerns from that PR's discussion thread, some of which I've reproduced below?. ```; droazen commented on Aug 30; @EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including; university clusters that they have no power to upgrade), and we can't just cut these users off by ; imposing such a minimum hardware requirement. The best we can do is to use AVX when it's ; available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they; are often hard to diagnose and deal with. Things like SIGSEGV or SIGILL are a nightmare for our ; support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message; when AVX is not present rather than a crash, before we could make this the default in GATK. ldgauthier commented on Aug 30; Aside from the users with old hardware, very few of the GCS zones guarantee processors that ; support AVX, which would lead to sporadic failures except in central-1f, for example.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950:364,Energy Efficiency,power,power,364,"@EdwardDixon Isn't this a dupe of https://github.com/broadinstitute/gatk/pull/5142? Have you addressed our original concerns from that PR's discussion thread, some of which I've reproduced below?. ```; droazen commented on Aug 30; @EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including; university clusters that they have no power to upgrade), and we can't just cut these users off by ; imposing such a minimum hardware requirement. The best we can do is to use AVX when it's ; available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they; are often hard to diagnose and deal with. Things like SIGSEGV or SIGILL are a nightmare for our ; support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message; when AVX is not present rather than a crash, before we could make this the default in GATK. ldgauthier commented on Aug 30; Aside from the users with old hardware, very few of the GCS zones guarantee processors that ; support AVX, which would lead to sporadic failures except in central-1f, for example.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950:865,Integrability,message,message,865,"@EdwardDixon Isn't this a dupe of https://github.com/broadinstitute/gatk/pull/5142? Have you addressed our original concerns from that PR's discussion thread, some of which I've reproduced below?. ```; droazen commented on Aug 30; @EdwardDixon We have a fair number of GATK users who are stuck with older hardware (including; university clusters that they have no power to upgrade), and we can't just cut these users off by ; imposing such a minimum hardware requirement. The best we can do is to use AVX when it's ; available, and fall back to slower codepaths when it's not. Also, actual crashes in native code impose a significant support burden on our comms team, as they; are often hard to diagnose and deal with. Things like SIGSEGV or SIGILL are a nightmare for our ; support staff. At a minimum we'd need a graceful failure with an easy-to-understand error message; when AVX is not present rather than a crash, before we could make this the default in GATK. ldgauthier commented on Aug 30; Aside from the users with old hardware, very few of the GCS zones guarantee processors that ; support AVX, which would lead to sporadic failures except in central-1f, for example.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428265950
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428272123:204,Performance,optimiz,optimized,204,"@EdwardDixon Thanks for this! I think the AVX check in CNNScoreVariants is good. As @droazen points out, we still want the split environments, though now with the check in place I think we can make intel optimized the default. Other thoughts @droazen, @cmnbroad ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428272123
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428273650:164,Availability,error,error,164,"@lucidtronix Agreed -- provided that there's a fallback conda environment that users without AVX can use, and provided that the tool produces an easy-to-understand error message when AVX is not present, pointing the user to that fallback environment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428273650
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428273650:170,Integrability,message,message,170,"@lucidtronix Agreed -- provided that there's a fallback conda environment that users without AVX can use, and provided that the tool produces an easy-to-understand error message when AVX is not present, pointing the user to that fallback environment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428273650
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428293864:164,Safety,detect,detect,164,"BTW, if any can provide the output from an interactive python session that tries (and fails) to use Intel-TF on non-AVX hardware it might help us figure out how to detect that case.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-428293864
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651:1172,Availability,error,error,1172,"Not a bad idea, will look into that tomorrow. Note that you are using Tensorflow 1.4 or 1.5 and that from v1.6 even the; non-Intel optimized build supports only AVX capable machines. On Thu 11 Oct 2018, 21:07 droazen, <notifications@github.com> wrote:. > *@droazen* commented on this pull request.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/CNNScoreVariants.java; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>:; >; > > @@ -198,6 +200,13 @@; > return new String[]{""No default architecture for tensor type:"" + tensorType.name()};; > }; > }; > +; > + IntelGKLUtils utils = new IntelGKLUtils();; > + if (utils.isAvxSupported() == false); > + {; > + return new String[]{CNNScoreVariants.AVXREQUIRED_ERROR};; >; > Maybe the answer is for the conda environments to set an extra environment; > variable that would allow GATK to detect which conda environment it's in.; > Then you could have a check in CNNScoreVariants that aborts the tool only; > if AVX is not present AND you're running in the Intel conda environment,; > and point the user to the non-Intel conda environment in the error message.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lr8HM6ItLWqfSaTKeVY4yCp07il29ks5uj6TugaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651:1178,Integrability,message,message,1178,"Not a bad idea, will look into that tomorrow. Note that you are using Tensorflow 1.4 or 1.5 and that from v1.6 even the; non-Intel optimized build supports only AVX capable machines. On Thu 11 Oct 2018, 21:07 droazen, <notifications@github.com> wrote:. > *@droazen* commented on this pull request.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/CNNScoreVariants.java; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>:; >; > > @@ -198,6 +200,13 @@; > return new String[]{""No default architecture for tensor type:"" + tensorType.name()};; > }; > }; > +; > + IntelGKLUtils utils = new IntelGKLUtils();; > + if (utils.isAvxSupported() == false); > + {; > + return new String[]{CNNScoreVariants.AVXREQUIRED_ERROR};; >; > Maybe the answer is for the conda environments to set an extra environment; > variable that would allow GATK to detect which conda environment it's in.; > Then you could have a check in CNNScoreVariants that aborts the tool only; > if AVX is not present AND you're running in the Intel conda environment,; > and point the user to the non-Intel conda environment in the error message.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lr8HM6ItLWqfSaTKeVY4yCp07il29ks5uj6TugaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651:881,Modifiability,variab,variable,881,"Not a bad idea, will look into that tomorrow. Note that you are using Tensorflow 1.4 or 1.5 and that from v1.6 even the; non-Intel optimized build supports only AVX capable machines. On Thu 11 Oct 2018, 21:07 droazen, <notifications@github.com> wrote:. > *@droazen* commented on this pull request.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/CNNScoreVariants.java; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>:; >; > > @@ -198,6 +200,13 @@; > return new String[]{""No default architecture for tensor type:"" + tensorType.name()};; > }; > }; > +; > + IntelGKLUtils utils = new IntelGKLUtils();; > + if (utils.isAvxSupported() == false); > + {; > + return new String[]{CNNScoreVariants.AVXREQUIRED_ERROR};; >; > Maybe the answer is for the conda environments to set an extra environment; > variable that would allow GATK to detect which conda environment it's in.; > Then you could have a check in CNNScoreVariants that aborts the tool only; > if AVX is not present AND you're running in the Intel conda environment,; > and point the user to the non-Intel conda environment in the error message.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lr8HM6ItLWqfSaTKeVY4yCp07il29ks5uj6TugaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651:131,Performance,optimiz,optimized,131,"Not a bad idea, will look into that tomorrow. Note that you are using Tensorflow 1.4 or 1.5 and that from v1.6 even the; non-Intel optimized build supports only AVX capable machines. On Thu 11 Oct 2018, 21:07 droazen, <notifications@github.com> wrote:. > *@droazen* commented on this pull request.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/CNNScoreVariants.java; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>:; >; > > @@ -198,6 +200,13 @@; > return new String[]{""No default architecture for tensor type:"" + tensorType.name()};; > }; > }; > +; > + IntelGKLUtils utils = new IntelGKLUtils();; > + if (utils.isAvxSupported() == false); > + {; > + return new String[]{CNNScoreVariants.AVXREQUIRED_ERROR};; >; > Maybe the answer is for the conda environments to set an extra environment; > variable that would allow GATK to detect which conda environment it's in.; > Then you could have a check in CNNScoreVariants that aborts the tool only; > if AVX is not present AND you're running in the Intel conda environment,; > and point the user to the non-Intel conda environment in the error message.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lr8HM6ItLWqfSaTKeVY4yCp07il29ks5uj6TugaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651:915,Safety,detect,detect,915,"Not a bad idea, will look into that tomorrow. Note that you are using Tensorflow 1.4 or 1.5 and that from v1.6 even the; non-Intel optimized build supports only AVX capable machines. On Thu 11 Oct 2018, 21:07 droazen, <notifications@github.com> wrote:. > *@droazen* commented on this pull request.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/CNNScoreVariants.java; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>:; >; > > @@ -198,6 +200,13 @@; > return new String[]{""No default architecture for tensor type:"" + tensorType.name()};; > }; > }; > +; > + IntelGKLUtils utils = new IntelGKLUtils();; > + if (utils.isAvxSupported() == false); > + {; > + return new String[]{CNNScoreVariants.AVXREQUIRED_ERROR};; >; > Maybe the answer is for the conda environments to set an extra environment; > variable that would allow GATK to detect which conda environment it's in.; > Then you could have a check in CNNScoreVariants that aborts the tool only; > if AVX is not present AND you're running in the Intel conda environment,; > and point the user to the non-Intel conda environment in the error message.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lr8HM6ItLWqfSaTKeVY4yCp07il29ks5uj6TugaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651:1011,Safety,abort,aborts,1011,"Not a bad idea, will look into that tomorrow. Note that you are using Tensorflow 1.4 or 1.5 and that from v1.6 even the; non-Intel optimized build supports only AVX capable machines. On Thu 11 Oct 2018, 21:07 droazen, <notifications@github.com> wrote:. > *@droazen* commented on this pull request.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/CNNScoreVariants.java; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>:; >; > > @@ -198,6 +200,13 @@; > return new String[]{""No default architecture for tensor type:"" + tensorType.name()};; > }; > }; > +; > + IntelGKLUtils utils = new IntelGKLUtils();; > + if (utils.isAvxSupported() == false); > + {; > + return new String[]{CNNScoreVariants.AVXREQUIRED_ERROR};; >; > Maybe the answer is for the conda environments to set an extra environment; > variable that would allow GATK to detect which conda environment it's in.; > Then you could have a check in CNNScoreVariants that aborts the tool only; > if AVX is not present AND you're running in the Intel conda environment,; > and point the user to the non-Intel conda environment in the error message.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#discussion_r224587026>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lr8HM6ItLWqfSaTKeVY4yCp07il29ks5uj6TugaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429109651
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837:295,Deployability,install,install,295,"@EdwardDixon I did not know that! In that case master does already require AVX. If it only impacts this tool and we provide sufficient warning and instructions, I think the single intel-optimized conda environment will be so much easier to test and maintain. Users who don't have AVX can simply install an older tensorflow in their environment, but GATK doesn't need to worry about it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837:186,Performance,optimiz,optimized,186,"@EdwardDixon I did not know that! In that case master does already require AVX. If it only impacts this tool and we provide sufficient warning and instructions, I think the single intel-optimized conda environment will be so much easier to test and maintain. Users who don't have AVX can simply install an older tensorflow in their environment, but GATK doesn't need to worry about it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837:240,Testability,test,test,240,"@EdwardDixon I did not know that! In that case master does already require AVX. If it only impacts this tool and we provide sufficient warning and instructions, I think the single intel-optimized conda environment will be so much easier to test and maintain. Users who don't have AVX can simply install an older tensorflow in their environment, but GATK doesn't need to worry about it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837:288,Usability,simpl,simply,288,"@EdwardDixon I did not know that! In that case master does already require AVX. If it only impacts this tool and we provide sufficient warning and instructions, I think the single intel-optimized conda environment will be so much easier to test and maintain. Users who don't have AVX can simply install an older tensorflow in their environment, but GATK doesn't need to worry about it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429142837
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429316465:428,Availability,failure,failure,428,"Hm. Just yesterday we updated from TF 1.4 to 1.9. Although this makes it more compelling to switch the default to Intel-optimized, we may still have an issue for the reasons outlined in the previous PR (academic users, not all GCS zones guaranty AVX hardware, and its still unclear to me if Travis, which uses both GCS and EC2, makes such a guaranty). It [sounds like](https://github.com/tensorflow/tensorflow/issues/18689) the failure mode is to crash. For running inference at least (training may be a different story), we may need something better. Another option is that it sounds like its possible to build our own distribution without AVX dependencies to use as a fallback.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429316465
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429316465:22,Deployability,update,updated,22,"Hm. Just yesterday we updated from TF 1.4 to 1.9. Although this makes it more compelling to switch the default to Intel-optimized, we may still have an issue for the reasons outlined in the previous PR (academic users, not all GCS zones guaranty AVX hardware, and its still unclear to me if Travis, which uses both GCS and EC2, makes such a guaranty). It [sounds like](https://github.com/tensorflow/tensorflow/issues/18689) the failure mode is to crash. For running inference at least (training may be a different story), we may need something better. Another option is that it sounds like its possible to build our own distribution without AVX dependencies to use as a fallback.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429316465
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429316465:645,Integrability,depend,dependencies,645,"Hm. Just yesterday we updated from TF 1.4 to 1.9. Although this makes it more compelling to switch the default to Intel-optimized, we may still have an issue for the reasons outlined in the previous PR (academic users, not all GCS zones guaranty AVX hardware, and its still unclear to me if Travis, which uses both GCS and EC2, makes such a guaranty). It [sounds like](https://github.com/tensorflow/tensorflow/issues/18689) the failure mode is to crash. For running inference at least (training may be a different story), we may need something better. Another option is that it sounds like its possible to build our own distribution without AVX dependencies to use as a fallback.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429316465
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429316465:120,Performance,optimiz,optimized,120,"Hm. Just yesterday we updated from TF 1.4 to 1.9. Although this makes it more compelling to switch the default to Intel-optimized, we may still have an issue for the reasons outlined in the previous PR (academic users, not all GCS zones guaranty AVX hardware, and its still unclear to me if Travis, which uses both GCS and EC2, makes such a guaranty). It [sounds like](https://github.com/tensorflow/tensorflow/issues/18689) the failure mode is to crash. For running inference at least (training may be a different story), we may need something better. Another option is that it sounds like its possible to build our own distribution without AVX dependencies to use as a fallback.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429316465
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429323785:547,Performance,optimiz,optimization,547,"Hi @cmnbroad, we can do better than crash - you'll notice that in my pull request, I've added a check to `CNNScoreVariants.java` to test whether AVX is present (the method was checking if command-line arguments are valid, so I stretched a point and used it to test the environment). . ~. You could definitely offer your own build of TensorFlow, but do you _want_ to? Apart from anything else, it'll be 10X slower than the default. My understanding is that inference using CNNScoreVariants was taking ~ 50 hours on a typical real-world file before optimization. Wouldn't it be more cost-effective just to use instances that at least have AVX?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429323785
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429323785:132,Testability,test,test,132,"Hi @cmnbroad, we can do better than crash - you'll notice that in my pull request, I've added a check to `CNNScoreVariants.java` to test whether AVX is present (the method was checking if command-line arguments are valid, so I stretched a point and used it to test the environment). . ~. You could definitely offer your own build of TensorFlow, but do you _want_ to? Apart from anything else, it'll be 10X slower than the default. My understanding is that inference using CNNScoreVariants was taking ~ 50 hours on a typical real-world file before optimization. Wouldn't it be more cost-effective just to use instances that at least have AVX?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429323785
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429323785:260,Testability,test,test,260,"Hi @cmnbroad, we can do better than crash - you'll notice that in my pull request, I've added a check to `CNNScoreVariants.java` to test whether AVX is present (the method was checking if command-line arguments are valid, so I stretched a point and used it to test the environment). . ~. You could definitely offer your own build of TensorFlow, but do you _want_ to? Apart from anything else, it'll be 10X slower than the default. My understanding is that inference using CNNScoreVariants was taking ~ 50 hours on a typical real-world file before optimization. Wouldn't it be more cost-effective just to use instances that at least have AVX?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429323785
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429409667:325,Availability,error,error,325,"Marissa Powers here -- I'm an Intel engineer on the same team as Ed. It sounds like we all agree on having Intel-optimized TF as the default and figuring out the best intervention for older machines from there. We can add the AVX flag within CNNScoreVariant (and any other AI tool). From there, we can (1) provide a detailed error output describing the issue, (2) provide a non-AVX TF build, and (3) automatically roll back TF to the provided version. @EdwardDixon, it sounds like @cmnbroad is suggesting is options (1), (2), and (3), while you're suggesting just (1). Sound right?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429409667
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429409667:8,Energy Efficiency,Power,Powers,8,"Marissa Powers here -- I'm an Intel engineer on the same team as Ed. It sounds like we all agree on having Intel-optimized TF as the default and figuring out the best intervention for older machines from there. We can add the AVX flag within CNNScoreVariant (and any other AI tool). From there, we can (1) provide a detailed error output describing the issue, (2) provide a non-AVX TF build, and (3) automatically roll back TF to the provided version. @EdwardDixon, it sounds like @cmnbroad is suggesting is options (1), (2), and (3), while you're suggesting just (1). Sound right?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429409667
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429409667:113,Performance,optimiz,optimized,113,"Marissa Powers here -- I'm an Intel engineer on the same team as Ed. It sounds like we all agree on having Intel-optimized TF as the default and figuring out the best intervention for older machines from there. We can add the AVX flag within CNNScoreVariant (and any other AI tool). From there, we can (1) provide a detailed error output describing the issue, (2) provide a non-AVX TF build, and (3) automatically roll back TF to the provided version. @EdwardDixon, it sounds like @cmnbroad is suggesting is options (1), (2), and (3), while you're suggesting just (1). Sound right?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429409667
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059:596,Availability,failure,failure,596,"Hi Marissa - I think we're all in agreement that we'd like to find a way to make Intel-TF the default, but whether or not we can have CNNScoreVariants require AVX to run is less clear. Naturally, we'd prefer to not have to provide a custom TF distribution for a fallback, but there are 3 cases where we may not have a choice: user with old hardware, Travis/CI testing, and GCE. We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a graceful failure mode and an instructive error message. . In the meantime, there is still the issue that this PR fails to even build on Travis. It looks like it produces so much output building the Docker image that it exceeds the allowable Travis build log size. That will need to be resolved, and we'll also need to understand the impact of this change on the size of our Docker image, which is already large, and continues to be a challenge for us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059:628,Availability,error,error,628,"Hi Marissa - I think we're all in agreement that we'd like to find a way to make Intel-TF the default, but whether or not we can have CNNScoreVariants require AVX to run is less clear. Naturally, we'd prefer to not have to provide a custom TF distribution for a fallback, but there are 3 cases where we may not have a choice: user with old hardware, Travis/CI testing, and GCE. We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a graceful failure mode and an instructive error message. . In the meantime, there is still the issue that this PR fails to even build on Travis. It looks like it produces so much output building the Docker image that it exceeds the allowable Travis build log size. That will need to be resolved, and we'll also need to understand the impact of this change on the size of our Docker image, which is already large, and continues to be a challenge for us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059:634,Integrability,message,message,634,"Hi Marissa - I think we're all in agreement that we'd like to find a way to make Intel-TF the default, but whether or not we can have CNNScoreVariants require AVX to run is less clear. Naturally, we'd prefer to not have to provide a custom TF distribution for a fallback, but there are 3 cases where we may not have a choice: user with old hardware, Travis/CI testing, and GCE. We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a graceful failure mode and an instructive error message. . In the meantime, there is still the issue that this PR fails to even build on Travis. It looks like it produces so much output building the Docker image that it exceeds the allowable Travis build log size. That will need to be resolved, and we'll also need to understand the impact of this change on the size of our Docker image, which is already large, and continues to be a challenge for us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059:360,Testability,test,testing,360,"Hi Marissa - I think we're all in agreement that we'd like to find a way to make Intel-TF the default, but whether or not we can have CNNScoreVariants require AVX to run is less clear. Naturally, we'd prefer to not have to provide a custom TF distribution for a fallback, but there are 3 cases where we may not have a choice: user with old hardware, Travis/CI testing, and GCE. We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a graceful failure mode and an instructive error message. . In the meantime, there is still the issue that this PR fails to even build on Travis. It looks like it produces so much output building the Docker image that it exceeds the allowable Travis build log size. That will need to be resolved, and we'll also need to understand the impact of this change on the size of our Docker image, which is already large, and continues to be a challenge for us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059:841,Testability,log,log,841,"Hi Marissa - I think we're all in agreement that we'd like to find a way to make Intel-TF the default, but whether or not we can have CNNScoreVariants require AVX to run is less clear. Naturally, we'd prefer to not have to provide a custom TF distribution for a fallback, but there are 3 cases where we may not have a choice: user with old hardware, Travis/CI testing, and GCE. We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a graceful failure mode and an instructive error message. . In the meantime, there is still the issue that this PR fails to even build on Travis. It looks like it produces so much output building the Docker image that it exceeds the allowable Travis build log size. That will need to be resolved, and we'll also need to understand the impact of this change on the size of our Docker image, which is already large, and continues to be a challenge for us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059:178,Usability,clear,clear,178,"Hi Marissa - I think we're all in agreement that we'd like to find a way to make Intel-TF the default, but whether or not we can have CNNScoreVariants require AVX to run is less clear. Naturally, we'd prefer to not have to provide a custom TF distribution for a fallback, but there are 3 cases where we may not have a choice: user with old hardware, Travis/CI testing, and GCE. We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a graceful failure mode and an instructive error message. . In the meantime, there is still the issue that this PR fails to even build on Travis. It looks like it produces so much output building the Docker image that it exceeds the allowable Travis build log size. That will need to be resolved, and we'll also need to understand the impact of this change on the size of our Docker image, which is already large, and continues to be a challenge for us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429451059
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429956467:50,Deployability,release,release,50,"If AVX is now required in the mainline tensorflow release as well, then I agree with @lucidtronix that we don't need to maintain a fallback environment -- provided that we're talking about **AVX1** here, and not AVX2/AVX512. We don't currently have the ability to request nodes on travis or Google cloud with AVX2/AVX512. I'd like to see this PR modified, however, to throw a `UserException` from the tool rather than in `customCommandLineValidation()`. The `UserException` should include a message with a pointer to versions of Tensorflow that work on non-AVX hardware.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429956467
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429956467:491,Integrability,message,message,491,"If AVX is now required in the mainline tensorflow release as well, then I agree with @lucidtronix that we don't need to maintain a fallback environment -- provided that we're talking about **AVX1** here, and not AVX2/AVX512. We don't currently have the ability to request nodes on travis or Google cloud with AVX2/AVX512. I'd like to see this PR modified, however, to throw a `UserException` from the tool rather than in `customCommandLineValidation()`. The `UserException` should include a message with a pointer to versions of Tensorflow that work on non-AVX hardware.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429956467
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429982889:114,Testability,test,tests,114,"Sounds like a good step forward to me. Before we can merge this though, we still need to get it to build and pass tests on Travis, and see what the impact is on the size of the docker image, in case we have an issue with that.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429982889
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429992564:233,Testability,test,test,233,"@EdwardDixon You might try adding ""-q"" to the `conda` [command](https://github.com/broadinstitute/gatk/blob/master/Dockerfile#L58) in the Dockerfile to see if that allows the build to proceed. If that works, then we can see what the test results look like, and the resulting docker image size.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-429992564
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969:289,Testability,test,tests,289,"Changing the exception throwing code won't help with either of those - that code would only execute when the tool is actually run. Currently, the PR is failing to even build on Travis because Travis is killing it during the part of the build where it creates the Docker image on which the tests will run. It appears to be producing so much progress output during the conda environment creation - right when its resolving tensorflow packages - that Travis terminates the whole build. My suggestion above was to see if we can (at least temporarily) get past that so we can see get the build to succeed; see how big the resulting Docker is; and whether the CNNScoreVariants tests pass with the new environment. Then we can figure out if we have any additional issues to resolve.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969:671,Testability,test,tests,671,"Changing the exception throwing code won't help with either of those - that code would only execute when the tool is actually run. Currently, the PR is failing to even build on Travis because Travis is killing it during the part of the build where it creates the Docker image on which the tests will run. It appears to be producing so much progress output during the conda environment creation - right when its resolving tensorflow packages - that Travis terminates the whole build. My suggestion above was to see if we can (at least temporarily) get past that so we can see get the build to succeed; see how big the resulting Docker is; and whether the CNNScoreVariants tests pass with the new environment. Then we can figure out if we have any additional issues to resolve.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451:35,Testability,log,logging,35,"Anecdotally, some people have seen logging issues around the Conda; progress bars filling logs. I know Conda had a change request to add a; silent or quiet mode. Suggestions on the back of a postcard... On Mon 15 Oct 2018, 21:27 Chris Norman, <notifications@github.com> wrote:. > Changing the exception throwing code won't help with either of those -; > that code would only execute when the tool is actually run. Currently, the; > PR is failing to even build on Travis during the part of the build where it; > creates the Docker image on which the tests will run. Travis is killing it; > because its producing so much progress output during the conda environment; > creation - right when its resolving tensorflow packages.; >; > My suggestion above was to see if we can (at least temporarily) get past; > that so we can see how big the Docker is, and whether the CNNScoreVariants; > tests pass with the new environment. Then we can figure out if we have any; > additional issues to resolve.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lrwV2gaTYs6ur_AXznl6iV0AMxQ8Cks5ulO_DgaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451:90,Testability,log,logs,90,"Anecdotally, some people have seen logging issues around the Conda; progress bars filling logs. I know Conda had a change request to add a; silent or quiet mode. Suggestions on the back of a postcard... On Mon 15 Oct 2018, 21:27 Chris Norman, <notifications@github.com> wrote:. > Changing the exception throwing code won't help with either of those -; > that code would only execute when the tool is actually run. Currently, the; > PR is failing to even build on Travis during the part of the build where it; > creates the Docker image on which the tests will run. Travis is killing it; > because its producing so much progress output during the conda environment; > creation - right when its resolving tensorflow packages.; >; > My suggestion above was to see if we can (at least temporarily) get past; > that so we can see how big the Docker is, and whether the CNNScoreVariants; > tests pass with the new environment. Then we can figure out if we have any; > additional issues to resolve.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lrwV2gaTYs6ur_AXznl6iV0AMxQ8Cks5ulO_DgaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451:549,Testability,test,tests,549,"Anecdotally, some people have seen logging issues around the Conda; progress bars filling logs. I know Conda had a change request to add a; silent or quiet mode. Suggestions on the back of a postcard... On Mon 15 Oct 2018, 21:27 Chris Norman, <notifications@github.com> wrote:. > Changing the exception throwing code won't help with either of those -; > that code would only execute when the tool is actually run. Currently, the; > PR is failing to even build on Travis during the part of the build where it; > creates the Docker image on which the tests will run. Travis is killing it; > because its producing so much progress output during the conda environment; > creation - right when its resolving tensorflow packages.; >; > My suggestion above was to see if we can (at least temporarily) get past; > that so we can see how big the Docker is, and whether the CNNScoreVariants; > tests pass with the new environment. Then we can figure out if we have any; > additional issues to resolve.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lrwV2gaTYs6ur_AXznl6iV0AMxQ8Cks5ulO_DgaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451:884,Testability,test,tests,884,"Anecdotally, some people have seen logging issues around the Conda; progress bars filling logs. I know Conda had a change request to add a; silent or quiet mode. Suggestions on the back of a postcard... On Mon 15 Oct 2018, 21:27 Chris Norman, <notifications@github.com> wrote:. > Changing the exception throwing code won't help with either of those -; > that code would only execute when the tool is actually run. Currently, the; > PR is failing to even build on Travis during the part of the build where it; > creates the Docker image on which the tests will run. Travis is killing it; > because its producing so much progress output during the conda environment; > creation - right when its resolving tensorflow packages.; >; > My suggestion above was to see if we can (at least temporarily) get past; > that so we can see how big the Docker is, and whether the CNNScoreVariants; > tests pass with the new environment. Then we can figure out if we have any; > additional issues to resolve.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lrwV2gaTYs6ur_AXznl6iV0AMxQ8Cks5ulO_DgaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451:68,Usability,progress bar,progress bars,68,"Anecdotally, some people have seen logging issues around the Conda; progress bars filling logs. I know Conda had a change request to add a; silent or quiet mode. Suggestions on the back of a postcard... On Mon 15 Oct 2018, 21:27 Chris Norman, <notifications@github.com> wrote:. > Changing the exception throwing code won't help with either of those -; > that code would only execute when the tool is actually run. Currently, the; > PR is failing to even build on Travis during the part of the build where it; > creates the Docker image on which the tests will run. Travis is killing it; > because its producing so much progress output during the conda environment; > creation - right when its resolving tensorflow packages.; >; > My suggestion above was to see if we can (at least temporarily) get past; > that so we can see how big the Docker is, and whether the CNNScoreVariants; > tests pass with the new environment. Then we can figure out if we have any; > additional issues to resolve.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lrwV2gaTYs6ur_AXznl6iV0AMxQ8Cks5ulO_DgaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225:232,Integrability,rout,routinely,232,"So most of the jobs are still failing with: `The job exceeded the maximum log length, and has been terminated.` @cmnbroad @droazen What log is travis referring to? In the Travis `Job log` tab I only see < 3000 lines and other tests routinely output way more than that and pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225:74,Testability,log,log,74,"So most of the jobs are still failing with: `The job exceeded the maximum log length, and has been terminated.` @cmnbroad @droazen What log is travis referring to? In the Travis `Job log` tab I only see < 3000 lines and other tests routinely output way more than that and pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225:136,Testability,log,log,136,"So most of the jobs are still failing with: `The job exceeded the maximum log length, and has been terminated.` @cmnbroad @droazen What log is travis referring to? In the Travis `Job log` tab I only see < 3000 lines and other tests routinely output way more than that and pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225:183,Testability,log,log,183,"So most of the jobs are still failing with: `The job exceeded the maximum log length, and has been terminated.` @cmnbroad @droazen What log is travis referring to? In the Travis `Job log` tab I only see < 3000 lines and other tests routinely output way more than that and pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225:226,Testability,test,tests,226,"So most of the jobs are still failing with: `The job exceeded the maximum log length, and has been terminated.` @cmnbroad @droazen What log is travis referring to? In the Travis `Job log` tab I only see < 3000 lines and other tests routinely output way more than that and pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-431840225
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437403121:132,Availability,repair,repair,132,"@EdwardDixon Looks like you've had a git accident in this branch and rebased a bunch of other people's commits from master. Can you repair this branch? It should only contain your own commits, not rebased copies of other people's commits.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437403121
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437404672:598,Availability,repair,repair,598,"Git accident is right. Honestly not sure if I can fix this branch - this; is what happened the last time I tried to fix it!. At this point, it would probably be easier to branch from master and add; the changes back in all over again. I've spent more time wrestling with; git than actually writing the code on this one, so any help gratefully; received. On Fri, 9 Nov 2018 at 15:55 droazen <notifications@github.com> wrote:. > @EdwardDixon <https://github.com/EdwardDixon> Looks like you've had a git; > accident in this branch and rebased a bunch of other people's commits from; > master. Can you repair this branch? It should only contain your own; > commits, not rebased copies of other people's commits.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437403121>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lry5sLLfTPAVuUbd6ta5c6vh3sflSks5utaVvgaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437404672
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437412464:2088,Deployability,pipeline,pipelines,2088,| Complexity Δ | |; |---|---|---|---|; | [...ellbender/tools/walkers/vqsr/CNNScoreVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50cy5qYXZh) | `73.7% <50%> (+0.02%)` | `41 <1> (ø)` | :arrow_down: |; | [...ils/nio/NioFileCopierWithProgressMeterResults.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyUmVzdWx0cy5qYXZh) | `0% <0%> (-94.74%)` | `0% <0%> (-9%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.26%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.67%)` | `0% <0%> (-2%)` | |; | [...ols/funcotator/FuncotatorDataSourceDownloader.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JEYXRhU291cmNlRG93bmxvYWRlci5qYXZh) | `0% <0%> (-66.2%)` | `0% <0%> (-14%)` | |; | [...nder/utils/nio/NioFileCopierWithProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyLmphdmE=) | `17% <0%> (-52.5%)` | `9% <0%> (-30%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437412464
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437412464:4650,Deployability,update,update,4650,"S9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyLmphdmE=) | `17% <0%> (-52.5%)` | `9% <0%> (-30%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `58.53% <0%> (-23.18%)` | `33% <0%> (-9%)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `77.08% <0%> (-3.13%)` | `31% <0%> (ø)` | |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `89.39% <0%> (-3.04%)` | `61% <0%> (-2%)` | |; | ... and [25 more](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=footer). Last update [626c887...a1e13fc](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437412464
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437412464:4553,Energy Efficiency,Power,Powered,4553,"S9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyLmphdmE=) | `17% <0%> (-52.5%)` | `9% <0%> (-30%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `58.53% <0%> (-23.18%)` | `33% <0%> (-9%)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `77.08% <0%> (-3.13%)` | `31% <0%> (ø)` | |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `89.39% <0%> (-3.04%)` | `61% <0%> (-2%)` | |; | ... and [25 more](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=footer). Last update [626c887...a1e13fc](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437412464
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437412464:4416,Usability,learn,learn,4416,"S9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyLmphdmE=) | `17% <0%> (-52.5%)` | `9% <0%> (-30%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `58.53% <0%> (-23.18%)` | `33% <0%> (-9%)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `77.08% <0%> (-3.13%)` | `31% <0%> (ø)` | |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `89.39% <0%> (-3.04%)` | `61% <0%> (-2%)` | |; | ... and [25 more](https://codecov.io/gh/broadinstitute/gatk/pull/5291/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=footer). Last update [626c887...a1e13fc](https://codecov.io/gh/broadinstitute/gatk/pull/5291?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437412464
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495:39,Availability,repair,repair,39,"@EdwardDixon Sure, here's my suggested repair process:. 1. If you haven't already, add an ""upstream"" remote to your git clone via `git remote add upstream git@github.com:broadinstitute/gatk.git` (or `https://github.com/broadinstitute/gatk.git` if you don't have ssh authentication set up with github). 2. `git fetch upstream`. 3. Copy the files you actually intended to change in this PR into a temp directory somewhere. 4. Create a new temporary branch off of `upstream/master`: `git checkout -b avxcheck_repaired upstream/master`. 5. Copy the files you saved in step 3 back into their original locations in the working tree. 6. `git commit -a`. 7. Examine the diff against upstream/master via `git diff upstream/master HEAD`. Verify that the diff is what you expect. 8. Run `git rev-parse HEAD` and save the commit ID it outputs. 9. Switch back to the broken version of the branch: `git checkout avxcheck`. 10. Run `git reset --hard commit_id_from_step_8`. This will force the branch to point to the repaired commit we created in step 6. 11. Run `git push -f origin avxcheck:avxcheck` to force-push the repaired version of the branch into your fork. Then check that it looks ok on github. For avoiding this sort of thing in the future, here's a few tips:. * Never run `git merge` or `git pull`. Always update your branch with changes from the latest gatk master branch via the command: `git fetch upstream && git rebase -i upstream/master`, followed by `git push -f` to push the rebased branch into your fork. * If you've never run `git rebase` before, read a tutorial on it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495:1002,Availability,repair,repaired,1002,"@EdwardDixon Sure, here's my suggested repair process:. 1. If you haven't already, add an ""upstream"" remote to your git clone via `git remote add upstream git@github.com:broadinstitute/gatk.git` (or `https://github.com/broadinstitute/gatk.git` if you don't have ssh authentication set up with github). 2. `git fetch upstream`. 3. Copy the files you actually intended to change in this PR into a temp directory somewhere. 4. Create a new temporary branch off of `upstream/master`: `git checkout -b avxcheck_repaired upstream/master`. 5. Copy the files you saved in step 3 back into their original locations in the working tree. 6. `git commit -a`. 7. Examine the diff against upstream/master via `git diff upstream/master HEAD`. Verify that the diff is what you expect. 8. Run `git rev-parse HEAD` and save the commit ID it outputs. 9. Switch back to the broken version of the branch: `git checkout avxcheck`. 10. Run `git reset --hard commit_id_from_step_8`. This will force the branch to point to the repaired commit we created in step 6. 11. Run `git push -f origin avxcheck:avxcheck` to force-push the repaired version of the branch into your fork. Then check that it looks ok on github. For avoiding this sort of thing in the future, here's a few tips:. * Never run `git merge` or `git pull`. Always update your branch with changes from the latest gatk master branch via the command: `git fetch upstream && git rebase -i upstream/master`, followed by `git push -f` to push the rebased branch into your fork. * If you've never run `git rebase` before, read a tutorial on it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495:1105,Availability,repair,repaired,1105,"@EdwardDixon Sure, here's my suggested repair process:. 1. If you haven't already, add an ""upstream"" remote to your git clone via `git remote add upstream git@github.com:broadinstitute/gatk.git` (or `https://github.com/broadinstitute/gatk.git` if you don't have ssh authentication set up with github). 2. `git fetch upstream`. 3. Copy the files you actually intended to change in this PR into a temp directory somewhere. 4. Create a new temporary branch off of `upstream/master`: `git checkout -b avxcheck_repaired upstream/master`. 5. Copy the files you saved in step 3 back into their original locations in the working tree. 6. `git commit -a`. 7. Examine the diff against upstream/master via `git diff upstream/master HEAD`. Verify that the diff is what you expect. 8. Run `git rev-parse HEAD` and save the commit ID it outputs. 9. Switch back to the broken version of the branch: `git checkout avxcheck`. 10. Run `git reset --hard commit_id_from_step_8`. This will force the branch to point to the repaired commit we created in step 6. 11. Run `git push -f origin avxcheck:avxcheck` to force-push the repaired version of the branch into your fork. Then check that it looks ok on github. For avoiding this sort of thing in the future, here's a few tips:. * Never run `git merge` or `git pull`. Always update your branch with changes from the latest gatk master branch via the command: `git fetch upstream && git rebase -i upstream/master`, followed by `git push -f` to push the rebased branch into your fork. * If you've never run `git rebase` before, read a tutorial on it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495:1304,Deployability,update,update,1304,"@EdwardDixon Sure, here's my suggested repair process:. 1. If you haven't already, add an ""upstream"" remote to your git clone via `git remote add upstream git@github.com:broadinstitute/gatk.git` (or `https://github.com/broadinstitute/gatk.git` if you don't have ssh authentication set up with github). 2. `git fetch upstream`. 3. Copy the files you actually intended to change in this PR into a temp directory somewhere. 4. Create a new temporary branch off of `upstream/master`: `git checkout -b avxcheck_repaired upstream/master`. 5. Copy the files you saved in step 3 back into their original locations in the working tree. 6. `git commit -a`. 7. Examine the diff against upstream/master via `git diff upstream/master HEAD`. Verify that the diff is what you expect. 8. Run `git rev-parse HEAD` and save the commit ID it outputs. 9. Switch back to the broken version of the branch: `git checkout avxcheck`. 10. Run `git reset --hard commit_id_from_step_8`. This will force the branch to point to the repaired commit we created in step 6. 11. Run `git push -f origin avxcheck:avxcheck` to force-push the repaired version of the branch into your fork. Then check that it looks ok on github. For avoiding this sort of thing in the future, here's a few tips:. * Never run `git merge` or `git pull`. Always update your branch with changes from the latest gatk master branch via the command: `git fetch upstream && git rebase -i upstream/master`, followed by `git push -f` to push the rebased branch into your fork. * If you've never run `git rebase` before, read a tutorial on it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495:1195,Safety,avoid,avoiding,1195,"@EdwardDixon Sure, here's my suggested repair process:. 1. If you haven't already, add an ""upstream"" remote to your git clone via `git remote add upstream git@github.com:broadinstitute/gatk.git` (or `https://github.com/broadinstitute/gatk.git` if you don't have ssh authentication set up with github). 2. `git fetch upstream`. 3. Copy the files you actually intended to change in this PR into a temp directory somewhere. 4. Create a new temporary branch off of `upstream/master`: `git checkout -b avxcheck_repaired upstream/master`. 5. Copy the files you saved in step 3 back into their original locations in the working tree. 6. `git commit -a`. 7. Examine the diff against upstream/master via `git diff upstream/master HEAD`. Verify that the diff is what you expect. 8. Run `git rev-parse HEAD` and save the commit ID it outputs. 9. Switch back to the broken version of the branch: `git checkout avxcheck`. 10. Run `git reset --hard commit_id_from_step_8`. This will force the branch to point to the repaired commit we created in step 6. 11. Run `git push -f origin avxcheck:avxcheck` to force-push the repaired version of the branch into your fork. Then check that it looks ok on github. For avoiding this sort of thing in the future, here's a few tips:. * Never run `git merge` or `git pull`. Always update your branch with changes from the latest gatk master branch via the command: `git fetch upstream && git rebase -i upstream/master`, followed by `git push -f` to push the rebased branch into your fork. * If you've never run `git rebase` before, read a tutorial on it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495:266,Security,authenticat,authentication,266,"@EdwardDixon Sure, here's my suggested repair process:. 1. If you haven't already, add an ""upstream"" remote to your git clone via `git remote add upstream git@github.com:broadinstitute/gatk.git` (or `https://github.com/broadinstitute/gatk.git` if you don't have ssh authentication set up with github). 2. `git fetch upstream`. 3. Copy the files you actually intended to change in this PR into a temp directory somewhere. 4. Create a new temporary branch off of `upstream/master`: `git checkout -b avxcheck_repaired upstream/master`. 5. Copy the files you saved in step 3 back into their original locations in the working tree. 6. `git commit -a`. 7. Examine the diff against upstream/master via `git diff upstream/master HEAD`. Verify that the diff is what you expect. 8. Run `git rev-parse HEAD` and save the commit ID it outputs. 9. Switch back to the broken version of the branch: `git checkout avxcheck`. 10. Run `git reset --hard commit_id_from_step_8`. This will force the branch to point to the repaired commit we created in step 6. 11. Run `git push -f origin avxcheck:avxcheck` to force-push the repaired version of the branch into your fork. Then check that it looks ok on github. For avoiding this sort of thing in the future, here's a few tips:. * Never run `git merge` or `git pull`. Always update your branch with changes from the latest gatk master branch via the command: `git fetch upstream && git rebase -i upstream/master`, followed by `git push -f` to push the rebased branch into your fork. * If you've never run `git rebase` before, read a tutorial on it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437415495
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437417489:65,Integrability,message,message,65,"Much appreciated! I had pulled from the broad master before your message came in & done as you suggest with our changes, which are now confined to CNNScoreVariants. I think I may have managed it... if not I'll go back to step 1 and give it one more try.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437417489
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888:209,Availability,Error,Error,209,"@droazen Applied your steps, I hope correctly - the pull request looks clean now. Your steps were a huge help. . The travis build looks like failing now, for reasons not obviously connected with our commit:. `Error: (converted from warning) unable to access index for repository http://cran.mtu.edu/src/contrib; Execution halted; The command ""if [[ $TEST_DOCKER != true ]]; then sudo mkdir -p /usr/local/lib/R/; sudo mkdir -p site-library; sudo ln -sFv ~/site-library /usr/local/lib/R/site-library; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; sudo add-apt-repository ""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/""; sudo apt-get update; sudo apt-get install -y --force-yes r-base-dev=3.1.3-1trusty; sudo apt-get install -y --force-yes r-base-core=3.1.3-1trusty; sudo Rscript scripts/docker/gatkbase/install_R_packages.R; fi;"" failed and exited with 1 during .`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888:696,Deployability,update,update,696,"@droazen Applied your steps, I hope correctly - the pull request looks clean now. Your steps were a huge help. . The travis build looks like failing now, for reasons not obviously connected with our commit:. `Error: (converted from warning) unable to access index for repository http://cran.mtu.edu/src/contrib; Execution halted; The command ""if [[ $TEST_DOCKER != true ]]; then sudo mkdir -p /usr/local/lib/R/; sudo mkdir -p site-library; sudo ln -sFv ~/site-library /usr/local/lib/R/site-library; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; sudo add-apt-repository ""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/""; sudo apt-get update; sudo apt-get install -y --force-yes r-base-dev=3.1.3-1trusty; sudo apt-get install -y --force-yes r-base-core=3.1.3-1trusty; sudo Rscript scripts/docker/gatkbase/install_R_packages.R; fi;"" failed and exited with 1 during .`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888:717,Deployability,install,install,717,"@droazen Applied your steps, I hope correctly - the pull request looks clean now. Your steps were a huge help. . The travis build looks like failing now, for reasons not obviously connected with our commit:. `Error: (converted from warning) unable to access index for repository http://cran.mtu.edu/src/contrib; Execution halted; The command ""if [[ $TEST_DOCKER != true ]]; then sudo mkdir -p /usr/local/lib/R/; sudo mkdir -p site-library; sudo ln -sFv ~/site-library /usr/local/lib/R/site-library; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; sudo add-apt-repository ""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/""; sudo apt-get update; sudo apt-get install -y --force-yes r-base-dev=3.1.3-1trusty; sudo apt-get install -y --force-yes r-base-core=3.1.3-1trusty; sudo Rscript scripts/docker/gatkbase/install_R_packages.R; fi;"" failed and exited with 1 during .`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888:779,Deployability,install,install,779,"@droazen Applied your steps, I hope correctly - the pull request looks clean now. Your steps were a huge help. . The travis build looks like failing now, for reasons not obviously connected with our commit:. `Error: (converted from warning) unable to access index for repository http://cran.mtu.edu/src/contrib; Execution halted; The command ""if [[ $TEST_DOCKER != true ]]; then sudo mkdir -p /usr/local/lib/R/; sudo mkdir -p site-library; sudo ln -sFv ~/site-library /usr/local/lib/R/site-library; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; sudo add-apt-repository ""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/""; sudo apt-get update; sudo apt-get install -y --force-yes r-base-dev=3.1.3-1trusty; sudo apt-get install -y --force-yes r-base-core=3.1.3-1trusty; sudo Rscript scripts/docker/gatkbase/install_R_packages.R; fi;"" failed and exited with 1 during .`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888:251,Security,access,access,251,"@droazen Applied your steps, I hope correctly - the pull request looks clean now. Your steps were a huge help. . The travis build looks like failing now, for reasons not obviously connected with our commit:. `Error: (converted from warning) unable to access index for repository http://cran.mtu.edu/src/contrib; Execution halted; The command ""if [[ $TEST_DOCKER != true ]]; then sudo mkdir -p /usr/local/lib/R/; sudo mkdir -p site-library; sudo ln -sFv ~/site-library /usr/local/lib/R/site-library; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; sudo add-apt-repository ""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/""; sudo apt-get update; sudo apt-get install -y --force-yes r-base-dev=3.1.3-1trusty; sudo apt-get install -y --force-yes r-base-core=3.1.3-1trusty; sudo Rscript scripts/docker/gatkbase/install_R_packages.R; fi;"" failed and exited with 1 during .`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437922888
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437924447:17,Availability,error,erroring,17,Looks like CI is erroring out for other unrelated pull requests also? [https://travis-ci.org/broadinstitute/gatk/builds/453937675]([](https://travis-ci.org/broadinstitute/gatk/builds/453937675)),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-437924447
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438065324:89,Availability,error,erroring,89,"@mepowers any ideas? Code looks good, variant score tests are passing but other ci steps erroring out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438065324
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438065324:52,Testability,test,tests,52,"@mepowers any ideas? Code looks good, variant score tests are passing but other ci steps erroring out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438065324
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438265002:46,Testability,test,tests,46,@droazen @cmnbroad @lucidtronix @mepowers All tests passing! Hope we are now good to merge?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438265002
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438735712:278,Availability,failure,failure,278,"Good catch @EdwardDixon. From @cmnbroad 's Oct 12 post:; >We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a **graceful failure mode and an instructive error message.**. We have this now, right? Just want to be sure. If there's more work to be done, let's hash it out on another PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438735712
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438735712:310,Availability,error,error,310,"Good catch @EdwardDixon. From @cmnbroad 's Oct 12 post:; >We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a **graceful failure mode and an instructive error message.**. We have this now, right? Just want to be sure. If there's more work to be done, let's hash it out on another PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438735712
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438735712:316,Integrability,message,message,316,"Good catch @EdwardDixon. From @cmnbroad 's Oct 12 post:; >We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a **graceful failure mode and an instructive error message.**. We have this now, right? Just want to be sure. If there's more work to be done, let's hash it out on another PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438735712
https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438735712:414,Security,hash,hash,414,"Good catch @EdwardDixon. From @cmnbroad 's Oct 12 post:; >We may need to provide a fallback environment for those (I'll try to get resolution on that). If it turns out we do, I'm actually not suggesting the fallback be automatic (3 in your list), just that we have a **graceful failure mode and an instructive error message.**. We have this now, right? Just want to be sure. If there's more work to be done, let's hash it out on another PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438735712
https://github.com/broadinstitute/gatk/pull/5292#issuecomment-427904892:4436,Deployability,update,update,4436,"ference/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWZlcmVuY2UvUmVmZXJlbmNlQmFzZXMuamF2YQ==) | `38.46% <0%> (-19.24%)` | `4% <0%> (-2%)` | |; | [...oadinstitute/hellbender/engine/ReferenceShard.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVmZXJlbmNlU2hhcmQuamF2YQ==) | `62.5% <0%> (-18.75%)` | `6% <0%> (-1%)` | |; | [...broadinstitute/hellbender/engine/VariantShard.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVmFyaWFudFNoYXJkLmphdmE=) | `63.63% <0%> (-13.64%)` | `7% <0%> (-1%)` | |; | [...ne/spark/datasources/ReferenceWindowFunctions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVmZXJlbmNlV2luZG93RnVuY3Rpb25zLmphdmE=) | `12.5% <0%> (-12.5%)` | `1% <0%> (ø)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `79.87% <0%> (+1.21%)` | `42% <0%> (ø)` | :arrow_down: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=footer). Last update [a74e571...3768ba2](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5292#issuecomment-427904892
https://github.com/broadinstitute/gatk/pull/5292#issuecomment-427904892:4339,Energy Efficiency,Power,Powered,4339,"ference/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWZlcmVuY2UvUmVmZXJlbmNlQmFzZXMuamF2YQ==) | `38.46% <0%> (-19.24%)` | `4% <0%> (-2%)` | |; | [...oadinstitute/hellbender/engine/ReferenceShard.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVmZXJlbmNlU2hhcmQuamF2YQ==) | `62.5% <0%> (-18.75%)` | `6% <0%> (-1%)` | |; | [...broadinstitute/hellbender/engine/VariantShard.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVmFyaWFudFNoYXJkLmphdmE=) | `63.63% <0%> (-13.64%)` | `7% <0%> (-1%)` | |; | [...ne/spark/datasources/ReferenceWindowFunctions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVmZXJlbmNlV2luZG93RnVuY3Rpb25zLmphdmE=) | `12.5% <0%> (-12.5%)` | `1% <0%> (ø)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `79.87% <0%> (+1.21%)` | `42% <0%> (ø)` | :arrow_down: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=footer). Last update [a74e571...3768ba2](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5292#issuecomment-427904892
https://github.com/broadinstitute/gatk/pull/5292#issuecomment-427904892:4202,Usability,learn,learn,4202,"ference/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWZlcmVuY2UvUmVmZXJlbmNlQmFzZXMuamF2YQ==) | `38.46% <0%> (-19.24%)` | `4% <0%> (-2%)` | |; | [...oadinstitute/hellbender/engine/ReferenceShard.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVmZXJlbmNlU2hhcmQuamF2YQ==) | `62.5% <0%> (-18.75%)` | `6% <0%> (-1%)` | |; | [...broadinstitute/hellbender/engine/VariantShard.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVmFyaWFudFNoYXJkLmphdmE=) | `63.63% <0%> (-13.64%)` | `7% <0%> (-1%)` | |; | [...ne/spark/datasources/ReferenceWindowFunctions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVmZXJlbmNlV2luZG93RnVuY3Rpb25zLmphdmE=) | `12.5% <0%> (-12.5%)` | `1% <0%> (ø)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `79.87% <0%> (+1.21%)` | `42% <0%> (ø)` | :arrow_down: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=footer). Last update [a74e571...3768ba2](https://codecov.io/gh/broadinstitute/gatk/pull/5292?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5292#issuecomment-427904892
https://github.com/broadinstitute/gatk/issues/5293#issuecomment-429364328:51,Testability,test,tests,51,"Hi @jamesemery . Thanks for the quick fix. Initial tests are looking good. These reads were aligned with STAR and realigned with ABRA2. An insertion longer than the read length was assembled during local realignment and the 100I cigar reflects that the read is entirely contained within the insertion with the read position reflecting the base immediately preceding the insertion locus. So, this is a (potentially) accurate representation of the read.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5293#issuecomment-429364328
https://github.com/broadinstitute/gatk/issues/5295#issuecomment-430312265:95,Modifiability,refactor,refactored,95,"The regression tests added as part of #4344 fulfill this requirement. However, they need to be refactored to take advantage of the newly-included full `hg19` and `hg38` reference sequences.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5295#issuecomment-430312265
https://github.com/broadinstitute/gatk/issues/5295#issuecomment-430312265:15,Testability,test,tests,15,"The regression tests added as part of #4344 fulfill this requirement. However, they need to be refactored to take advantage of the newly-included full `hg19` and `hg38` reference sequences.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5295#issuecomment-430312265
https://github.com/broadinstitute/gatk/issues/5299#issuecomment-430707886:270,Availability,down,down,270,@marchoeppner I feel you're pain. It's really annoying and causes all sorts of irritation to have different schemes for labelling the index. I think unfortunately we may be stuck with the world where we have to expect both index schemes for bam. I believe we've clamped down for cram and future formats and only excepting the `.cram.crai` version. . (cram.bai is a different species of horrible that hopefully will hopefully go away soon.),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5299#issuecomment-430707886
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-437364345:11,Availability,error,error,11,"I hit this error as well when I was doing a ""plumbing"" test for the new exome joint calling (I meant to merge the intervals like you suggested, but I made a mistake). That was just one sample over half of chr20. I can email you the inputs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-437364345
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-437364345:55,Testability,test,test,55,"I hit this error as well when I was doing a ""plumbing"" test for the new exome joint calling (I meant to merge the intervals like you suggested, but I made a mistake). That was just one sample over half of chr20. I can email you the inputs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-437364345
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438818966:970,Deployability,pipeline,pipeline,970,"I can actually replicate this with an interval list with two intervals: ; ```; chr1	11719	18516	+	.; chr2	38664	202755	+	.; ```; throws; ```; org.broadinstitute.hellbender.exceptions.GATKException: Cannot call query with different interval, expected:chr1:11719-18516 queried with: chr2:38664-202755; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport$InitializedQueryWrapper.query(GenomicsDBImport.java:816); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.<init>(GenomicsDBImporter.java:136); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:563); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```. We typically run with `--reader-threads 5` in the pipeline, but if I change it to 1 I can get it to run. That's not a longterm solution, but hopefully it's a good hint and it's a good enough workaround for me for the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438818966
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438818966:627,Performance,concurren,concurrent,627,"I can actually replicate this with an interval list with two intervals: ; ```; chr1	11719	18516	+	.; chr2	38664	202755	+	.; ```; throws; ```; org.broadinstitute.hellbender.exceptions.GATKException: Cannot call query with different interval, expected:chr1:11719-18516 queried with: chr2:38664-202755; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport$InitializedQueryWrapper.query(GenomicsDBImport.java:816); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.<init>(GenomicsDBImporter.java:136); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:563); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```. We typically run with `--reader-threads 5` in the pipeline, but if I change it to 1 I can get it to run. That's not a longterm solution, but hopefully it's a good hint and it's a good enough workaround for me for the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438818966
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438818966:716,Performance,concurren,concurrent,716,"I can actually replicate this with an interval list with two intervals: ; ```; chr1	11719	18516	+	.; chr2	38664	202755	+	.; ```; throws; ```; org.broadinstitute.hellbender.exceptions.GATKException: Cannot call query with different interval, expected:chr1:11719-18516 queried with: chr2:38664-202755; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport$InitializedQueryWrapper.query(GenomicsDBImport.java:816); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.<init>(GenomicsDBImporter.java:136); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:563); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```. We typically run with `--reader-threads 5` in the pipeline, but if I change it to 1 I can get it to run. That's not a longterm solution, but hopefully it's a good hint and it's a good enough workaround for me for the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438818966
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438818966:801,Performance,concurren,concurrent,801,"I can actually replicate this with an interval list with two intervals: ; ```; chr1	11719	18516	+	.; chr2	38664	202755	+	.; ```; throws; ```; org.broadinstitute.hellbender.exceptions.GATKException: Cannot call query with different interval, expected:chr1:11719-18516 queried with: chr2:38664-202755; 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport$InitializedQueryWrapper.query(GenomicsDBImport.java:816); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.<init>(GenomicsDBImporter.java:136); 	at com.intel.genomicsdb.importer.GenomicsDBImporter.lambda$null$2(GenomicsDBImporter.java:563); 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); ```. We typically run with `--reader-threads 5` in the pipeline, but if I change it to 1 I can get it to run. That's not a longterm solution, but hopefully it's a good hint and it's a good enough workaround for me for the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438818966
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438827882:27,Availability,ping,pinging,27,@kgururaj @nalinigans Just pinging you to make sure you notice @ldgauthier 's comment above where she reproduces this with just 2 intervals.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438827882
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438834782:347,Deployability,update,updated,347,"We were looking at this just now, and it seems like the problem might be this line in `GenomicsDBImport.getFeatureReadersInParallel()`:. ```; return new InitializedQueryWrapper(getReaderFromPath(variantPath), intervals.get(0));; ```. Notice that it's unconditionally calling `intervals.get(0)` in every thread...it looks like this line didn't get updated when multi-interval support was added to the tool, and the multi-interval tests don't run with reader threads > 1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438834782
https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438834782:429,Testability,test,tests,429,"We were looking at this just now, and it seems like the problem might be this line in `GenomicsDBImport.getFeatureReadersInParallel()`:. ```; return new InitializedQueryWrapper(getReaderFromPath(variantPath), intervals.get(0));; ```. Notice that it's unconditionally calling `intervals.get(0)` in every thread...it looks like this line didn't get updated when multi-interval support was added to the tool, and the multi-interval tests don't run with reader threads > 1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300#issuecomment-438834782
https://github.com/broadinstitute/gatk/issues/5306#issuecomment-471620009:222,Deployability,release,releases,222,"NIO can now do this, as of [pull request #3869](https://github.com/googleapis/google-cloud-java/pull/3869) (Nov 27, 2018). This is included in gcloud-java versions [v0.73.0](https://github.com/googleapis/google-cloud-java/releases/tag/v0.73.0) onward.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5306#issuecomment-471620009
https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430040420:64,Availability,failure,failure,64,@lucidtronix looks like I got an intermittent 10-minute timeout failure in the CNN WDL test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430040420
https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430040420:56,Safety,timeout,timeout,56,@lucidtronix looks like I got an intermittent 10-minute timeout failure in the CNN WDL test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430040420
https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430040420:87,Testability,test,test,87,@lucidtronix looks like I got an intermittent 10-minute timeout failure in the CNN WDL test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430040420
https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430042227:35,Testability,test,test,35,Going to go ahead and restart that test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430042227
https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430629093:210,Deployability,integrat,integration-test,210,"Note that we could probably extract some code for reading and subsetting read counts for both DetermineGermlineContigPloidy and GermlineCNVCaller, see related issue #4004. There is also some duplication in the integration-test code, which is probably not worth cleaning up. @ldgauthier would you mind reviewing?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430629093
https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430629093:210,Integrability,integrat,integration-test,210,"Note that we could probably extract some code for reading and subsetting read counts for both DetermineGermlineContigPloidy and GermlineCNVCaller, see related issue #4004. There is also some duplication in the integration-test code, which is probably not worth cleaning up. @ldgauthier would you mind reviewing?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430629093
https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430629093:222,Testability,test,test,222,"Note that we could probably extract some code for reading and subsetting read counts for both DetermineGermlineContigPloidy and GermlineCNVCaller, see related issue #4004. There is also some duplication in the integration-test code, which is probably not worth cleaning up. @ldgauthier would you mind reviewing?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430629093
https://github.com/broadinstitute/gatk/pull/5307#issuecomment-431494002:575,Integrability,wrap,wrapped,575,"> In case mode you already have the filtered intervals, so why collect coverage over the full set?. Since coverage collection is relatively expensive, it's better to collect coverage over the same set of intervals for all samples just once and call it a day. Then we can run these samples in whatever mode we please, adjust filtering parameters, etc. in subsequent analyses without having to go back and recollect coverage at any point. > Also, in cnv_germline_case_workflow.wdl it really doesn't look like ploidy determination uses the filtered intervals. Are the intervals wrapped into the model tar there too? If that's true, then that should be documented somewhere. Yup, that's correct. Added some more docs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-431494002
https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430017261:76,Deployability,patch,patch,76,"@nalinigans Once this goes into master, could you try out your PR with this patch and see if the disabled failing tests pass now?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430017261
https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430017261:114,Testability,test,tests,114,"@nalinigans Once this goes into master, could you try out your PR with this patch and see if the disabled failing tests pass now?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430017261
https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430038245:23,Testability,test,tests,23,@lbergelson Looks like tests failed?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430038245
https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430078756:6,Availability,failure,failures,6,"bleh, failures with 401 unauthorized.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430078756
https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430319851:93,Security,encrypt,encrypt,93,"I'm not sure what went wrong exactly, I might have messed up something when I did the travis encrypt command. I've deleted the previous one, regenerated a new-new key, and reencrypted it. Hopefully this time it will work.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430319851
https://github.com/broadinstitute/gatk/issues/5310#issuecomment-430241723:31,Deployability,update,updates,31,@SusieX I'll comment here with updates.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5310#issuecomment-430241723
https://github.com/broadinstitute/gatk/issues/5310#issuecomment-433067987:51,Deployability,release,release,51,The changes to Mutect are included in the 4.0.11.0 release. A rough draft of the WDL is here: https://portal.firecloud.org/#methods/mt/MitochondrialCalling/8. When this is a complete pipeline (beyond the draft stage) there will be more information on the GATK forum.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5310#issuecomment-433067987
https://github.com/broadinstitute/gatk/issues/5310#issuecomment-433067987:183,Deployability,pipeline,pipeline,183,The changes to Mutect are included in the 4.0.11.0 release. A rough draft of the WDL is here: https://portal.firecloud.org/#methods/mt/MitochondrialCalling/8. When this is a complete pipeline (beyond the draft stage) there will be more information on the GATK forum.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5310#issuecomment-433067987
https://github.com/broadinstitute/gatk/pull/5311#issuecomment-430318188:1546,Availability,down,downsampling,1546,=====================================; Files 1909 1914 +5 ; Lines 144202 144264 +62 ; Branches 15954 15956 +2 ; ===============================================; + Hits 125433 125492 +59 ; - Misses 12999 13003 +4 ; + Partials 5770 5769 -1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5311?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ellbender/utils/iterators/PushPullTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pdGVyYXRvcnMvUHVzaFB1bGxUcmFuc2Zvcm1lci5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...ls/variant/writers/GVCFBlockCombiningIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L3dyaXRlcnMvR1ZDRkJsb2NrQ29tYmluaW5nSXRlcmF0b3IuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...ute/hellbender/utils/downsampling/Downsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvRG93bnNhbXBsZXIuamF2YQ==) | `100% <100%> (ø)` | `6 <1> (ø)` | :arrow_down: |; | [...hellbender/utils/iterators/PushToPullIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pdGVyYXRvcnMvUHVzaFRvUHVsbEl0ZXJhdG9yLmphdmE=) | `100% <100%> (ø)` | `17 <17> (?)` | |; | [.../utils/downsampling/ReadsDownsamplingIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVhZHNEb3duc2FtcGxpbmdJdGVyYXRvci5qYXZh) | `100% <100%> (ø)` | `1 <1> (-16)` | :arrow_down: |; | [...e/hellbender/utils/variant/writers/GVCFWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-430318188
https://github.com/broadinstitute/gatk/pull/5311#issuecomment-430318188:1559,Availability,Down,Downsampler,1559,=====================================; Files 1909 1914 +5 ; Lines 144202 144264 +62 ; Branches 15954 15956 +2 ; ===============================================; + Hits 125433 125492 +59 ; - Misses 12999 13003 +4 ; + Partials 5770 5769 -1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5311?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ellbender/utils/iterators/PushPullTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pdGVyYXRvcnMvUHVzaFB1bGxUcmFuc2Zvcm1lci5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...ls/variant/writers/GVCFBlockCombiningIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L3dyaXRlcnMvR1ZDRkJsb2NrQ29tYmluaW5nSXRlcmF0b3IuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...ute/hellbender/utils/downsampling/Downsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvRG93bnNhbXBsZXIuamF2YQ==) | `100% <100%> (ø)` | `6 <1> (ø)` | :arrow_down: |; | [...hellbender/utils/iterators/PushToPullIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pdGVyYXRvcnMvUHVzaFRvUHVsbEl0ZXJhdG9yLmphdmE=) | `100% <100%> (ø)` | `17 <17> (?)` | |; | [.../utils/downsampling/ReadsDownsamplingIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVhZHNEb3duc2FtcGxpbmdJdGVyYXRvci5qYXZh) | `100% <100%> (ø)` | `1 <1> (-16)` | :arrow_down: |; | [...e/hellbender/utils/variant/writers/GVCFWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-430318188
https://github.com/broadinstitute/gatk/pull/5311#issuecomment-430318188:2119,Availability,down,downsampling,2119,GVyYXRvcnMvUHVzaFB1bGxUcmFuc2Zvcm1lci5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...ls/variant/writers/GVCFBlockCombiningIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L3dyaXRlcnMvR1ZDRkJsb2NrQ29tYmluaW5nSXRlcmF0b3IuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...ute/hellbender/utils/downsampling/Downsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvRG93bnNhbXBsZXIuamF2YQ==) | `100% <100%> (ø)` | `6 <1> (ø)` | :arrow_down: |; | [...hellbender/utils/iterators/PushToPullIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pdGVyYXRvcnMvUHVzaFRvUHVsbEl0ZXJhdG9yLmphdmE=) | `100% <100%> (ø)` | `17 <17> (?)` | |; | [.../utils/downsampling/ReadsDownsamplingIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVhZHNEb3duc2FtcGxpbmdJdGVyYXRvci5qYXZh) | `100% <100%> (ø)` | `1 <1> (-16)` | :arrow_down: |; | [...e/hellbender/utils/variant/writers/GVCFWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L3dyaXRlcnMvR1ZDRldyaXRlci5qYXZh) | `100% <100%> (+6.667%)` | `8 <6> (-26)` | :arrow_down: |; | [...nder/utils/variant/writers/GVCFWriterUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5311/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L3dyaXRlcnMvR1ZDRldyaXRlclVuaXRUZXN0LmphdmE=) | `96.796% <80%> (+0.007%)` | `48 <1> (ø)` | :arrow_down: |; | [...ender/utils/variant/writers/GVCFBlockCombiner.java](https://codecov.io/gh/broadinstit,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-430318188
https://github.com/broadinstitute/gatk/pull/5311#issuecomment-439260444:324,Testability,test,tests,324,"@tomwhite Apologies for not getting around to this one before leaving, but rather than keep it blocked while I'm away I'm re-assigning to @cmnbroad, who I'm sure can give you a speedy review. ; My main comment from glancing at the code is that the new `PushPullTransformer` and `PushToPullIterator` classes lack direct unit tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-439260444
https://github.com/broadinstitute/gatk/pull/5311#issuecomment-440308460:73,Testability,test,tests,73,@droazen @cmnbroad thanks for taking a look. I've added some direct unit tests for `PushPullTransformer` and `PushToPullIterator`.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-440308460
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517:172,Deployability,integrat,integrate,172,"@davidbenjamin LODs are fixed, but I'm not super happy with them. They fluctuate a lot, making for a big GVCF. How easy would it be to modify the likelihood calculation to integrate over all AFs greater than some threshold of interest? I'm hoping that would produce more stability. Just to give you an idea of the fluctuation, below are some lines from my integration test VCF where I block anything less than -2 and between -2 and 0. I tried a few other thresholds, but it's just a lot of variability. I have a hunch it has to do with the minimum base quality in the pileup. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT NA12878; chrM 1 . G <NON_REF> . . END=4 GT:DP:MIN_DP:TLOD 0/0:67:48:-1.958e+00; chrM 5 . A <NON_REF> . . END=5 GT:DP:MIN_DP:TLOD 0/0:107:107:-2.033e+00; chrM 6 . C <NON_REF> . . END=6 GT:DP:MIN_DP:TLOD 0/0:123:123:-1.603e+00; chrM 7 . A <NON_REF> . . END=8 GT:DP:MIN_DP:TLOD 0/0:135:135:-2.138e+00; chrM 9 . G <NON_REF> . . END=9 GT:DP:MIN_DP:TLOD 0/0:138:138:-1.975e+00; chrM 10 . T <NON_REF> . . END=13 GT:DP:MIN_DP:TLOD 0/0:178:154:-2.226e+00; chrM 14 . T <NON_REF> . . END=15 GT:DP:MIN_DP:TLOD 0/0:208:205:-1.974e+00; chrM 16 . A <NON_REF> . . END=23 GT:DP:MIN_DP:TLOD 0/0:259:218:-2.424e+00; chrM 24 . A <NON_REF> . . END=25 GT:DP:MIN_DP:TLOD 0/0:312:310:-8.945e-01; chrM 26 . C <NON_REF> . . END=26 GT:DP:MIN_DP:TLOD 0/0:317:317:-2.509e+00; chrM 27 . C <NON_REF> . . END=27 GT:DP:MIN_DP:TLOD 0/0:335:335:-1.962e+00; chrM 28 . A <NON_REF> . . END=50 GT:DP:MIN_DP:TLOD 0/0:492:343:-2.821e+00; chrM 51 . T <NON_REF> . . END=51 GT:DP:MIN_DP:TLOD 0/0:700:700:-3.808e-01; chrM 52 . T <NON_REF> . . END=63 GT:DP:MIN_DP:TLOD 0/0:822:722:-2.943e+00; chrM 64 . C <NON_REF> . . END=64 GT:DP:MIN_DP:TLOD 0/0:909:909:-1.492e+00; chrM 65 . T <NON_REF> . . END=86 GT:DP:MIN_DP:TLOD 0/0:1064:938:-3.065e+00; chrM 87 . A C,<NON_REF> . . DP=942;ECNT=8;POP_AF=5.000e-08,5.000e-08;TLOD=-2.463e+00,-2.668e+00 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_PO",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517:356,Deployability,integrat,integration,356,"@davidbenjamin LODs are fixed, but I'm not super happy with them. They fluctuate a lot, making for a big GVCF. How easy would it be to modify the likelihood calculation to integrate over all AFs greater than some threshold of interest? I'm hoping that would produce more stability. Just to give you an idea of the fluctuation, below are some lines from my integration test VCF where I block anything less than -2 and between -2 and 0. I tried a few other thresholds, but it's just a lot of variability. I have a hunch it has to do with the minimum base quality in the pileup. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT NA12878; chrM 1 . G <NON_REF> . . END=4 GT:DP:MIN_DP:TLOD 0/0:67:48:-1.958e+00; chrM 5 . A <NON_REF> . . END=5 GT:DP:MIN_DP:TLOD 0/0:107:107:-2.033e+00; chrM 6 . C <NON_REF> . . END=6 GT:DP:MIN_DP:TLOD 0/0:123:123:-1.603e+00; chrM 7 . A <NON_REF> . . END=8 GT:DP:MIN_DP:TLOD 0/0:135:135:-2.138e+00; chrM 9 . G <NON_REF> . . END=9 GT:DP:MIN_DP:TLOD 0/0:138:138:-1.975e+00; chrM 10 . T <NON_REF> . . END=13 GT:DP:MIN_DP:TLOD 0/0:178:154:-2.226e+00; chrM 14 . T <NON_REF> . . END=15 GT:DP:MIN_DP:TLOD 0/0:208:205:-1.974e+00; chrM 16 . A <NON_REF> . . END=23 GT:DP:MIN_DP:TLOD 0/0:259:218:-2.424e+00; chrM 24 . A <NON_REF> . . END=25 GT:DP:MIN_DP:TLOD 0/0:312:310:-8.945e-01; chrM 26 . C <NON_REF> . . END=26 GT:DP:MIN_DP:TLOD 0/0:317:317:-2.509e+00; chrM 27 . C <NON_REF> . . END=27 GT:DP:MIN_DP:TLOD 0/0:335:335:-1.962e+00; chrM 28 . A <NON_REF> . . END=50 GT:DP:MIN_DP:TLOD 0/0:492:343:-2.821e+00; chrM 51 . T <NON_REF> . . END=51 GT:DP:MIN_DP:TLOD 0/0:700:700:-3.808e-01; chrM 52 . T <NON_REF> . . END=63 GT:DP:MIN_DP:TLOD 0/0:822:722:-2.943e+00; chrM 64 . C <NON_REF> . . END=64 GT:DP:MIN_DP:TLOD 0/0:909:909:-1.492e+00; chrM 65 . T <NON_REF> . . END=86 GT:DP:MIN_DP:TLOD 0/0:1064:938:-3.065e+00; chrM 87 . A C,<NON_REF> . . DP=942;ECNT=8;POP_AF=5.000e-08,5.000e-08;TLOD=-2.463e+00,-2.668e+00 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_PO",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517:172,Integrability,integrat,integrate,172,"@davidbenjamin LODs are fixed, but I'm not super happy with them. They fluctuate a lot, making for a big GVCF. How easy would it be to modify the likelihood calculation to integrate over all AFs greater than some threshold of interest? I'm hoping that would produce more stability. Just to give you an idea of the fluctuation, below are some lines from my integration test VCF where I block anything less than -2 and between -2 and 0. I tried a few other thresholds, but it's just a lot of variability. I have a hunch it has to do with the minimum base quality in the pileup. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT NA12878; chrM 1 . G <NON_REF> . . END=4 GT:DP:MIN_DP:TLOD 0/0:67:48:-1.958e+00; chrM 5 . A <NON_REF> . . END=5 GT:DP:MIN_DP:TLOD 0/0:107:107:-2.033e+00; chrM 6 . C <NON_REF> . . END=6 GT:DP:MIN_DP:TLOD 0/0:123:123:-1.603e+00; chrM 7 . A <NON_REF> . . END=8 GT:DP:MIN_DP:TLOD 0/0:135:135:-2.138e+00; chrM 9 . G <NON_REF> . . END=9 GT:DP:MIN_DP:TLOD 0/0:138:138:-1.975e+00; chrM 10 . T <NON_REF> . . END=13 GT:DP:MIN_DP:TLOD 0/0:178:154:-2.226e+00; chrM 14 . T <NON_REF> . . END=15 GT:DP:MIN_DP:TLOD 0/0:208:205:-1.974e+00; chrM 16 . A <NON_REF> . . END=23 GT:DP:MIN_DP:TLOD 0/0:259:218:-2.424e+00; chrM 24 . A <NON_REF> . . END=25 GT:DP:MIN_DP:TLOD 0/0:312:310:-8.945e-01; chrM 26 . C <NON_REF> . . END=26 GT:DP:MIN_DP:TLOD 0/0:317:317:-2.509e+00; chrM 27 . C <NON_REF> . . END=27 GT:DP:MIN_DP:TLOD 0/0:335:335:-1.962e+00; chrM 28 . A <NON_REF> . . END=50 GT:DP:MIN_DP:TLOD 0/0:492:343:-2.821e+00; chrM 51 . T <NON_REF> . . END=51 GT:DP:MIN_DP:TLOD 0/0:700:700:-3.808e-01; chrM 52 . T <NON_REF> . . END=63 GT:DP:MIN_DP:TLOD 0/0:822:722:-2.943e+00; chrM 64 . C <NON_REF> . . END=64 GT:DP:MIN_DP:TLOD 0/0:909:909:-1.492e+00; chrM 65 . T <NON_REF> . . END=86 GT:DP:MIN_DP:TLOD 0/0:1064:938:-3.065e+00; chrM 87 . A C,<NON_REF> . . DP=942;ECNT=8;POP_AF=5.000e-08,5.000e-08;TLOD=-2.463e+00,-2.668e+00 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_PO",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517:356,Integrability,integrat,integration,356,"@davidbenjamin LODs are fixed, but I'm not super happy with them. They fluctuate a lot, making for a big GVCF. How easy would it be to modify the likelihood calculation to integrate over all AFs greater than some threshold of interest? I'm hoping that would produce more stability. Just to give you an idea of the fluctuation, below are some lines from my integration test VCF where I block anything less than -2 and between -2 and 0. I tried a few other thresholds, but it's just a lot of variability. I have a hunch it has to do with the minimum base quality in the pileup. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT NA12878; chrM 1 . G <NON_REF> . . END=4 GT:DP:MIN_DP:TLOD 0/0:67:48:-1.958e+00; chrM 5 . A <NON_REF> . . END=5 GT:DP:MIN_DP:TLOD 0/0:107:107:-2.033e+00; chrM 6 . C <NON_REF> . . END=6 GT:DP:MIN_DP:TLOD 0/0:123:123:-1.603e+00; chrM 7 . A <NON_REF> . . END=8 GT:DP:MIN_DP:TLOD 0/0:135:135:-2.138e+00; chrM 9 . G <NON_REF> . . END=9 GT:DP:MIN_DP:TLOD 0/0:138:138:-1.975e+00; chrM 10 . T <NON_REF> . . END=13 GT:DP:MIN_DP:TLOD 0/0:178:154:-2.226e+00; chrM 14 . T <NON_REF> . . END=15 GT:DP:MIN_DP:TLOD 0/0:208:205:-1.974e+00; chrM 16 . A <NON_REF> . . END=23 GT:DP:MIN_DP:TLOD 0/0:259:218:-2.424e+00; chrM 24 . A <NON_REF> . . END=25 GT:DP:MIN_DP:TLOD 0/0:312:310:-8.945e-01; chrM 26 . C <NON_REF> . . END=26 GT:DP:MIN_DP:TLOD 0/0:317:317:-2.509e+00; chrM 27 . C <NON_REF> . . END=27 GT:DP:MIN_DP:TLOD 0/0:335:335:-1.962e+00; chrM 28 . A <NON_REF> . . END=50 GT:DP:MIN_DP:TLOD 0/0:492:343:-2.821e+00; chrM 51 . T <NON_REF> . . END=51 GT:DP:MIN_DP:TLOD 0/0:700:700:-3.808e-01; chrM 52 . T <NON_REF> . . END=63 GT:DP:MIN_DP:TLOD 0/0:822:722:-2.943e+00; chrM 64 . C <NON_REF> . . END=64 GT:DP:MIN_DP:TLOD 0/0:909:909:-1.492e+00; chrM 65 . T <NON_REF> . . END=86 GT:DP:MIN_DP:TLOD 0/0:1064:938:-3.065e+00; chrM 87 . A C,<NON_REF> . . DP=942;ECNT=8;POP_AF=5.000e-08,5.000e-08;TLOD=-2.463e+00,-2.668e+00 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_PO",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517:490,Modifiability,variab,variability,490,"@davidbenjamin LODs are fixed, but I'm not super happy with them. They fluctuate a lot, making for a big GVCF. How easy would it be to modify the likelihood calculation to integrate over all AFs greater than some threshold of interest? I'm hoping that would produce more stability. Just to give you an idea of the fluctuation, below are some lines from my integration test VCF where I block anything less than -2 and between -2 and 0. I tried a few other thresholds, but it's just a lot of variability. I have a hunch it has to do with the minimum base quality in the pileup. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT NA12878; chrM 1 . G <NON_REF> . . END=4 GT:DP:MIN_DP:TLOD 0/0:67:48:-1.958e+00; chrM 5 . A <NON_REF> . . END=5 GT:DP:MIN_DP:TLOD 0/0:107:107:-2.033e+00; chrM 6 . C <NON_REF> . . END=6 GT:DP:MIN_DP:TLOD 0/0:123:123:-1.603e+00; chrM 7 . A <NON_REF> . . END=8 GT:DP:MIN_DP:TLOD 0/0:135:135:-2.138e+00; chrM 9 . G <NON_REF> . . END=9 GT:DP:MIN_DP:TLOD 0/0:138:138:-1.975e+00; chrM 10 . T <NON_REF> . . END=13 GT:DP:MIN_DP:TLOD 0/0:178:154:-2.226e+00; chrM 14 . T <NON_REF> . . END=15 GT:DP:MIN_DP:TLOD 0/0:208:205:-1.974e+00; chrM 16 . A <NON_REF> . . END=23 GT:DP:MIN_DP:TLOD 0/0:259:218:-2.424e+00; chrM 24 . A <NON_REF> . . END=25 GT:DP:MIN_DP:TLOD 0/0:312:310:-8.945e-01; chrM 26 . C <NON_REF> . . END=26 GT:DP:MIN_DP:TLOD 0/0:317:317:-2.509e+00; chrM 27 . C <NON_REF> . . END=27 GT:DP:MIN_DP:TLOD 0/0:335:335:-1.962e+00; chrM 28 . A <NON_REF> . . END=50 GT:DP:MIN_DP:TLOD 0/0:492:343:-2.821e+00; chrM 51 . T <NON_REF> . . END=51 GT:DP:MIN_DP:TLOD 0/0:700:700:-3.808e-01; chrM 52 . T <NON_REF> . . END=63 GT:DP:MIN_DP:TLOD 0/0:822:722:-2.943e+00; chrM 64 . C <NON_REF> . . END=64 GT:DP:MIN_DP:TLOD 0/0:909:909:-1.492e+00; chrM 65 . T <NON_REF> . . END=86 GT:DP:MIN_DP:TLOD 0/0:1064:938:-3.065e+00; chrM 87 . A C,<NON_REF> . . DP=942;ECNT=8;POP_AF=5.000e-08,5.000e-08;TLOD=-2.463e+00,-2.668e+00 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_PO",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517:368,Testability,test,test,368,"@davidbenjamin LODs are fixed, but I'm not super happy with them. They fluctuate a lot, making for a big GVCF. How easy would it be to modify the likelihood calculation to integrate over all AFs greater than some threshold of interest? I'm hoping that would produce more stability. Just to give you an idea of the fluctuation, below are some lines from my integration test VCF where I block anything less than -2 and between -2 and 0. I tried a few other thresholds, but it's just a lot of variability. I have a hunch it has to do with the minimum base quality in the pileup. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT NA12878; chrM 1 . G <NON_REF> . . END=4 GT:DP:MIN_DP:TLOD 0/0:67:48:-1.958e+00; chrM 5 . A <NON_REF> . . END=5 GT:DP:MIN_DP:TLOD 0/0:107:107:-2.033e+00; chrM 6 . C <NON_REF> . . END=6 GT:DP:MIN_DP:TLOD 0/0:123:123:-1.603e+00; chrM 7 . A <NON_REF> . . END=8 GT:DP:MIN_DP:TLOD 0/0:135:135:-2.138e+00; chrM 9 . G <NON_REF> . . END=9 GT:DP:MIN_DP:TLOD 0/0:138:138:-1.975e+00; chrM 10 . T <NON_REF> . . END=13 GT:DP:MIN_DP:TLOD 0/0:178:154:-2.226e+00; chrM 14 . T <NON_REF> . . END=15 GT:DP:MIN_DP:TLOD 0/0:208:205:-1.974e+00; chrM 16 . A <NON_REF> . . END=23 GT:DP:MIN_DP:TLOD 0/0:259:218:-2.424e+00; chrM 24 . A <NON_REF> . . END=25 GT:DP:MIN_DP:TLOD 0/0:312:310:-8.945e-01; chrM 26 . C <NON_REF> . . END=26 GT:DP:MIN_DP:TLOD 0/0:317:317:-2.509e+00; chrM 27 . C <NON_REF> . . END=27 GT:DP:MIN_DP:TLOD 0/0:335:335:-1.962e+00; chrM 28 . A <NON_REF> . . END=50 GT:DP:MIN_DP:TLOD 0/0:492:343:-2.821e+00; chrM 51 . T <NON_REF> . . END=51 GT:DP:MIN_DP:TLOD 0/0:700:700:-3.808e-01; chrM 52 . T <NON_REF> . . END=63 GT:DP:MIN_DP:TLOD 0/0:822:722:-2.943e+00; chrM 64 . C <NON_REF> . . END=64 GT:DP:MIN_DP:TLOD 0/0:909:909:-1.492e+00; chrM 65 . T <NON_REF> . . END=86 GT:DP:MIN_DP:TLOD 0/0:1064:938:-3.065e+00; chrM 87 . A C,<NON_REF> . . DP=942;ECNT=8;POP_AF=5.000e-08,5.000e-08;TLOD=-2.463e+00,-2.668e+00 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_PO",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448737667:82,Deployability,integrat,integration,82,"For the record, I'm not thrilled with what the dynamic pruning has done to the MT integration test output compared to the old --min-pruning 5 argument, but for some reason the coverage in that bam ramps up pretty slowly, so it's not representative of our WGS data. But I'd like to see some more analysis of the dynamic pruning for exomes before this goes into our exome pipeline in the future.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448737667
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448737667:370,Deployability,pipeline,pipeline,370,"For the record, I'm not thrilled with what the dynamic pruning has done to the MT integration test output compared to the old --min-pruning 5 argument, but for some reason the coverage in that bam ramps up pretty slowly, so it's not representative of our WGS data. But I'd like to see some more analysis of the dynamic pruning for exomes before this goes into our exome pipeline in the future.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448737667
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448737667:82,Integrability,integrat,integration,82,"For the record, I'm not thrilled with what the dynamic pruning has done to the MT integration test output compared to the old --min-pruning 5 argument, but for some reason the coverage in that bam ramps up pretty slowly, so it's not representative of our WGS data. But I'd like to see some more analysis of the dynamic pruning for exomes before this goes into our exome pipeline in the future.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448737667
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448737667:94,Testability,test,test,94,"For the record, I'm not thrilled with what the dynamic pruning has done to the MT integration test output compared to the old --min-pruning 5 argument, but for some reason the coverage in that bam ramps up pretty slowly, so it's not representative of our WGS data. But I'd like to see some more analysis of the dynamic pruning for exomes before this goes into our exome pipeline in the future.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448737667
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448740689:107,Deployability,pipeline,pipeline,107,> But I'd like to see some more analysis of the dynamic pruning for exomes before this goes into our exome pipeline in the future. @ldgauthier Do you mean somatic exomes or mitochondrial reads from germline exomes?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-448740689
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402:124,Deployability,integrat,integration,124,"@davidbenjamin I added the AF thresholding and limited it to just the NON_REF allele. There's a mildly awkward check in the integration test for it. If you can formulate an elegant unit test that makes for nice round numbers I'm happy to add it, but that's beyond me. I lost the new Twist exome, but once I can get ahold of it I'll make a GVCF and see what happens.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402:124,Integrability,integrat,integration,124,"@davidbenjamin I added the AF thresholding and limited it to just the NON_REF allele. There's a mildly awkward check in the integration test for it. If you can formulate an elegant unit test that makes for nice round numbers I'm happy to add it, but that's beyond me. I lost the new Twist exome, but once I can get ahold of it I'll make a GVCF and see what happens.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402:136,Testability,test,test,136,"@davidbenjamin I added the AF thresholding and limited it to just the NON_REF allele. There's a mildly awkward check in the integration test for it. If you can formulate an elegant unit test that makes for nice round numbers I'm happy to add it, but that's beyond me. I lost the new Twist exome, but once I can get ahold of it I'll make a GVCF and see what happens.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402:186,Testability,test,test,186,"@davidbenjamin I added the AF thresholding and limited it to just the NON_REF allele. There's a mildly awkward check in the integration test for it. If you can formulate an elegant unit test that makes for nice round numbers I'm happy to add it, but that's beyond me. I lost the new Twist exome, but once I can get ahold of it I'll make a GVCF and see what happens.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286:265,Availability,down,down,265,"@davidbenjamin ready for re-review. I'm going to do a little performance benchmarking in the meantime. It takes ~40min to call the whole contig for my 4000X bams, which isn't terrible, but it isn't great. Anecdotally it seems like the AF thresholding slowed things down, but I'll collect some numbers.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286:61,Performance,perform,performance,61,"@davidbenjamin ready for re-review. I'm going to do a little performance benchmarking in the meantime. It takes ~40min to call the whole contig for my 4000X bams, which isn't terrible, but it isn't great. Anecdotally it seems like the AF thresholding slowed things down, but I'll collect some numbers.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286:73,Testability,benchmark,benchmarking,73,"@davidbenjamin ready for re-review. I'm going to do a little performance benchmarking in the meantime. It takes ~40min to call the whole contig for my 4000X bams, which isn't terrible, but it isn't great. Anecdotally it seems like the AF thresholding slowed things down, but I'll collect some numbers.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449499104:35,Performance,optimiz,optimize,35,"I wouldn't be surprised if I could optimize the implementation of the likelihoods model quite a bit. Just having a slightly looser threshold for convergence, for example.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449499104
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-451466938:112,Deployability,pipeline,pipeline,112,"I'll open a ticket for ref conf performance optimization, but I'm keen to get a ""draft"" of the MT joint calling pipeline into 4.1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-451466938
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-451466938:32,Performance,perform,performance,32,"I'll open a ticket for ref conf performance optimization, but I'm keen to get a ""draft"" of the MT joint calling pipeline into 4.1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-451466938
https://github.com/broadinstitute/gatk/pull/5312#issuecomment-451466938:44,Performance,optimiz,optimization,44,"I'll open a ticket for ref conf performance optimization, but I'm keen to get a ""draft"" of the MT joint calling pipeline into 4.1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-451466938
https://github.com/broadinstitute/gatk/issues/5313#issuecomment-430715540:209,Testability,test,tests,209,"`Funcotator` has some separate reference snippets in it, most of which can be removed now. They're in `FuncotatorTestConstants`. As a warning, some of these might not be replaceable and may be used from other tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5313#issuecomment-430715540
https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041:137,Deployability,integrat,integration,137,@droazen After wrangling with this for a few hours I couldn't quite even get rid of the chr20-21 b37 mini references. There are too many integration tests of deep parts of the engine that I don't feel comfortable messing with. I'm throwing in the towel.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041
https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041:137,Integrability,integrat,integration,137,@droazen After wrangling with this for a few hours I couldn't quite even get rid of the chr20-21 b37 mini references. There are too many integration tests of deep parts of the engine that I don't feel comfortable messing with. I'm throwing in the towel.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041
https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041:149,Testability,test,tests,149,@droazen After wrangling with this for a few hours I couldn't quite even get rid of the chr20-21 b37 mini references. There are too many integration tests of deep parts of the engine that I don't feel comfortable messing with. I'm throwing in the towel.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041
https://github.com/broadinstitute/gatk/issues/5314#issuecomment-430689684:149,Deployability,pipeline,pipelines,149,"This isn't high priority for us right now, but I would be happy to review a PR if you wanted to take a stab at a solution @nh13 . None of our formal pipelines use the PID or PGT tags (unless Funcotator does something @jonn-smith ?) so a switch to PS wouldn't be a breaking change for us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5314#issuecomment-430689684
https://github.com/broadinstitute/gatk/issues/5314#issuecomment-468854875:91,Deployability,release,released,91,Just FYI to @ldgauthier that I think this issue can be closed now that #5318 is merged and released.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5314#issuecomment-468854875
https://github.com/broadinstitute/gatk/issues/5315#issuecomment-430706675:133,Testability,test,tested,133,"It usually works but it's not really supported and as you've discovered there's a bug with colons (and possibly other bugs, it's not tested that way). The gatk accepts special modifiers to some arguments that are separated with colons and something about the parsing gets messed up when you have the equals sign in there as well. The recommendation is to not use them at all. Picard is going to migrate to the non-equal sign form of arguments in the near future as well so it should be less confusing to switch between them then.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5315#issuecomment-430706675
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-431838348:81,Testability,test,tested,81,When we switch to Disq for reading BAM and VCF this should go away since we have tested that all streams are closed properly for that library. See #5138.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-431838348
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:117,Availability,error,error,117,"I'm seeing this type of problem with GATK 4.1.2 for a massive WGS sample (> 2 Billion reads); Note that although the error log below says exome, this is a genome sample. I tried raising the ulimit to the same number this other user tried, but I still can get through BaseRecalibratorSpark. I've been trying for awhile to push this data through MarkDuplicatesSpark and finally gave up and switched back to the Picard MarkDuplicates. But even though I got through Picard MarkDuplicates I'm having problems with BaseRecalibratorSpark. I'm running in local mode with 250gb of memory and 128 cores available. . Is there something else for Spark that I can modify to prevent so many tasks getting created in stage 0.0? I'm running on a shared computing system, so it's quite possible that I can't change the ulimit number of open files. I am able to set ulimit -s unlimited, but I might not be able to set ulimit -n beyond a particular threshold on this system. I'll continue to explore the ulimit setting but I'd like to know if there's something else I could try instead. The relevant portion of the error logs are below... 20/01/05 17:43:23 INFO TaskSetManager: Starting task 4991.0 in stage 0.0 (TID 49; 91, localhost, executor driver, partition 4991, PROCESS_LOCAL, 4959 bytes); 20/01/05 17:43:23 INFO Executor: Running task 4991.0 in stage 0.0 (TID 4991); 20/01/05 17:43:23 INFO TaskSetManager: Finished task 4843.0 in stage 0.0 (TID 48; 43) in 74817 ms on localhost (executor driver) (4864/5114); 20/01/05 17:43:23 ERROR Executor: Exception in task 4876.0 in stage 0.0 (TID 487; 6); org.broadinstitute.hellbender.exceptions.UserException$NoSuitableCodecs: Cannot ; read file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b7; 2d4821-5e36-4d36-aa79-aa6263768669/dbsnp_138.hg19.vcf because no suitable codecs; found; at org.broadinstitute.hellbender.engine.FeatureManager.getCodecForFile(F; eatureManager.java:468); at org.broadinstitute.hellbender.engine.FeatureDataSource.getCode",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:593,Availability,avail,available,593,"I'm seeing this type of problem with GATK 4.1.2 for a massive WGS sample (> 2 Billion reads); Note that although the error log below says exome, this is a genome sample. I tried raising the ulimit to the same number this other user tried, but I still can get through BaseRecalibratorSpark. I've been trying for awhile to push this data through MarkDuplicatesSpark and finally gave up and switched back to the Picard MarkDuplicates. But even though I got through Picard MarkDuplicates I'm having problems with BaseRecalibratorSpark. I'm running in local mode with 250gb of memory and 128 cores available. . Is there something else for Spark that I can modify to prevent so many tasks getting created in stage 0.0? I'm running on a shared computing system, so it's quite possible that I can't change the ulimit number of open files. I am able to set ulimit -s unlimited, but I might not be able to set ulimit -n beyond a particular threshold on this system. I'll continue to explore the ulimit setting but I'd like to know if there's something else I could try instead. The relevant portion of the error logs are below... 20/01/05 17:43:23 INFO TaskSetManager: Starting task 4991.0 in stage 0.0 (TID 49; 91, localhost, executor driver, partition 4991, PROCESS_LOCAL, 4959 bytes); 20/01/05 17:43:23 INFO Executor: Running task 4991.0 in stage 0.0 (TID 4991); 20/01/05 17:43:23 INFO TaskSetManager: Finished task 4843.0 in stage 0.0 (TID 48; 43) in 74817 ms on localhost (executor driver) (4864/5114); 20/01/05 17:43:23 ERROR Executor: Exception in task 4876.0 in stage 0.0 (TID 487; 6); org.broadinstitute.hellbender.exceptions.UserException$NoSuitableCodecs: Cannot ; read file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b7; 2d4821-5e36-4d36-aa79-aa6263768669/dbsnp_138.hg19.vcf because no suitable codecs; found; at org.broadinstitute.hellbender.engine.FeatureManager.getCodecForFile(F; eatureManager.java:468); at org.broadinstitute.hellbender.engine.FeatureDataSource.getCode",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:1096,Availability,error,error,1096,"; Note that although the error log below says exome, this is a genome sample. I tried raising the ulimit to the same number this other user tried, but I still can get through BaseRecalibratorSpark. I've been trying for awhile to push this data through MarkDuplicatesSpark and finally gave up and switched back to the Picard MarkDuplicates. But even though I got through Picard MarkDuplicates I'm having problems with BaseRecalibratorSpark. I'm running in local mode with 250gb of memory and 128 cores available. . Is there something else for Spark that I can modify to prevent so many tasks getting created in stage 0.0? I'm running on a shared computing system, so it's quite possible that I can't change the ulimit number of open files. I am able to set ulimit -s unlimited, but I might not be able to set ulimit -n beyond a particular threshold on this system. I'll continue to explore the ulimit setting but I'd like to know if there's something else I could try instead. The relevant portion of the error logs are below... 20/01/05 17:43:23 INFO TaskSetManager: Starting task 4991.0 in stage 0.0 (TID 49; 91, localhost, executor driver, partition 4991, PROCESS_LOCAL, 4959 bytes); 20/01/05 17:43:23 INFO Executor: Running task 4991.0 in stage 0.0 (TID 4991); 20/01/05 17:43:23 INFO TaskSetManager: Finished task 4843.0 in stage 0.0 (TID 48; 43) in 74817 ms on localhost (executor driver) (4864/5114); 20/01/05 17:43:23 ERROR Executor: Exception in task 4876.0 in stage 0.0 (TID 487; 6); org.broadinstitute.hellbender.exceptions.UserException$NoSuitableCodecs: Cannot ; read file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b7; 2d4821-5e36-4d36-aa79-aa6263768669/dbsnp_138.hg19.vcf because no suitable codecs; found; at org.broadinstitute.hellbender.engine.FeatureManager.getCodecForFile(F; eatureManager.java:468); at org.broadinstitute.hellbender.engine.FeatureDataSource.getCodecForFea; tureInput(FeatureDataSource.java:324); at org.broadinstitute.hellbender.engine.Fea",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:1516,Availability,ERROR,ERROR,1516,"ing problems with BaseRecalibratorSpark. I'm running in local mode with 250gb of memory and 128 cores available. . Is there something else for Spark that I can modify to prevent so many tasks getting created in stage 0.0? I'm running on a shared computing system, so it's quite possible that I can't change the ulimit number of open files. I am able to set ulimit -s unlimited, but I might not be able to set ulimit -n beyond a particular threshold on this system. I'll continue to explore the ulimit setting but I'd like to know if there's something else I could try instead. The relevant portion of the error logs are below... 20/01/05 17:43:23 INFO TaskSetManager: Starting task 4991.0 in stage 0.0 (TID 49; 91, localhost, executor driver, partition 4991, PROCESS_LOCAL, 4959 bytes); 20/01/05 17:43:23 INFO Executor: Running task 4991.0 in stage 0.0 (TID 4991); 20/01/05 17:43:23 INFO TaskSetManager: Finished task 4843.0 in stage 0.0 (TID 48; 43) in 74817 ms on localhost (executor driver) (4864/5114); 20/01/05 17:43:23 ERROR Executor: Exception in task 4876.0 in stage 0.0 (TID 487; 6); org.broadinstitute.hellbender.exceptions.UserException$NoSuitableCodecs: Cannot ; read file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b7; 2d4821-5e36-4d36-aa79-aa6263768669/dbsnp_138.hg19.vcf because no suitable codecs; found; at org.broadinstitute.hellbender.engine.FeatureManager.getCodecForFile(F; eatureManager.java:468); at org.broadinstitute.hellbender.engine.FeatureDataSource.getCodecForFea; tureInput(FeatureDataSource.java:324); at org.broadinstitute.hellbender.engine.FeatureDataSource.getFeatureReader(FeatureDataSource.java:304); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:256); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:230); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:214); at org.broadinstitute.hellbender.utils.spark.JoinReadsWi",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:5396,Availability,ERROR,ERROR,5396,a:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); 17:43:23.161 INFO FeatureManager - Using codec VCFCodec to read file file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b72d4821-5e36-4d36-aa79-aa6263768669/1000G_phase1.indels.hg19.sites.vcf; 20/01/05 17:43:23 INFO NewHadoopRDD: Input split: file:/panfs/roc/groups/6/clinicalmdl/shared/wgs_exome_v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam:167436615680+33554432; 20/01/05 17:43:23 ERROR Executor: Exception in task 4990.0 in stage 0.0 (TID 4990); java.io.FileNotFoundException: /panfs/roc/groups/6/clinicalmdl/shared/v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam (Too many open files); at java.io.FileInputStream.open0(Native Method); at java.io.FileInputStream.open(FileInputStream.java:195); at java.io.FileInputStream.<init>(FileInputStream.java:138); at org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream.<init>(RawLocalFileSystem.java:110); at org.apache.hadoop.fs.RawLocalFileSystem.open(RawLocalFileSystem.java:214),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:3001,Energy Efficiency,Reduce,ReduceOps,3001,tureInput(FeatureDataSource.java:324); at org.broadinstitute.hellbender.engine.FeatureDataSource.getFeatureReader(FeatureDataSource.java:304); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:256); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:230); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:214); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.openFeatureSource(JoinReadsWithVariants.java:63); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.lambda$null$0(JoinReadsWithVariants.java:44); at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.lambda$join$60e5b476$1(JoinReadsWithVariants.java:44); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$7$1.apply(JavaRDDLike.scala:186); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$7$1.apply(JavaRDDLike.scala:186); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadChec,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:3011,Energy Efficiency,Reduce,ReduceOp,3011,tureInput(FeatureDataSource.java:324); at org.broadinstitute.hellbender.engine.FeatureDataSource.getFeatureReader(FeatureDataSource.java:304); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:256); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:230); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:214); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.openFeatureSource(JoinReadsWithVariants.java:63); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.lambda$null$0(JoinReadsWithVariants.java:44); at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.lambda$join$60e5b476$1(JoinReadsWithVariants.java:44); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$7$1.apply(JavaRDDLike.scala:186); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$7$1.apply(JavaRDDLike.scala:186); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadChec,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:3039,Energy Efficiency,Reduce,ReduceOps,3039,rce.java:324); at org.broadinstitute.hellbender.engine.FeatureDataSource.getFeatureReader(FeatureDataSource.java:304); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:256); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:230); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:214); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.openFeatureSource(JoinReadsWithVariants.java:63); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.lambda$null$0(JoinReadsWithVariants.java:44); at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.lambda$join$60e5b476$1(JoinReadsWithVariants.java:44); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$7$1.apply(JavaRDDLike.scala:186); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$7$1.apply(JavaRDDLike.scala:186); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); a,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:4502,Energy Efficiency,schedul,scheduler,4502, org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); 17:43:23.161 INFO FeatureManager - Using codec VCFCodec to read file file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b72d4821-5e36-4d36-aa79-aa6263768669/1000G_phase1.indels.hg19.sites.vcf; 20/01/05 17:43:23 INFO NewHadoopRDD: Input split: file:/panfs/roc/groups/6/clinicalmdl/shared/wgs_exome_v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam:167436615680+33554432; 20/01/05 17:43:23 ERROR Executor: Exception in task 4990.0 in stage 0.0 (TID 4990); java.io.FileNotFoundException: /panfs/roc/gro,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:4581,Energy Efficiency,schedul,scheduler,4581,scala:797); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); 17:43:23.161 INFO FeatureManager - Using codec VCFCodec to read file file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b72d4821-5e36-4d36-aa79-aa6263768669/1000G_phase1.indels.hg19.sites.vcf; 20/01/05 17:43:23 INFO NewHadoopRDD: Input split: file:/panfs/roc/groups/6/clinicalmdl/shared/wgs_exome_v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam:167436615680+33554432; 20/01/05 17:43:23 ERROR Executor: Exception in task 4990.0 in stage 0.0 (TID 4990); java.io.FileNotFoundException: /panfs/roc/groups/6/clinicalmdl/shared/v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.ba,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:4660,Energy Efficiency,schedul,scheduler,4660,$23.apply(RDD.scala:797); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); 17:43:23.161 INFO FeatureManager - Using codec VCFCodec to read file file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b72d4821-5e36-4d36-aa79-aa6263768669/1000G_phase1.indels.hg19.sites.vcf; 20/01/05 17:43:23 INFO NewHadoopRDD: Input split: file:/panfs/roc/groups/6/clinicalmdl/shared/wgs_exome_v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam:167436615680+33554432; 20/01/05 17:43:23 ERROR Executor: Exception in task 4990.0 in stage 0.0 (TID 4990); java.io.FileNotFoundException: /panfs/roc/groups/6/clinicalmdl/shared/v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam (Too many open files); at java.io.FileInputStream.open0(Native Method); at ja,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:2937,Integrability,wrap,wrapAndCopyInto,2937,tute.hellbender.engine.FeatureDataSource.getCodecForFea; tureInput(FeatureDataSource.java:324); at org.broadinstitute.hellbender.engine.FeatureDataSource.getFeatureReader(FeatureDataSource.java:304); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:256); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:230); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:214); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.openFeatureSource(JoinReadsWithVariants.java:63); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.lambda$null$0(JoinReadsWithVariants.java:44); at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.utils.spark.JoinReadsWithVariants.lambda$join$60e5b476$1(JoinReadsWithVariants.java:44); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$7$1.apply(JavaRDDLike.scala:186); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$7$1.apply(JavaRDDLike.scala:186); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:797); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:4783,Performance,concurren,concurrent,4783,rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); 17:43:23.161 INFO FeatureManager - Using codec VCFCodec to read file file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b72d4821-5e36-4d36-aa79-aa6263768669/1000G_phase1.indels.hg19.sites.vcf; 20/01/05 17:43:23 INFO NewHadoopRDD: Input split: file:/panfs/roc/groups/6/clinicalmdl/shared/wgs_exome_v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam:167436615680+33554432; 20/01/05 17:43:23 ERROR Executor: Exception in task 4990.0 in stage 0.0 (TID 4990); java.io.FileNotFoundException: /panfs/roc/groups/6/clinicalmdl/shared/v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam (Too many open files); at java.io.FileInputStream.open0(Native Method); at java.io.FileInputStream.open(FileInputStream.java:195); at java.io.FileInputStream.<init>(FileInputStream.java:138); at org.ap,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:4867,Performance,concurren,concurrent,4867,(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); 17:43:23.161 INFO FeatureManager - Using codec VCFCodec to read file file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b72d4821-5e36-4d36-aa79-aa6263768669/1000G_phase1.indels.hg19.sites.vcf; 20/01/05 17:43:23 INFO NewHadoopRDD: Input split: file:/panfs/roc/groups/6/clinicalmdl/shared/wgs_exome_v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam:167436615680+33554432; 20/01/05 17:43:23 ERROR Executor: Exception in task 4990.0 in stage 0.0 (TID 4990); java.io.FileNotFoundException: /panfs/roc/groups/6/clinicalmdl/shared/v1.0/projects/BT_WGS_Flex_S1/data/exome_dedup_reads.bam (Too many open files); at java.io.FileInputStream.open0(Native Method); at java.io.FileInputStream.open(FileInputStream.java:195); at java.io.FileInputStream.<init>(FileInputStream.java:138); at org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream.<init>(RawLocalFileSystem.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:123,Testability,log,log,123,"I'm seeing this type of problem with GATK 4.1.2 for a massive WGS sample (> 2 Billion reads); Note that although the error log below says exome, this is a genome sample. I tried raising the ulimit to the same number this other user tried, but I still can get through BaseRecalibratorSpark. I've been trying for awhile to push this data through MarkDuplicatesSpark and finally gave up and switched back to the Picard MarkDuplicates. But even though I got through Picard MarkDuplicates I'm having problems with BaseRecalibratorSpark. I'm running in local mode with 250gb of memory and 128 cores available. . Is there something else for Spark that I can modify to prevent so many tasks getting created in stage 0.0? I'm running on a shared computing system, so it's quite possible that I can't change the ulimit number of open files. I am able to set ulimit -s unlimited, but I might not be able to set ulimit -n beyond a particular threshold on this system. I'll continue to explore the ulimit setting but I'd like to know if there's something else I could try instead. The relevant portion of the error logs are below... 20/01/05 17:43:23 INFO TaskSetManager: Starting task 4991.0 in stage 0.0 (TID 49; 91, localhost, executor driver, partition 4991, PROCESS_LOCAL, 4959 bytes); 20/01/05 17:43:23 INFO Executor: Running task 4991.0 in stage 0.0 (TID 4991); 20/01/05 17:43:23 INFO TaskSetManager: Finished task 4843.0 in stage 0.0 (TID 48; 43) in 74817 ms on localhost (executor driver) (4864/5114); 20/01/05 17:43:23 ERROR Executor: Exception in task 4876.0 in stage 0.0 (TID 487; 6); org.broadinstitute.hellbender.exceptions.UserException$NoSuitableCodecs: Cannot ; read file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b7; 2d4821-5e36-4d36-aa79-aa6263768669/dbsnp_138.hg19.vcf because no suitable codecs; found; at org.broadinstitute.hellbender.engine.FeatureManager.getCodecForFile(F; eatureManager.java:468); at org.broadinstitute.hellbender.engine.FeatureDataSource.getCode",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855:1102,Testability,log,logs,1102,"; Note that although the error log below says exome, this is a genome sample. I tried raising the ulimit to the same number this other user tried, but I still can get through BaseRecalibratorSpark. I've been trying for awhile to push this data through MarkDuplicatesSpark and finally gave up and switched back to the Picard MarkDuplicates. But even though I got through Picard MarkDuplicates I'm having problems with BaseRecalibratorSpark. I'm running in local mode with 250gb of memory and 128 cores available. . Is there something else for Spark that I can modify to prevent so many tasks getting created in stage 0.0? I'm running on a shared computing system, so it's quite possible that I can't change the ulimit number of open files. I am able to set ulimit -s unlimited, but I might not be able to set ulimit -n beyond a particular threshold on this system. I'll continue to explore the ulimit setting but I'd like to know if there's something else I could try instead. The relevant portion of the error logs are below... 20/01/05 17:43:23 INFO TaskSetManager: Starting task 4991.0 in stage 0.0 (TID 49; 91, localhost, executor driver, partition 4991, PROCESS_LOCAL, 4959 bytes); 20/01/05 17:43:23 INFO Executor: Running task 4991.0 in stage 0.0 (TID 4991); 20/01/05 17:43:23 INFO TaskSetManager: Finished task 4843.0 in stage 0.0 (TID 48; 43) in 74817 ms on localhost (executor driver) (4864/5114); 20/01/05 17:43:23 ERROR Executor: Exception in task 4876.0 in stage 0.0 (TID 487; 6); org.broadinstitute.hellbender.exceptions.UserException$NoSuitableCodecs: Cannot ; read file:///scratch/tmp/spark-ecd63991-68be-4879-b481-68e6789a2004/userFiles-b7; 2d4821-5e36-4d36-aa79-aa6263768669/dbsnp_138.hg19.vcf because no suitable codecs; found; at org.broadinstitute.hellbender.engine.FeatureManager.getCodecForFile(F; eatureManager.java:468); at org.broadinstitute.hellbender.engine.FeatureDataSource.getCodecForFea; tureInput(FeatureDataSource.java:324); at org.broadinstitute.hellbender.engine.Fea",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-570992855
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:215,Availability,ERROR,ERROR,215,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:348,Availability,Error,Error,348,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:752,Availability,Error,Error,752,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:100,Deployability,pipeline,pipeline,100,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:90,Testability,test,testing,90,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:310,Testability,benchmark,benchmark,310,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:446,Testability,benchmark,benchmark,446,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:714,Testability,benchmark,benchmark,714,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:850,Testability,benchmark,benchmark,850,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:2441,Testability,benchmark,benchmark,2441,.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292); Caused by: htsjdk.samtools.SAMException: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at htsjdk.samtools.reference.FastaSequenceIndex.<init>(FastaSequenceIndex.java:74); at htsjdk.samtools.reference.IndexedFastaSequenceFile.<init>(IndexedFastaSequenceFile.java:98); at htsjdk.samtools.reference.ReferenceSequenceFileFactory.getReferenceSequenceFile(ReferenceSequenceFileFactory.java:139); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:134); ... 13 more; Caused by: java.nio.file.FileSystemException: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai: Too many open files; at sun.nio.fs.UnixException.translateToIOException(UnixException.java:103); at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:114); at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:119); at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:226); at java.nio.fi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:3021,Testability,benchmark,benchmark,3021,llbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292); Caused by: htsjdk.samtools.SAMException: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at htsjdk.samtools.reference.FastaSequenceIndex.<init>(FastaSequenceIndex.java:74); at htsjdk.samtools.reference.IndexedFastaSequenceFile.<init>(IndexedFastaSequenceFile.java:98); at htsjdk.samtools.reference.ReferenceSequenceFileFactory.getReferenceSequenceFile(ReferenceSequenceFileFactory.java:139); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:134); ... 13 more; Caused by: java.nio.file.FileSystemException: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai: Too many open files; at sun.nio.fs.UnixException.translateToIOException(UnixException.java:103); at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:114); at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:119); at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:226); at java.nio.file.Files.newByteChannel(Files.java:372); at java.nio.file.Files.newByteChannel(Files.java:418); at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:395); at java.nio.file.Files.newInputStream(Files.java:163); at htsjdk.samtools.reference.FastaSequenceIndex.<init>(FastaSequenceIndex.java:71); ... 16 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598218588:162,Availability,down,down,162,It seems very likely that we have a file handle leak in our spark code somewhere. Raising the ulimit might help but it's not a great solution. We'll have to hunt down the place that things aren't being closed.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598218588
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598224260:91,Testability,test,tested,91,"Hmn... I didn't read this history carefully before responding. It looks like disq has been tested to not have any obvious file leaks, and @jshleap is seeing the problem in mutect2. . Mutect shouldn't be opening a lot of file handles, so I even if we're not closing them I wouldn't imagine it's really doing anything critically wrong. I would check your file handle limits and see if there's either a very low user limit or a low system limit. It's possible another user on the same system is consuming a lot of file handles. Is it consistently happening? What version of gatk are you using?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598224260
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598233814:88,Testability,test,tester,88,"Apologies on the poor report. There are no other users in these compute nodes (I am the tester) and for all intents and purposes the ulimit is pretty high (hard limit of 8192 max files). I am using GATK version 4.1.4.1, although it might be the one that has been optimised for IBM power9 systems by @ruzhuchen. Currently I am waiting for the sys admin to increase the max files further, but I believe that this is far from ideal. Here is the (simplified) command:; ```bash; gatk --java-options ""-Xmx40g -Djava.library.path=/bio/apps/gatk_4.1.4/gatk-4.1.4.1/libs -DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" Mutect2 -R Homo_sapiens_assembly38.fa -I illuminaN_hg38.br.recal.bam --max-mnp-distance 0 -O illuminaN.vcf.gz; ```; May be I am running it wrong?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598233814
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598233814:443,Usability,simpl,simplified,443,"Apologies on the poor report. There are no other users in these compute nodes (I am the tester) and for all intents and purposes the ulimit is pretty high (hard limit of 8192 max files). I am using GATK version 4.1.4.1, although it might be the one that has been optimised for IBM power9 systems by @ruzhuchen. Currently I am waiting for the sys admin to increase the max files further, but I believe that this is far from ideal. Here is the (simplified) command:; ```bash; gatk --java-options ""-Xmx40g -Djava.library.path=/bio/apps/gatk_4.1.4/gatk-4.1.4.1/libs -DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" Mutect2 -R Homo_sapiens_assembly38.fa -I illuminaN_hg38.br.recal.bam --max-mnp-distance 0 -O illuminaN.vcf.gz; ```; May be I am running it wrong?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598233814
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598269062:83,Security,secur,security,83,"Hi Jose,; Your system ulimit setting is too low. Please do this with root at; /etc/security/limits.conf; * soft memlock unlimited; * hard memlock unlimited; * hard nofile 20480; * soft nofile 20480; * hard nproc 40960; * soft nproc 40960; * soft stack unlimited; * hard stack unlimited. Ruzhu; -------------------------------------------; Ruzhu Chen, PhD (845) 433-8426(T/L 293-8426); Email: ruzhuchen@us.ibm.com, Mobile: (845) 337-7238; Sr. Technical Solution Architect, HPC / Genomics & Life Sciences; IBM Systems, 2455 South Road, Poughkeepsie, NY 12601. From:	Jose Sergio Hleap <notifications@github.com>; To:	broadinstitute/gatk <gatk@noreply.github.com>; Cc:	ruzhuchen <ruzhuchen@us.ibm.com>, Mention; <mention@noreply.github.com>; Date:	03/12/2020 11:37 AM; Subject:	[EXTERNAL] Re: [broadinstitute/gatk] Got ""Too many open files""; when use BaseRecalibratorSpark (#5316). Apologies on the poor report. There are no other users in these compute; nodes (I am the tester) and for all intents and purposes the ulimit is; pretty high (hard limit of 8192 max files). I am using GATK version; 4.1.4.1, although it might be the one that has been optimised for IBM; power9 systems by @ruzhuchen. Currently I am waiting for the sys admin to; increase the max files further, but I believe that this is far from ideal.; Here is the (simplified) command:. gatk --java-options ""-Xmx40g; -Djava.library.path=/bio/apps/gatk_4.1.4/gatk-4.1.4.1/libs; -DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" Mutect2 -R; Homo_sapiens_assembly38.fa -I illuminaN_hg38.br.recal.bam; --max-mnp-distance 0 -O illuminaN.vcf.gz. May be I am running it wrong?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598269062
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598269062:967,Testability,test,tester,967,"Hi Jose,; Your system ulimit setting is too low. Please do this with root at; /etc/security/limits.conf; * soft memlock unlimited; * hard memlock unlimited; * hard nofile 20480; * soft nofile 20480; * hard nproc 40960; * soft nproc 40960; * soft stack unlimited; * hard stack unlimited. Ruzhu; -------------------------------------------; Ruzhu Chen, PhD (845) 433-8426(T/L 293-8426); Email: ruzhuchen@us.ibm.com, Mobile: (845) 337-7238; Sr. Technical Solution Architect, HPC / Genomics & Life Sciences; IBM Systems, 2455 South Road, Poughkeepsie, NY 12601. From:	Jose Sergio Hleap <notifications@github.com>; To:	broadinstitute/gatk <gatk@noreply.github.com>; Cc:	ruzhuchen <ruzhuchen@us.ibm.com>, Mention; <mention@noreply.github.com>; Date:	03/12/2020 11:37 AM; Subject:	[EXTERNAL] Re: [broadinstitute/gatk] Got ""Too many open files""; when use BaseRecalibratorSpark (#5316). Apologies on the poor report. There are no other users in these compute; nodes (I am the tester) and for all intents and purposes the ulimit is; pretty high (hard limit of 8192 max files). I am using GATK version; 4.1.4.1, although it might be the one that has been optimised for IBM; power9 systems by @ruzhuchen. Currently I am waiting for the sys admin to; increase the max files further, but I believe that this is far from ideal.; Here is the (simplified) command:. gatk --java-options ""-Xmx40g; -Djava.library.path=/bio/apps/gatk_4.1.4/gatk-4.1.4.1/libs; -DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" Mutect2 -R; Homo_sapiens_assembly38.fa -I illuminaN_hg38.br.recal.bam; --max-mnp-distance 0 -O illuminaN.vcf.gz. May be I am running it wrong?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598269062
https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598269062:1327,Usability,simpl,simplified,1327,"Hi Jose,; Your system ulimit setting is too low. Please do this with root at; /etc/security/limits.conf; * soft memlock unlimited; * hard memlock unlimited; * hard nofile 20480; * soft nofile 20480; * hard nproc 40960; * soft nproc 40960; * soft stack unlimited; * hard stack unlimited. Ruzhu; -------------------------------------------; Ruzhu Chen, PhD (845) 433-8426(T/L 293-8426); Email: ruzhuchen@us.ibm.com, Mobile: (845) 337-7238; Sr. Technical Solution Architect, HPC / Genomics & Life Sciences; IBM Systems, 2455 South Road, Poughkeepsie, NY 12601. From:	Jose Sergio Hleap <notifications@github.com>; To:	broadinstitute/gatk <gatk@noreply.github.com>; Cc:	ruzhuchen <ruzhuchen@us.ibm.com>, Mention; <mention@noreply.github.com>; Date:	03/12/2020 11:37 AM; Subject:	[EXTERNAL] Re: [broadinstitute/gatk] Got ""Too many open files""; when use BaseRecalibratorSpark (#5316). Apologies on the poor report. There are no other users in these compute; nodes (I am the tester) and for all intents and purposes the ulimit is; pretty high (hard limit of 8192 max files). I am using GATK version; 4.1.4.1, although it might be the one that has been optimised for IBM; power9 systems by @ruzhuchen. Currently I am waiting for the sys admin to; increase the max files further, but I believe that this is far from ideal.; Here is the (simplified) command:. gatk --java-options ""-Xmx40g; -Djava.library.path=/bio/apps/gatk_4.1.4/gatk-4.1.4.1/libs; -DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" Mutect2 -R; Homo_sapiens_assembly38.fa -I illuminaN_hg38.br.recal.bam; --max-mnp-distance 0 -O illuminaN.vcf.gz. May be I am running it wrong?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598269062
https://github.com/broadinstitute/gatk/pull/5317#issuecomment-430675873:3714,Security,Validat,ValidateBasicSomaticShortMutations,3714,(+2)` | :arrow_up: |; | [...r/tools/walkers/mutect/Mutect2IntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5317/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QySW50ZWdyYXRpb25UZXN0LmphdmE=) | `94.369% <100%> (+0.588%)` | `71 <3> (+3)` | :arrow_up: |; | [...te/hellbender/tools/walkers/annotator/CountNs.java](https://codecov.io/gh/broadinstitute/gatk/pull/5317/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9Db3VudE5zLmphdmE=) | `75% <75%> (ø)` | `8 <8> (?)` | |; | [...r/tools/walkers/mutect/Mutect2FilteringEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5317/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRmlsdGVyaW5nRW5naW5lLmphdmE=) | `85.232% <76%> (-1.089%)` | `63 <4> (+4)` | |; | [...nstitute/hellbender/utils/gcs/BucketUtilsTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5317/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHNUZXN0LmphdmE=) | `56.303% <0%> (-3.103%)` | `13% <0%> (+1%)` | |; | [...ls/genomicsdb/GenomicsDBImportIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5317/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnRJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `86.682% <0%> (-2.388%)` | `77% <0%> (ø)` | |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/5317/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `80.172% <0%> (-0.529%)` | `19% <0%> (ø)` | |; | ... and [9 more](https://codecov.io/gh/broadinstitute/gatk/pull/5317/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5317#issuecomment-430675873
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430747813:67,Safety,redund,redundancy,67,"Oh wait, I just checked out the background. I still don't like the redundancy. Can't we just replace `PID` with `PS`?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430747813
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430751181:27,Testability,test,tests,27,@nh13 I never run the full tests locally because they take essentially forever. I just run the specific ones that seem likely to break and then let travis tell me if something else broke.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430751181
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037:204,Availability,failure,failure,204,"@lbergelson @droazen @davidbenjamin any thoughts on the best way to update the unit test data? I tried a few, but it is extremely laborious, and it takes 35 minutes for travis-ci to show me the next test failure. What's your best way of updating the ""expected"" VCFs?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037:68,Deployability,update,update,68,"@lbergelson @droazen @davidbenjamin any thoughts on the best way to update the unit test data? I tried a few, but it is extremely laborious, and it takes 35 minutes for travis-ci to show me the next test failure. What's your best way of updating the ""expected"" VCFs?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037:84,Testability,test,test,84,"@lbergelson @droazen @davidbenjamin any thoughts on the best way to update the unit test data? I tried a few, but it is extremely laborious, and it takes 35 minutes for travis-ci to show me the next test failure. What's your best way of updating the ""expected"" VCFs?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037:199,Testability,test,test,199,"@lbergelson @droazen @davidbenjamin any thoughts on the best way to update the unit test data? I tried a few, but it is extremely laborious, and it takes 35 minutes for travis-ci to show me the next test failure. What's your best way of updating the ""expected"" VCFs?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431005034:58,Availability,failure,failures,58,"We used to have a secret, magic script. If you're getting failures related to comparing to GATK3 behavior, you can add the new tags to the list to ignore. If you're getting failures related to ""past results"", then it's just tough noogies. We've all been there.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431005034
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431005034:173,Availability,failure,failures,173,"We used to have a secret, magic script. If you're getting failures related to comparing to GATK3 behavior, you can add the new tags to the list to ignore. If you're getting failures related to ""past results"", then it's just tough noogies. We've all been there.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431005034
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588:14,Availability,failure,failures,14,"@nh13 For the failures in the exact-match ""*IsConsistentWithPastResults()"" tests in `HaplotypeCallerIntegrationTest`, the easiest way to update the expected outputs is to do a run with the `-O` outputs in those tests set to the `expected` path, rather than the `output` path, then restore the original `-O` value after the expected files are overwritten. We should really implement a toggle in that class to do this automatically for all tests that assert an exact match on the output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588:137,Deployability,update,update,137,"@nh13 For the failures in the exact-match ""*IsConsistentWithPastResults()"" tests in `HaplotypeCallerIntegrationTest`, the easiest way to update the expected outputs is to do a run with the `-O` outputs in those tests set to the `expected` path, rather than the `output` path, then restore the original `-O` value after the expected files are overwritten. We should really implement a toggle in that class to do this automatically for all tests that assert an exact match on the output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588:384,Deployability,toggle,toggle,384,"@nh13 For the failures in the exact-match ""*IsConsistentWithPastResults()"" tests in `HaplotypeCallerIntegrationTest`, the easiest way to update the expected outputs is to do a run with the `-O` outputs in those tests set to the `expected` path, rather than the `output` path, then restore the original `-O` value after the expected files are overwritten. We should really implement a toggle in that class to do this automatically for all tests that assert an exact match on the output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588:75,Testability,test,tests,75,"@nh13 For the failures in the exact-match ""*IsConsistentWithPastResults()"" tests in `HaplotypeCallerIntegrationTest`, the easiest way to update the expected outputs is to do a run with the `-O` outputs in those tests set to the `expected` path, rather than the `output` path, then restore the original `-O` value after the expected files are overwritten. We should really implement a toggle in that class to do this automatically for all tests that assert an exact match on the output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588:211,Testability,test,tests,211,"@nh13 For the failures in the exact-match ""*IsConsistentWithPastResults()"" tests in `HaplotypeCallerIntegrationTest`, the easiest way to update the expected outputs is to do a run with the `-O` outputs in those tests set to the `expected` path, rather than the `output` path, then restore the original `-O` value after the expected files are overwritten. We should really implement a toggle in that class to do this automatically for all tests that assert an exact match on the output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588:438,Testability,test,tests,438,"@nh13 For the failures in the exact-match ""*IsConsistentWithPastResults()"" tests in `HaplotypeCallerIntegrationTest`, the easiest way to update the expected outputs is to do a run with the `-O` outputs in those tests set to the `expected` path, rather than the `output` path, then restore the original `-O` value after the expected files are overwritten. We should really implement a toggle in that class to do this automatically for all tests that assert an exact match on the output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588:449,Testability,assert,assert,449,"@nh13 For the failures in the exact-match ""*IsConsistentWithPastResults()"" tests in `HaplotypeCallerIntegrationTest`, the easiest way to update the expected outputs is to do a run with the `-O` outputs in those tests set to the `expected` path, rather than the `output` path, then restore the original `-O` value after the expected files are overwritten. We should really implement a toggle in that class to do this automatically for all tests that assert an exact match on the output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431059166:26,Deployability,toggle,toggle,26,"Speaking of adding such a toggle, here you go: https://github.com/broadinstitute/gatk/pull/5324",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431059166
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431078115:81,Availability,failure,failures,81,"@droazen thanks for that, though I did update them by hand already! My remaining failures are in `CombineGVCFsIntegrationTest` and `GenotypeGVCFsIntegrationTest`, so I am close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431078115
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431078115:39,Deployability,update,update,39,"@droazen thanks for that, though I did update them by hand already! My remaining failures are in `CombineGVCFsIntegrationTest` and `GenotypeGVCFsIntegrationTest`, so I am close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431078115
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431204540:3875,Deployability,pipeline,pipelines,3875,CallerEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5318/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXJFbmdpbmUuamF2YQ==) | `78.425% <100%> (+0.074%)` | `76 <0> (ø)` | :arrow_down: |; | [...ypecaller/AssemblyBasedCallerGenotypingEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5318/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyR2Vub3R5cGluZ0VuZ2luZS5qYXZh) | `89.912% <100%> (+0.463%)` | `90 <0> (+2)` | :arrow_up: |; | [...er/tools/walkers/GenotypeGVCFsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5318/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL0dlbm90eXBlR1ZDRnNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `81.013% <100%> (+0.121%)` | `25 <1> (ø)` | :arrow_down: |; | [...ils/nio/NioFileCopierWithProgressMeterResults.java](https://codecov.io/gh/broadinstitute/gatk/pull/5318/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyUmVzdWx0cy5qYXZh) | `0% <0%> (-94.737%)` | `0% <0%> (-9%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5318/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5318/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | ... and [10 more](https://codecov.io/gh/broadinstitute/gatk/pull/5318/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431204540
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431211180:12,Testability,test,tests,12,@ldgauthier tests pass!!!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431211180
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-433210861:38,Deployability,release,release,38,"@ldgauthier just waiting on an HTSJDK release, then I'll fold that in. I will start working on outputting the genotypes as phased in a separate PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-433210861
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-433969468:587,Energy Efficiency,reduce,reduce,587,"@nh13 I believe I only technically last touched `AssemblyBasedCallerGenotypingEngine.java#constructPhaseSetMapping` as part of moving code between classes. Not sure exactly what your question is but I do have some opinion about that method, namely that it is way too conservative about phasing. Two alleles must either always co-occur or always not co-occur on haplotypes in order to be in or out of phase. Given that the minimum kmer size of 10 generates all sorts of phase-forgetting haplotypes, this is too strict. It would make more sense to do what Mutect2 is about to do, which is reduce the set of haplotypes, then phase alleles.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-433969468
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325:106,Deployability,upgrade,upgraded,106,"@ldgauthier @davidbenjamin . I now have added in setting the genotype as phased (using a pipe) as well as upgraded htsjdk. The tests need updating, but it's easier to see what breaks then fix than run the tests locally! But please see if you agree with the rest of the PR while I update the tests manually. A few notes on the various tools related to making the genotype phased:. 1. Both `HaplotypeCaller` and `Mutect2` support the `--do-not-run-physical-phasing`, so all this can be turned off by the user. I am not going to add another command line option as this may confuse the user.; 2. `FilterMutectCalls` uses the `Mutect2FilteringEngine` internally. It does not look at the order of the alleles in the genotype (`GT` FORMAT field), but does look at the various other per-allele FORMAT fields (ex. `AD`, `AF`). Fortunately, I do not change their order in this PR as suggested by @ldgauthier.; 3. As @ldguathier note [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433970809) and [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433986488), that VQSR and Sam F's work do not look at genotypes either.; 4. I looked at VariantContextBuilder and then in particular VCFEncoder in htsjdk, and they do the right thing when we order the alleles according to phase.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325:280,Deployability,update,update,280,"@ldgauthier @davidbenjamin . I now have added in setting the genotype as phased (using a pipe) as well as upgraded htsjdk. The tests need updating, but it's easier to see what breaks then fix than run the tests locally! But please see if you agree with the rest of the PR while I update the tests manually. A few notes on the various tools related to making the genotype phased:. 1. Both `HaplotypeCaller` and `Mutect2` support the `--do-not-run-physical-phasing`, so all this can be turned off by the user. I am not going to add another command line option as this may confuse the user.; 2. `FilterMutectCalls` uses the `Mutect2FilteringEngine` internally. It does not look at the order of the alleles in the genotype (`GT` FORMAT field), but does look at the various other per-allele FORMAT fields (ex. `AD`, `AF`). Fortunately, I do not change their order in this PR as suggested by @ldgauthier.; 3. As @ldguathier note [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433970809) and [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433986488), that VQSR and Sam F's work do not look at genotypes either.; 4. I looked at VariantContextBuilder and then in particular VCFEncoder in htsjdk, and they do the right thing when we order the alleles according to phase.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325:127,Testability,test,tests,127,"@ldgauthier @davidbenjamin . I now have added in setting the genotype as phased (using a pipe) as well as upgraded htsjdk. The tests need updating, but it's easier to see what breaks then fix than run the tests locally! But please see if you agree with the rest of the PR while I update the tests manually. A few notes on the various tools related to making the genotype phased:. 1. Both `HaplotypeCaller` and `Mutect2` support the `--do-not-run-physical-phasing`, so all this can be turned off by the user. I am not going to add another command line option as this may confuse the user.; 2. `FilterMutectCalls` uses the `Mutect2FilteringEngine` internally. It does not look at the order of the alleles in the genotype (`GT` FORMAT field), but does look at the various other per-allele FORMAT fields (ex. `AD`, `AF`). Fortunately, I do not change their order in this PR as suggested by @ldgauthier.; 3. As @ldguathier note [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433970809) and [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433986488), that VQSR and Sam F's work do not look at genotypes either.; 4. I looked at VariantContextBuilder and then in particular VCFEncoder in htsjdk, and they do the right thing when we order the alleles according to phase.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325:205,Testability,test,tests,205,"@ldgauthier @davidbenjamin . I now have added in setting the genotype as phased (using a pipe) as well as upgraded htsjdk. The tests need updating, but it's easier to see what breaks then fix than run the tests locally! But please see if you agree with the rest of the PR while I update the tests manually. A few notes on the various tools related to making the genotype phased:. 1. Both `HaplotypeCaller` and `Mutect2` support the `--do-not-run-physical-phasing`, so all this can be turned off by the user. I am not going to add another command line option as this may confuse the user.; 2. `FilterMutectCalls` uses the `Mutect2FilteringEngine` internally. It does not look at the order of the alleles in the genotype (`GT` FORMAT field), but does look at the various other per-allele FORMAT fields (ex. `AD`, `AF`). Fortunately, I do not change their order in this PR as suggested by @ldgauthier.; 3. As @ldguathier note [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433970809) and [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433986488), that VQSR and Sam F's work do not look at genotypes either.; 4. I looked at VariantContextBuilder and then in particular VCFEncoder in htsjdk, and they do the right thing when we order the alleles according to phase.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325:291,Testability,test,tests,291,"@ldgauthier @davidbenjamin . I now have added in setting the genotype as phased (using a pipe) as well as upgraded htsjdk. The tests need updating, but it's easier to see what breaks then fix than run the tests locally! But please see if you agree with the rest of the PR while I update the tests manually. A few notes on the various tools related to making the genotype phased:. 1. Both `HaplotypeCaller` and `Mutect2` support the `--do-not-run-physical-phasing`, so all this can be turned off by the user. I am not going to add another command line option as this may confuse the user.; 2. `FilterMutectCalls` uses the `Mutect2FilteringEngine` internally. It does not look at the order of the alleles in the genotype (`GT` FORMAT field), but does look at the various other per-allele FORMAT fields (ex. `AD`, `AF`). Fortunately, I do not change their order in this PR as suggested by @ldgauthier.; 3. As @ldguathier note [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433970809) and [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433986488), that VQSR and Sam F's work do not look at genotypes either.; 4. I looked at VariantContextBuilder and then in particular VCFEncoder in htsjdk, and they do the right thing when we order the alleles according to phase.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436669919:263,Testability,test,tests,263,"@ldgauthier @davidbenjamin @lbergelson @droazen any chance you could let me know an estimate on when you could review this? It's totally fine if that's a week or two out, but it would help for my own planning purposes around the holiday season. Also, I'll fix up tests once folks agree on the approach.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436669919
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436752851:87,Deployability,integrat,integration,87,I might be able to take a look on Friday. You can help me by confirming that there are integration tests where the output GT is `1|0` and that should jive with the existing PGT.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436752851
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436752851:87,Integrability,integrat,integration,87,I might be able to take a look on Friday. You can help me by confirming that there are integration tests where the output GT is `1|0` and that should jive with the existing PGT.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436752851
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436752851:99,Testability,test,tests,99,I might be able to take a look on Friday. You can help me by confirming that there are integration tests where the output GT is `1|0` and that should jive with the existing PGT.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436752851
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436771688:10,Deployability,update,updated,10,I haven't updated the tests since I want confirmation on approach and the answers to our previous questions. Updating the test files is something I only want to do once.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436771688
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436771688:22,Testability,test,tests,22,I haven't updated the tests since I want confirmation on approach and the answers to our previous questions. Updating the test files is something I only want to do once.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436771688
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436771688:122,Testability,test,test,122,I haven't updated the tests since I want confirmation on approach and the answers to our previous questions. Updating the test files is something I only want to do once.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436771688
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436774098:36,Deployability,update,update,36,@nh13 I'm ready to approve once you update the tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436774098
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436774098:47,Testability,test,tests,47,@nh13 I'm ready to approve once you update the tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436774098
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620:72,Testability,test,tests,72,@ldgauthier here are a few examples of PGT having `1|0` in the existing tests:; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2171; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2172; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L6724; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L7257. I'll be updating tests this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620:135,Testability,test,test,135,@ldgauthier here are a few examples of PGT having `1|0` in the existing tests:; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2171; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2172; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L6724; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L7257. I'll be updating tests this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620:301,Testability,test,test,301,@ldgauthier here are a few examples of PGT having `1|0` in the existing tests:; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2171; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2172; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L6724; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L7257. I'll be updating tests this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620:467,Testability,test,test,467,@ldgauthier here are a few examples of PGT having `1|0` in the existing tests:; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2171; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2172; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L6724; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L7257. I'll be updating tests this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620:633,Testability,test,test,633,@ldgauthier here are a few examples of PGT having `1|0` in the existing tests:; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2171; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2172; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L6724; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L7257. I'll be updating tests this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620:761,Testability,test,tests,761,@ldgauthier here are a few examples of PGT having `1|0` in the existing tests:; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2171; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2172; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L6724; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L7257. I'll be updating tests this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443870452:147,Availability,down,down,147,"@ldgauthier @lbergelson any ideas on how to get travis-ci to run? I don't see it in the build list. Unfortunately, using travis-ci is the best way down to track the tests I need to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443870452
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443870452:181,Deployability,update,update,181,"@ldgauthier @lbergelson any ideas on how to get travis-ci to run? I don't see it in the build list. Unfortunately, using travis-ci is the best way down to track the tests I need to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443870452
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443870452:165,Testability,test,tests,165,"@ldgauthier @lbergelson any ideas on how to get travis-ci to run? I don't see it in the build list. Unfortunately, using travis-ci is the best way down to track the tests I need to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443870452
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-444562391:19,Deployability,update,updated,19,"@ldgauthier I have updated all the tests. I think this is ready for a final review, squash, and merge!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-444562391
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-444562391:35,Testability,test,tests,35,"@ldgauthier I have updated all the tests. I think this is ready for a final review, squash, and merge!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-444562391
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445363598:59,Testability,test,test,59,"@ldgauthier here's a little grep I did:; ```bash; find src/test/resources -name '*vcf' | xargs awk '{print $9, $10}' | grep PS | grep -v ""./."" | grep -v ""[012]|""; ```; 1. finds all the VCF files; 2. prints the format tags and values (9&10); 3. finds for all those that have the PS; 4. finds all those that are not no-calls; 5. finds those that that do not have a phased genotype",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445363598
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445383889:40,Testability,Test,Tests,40,"@ldgauthier yes, that is an input file. Tests fail if I make those genotypes phased in that file since it used to compare with gatk3 :/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445383889
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445827582:53,Testability,test,test,53,"In theory I like the idea of having the intergration test results from different tools chained together, but it's usually more trouble than it's worth. Sorry.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445827582
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445858864:111,Deployability,integrat,integration,111,I am not sure what you’re asking for. Can you be more specific? I feel exhausted fighting the brittle unit and integration tests. I think this is ready for merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445858864
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445858864:111,Integrability,integrat,integration,111,I am not sure what you’re asking for. Can you be more specific? I feel exhausted fighting the brittle unit and integration tests. I think this is ready for merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445858864
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445858864:123,Testability,test,tests,123,I am not sure what you’re asking for. Can you be more specific? I feel exhausted fighting the brittle unit and integration tests. I think this is ready for merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445858864
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386:170,Deployability,release,release,170,"I think the code and tests are fine (except for the conflicts). I was just trying to empathize about updating expected GVCFs. I want to talk to the engine team about the release schedule, but we won't merge anything else in the HC->GGVCFs pipeline before this, so the tests won't need updating.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386:239,Deployability,pipeline,pipeline,239,"I think the code and tests are fine (except for the conflicts). I was just trying to empathize about updating expected GVCFs. I want to talk to the engine team about the release schedule, but we won't merge anything else in the HC->GGVCFs pipeline before this, so the tests won't need updating.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386:178,Energy Efficiency,schedul,schedule,178,"I think the code and tests are fine (except for the conflicts). I was just trying to empathize about updating expected GVCFs. I want to talk to the engine team about the release schedule, but we won't merge anything else in the HC->GGVCFs pipeline before this, so the tests won't need updating.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386:21,Testability,test,tests,21,"I think the code and tests are fine (except for the conflicts). I was just trying to empathize about updating expected GVCFs. I want to talk to the engine team about the release schedule, but we won't merge anything else in the HC->GGVCFs pipeline before this, so the tests won't need updating.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386:268,Testability,test,tests,268,"I think the code and tests are fine (except for the conflicts). I was just trying to empathize about updating expected GVCFs. I want to talk to the engine team about the release schedule, but we won't merge anything else in the HC->GGVCFs pipeline before this, so the tests won't need updating.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445876386
https://github.com/broadinstitute/gatk/pull/5318#issuecomment-446318359:12,Testability,test,tests,12,"@ldgauthier tests pass, ready to merge at your leisure.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-446318359
https://github.com/broadinstitute/gatk/pull/5321#issuecomment-432869433:43,Availability,error,errors,43,@jonn-smith Make sure to check that travis errors are transient.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5321#issuecomment-432869433
https://github.com/broadinstitute/gatk/pull/5321#issuecomment-432877680:232,Availability,error,error-reference,232,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5321?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@8c696a4`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `98.765%`. ```diff; @@ Coverage Diff @@; ## master #5321 +/- ##; ==========================================; Coverage ? 86.906% ; Complexity ? 30311 ; ==========================================; Files ? 1849 ; Lines ? 140500 ; Branches ? 15475 ; ==========================================; Hits ? 122103 ; Misses ? 12788 ; Partials ? 5609; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5321?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...er/tools/funcotator/FuncotatorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5321/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `85.968% <0%> (ø)` | `111 <0> (?)` | |; | [...Sources/gencode/DataProviderForPik3caTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5321/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvRGF0YVByb3ZpZGVyRm9yUGlrM2NhVGVzdERhdGEuamF2YQ==) | `98.684% <100%> (ø)` | `3 <0> (?)` | |; | [...dataSources/gencode/GencodeFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5321/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvR2VuY29kZUZ1bmNvdGF0aW9uRmFjdG9yeS5qYXZh) | `86.294% <100%> (ø)` | `187 <0> (?)` | |; | [...Sources/gencode/DataProviderForMuc16IndelData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5321/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvRGF0Y,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5321#issuecomment-432877680
https://github.com/broadinstitute/gatk/pull/5321#issuecomment-432877680:180,Usability,learn,learn,180,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5321?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@8c696a4`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `98.765%`. ```diff; @@ Coverage Diff @@; ## master #5321 +/- ##; ==========================================; Coverage ? 86.906% ; Complexity ? 30311 ; ==========================================; Files ? 1849 ; Lines ? 140500 ; Branches ? 15475 ; ==========================================; Hits ? 122103 ; Misses ? 12788 ; Partials ? 5609; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5321?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...er/tools/funcotator/FuncotatorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5321/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `85.968% <0%> (ø)` | `111 <0> (?)` | |; | [...Sources/gencode/DataProviderForPik3caTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5321/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvRGF0YVByb3ZpZGVyRm9yUGlrM2NhVGVzdERhdGEuamF2YQ==) | `98.684% <100%> (ø)` | `3 <0> (?)` | |; | [...dataSources/gencode/GencodeFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5321/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvR2VuY29kZUZ1bmNvdGF0aW9uRmFjdG9yeS5qYXZh) | `86.294% <100%> (ø)` | `187 <0> (?)` | |; | [...Sources/gencode/DataProviderForMuc16IndelData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5321/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvRGF0Y,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5321#issuecomment-432877680
https://github.com/broadinstitute/gatk/pull/5322#issuecomment-431054487:928,Security,Validat,ValidateBasicSomaticShortMutations,928,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5322?src=pr&el=h1) Report; > Merging [#5322](https://codecov.io/gh/broadinstitute/gatk/pull/5322?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/63d864067e74463eb72f58fe60a46603224cf8d2?src=pr&el=desc) will **decrease** coverage by `0.001%`.; > The diff coverage is `25%`. ```diff; @@ Coverage Diff @@; ## master #5322 +/- ##; ===============================================; - Coverage 86.793% 86.792% -0.001% ; Complexity 30107 30107 ; ===============================================; Files 1842 1842 ; Lines 139393 139395 +2 ; Branches 15369 15370 +1 ; ===============================================; Hits 120984 120984 ; - Misses 12823 12824 +1 ; - Partials 5586 5587 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5322?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/5322/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `80.172% <25%> (-0.529%)` | `19 <0> (ø)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5322/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `80.488% <0%> (-0.61%)` | `42% <0%> (ø)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5322#issuecomment-431054487
https://github.com/broadinstitute/gatk/issues/5323#issuecomment-433815315:137,Deployability,configurat,configuration,137,"Hi, I also meet this issue. . The Specificity in `HaplotypeCallerSpark` was a bitter less than local mode in my test. Do you known which configuration can improve the Specificity in `HaplotypeCallerSpark` ? @Atahualkpa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5323#issuecomment-433815315
https://github.com/broadinstitute/gatk/issues/5323#issuecomment-433815315:137,Modifiability,config,configuration,137,"Hi, I also meet this issue. . The Specificity in `HaplotypeCallerSpark` was a bitter less than local mode in my test. Do you known which configuration can improve the Specificity in `HaplotypeCallerSpark` ? @Atahualkpa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5323#issuecomment-433815315
https://github.com/broadinstitute/gatk/issues/5323#issuecomment-433815315:112,Testability,test,test,112,"Hi, I also meet this issue. . The Specificity in `HaplotypeCallerSpark` was a bitter less than local mode in my test. Do you known which configuration can improve the Specificity in `HaplotypeCallerSpark` ? @Atahualkpa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5323#issuecomment-433815315
https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431404069:66,Deployability,toggle,toggle,66,@ldgauthier Good point! I'll add a test that fails if the boolean toggle is left turned on.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431404069
https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431404069:35,Testability,test,test,35,@ldgauthier Good point! I'll add a test that fails if the boolean toggle is left turned on.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431404069
https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431406667:36,Deployability,toggle,toggle,36,Added a new test to assert that the toggle is off -- back to you @ldgauthier,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431406667
https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431406667:12,Testability,test,test,12,Added a new test to assert that the toggle is off -- back to you @ldgauthier,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431406667
https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431406667:20,Testability,assert,assert,20,Added a new test to assert that the toggle is off -- back to you @ldgauthier,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431406667
https://github.com/broadinstitute/gatk/pull/5329#issuecomment-431146563:1154,Deployability,pipeline,pipelines,1154,rc=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/f95b6feb8f5da6864476ff5a16dca584f0a29348?src=pr&el=desc) will **decrease** coverage by `1.16%`.; > The diff coverage is `100%`. [![Impacted file tree graph](https://codecov.io/gh/broadinstitute/gatk/pull/5329/graphs/tree.svg?width=650&token=7RuX7LsQVf&height=150&src=pr)](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #5329 +/- ##; ============================================; - Coverage 86.79% 85.62% -1.17% ; + Complexity 30124 29844 -280 ; ============================================; Files 1843 1843 ; Lines 139480 139481 +1 ; Branches 15376 15376 ; ============================================; - Hits 121060 119433 -1627 ; - Misses 12827 14515 +1688 ; + Partials 5593 5533 -60; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...lbender/tools/spark/pipelines/CountReadsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvQ291bnRSZWFkc1NwYXJrLmphdmE=) | `90.9% <100%> (+0.9%)` | `5 <1> (+1)` | :arrow_up: |; | [...s/GermlineContigPloidyModelArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9HZXJtbGluZUNvbnRpZ1Bsb2lkeU1vZGVsQXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...mlineContigPloidyHybridADVIArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9HZXJtbGluZUNvbnRpZ1Bsb2lkeUh5YnJpZEFEVklBcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...er/utils/python/PythonScri,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5329#issuecomment-431146563
https://github.com/broadinstitute/gatk/pull/5329#issuecomment-431146563:4841,Deployability,update,update,4841,"bWVudENvbGxlY3Rpb24uamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...tools/examples/ExampleStreamingPythonExecutor.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlU3RyZWFtaW5nUHl0aG9uRXhlY3V0b3IuamF2YQ==) | `0% <0%> (-96.67%)` | `0% <0%> (-8%)` | |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `4.16% <0%> (-95.84%)` | `2% <0%> (-8%)` | |; | [...der/utils/python/PythonScriptExecutorUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9weXRob24vUHl0aG9uU2NyaXB0RXhlY3V0b3JVbml0VGVzdC5qYXZh) | `3.84% <0%> (-94.24%)` | `1% <0%> (-11%)` | |; | [...number/arguments/HybridADVIArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9IeWJyaWRBRFZJQXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `0% <0%> (-94.12%)` | `0% <0%> (-3%)` | |; | ... and [36 more](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=footer). Last update [f95b6fe...1c00f72](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5329#issuecomment-431146563
https://github.com/broadinstitute/gatk/pull/5329#issuecomment-431146563:4744,Energy Efficiency,Power,Powered,4744,"bWVudENvbGxlY3Rpb24uamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...tools/examples/ExampleStreamingPythonExecutor.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlU3RyZWFtaW5nUHl0aG9uRXhlY3V0b3IuamF2YQ==) | `0% <0%> (-96.67%)` | `0% <0%> (-8%)` | |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `4.16% <0%> (-95.84%)` | `2% <0%> (-8%)` | |; | [...der/utils/python/PythonScriptExecutorUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9weXRob24vUHl0aG9uU2NyaXB0RXhlY3V0b3JVbml0VGVzdC5qYXZh) | `3.84% <0%> (-94.24%)` | `1% <0%> (-11%)` | |; | [...number/arguments/HybridADVIArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9IeWJyaWRBRFZJQXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `0% <0%> (-94.12%)` | `0% <0%> (-3%)` | |; | ... and [36 more](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=footer). Last update [f95b6fe...1c00f72](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5329#issuecomment-431146563
https://github.com/broadinstitute/gatk/pull/5329#issuecomment-431146563:4607,Usability,learn,learn,4607,"bWVudENvbGxlY3Rpb24uamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...tools/examples/ExampleStreamingPythonExecutor.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlU3RyZWFtaW5nUHl0aG9uRXhlY3V0b3IuamF2YQ==) | `0% <0%> (-96.67%)` | `0% <0%> (-8%)` | |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `4.16% <0%> (-95.84%)` | `2% <0%> (-8%)` | |; | [...der/utils/python/PythonScriptExecutorUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9weXRob24vUHl0aG9uU2NyaXB0RXhlY3V0b3JVbml0VGVzdC5qYXZh) | `3.84% <0%> (-94.24%)` | `1% <0%> (-11%)` | |; | [...number/arguments/HybridADVIArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9IeWJyaWRBRFZJQXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `0% <0%> (-94.12%)` | `0% <0%> (-3%)` | |; | ... and [36 more](https://codecov.io/gh/broadinstitute/gatk/pull/5329/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=footer). Last update [f95b6fe...1c00f72](https://codecov.io/gh/broadinstitute/gatk/pull/5329?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5329#issuecomment-431146563
https://github.com/broadinstitute/gatk/pull/5334#issuecomment-451291729:1793,Deployability,pipeline,pipelines,1793,tps://codecov.io/gh/broadinstitute/gatk/pull/5334?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...rg/broadinstitute/hellbender/utils/nio/NioBam.java](https://codecov.io/gh/broadinstitute/gatk/pull/5334/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvQmFtLmphdmE=) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...dinstitute/hellbender/utils/nio/ReadsIterable.java](https://codecov.io/gh/broadinstitute/gatk/pull/5334/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vUmVhZHNJdGVyYWJsZS5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...ellbender/utils/read/ReadUtilsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5334/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1JlYWRVdGlsc0ludGVncmF0aW9uVGVzdC5qYXZh) | `2.941% <0%> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...k/pipelines/PrintVariantsSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5334/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `7.692% <0%> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...lCopyGCSDirectoryIntoHDFSSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5334/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.563% <0%> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...ls/spark/sv/evidence/FindBadGenomicKmersSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5334/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9GaW5kQmFkR2Vub21pY0ttZXJzU3BhcmsuamF2YQ==) | `51.471% <0%> (-0.768%)` | `12 <0> (ø)` | |; | [...institute/hellbender/metrics/MetricsU,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5334#issuecomment-451291729
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431855929:60,Availability,error,error,60,@gmagoon I agree that it does look a lot like an off-by-one error. The genotype validator is complaining about seeing a reference allele that just happens to be the same as the previous VC. . @cwhelan can you take a look when you get a chance?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431855929
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431855929:80,Security,validat,validator,80,@gmagoon I agree that it does look a lot like an off-by-one error. The genotype validator is complaining about seeing a reference allele that just happens to be the same as the previous VC. . @cwhelan can you take a look when you get a chance?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431855929
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967:306,Availability,error,error,306,I've been taking a look this morning but am so far unable to reproduce the problem. I tried adding lines to the integration test file to mimic having a SNP at the last base of a spanning deletion as in the bug report:. ```; 20 10001300 . GGG G . . .; 20 10001302 . G C . . .; ```. But I'm not hitting this error. . @gmagoon any chance you could provide any more information that would help us reproduce this? The exact command line you're using might help. Do you still get the error if you run with an alleles file consisting _only_ of one of the pairs of given allele lines listed above?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967:478,Availability,error,error,478,I've been taking a look this morning but am so far unable to reproduce the problem. I tried adding lines to the integration test file to mimic having a SNP at the last base of a spanning deletion as in the bug report:. ```; 20 10001300 . GGG G . . .; 20 10001302 . G C . . .; ```. But I'm not hitting this error. . @gmagoon any chance you could provide any more information that would help us reproduce this? The exact command line you're using might help. Do you still get the error if you run with an alleles file consisting _only_ of one of the pairs of given allele lines listed above?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967:112,Deployability,integrat,integration,112,I've been taking a look this morning but am so far unable to reproduce the problem. I tried adding lines to the integration test file to mimic having a SNP at the last base of a spanning deletion as in the bug report:. ```; 20 10001300 . GGG G . . .; 20 10001302 . G C . . .; ```. But I'm not hitting this error. . @gmagoon any chance you could provide any more information that would help us reproduce this? The exact command line you're using might help. Do you still get the error if you run with an alleles file consisting _only_ of one of the pairs of given allele lines listed above?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967:112,Integrability,integrat,integration,112,I've been taking a look this morning but am so far unable to reproduce the problem. I tried adding lines to the integration test file to mimic having a SNP at the last base of a spanning deletion as in the bug report:. ```; 20 10001300 . GGG G . . .; 20 10001302 . G C . . .; ```. But I'm not hitting this error. . @gmagoon any chance you could provide any more information that would help us reproduce this? The exact command line you're using might help. Do you still get the error if you run with an alleles file consisting _only_ of one of the pairs of given allele lines listed above?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967:124,Testability,test,test,124,I've been taking a look this morning but am so far unable to reproduce the problem. I tried adding lines to the integration test file to mimic having a SNP at the last base of a spanning deletion as in the bug report:. ```; 20 10001300 . GGG G . . .; 20 10001302 . G C . . .; ```. But I'm not hitting this error. . @gmagoon any chance you could provide any more information that would help us reproduce this? The exact command line you're using might help. Do you still get the error if you run with an alleles file consisting _only_ of one of the pairs of given allele lines listed above?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431865967
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431883442:97,Availability,error,error,97,"Good question @cwhelan ; I tried with the following minimal alleles input, and it worked without error:; ```; ##fileformat=VCFv4.1; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO; 22	16137300	rs567136176	TAG	T	.	PASS	.; 22	16137302	rs573978809	G	C	.	PASS	.; ```; On the other hand, I confirmed that the case with the original, full `--alleles` input still crashes on the latest GATK, version 4.0.10.1. I don't think there is anything particularly special about the command line I'm using, except maybe the `-L 22`:; `$HOME/gatk-4.0.10.1/gatk --java-options ""-Xmx4g"" HaplotypeCaller -R $HOME/GRCh37files/hs37d5.fa -I /mnt/fast/test.bam -O gatk.issue5336.test.HaplotypeCaller.vcf.gz -L 22 --genotyping-mode GENOTYPE_GIVEN_ALLELES --alleles gatk.issue5336.test.vcf.gz`. I will try to play around with the alleles input to get a small set where I can reproduce the issue...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431883442
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431883442:680,Testability,test,test,680,"Good question @cwhelan ; I tried with the following minimal alleles input, and it worked without error:; ```; ##fileformat=VCFv4.1; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO; 22	16137300	rs567136176	TAG	T	.	PASS	.; 22	16137302	rs573978809	G	C	.	PASS	.; ```; On the other hand, I confirmed that the case with the original, full `--alleles` input still crashes on the latest GATK, version 4.0.10.1. I don't think there is anything particularly special about the command line I'm using, except maybe the `-L 22`:; `$HOME/gatk-4.0.10.1/gatk --java-options ""-Xmx4g"" HaplotypeCaller -R $HOME/GRCh37files/hs37d5.fa -I /mnt/fast/test.bam -O gatk.issue5336.test.HaplotypeCaller.vcf.gz -L 22 --genotyping-mode GENOTYPE_GIVEN_ALLELES --alleles gatk.issue5336.test.vcf.gz`. I will try to play around with the alleles input to get a small set where I can reproduce the issue...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431883442
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431883442:707,Testability,test,test,707,"Good question @cwhelan ; I tried with the following minimal alleles input, and it worked without error:; ```; ##fileformat=VCFv4.1; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO; 22	16137300	rs567136176	TAG	T	.	PASS	.; 22	16137302	rs573978809	G	C	.	PASS	.; ```; On the other hand, I confirmed that the case with the original, full `--alleles` input still crashes on the latest GATK, version 4.0.10.1. I don't think there is anything particularly special about the command line I'm using, except maybe the `-L 22`:; `$HOME/gatk-4.0.10.1/gatk --java-options ""-Xmx4g"" HaplotypeCaller -R $HOME/GRCh37files/hs37d5.fa -I /mnt/fast/test.bam -O gatk.issue5336.test.HaplotypeCaller.vcf.gz -L 22 --genotyping-mode GENOTYPE_GIVEN_ALLELES --alleles gatk.issue5336.test.vcf.gz`. I will try to play around with the alleles input to get a small set where I can reproduce the issue...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431883442
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431883442:807,Testability,test,test,807,"Good question @cwhelan ; I tried with the following minimal alleles input, and it worked without error:; ```; ##fileformat=VCFv4.1; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO; 22	16137300	rs567136176	TAG	T	.	PASS	.; 22	16137302	rs573978809	G	C	.	PASS	.; ```; On the other hand, I confirmed that the case with the original, full `--alleles` input still crashes on the latest GATK, version 4.0.10.1. I don't think there is anything particularly special about the command line I'm using, except maybe the `-L 22`:; `$HOME/gatk-4.0.10.1/gatk --java-options ""-Xmx4g"" HaplotypeCaller -R $HOME/GRCh37files/hs37d5.fa -I /mnt/fast/test.bam -O gatk.issue5336.test.HaplotypeCaller.vcf.gz -L 22 --genotyping-mode GENOTYPE_GIVEN_ALLELES --alleles gatk.issue5336.test.vcf.gz`. I will try to play around with the alleles input to get a small set where I can reproduce the issue...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431883442
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431890629:26,Availability,down,down,26,"OK, I think I've narrowed down the problem. Curiously, it seems to be related to the inclusion of genotypes in the `--alleles` input. My original alleles input included a number of phased genotypes from 1000 Genomes Project. When I cut down the `--alleles` VCF input to just those two sites while retaining the genotypes (as follows) the crash is reproduced:; ```; ##fileformat=VCFv4.1; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	HG00096	HG00097	HG00099	HG00100	HG00101	HG00102	HG00103	HG00105	HG00106	HG00107	HG00108	HG00109	HG00110	HG00111	HG00112	HG00113	HG00114	HG00115	HG00116	HG00117	HG00118	HG00119	HG00120	HG00121	HG00122	HG00123	HG00125	HG00126	HG00127	HG00128	HG00129	HG00130	HG00131	HG00132	HG00133	HG00136	HG00137	HG00138	HG00139	HG00140	HG00141	HG00142	HG00143	HG00145	HG00146	HG00148	HG00149	HG00150	HG00151	HG00154	HG00155	HG00157	HG00158	HG00159	HG00160	HG00171	HG00173	HG00174	HG00176	HG00177	HG00178	HG00179	HG00180	HG00181	HG00182	HG00183	HG00185	HG00186	HG00187	HG00188	HG00189	HG00190	HG00231	HG00232	HG00233	HG00234	HG00235	HG00236	HG00237	HG00238	HG00239	HG00240	HG00242	HG00243	HG00244	HG00245	HG00246	HG00250	HG00251	HG00252	HG00253	HG00254	HG00255	HG00256	HG00257	HG00258	HG00259	HG00260	HG00261	HG00262	HG00263	HG00264	HG00265	HG00266	HG00267	HG00268	HG00269	HG00271	HG00272	HG00273	HG00274	HG00275	HG00276	HG00277	HG00278	HG00280	HG00281	HG00282	HG00284	HG00285	HG00288	HG00290	HG00304	HG00306	HG00308	HG00309	HG00310	HG00311	HG00313	HG00315	HG00318	HG00319	HG00320	HG00321	HG00323	HG00324	HG00325	HG00326	HG00327	HG00328	HG00329	HG00330	HG00331	HG00332	HG00334	HG00335	HG00336	HG00337	HG00338	HG00339	HG00341	HG00342	HG00343	HG00344	HG00345	HG00346	HG00349	HG00350	HG00351	HG00353	HG00355	HG00356	HG00357	HG00358	HG00360	HG00361	HG00362	HG00364	HG00365	HG00366	HG00367	HG00368	HG00369	HG00371	HG00372	HG00373	HG00375	HG00376	HG00378	HG00379	HG00380	HG00381	HG00382	HG00383	HG00384	HG00403	HG00404	HG00406	HG",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431890629
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431890629:236,Availability,down,down,236,"OK, I think I've narrowed down the problem. Curiously, it seems to be related to the inclusion of genotypes in the `--alleles` input. My original alleles input included a number of phased genotypes from 1000 Genomes Project. When I cut down the `--alleles` VCF input to just those two sites while retaining the genotypes (as follows) the crash is reproduced:; ```; ##fileformat=VCFv4.1; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	HG00096	HG00097	HG00099	HG00100	HG00101	HG00102	HG00103	HG00105	HG00106	HG00107	HG00108	HG00109	HG00110	HG00111	HG00112	HG00113	HG00114	HG00115	HG00116	HG00117	HG00118	HG00119	HG00120	HG00121	HG00122	HG00123	HG00125	HG00126	HG00127	HG00128	HG00129	HG00130	HG00131	HG00132	HG00133	HG00136	HG00137	HG00138	HG00139	HG00140	HG00141	HG00142	HG00143	HG00145	HG00146	HG00148	HG00149	HG00150	HG00151	HG00154	HG00155	HG00157	HG00158	HG00159	HG00160	HG00171	HG00173	HG00174	HG00176	HG00177	HG00178	HG00179	HG00180	HG00181	HG00182	HG00183	HG00185	HG00186	HG00187	HG00188	HG00189	HG00190	HG00231	HG00232	HG00233	HG00234	HG00235	HG00236	HG00237	HG00238	HG00239	HG00240	HG00242	HG00243	HG00244	HG00245	HG00246	HG00250	HG00251	HG00252	HG00253	HG00254	HG00255	HG00256	HG00257	HG00258	HG00259	HG00260	HG00261	HG00262	HG00263	HG00264	HG00265	HG00266	HG00267	HG00268	HG00269	HG00271	HG00272	HG00273	HG00274	HG00275	HG00276	HG00277	HG00278	HG00280	HG00281	HG00282	HG00284	HG00285	HG00288	HG00290	HG00304	HG00306	HG00308	HG00309	HG00310	HG00311	HG00313	HG00315	HG00318	HG00319	HG00320	HG00321	HG00323	HG00324	HG00325	HG00326	HG00327	HG00328	HG00329	HG00330	HG00331	HG00332	HG00334	HG00335	HG00336	HG00337	HG00338	HG00339	HG00341	HG00342	HG00343	HG00344	HG00345	HG00346	HG00349	HG00350	HG00351	HG00353	HG00355	HG00356	HG00357	HG00358	HG00360	HG00361	HG00362	HG00364	HG00365	HG00366	HG00367	HG00368	HG00369	HG00371	HG00372	HG00373	HG00375	HG00376	HG00378	HG00379	HG00380	HG00381	HG00382	HG00383	HG00384	HG00403	HG00404	HG00406	HG",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431890629
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431895035:280,Availability,down,downstream,280,Good catch @gmagoon . As part of this fix we have code that replaced deletion alleles with star alleles in overlapping variants before genotyping; evidently if the input variants have preexisting genotypes the original alleles are still attached to the variants and are making it downstream through that filter. I'll try to get a fix in for this shortly. Thanks for your help in narrowing down the cause.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431895035
https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431895035:389,Availability,down,down,389,Good catch @gmagoon . As part of this fix we have code that replaced deletion alleles with star alleles in overlapping variants before genotyping; evidently if the input variants have preexisting genotypes the original alleles are still attached to the variants and are making it downstream through that filter. I'll try to get a fix in for this shortly. Thanks for your help in narrowing down the cause.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336#issuecomment-431895035
https://github.com/broadinstitute/gatk/issues/5337#issuecomment-431858746:128,Integrability,message,messages,128,"sorry, this is duplicate of #5336 ; I posted twice due to confusion related to [recent github issues](https://status.github.com/messages)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5337#issuecomment-431858746
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:29,Availability,ERROR,ERROR,29,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:37,Availability,Error,Error,37,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:178,Security,validat,validateArg,178,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:262,Security,validat,validatePositions,262,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:872,Testability,test,testng,872,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:966,Testability,test,testng,966,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1059,Testability,test,testng,1059,rgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1170,Testability,test,testng,1170,tils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1270,Testability,test,testng,1270,itions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1344,Testability,test,testng,1344,mpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1413,Testability,test,testng,1413,tute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.tes,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1482,Testability,test,testng,1482,ervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.Re,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1552,Testability,test,testng,1552,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1568,Testability,Test,TestMethodWorker,1568,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1603,Testability,Test,TestMethodWorker,1603,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1639,Testability,test,testng,1639,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1655,Testability,Test,TestMethodWorker,1655,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1676,Testability,Test,TestMethodWorker,1676,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1712,Testability,test,testng,1712,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1719,Testability,Test,TestRunner,1719,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1741,Testability,Test,TestRunner,1741,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1771,Testability,test,testng,1771,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1778,Testability,Test,TestRunner,1778,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1793,Testability,Test,TestRunner,1793,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1823,Testability,test,testng,1823,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1881,Testability,test,testng,1881,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:1947,Testability,test,testng,1947,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2008,Testability,test,testng,2008,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2062,Testability,test,testng,2062,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2132,Testability,test,testng,2132,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2197,Testability,test,testng,2197,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2204,Testability,Test,TestNG,2204,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2233,Testability,Test,TestNG,2233,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2260,Testability,test,testng,2260,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2267,Testability,Test,TestNG,2267,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2291,Testability,Test,TestNG,2291,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2318,Testability,test,testng,2318,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2325,Testability,Test,TestNG,2325,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2342,Testability,Test,TestNG,2342,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2369,Testability,test,testng,2369,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2376,Testability,Test,TestNG,2376,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2387,Testability,Test,TestNG,2387,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2414,Testability,test,testng,2414,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:2477,Testability,test,testng,2477,IntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73). 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:247,Usability,Simpl,SimpleInterval,247,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:280,Usability,Simpl,SimpleInterval,280,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:345,Usability,Simpl,SimpleInterval,345,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410:373,Usability,Simpl,SimpleInterval,373,One of the issues:. [Utils] [ERROR] [Error] java.lang.IllegalArgumentException: Invalid interval. Contig:1 start:350001 end:300000; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.&lt;init&gt;(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.copynumber.utils.annotatedinterval.AnnotatedIntervalUtilsUnitTest.provideMergeByAnnotation(AnnotatedIntervalUtilsUnitTest.java:215); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45); 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:115); 	at org.testng.internal.Parameters.handleParameters(Parameters.java:509); 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308); 	at org.testng.internal.Invoker.createParameters(Invoker.java:1036); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-431874410
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:0,Deployability,Integrat,Integration,0,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:0,Integrability,Integrat,Integration,0,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:601,Performance,load,load,601,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:12,Testability,test,tests,12,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:173,Testability,test,testRequirePythonEnvironment,173,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:208,Testability,test,tests,208,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:284,Testability,test,testLikelihoodsFromHaplotypes,284,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:372,Testability,test,testUnsuccessfulCanReadFileCheck,372,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:460,Testability,test,tests,460,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:485,Testability,test,tests,485,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345:505,Testability,test,tests,505,Integration tests look okay (there's a Python one that says to skip if it's in docker):; - org.broadinstitute.hellbender.utils.python.StreamingPythonExecutorIntegrationTest#testRequirePythonEnvironment; Unit tests:; - org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest#testLikelihoodsFromHaplotypes; - org.broadinstitute.hellbender.utils.io.IOUtilsUnitTest#testUnsuccessfulCanReadFileCheck (intended to be skipped); - fixed ; No variant calling tests ignored; No python tests ignored; No R tests ignored. The PairHMM one returns:; ```; 03:44:48.410 WARN NativeLibraryLoader - Unable to load libgkl_pairhmm_fpga.so from native/libgkl_pairhmm_fpga.so (/tmp/libgkl_pairhmm_fpga7585161099923450811.so: libgkl_pairhmm_shacc.so: cannot open shared object file: No such file or directory); ```; I don't know if that's expected or not -- maybe yes because it's looking for an FPGA?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592086345
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592720481:120,Performance,load,loadable,120,"@ldgauthier It actually looks like the PairHMM one might be a bug. It should be skipping the subset of ones that aren't loadable, but it seems like it think's it's succesfully loading the library but then failing when it actually tries to compute it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592720481
https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592720481:176,Performance,load,loading,176,"@ldgauthier It actually looks like the PairHMM one might be a bug. It should be skipping the subset of ones that aren't loadable, but it seems like it think's it's succesfully loading the library but then failing when it actually tries to compute it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5339#issuecomment-592720481
https://github.com/broadinstitute/gatk/pull/5341#issuecomment-431919309:21,Deployability,release,release,21,...I mean tomorrow's release.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5341#issuecomment-431919309
https://github.com/broadinstitute/gatk/pull/5341#issuecomment-432078324:28,Testability,test,test,28,@droazen added a quick unit test that failed without my change but passes now. look ok?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5341#issuecomment-432078324
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-433760934:535,Testability,test,test,535,"I have added extra checking and some debug code in the branch nalini_issue_5342 -https://github.com/broadinstitute/gatk/tree/nalini_issue_5342. @bhanugandham, would it be possible to run gatk from this branch to get more information?. Also, would it be possible to get what mount and other nfs options were used while mounting the drive?. If we are not able to pinpoint the issue, we can introduce an option to treat NFS like HDFS/GCS, that is, think about NFS eventually getting consistent and react accordingly. But, I would like to test this branch out first to get more information.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-433760934
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-436771991:87,Deployability,update,update,87,@nalinigans . I have asked the user for more info on the mount and nfs options. I will update this ticket when the user gets back to me. Also would you like me to just run gatk from this branch on my system locally or do I need a special setup for this?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-436771991
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-439940389:57,Availability,ping,pinged,57,@nalinigans . I have not heard from the user yet. I have pinged the user again to send us their nfs info and I will keep you posted. I will have the results from testing the gatk branch you sent to me by the end of the day.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-439940389
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-439940389:162,Testability,test,testing,162,@nalinigans . I have not heard from the user yet. I have pinged the user again to send us their nfs info and I will keep you posted. I will have the results from testing the gatk branch you sent to me by the end of the day.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-439940389
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820:4432,Availability,Error,Error,4432,"disabled; 11:57:50.898 INFO GenomicsDBImport - Initializing engine; 11:57:52.588 INFO FeatureManager - Using codec BEDCodec to read file file:///mnt/isilon/experiment/resources/final_mm10_exon.bed; 11:57:53.791 INFO IntervalArgumentCollection - Processing 199895151 bp from intervals; 11:57:53.825 WARN GenomicsDBImport - A large number of intervals were specified. Using more than 100 intervals in a single import is not recommended and can cause performance to suffer. It is recommended that intervals be aggregated together.; 11:57:53.837 INFO GenomicsDBImport - Done initializing engine; 11:57:54.037 INFO GenomicsDBImport - Vid Map JSON file will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/vidmap.json; 11:57:54.037 INFO GenomicsDBImport - Callset Map JSON file will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/callset.json; 11:57:54.037 INFO GenomicsDBImport - Complete VCF Header will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/vcfheader.vcf; 11:57:54.037 INFO GenomicsDBImport - Importing to array - /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/genomicsdb_array; 11:57:54.038 INFO ProgressMeter - Starting traversal; 11:57:54.038 INFO ProgressMeter - Current Locus Elapsed Minutes Batches Processed Batches/Minute; 12:05:27.926 INFO GenomicsDBImport - Starting batch input file preload; 12:05:29.246 INFO GenomicsDBImport - Finished batch preload; 12:05:29.246 INFO GenomicsDBImport - Importing batch 1 with 4 samples; terminate called after throwing an instance of 'VariantStorageManagerException'; what(): VariantStorageManagerException exception : Error while syncing array chr10$3119692$3120841 to disk; TileDB error message :; ```. The filesystem is being mounted at boot time in /etc/fstab as follows:; ```; //server/share /mnt/isilon cifs uid=user,credentials=/home/user/.smbcredentials,domain=THE_DOMAIN,iocharset=utf8,sec=ntlm,vers=3.0 0 0; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820:4496,Availability,error,error,4496,"disabled; 11:57:50.898 INFO GenomicsDBImport - Initializing engine; 11:57:52.588 INFO FeatureManager - Using codec BEDCodec to read file file:///mnt/isilon/experiment/resources/final_mm10_exon.bed; 11:57:53.791 INFO IntervalArgumentCollection - Processing 199895151 bp from intervals; 11:57:53.825 WARN GenomicsDBImport - A large number of intervals were specified. Using more than 100 intervals in a single import is not recommended and can cause performance to suffer. It is recommended that intervals be aggregated together.; 11:57:53.837 INFO GenomicsDBImport - Done initializing engine; 11:57:54.037 INFO GenomicsDBImport - Vid Map JSON file will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/vidmap.json; 11:57:54.037 INFO GenomicsDBImport - Callset Map JSON file will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/callset.json; 11:57:54.037 INFO GenomicsDBImport - Complete VCF Header will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/vcfheader.vcf; 11:57:54.037 INFO GenomicsDBImport - Importing to array - /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/genomicsdb_array; 11:57:54.038 INFO ProgressMeter - Starting traversal; 11:57:54.038 INFO ProgressMeter - Current Locus Elapsed Minutes Batches Processed Batches/Minute; 12:05:27.926 INFO GenomicsDBImport - Starting batch input file preload; 12:05:29.246 INFO GenomicsDBImport - Finished batch preload; 12:05:29.246 INFO GenomicsDBImport - Importing batch 1 with 4 samples; terminate called after throwing an instance of 'VariantStorageManagerException'; what(): VariantStorageManagerException exception : Error while syncing array chr10$3119692$3120841 to disk; TileDB error message :; ```. The filesystem is being mounted at boot time in /etc/fstab as follows:; ```; //server/share /mnt/isilon cifs uid=user,credentials=/home/user/.smbcredentials,domain=THE_DOMAIN,iocharset=utf8,sec=ntlm,vers=3.0 0 0; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820:4502,Integrability,message,message,4502,"disabled; 11:57:50.898 INFO GenomicsDBImport - Initializing engine; 11:57:52.588 INFO FeatureManager - Using codec BEDCodec to read file file:///mnt/isilon/experiment/resources/final_mm10_exon.bed; 11:57:53.791 INFO IntervalArgumentCollection - Processing 199895151 bp from intervals; 11:57:53.825 WARN GenomicsDBImport - A large number of intervals were specified. Using more than 100 intervals in a single import is not recommended and can cause performance to suffer. It is recommended that intervals be aggregated together.; 11:57:53.837 INFO GenomicsDBImport - Done initializing engine; 11:57:54.037 INFO GenomicsDBImport - Vid Map JSON file will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/vidmap.json; 11:57:54.037 INFO GenomicsDBImport - Callset Map JSON file will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/callset.json; 11:57:54.037 INFO GenomicsDBImport - Complete VCF Header will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/vcfheader.vcf; 11:57:54.037 INFO GenomicsDBImport - Importing to array - /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/genomicsdb_array; 11:57:54.038 INFO ProgressMeter - Starting traversal; 11:57:54.038 INFO ProgressMeter - Current Locus Elapsed Minutes Batches Processed Batches/Minute; 12:05:27.926 INFO GenomicsDBImport - Starting batch input file preload; 12:05:29.246 INFO GenomicsDBImport - Finished batch preload; 12:05:29.246 INFO GenomicsDBImport - Importing batch 1 with 4 samples; terminate called after throwing an instance of 'VariantStorageManagerException'; what(): VariantStorageManagerException exception : Error while syncing array chr10$3119692$3120841 to disk; TileDB error message :; ```. The filesystem is being mounted at boot time in /etc/fstab as follows:; ```; //server/share /mnt/isilon cifs uid=user,credentials=/home/user/.smbcredentials,domain=THE_DOMAIN,iocharset=utf8,sec=ntlm,vers=3.0 0 0; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820:1078,Performance,Load,Loading,1078,"k-4.0.12.0/gatk-package-4.0.12.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx4g -Xms4g -jar /home/user/gatk-4.0.12.0/gatk-package-4.0.12.0-local.jar GenomicsDBImport -V /mnt/isilon/experiment/18075-01/aligned/variant_calling/18175D-01-03_S44_L006.filt.srt.nodup.recal.bam.g.vcf.gz -V /mnt/isilon/experiment/18075-01/aligned/variant_calling/18175D-01-04_S45_L006.filt.srt.nodup.recal.bam.g.vcf.gz -V /mnt/isilon/experiment/18075-01/aligned/variant_calling/18175D-01-01_S42_L006.filt.srt.nodup.recal.bam.g.vcf.gz -V /mnt/isilon/experiment/18075-01/aligned/variant_calling/18175D-01-02_S43_L006.filt.srt.nodup.recal.bam.g.vcf.gz --genomicsdb-workspace-path /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db -L /mnt/isilon/experiment/resources/final_mm10_exon.bed --interval-padding 500 --reader-threads 5; 11:57:49.202 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/user/gatk-4.0.12.0/gatk-package-4.0.12.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 11:57:50.896 INFO GenomicsDBImport - ------------------------------------------------------------; 11:57:50.896 INFO GenomicsDBImport - The Genome Analysis Toolkit (GATK) v4.0.12.0; 11:57:50.896 INFO GenomicsDBImport - For support and documentation go to https://software.broadinstitute.org/gatk/; 11:57:50.896 INFO GenomicsDBImport - Executing as user@user-machine on Linux v3.13.0-119-generic amd64; 11:57:50.896 INFO GenomicsDBImport - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_191-b12; 11:57:50.896 INFO GenomicsDBImport - Start Date/Time: January 11, 2019 11:57:49 AM EST; 11:57:50.897 INFO GenomicsDBImport - ------------------------------------------------------------; 11:57:50.897 INFO GenomicsDBImport - ------------------------------------------------------------; 11:57:50.897 INFO GenomicsDBImport - HTSJDK Version: 2.18.1; 11",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820:3182,Performance,perform,performance,3182,FO GenomicsDBImport - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 11:57:50.897 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 11:57:50.897 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 11:57:50.897 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 11:57:50.897 INFO GenomicsDBImport - Deflater: IntelDeflater; 11:57:50.897 INFO GenomicsDBImport - Inflater: IntelInflater; 11:57:50.897 INFO GenomicsDBImport - GCS max retries/reopens: 20; 11:57:50.898 INFO GenomicsDBImport - Requester pays: disabled; 11:57:50.898 INFO GenomicsDBImport - Initializing engine; 11:57:52.588 INFO FeatureManager - Using codec BEDCodec to read file file:///mnt/isilon/experiment/resources/final_mm10_exon.bed; 11:57:53.791 INFO IntervalArgumentCollection - Processing 199895151 bp from intervals; 11:57:53.825 WARN GenomicsDBImport - A large number of intervals were specified. Using more than 100 intervals in a single import is not recommended and can cause performance to suffer. It is recommended that intervals be aggregated together.; 11:57:53.837 INFO GenomicsDBImport - Done initializing engine; 11:57:54.037 INFO GenomicsDBImport - Vid Map JSON file will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/vidmap.json; 11:57:54.037 INFO GenomicsDBImport - Callset Map JSON file will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/callset.json; 11:57:54.037 INFO GenomicsDBImport - Complete VCF Header will be written to /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/vcfheader.vcf; 11:57:54.037 INFO GenomicsDBImport - Importing to array - /mnt/isilon/experiment/18075-01/aligned/variant_calling/genomics_db/genomicsdb_array; 11:57:54.038 INFO ProgressMeter - Starting traversal; 11:57:54.038 INFO ProgressMeter - Current Locus Elapsed Minutes Batches Processed Batches/Minute; 12:05:27.926 INFO GenomicsDBImport - Starting batch inpu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453590820
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453600476:46,Modifiability,variab,variable,46,Karthik had suggested setting the environment variable TILEDB_DISABLE_FILE_LOCKING=1 for NFS (see https://github.com/broadinstitute/gatk/issues/4753) -- maybe give that a shot?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453600476
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453657941:33,Modifiability,variab,variable,33,"I tried setting that environment variable, but it did not resolve the issue. Please note that I have this filesystem mounted as `CIFS` not `NFS`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453657941
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453695003:83,Availability,error,erroring,83,"Sync uses the system call fsync() to synchronize contents and not sure how CIFS is erroring out. Please see my [previous comment](https://github.com/broadinstitute/gatk/issues/5342#issuecomment-433760934). Would it be possible to gather some more information using the gatk from [branch nalini_issue_5342](https://github.com/broadinstitute/gatk/tree/nalini_issue_5342)? This branch puts out additional information with errno, etc. One thing that can be done, is make an error return from the fsync() call non-fatal as it does not seem to be well supported for CIFS.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453695003
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453695003:470,Availability,error,error,470,"Sync uses the system call fsync() to synchronize contents and not sure how CIFS is erroring out. Please see my [previous comment](https://github.com/broadinstitute/gatk/issues/5342#issuecomment-433760934). Would it be possible to gather some more information using the gatk from [branch nalini_issue_5342](https://github.com/broadinstitute/gatk/tree/nalini_issue_5342)? This branch puts out additional information with errno, etc. One thing that can be done, is make an error return from the fsync() call non-fatal as it does not seem to be well supported for CIFS.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453695003
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453695003:37,Integrability,synchroniz,synchronize,37,"Sync uses the system call fsync() to synchronize contents and not sure how CIFS is erroring out. Please see my [previous comment](https://github.com/broadinstitute/gatk/issues/5342#issuecomment-433760934). Would it be possible to gather some more information using the gatk from [branch nalini_issue_5342](https://github.com/broadinstitute/gatk/tree/nalini_issue_5342)? This branch puts out additional information with errno, etc. One thing that can be done, is make an error return from the fsync() call non-fatal as it does not seem to be well supported for CIFS.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-453695003
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-457068831:78,Deployability,release,release,78,"@olavurmortensen, no #5587 does not solve this issue. Currently, working on a release of GenomicsDB to help with this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-457068831
https://github.com/broadinstitute/gatk/issues/5342#issuecomment-457144237:48,Deployability,release,release,48,@nalinigans Sounds good. Any time frame on that release?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-457144237
https://github.com/broadinstitute/gatk/pull/5344#issuecomment-432288695:29,Deployability,release,release,29,"This isn't necessary for the release, and doesn't yet have some changes that @jamesemery needs, but we might as well give it a bump.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5344#issuecomment-432288695
https://github.com/broadinstitute/gatk/issues/5345#issuecomment-592067740:154,Testability,test,testing,154,"I only know of one time we needed this since this issue was opened and the shell script was just fine. For posterity, the script is at scripts/funcotator/testing/compareTwoReferenceDictionaries.sh",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5345#issuecomment-592067740
https://github.com/broadinstitute/gatk/issues/5348#issuecomment-434452495:5,Deployability,update,update,5,Must update `DataSourceUtils::assertPathFilePropertiesField` to allow for absolute paths / URI paths for the data sources supporting files.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5348#issuecomment-434452495
https://github.com/broadinstitute/gatk/issues/5348#issuecomment-434452495:30,Testability,assert,assertPathFilePropertiesField,30,Must update `DataSourceUtils::assertPathFilePropertiesField` to allow for absolute paths / URI paths for the data sources supporting files.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5348#issuecomment-434452495
https://github.com/broadinstitute/gatk/issues/5352#issuecomment-432709807:157,Availability,down,down,157,"If only `HaplotypeCaller` uses `--contamination-fraction-to-filter`/`--contamination-fraction-per-sample-file`, then perhaps those arguments should be moved down into `HaplotypeCallerArgumentCollection`?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5352#issuecomment-432709807
https://github.com/broadinstitute/gatk/issues/5352#issuecomment-445517991:142,Modifiability,inherit,inheritance,142,"Fixed for filtering in #5498. `Mutect2` itself will be trickier because a lot of unused arguments are a result of `SomaticGenotypingEngine`'s inheritance. This will involve significant refactoring, but the genotyping classes will make more sense.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5352#issuecomment-445517991
https://github.com/broadinstitute/gatk/issues/5352#issuecomment-445517991:185,Modifiability,refactor,refactoring,185,"Fixed for filtering in #5498. `Mutect2` itself will be trickier because a lot of unused arguments are a result of `SomaticGenotypingEngine`'s inheritance. This will involve significant refactoring, but the genotyping classes will make more sense.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5352#issuecomment-445517991
https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433105689:140,Testability,test,test,140,"Hi @gmagoon, I'm taking a look at this but haven't been able to reproduce it so far. Is there any chance you could share a snippet of your `test.bam` file at one of the loci in question, or is it protected data?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433105689
https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433123143:19,Testability,test,testing,19,"Hi @cwhelan, In my testing, the issue doesn't seem to be sensitive to the choice of BAM (e.g. same crash occurs with a BAM that doesn't have any read coverage at this locus). If you haven't been able to reproduce the issue, I'm wondering if the critical factor may be some aspect of the particular genotypes in the `--alleles` VCF (e.g. I noticed one sample was `0|1` in one of the two records and `1|0` in the other). In any case, I've attached a BAM and alleles VCF that should enable you to reproduce the issue. [gatk.issue5355.test.zip](https://github.com/broadinstitute/gatk/files/2515958/gatk.issue5355.test.zip)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433123143
https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433123143:531,Testability,test,test,531,"Hi @cwhelan, In my testing, the issue doesn't seem to be sensitive to the choice of BAM (e.g. same crash occurs with a BAM that doesn't have any read coverage at this locus). If you haven't been able to reproduce the issue, I'm wondering if the critical factor may be some aspect of the particular genotypes in the `--alleles` VCF (e.g. I noticed one sample was `0|1` in one of the two records and `1|0` in the other). In any case, I've attached a BAM and alleles VCF that should enable you to reproduce the issue. [gatk.issue5355.test.zip](https://github.com/broadinstitute/gatk/files/2515958/gatk.issue5355.test.zip)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433123143
https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433123143:609,Testability,test,test,609,"Hi @cwhelan, In my testing, the issue doesn't seem to be sensitive to the choice of BAM (e.g. same crash occurs with a BAM that doesn't have any read coverage at this locus). If you haven't been able to reproduce the issue, I'm wondering if the critical factor may be some aspect of the particular genotypes in the `--alleles` VCF (e.g. I noticed one sample was `0|1` in one of the two records and `1|0` in the other). In any case, I've attached a BAM and alleles VCF that should enable you to reproduce the issue. [gatk.issue5355.test.zip](https://github.com/broadinstitute/gatk/files/2515958/gatk.issue5355.test.zip)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433123143
https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433468224:784,Availability,error,error,784,"Short answer: No, it's not using any information from the genotypes at all. You should get the same results with or without genotypes. Long technical answer: Both of these issues are related to the fact that when combining multiple possible variants at a site (i.e. variants with different alleles from the GGA `-alleles` input as well as any alleles detected in the input sample data), we often need to do remapping of the reference and alternate alleles so that they can all be described in the same context. In the places that caused these bugs we were trying to do this remapping to the alleles directly, but the fact that the variants had genotypes which referred to the original set of non-remapped alleles meant that those original alleles were still kept around and caused an error in the downstream code that tries to put together the final variant record to be emitted at the site. So it was just a case of links within the data structures that hold the genotypes interfering with the intended result, which should be based only on the input set of alternate alleles.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433468224
https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433468224:797,Availability,down,downstream,797,"Short answer: No, it's not using any information from the genotypes at all. You should get the same results with or without genotypes. Long technical answer: Both of these issues are related to the fact that when combining multiple possible variants at a site (i.e. variants with different alleles from the GGA `-alleles` input as well as any alleles detected in the input sample data), we often need to do remapping of the reference and alternate alleles so that they can all be described in the same context. In the places that caused these bugs we were trying to do this remapping to the alleles directly, but the fact that the variants had genotypes which referred to the original set of non-remapped alleles meant that those original alleles were still kept around and caused an error in the downstream code that tries to put together the final variant record to be emitted at the site. So it was just a case of links within the data structures that hold the genotypes interfering with the intended result, which should be based only on the input set of alternate alleles.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433468224
https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433468224:351,Safety,detect,detected,351,"Short answer: No, it's not using any information from the genotypes at all. You should get the same results with or without genotypes. Long technical answer: Both of these issues are related to the fact that when combining multiple possible variants at a site (i.e. variants with different alleles from the GGA `-alleles` input as well as any alleles detected in the input sample data), we often need to do remapping of the reference and alternate alleles so that they can all be described in the same context. In the places that caused these bugs we were trying to do this remapping to the alleles directly, but the fact that the variants had genotypes which referred to the original set of non-remapped alleles meant that those original alleles were still kept around and caused an error in the downstream code that tries to put together the final variant record to be emitted at the site. So it was just a case of links within the data structures that hold the genotypes interfering with the intended result, which should be based only on the input set of alternate alleles.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355#issuecomment-433468224
https://github.com/broadinstitute/gatk/pull/5357#issuecomment-432873687:11,Deployability,integrat,integration,11,Yeah - the integration tests cover this case. I had some trouble adding unit tests for this because of #5356 .,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5357#issuecomment-432873687
https://github.com/broadinstitute/gatk/pull/5357#issuecomment-432873687:11,Integrability,integrat,integration,11,Yeah - the integration tests cover this case. I had some trouble adding unit tests for this because of #5356 .,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5357#issuecomment-432873687
https://github.com/broadinstitute/gatk/pull/5357#issuecomment-432873687:23,Testability,test,tests,23,Yeah - the integration tests cover this case. I had some trouble adding unit tests for this because of #5356 .,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5357#issuecomment-432873687
https://github.com/broadinstitute/gatk/pull/5357#issuecomment-432873687:77,Testability,test,tests,77,Yeah - the integration tests cover this case. I had some trouble adding unit tests for this because of #5356 .,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5357#issuecomment-432873687
https://github.com/broadinstitute/gatk/issues/5362#issuecomment-433233584:6,Usability,clear,clear,6,"To be clear, when I learned to use VariantFiltration 1.5 years ago, I was told to use the `&&` and `||` expressions and _no other formatting_. This may have been alright in GATK3 (I did not check), but it seems in GATK4 it is not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5362#issuecomment-433233584
https://github.com/broadinstitute/gatk/issues/5362#issuecomment-433233584:20,Usability,learn,learned,20,"To be clear, when I learned to use VariantFiltration 1.5 years ago, I was told to use the `&&` and `||` expressions and _no other formatting_. This may have been alright in GATK3 (I did not check), but it seems in GATK4 it is not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5362#issuecomment-433233584
https://github.com/broadinstitute/gatk/issues/5362#issuecomment-433233779:46,Deployability,update,updated,46,Also assigning myself in case what we want is updated documentation only.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5362#issuecomment-433233779
https://github.com/broadinstitute/gatk/issues/5362#issuecomment-436026665:190,Deployability,toggle,toggled,190,"It looks like in each of the cases that are failing, the filter expression references an attribute that isn't present in the variant, which the tool treats as ""PASS"" by default (this can be toggled using `--missing-values-evaluate-as-failing true`, in which case variants with missing values will be filtered). The parentheses are confounding but not relevant - the failing case above that uses no parens references `MQRandSum` (sic); the succeeding case references `MQRankSum`. Separating the expression components into separate filter expression arguments **does** change the results because each expression is evaluated individually and serially, so a reference to a missing value in one expression results in a `PASS`, but the subsequent expression results in the filter being applied if it meets the criteria. We should certainly update the doc to reinforce these subtleties. Another option would be to have a stricter ""throw on missing"" option as the default, but that could lead to lead to warning fatigue. Any other suggestions ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5362#issuecomment-436026665
https://github.com/broadinstitute/gatk/issues/5362#issuecomment-436026665:835,Deployability,update,update,835,"It looks like in each of the cases that are failing, the filter expression references an attribute that isn't present in the variant, which the tool treats as ""PASS"" by default (this can be toggled using `--missing-values-evaluate-as-failing true`, in which case variants with missing values will be filtered). The parentheses are confounding but not relevant - the failing case above that uses no parens references `MQRandSum` (sic); the succeeding case references `MQRankSum`. Separating the expression components into separate filter expression arguments **does** change the results because each expression is evaluated individually and serially, so a reference to a missing value in one expression results in a `PASS`, but the subsequent expression results in the filter being applied if it meets the criteria. We should certainly update the doc to reinforce these subtleties. Another option would be to have a stricter ""throw on missing"" option as the default, but that could lead to lead to warning fatigue. Any other suggestions ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5362#issuecomment-436026665
https://github.com/broadinstitute/gatk/issues/5362#issuecomment-436040103:161,Usability,intuit,intuitive,161,"@obigriffith Right, but the expression you cited did reference attribute(s) that don't exist in the variants you cited as not being filtered (I'm not saying its intuitive, just that this explains whats happening). . i.e. I think you cited this variant:. `chr6 54228213 . A G 412.77 PASS AC=2;AF=1.00;AN=2;DP=12;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=52.55;QD=28.71;SOR=3.442 GT:AD:DP:GQ:PL 1/1:0,11:11:33:441,33,0`. as not being filtered when used with this expression:. `""QD < 2.0 || FS > 60.0 || MQ < 40.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0 || SOR > 3.0""`. Even though this has an SOR value that meets the filter criteria, the expression is short-circuited when applied to that variant because it has no `MQRankSum` attribute. This results in a PASS. If you have a counter example, or I'm missing something, please do let me know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5362#issuecomment-436040103
https://github.com/broadinstitute/gatk/issues/5362#issuecomment-436049581:1048,Usability,clear,clear,1048,"Ah! I see. This is indeed an unintuitive behavior. Especially in the case where a user is providing a compound expression with a series of filters separated by the OR operator. The user is expecting that any variant that meets any of the filter criteria will be marked for filtering. If I understand correctly, a variant could fail 4/5 filters, be NULL for 1/5 filter expressions and end up with a PASS status! This is rarely the desired behavior. In this use case, I might want an --ignore-missing-values option. I don't necessarily want to fail all variants just because they have a missing value for a feature. But, I also don't want them to be evaluated as PASS if they fail filters for which they do have values. I guess maybe a partial solution is to strongly encourage separate filter expressions, for this the most common use case of wanting to apply several filters in the OR situation. I guess if you have AND operators in the mix, it gets more complicated. If I want to filter a variant only if it fails filter_A AND filter_B it is less clear what the right behavior is when feature A or B is NULL. I guess it should pass?. I don't have enough understanding of why these values are missing. I'm using a pretty standard workflow (GATK HaplotypeCaller) to get these variants and I guess I naively assumed they would be complete for these features.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5362#issuecomment-436049581
https://github.com/broadinstitute/gatk/pull/5365#issuecomment-433471265:1961,Modifiability,config,config,1961,typingEngineUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyR2Vub3R5cGluZ0VuZ2luZVVuaXRUZXN0LmphdmE=) | `100% <100%> (ø)` | `31 <0> (ø)` | :arrow_down: |; | [...ypecaller/AssemblyBasedCallerGenotypingEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyR2Vub3R5cGluZ0VuZ2luZS5qYXZh) | `89.45% <100%> (+0.049%)` | `89 <0> (+1)` | :arrow_up: |; | [...stitute/hellbender/cmdline/CommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0NvbW1hbmRMaW5lUHJvZ3JhbS5qYXZh) | `83.117% <0%> (+1.948%)` | `43% <0%> (+1%)` | :arrow_up: |; | [...stitute/hellbender/utils/config/ConfigFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb25maWcvQ29uZmlnRmFjdG9yeS5qYXZh) | `76.398% <0%> (+3.727%)` | `45% <0%> (+2%)` | :arrow_up: |; | [...r/arguments/CopyNumberArgumentValidationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9Db3B5TnVtYmVyQXJndW1lbnRWYWxpZGF0aW9uVXRpbHMuamF2YQ==) | `77.778% <0%> (+6.173%)` | `20% <0%> (+1%)` | :arrow_up: |; | [...tute/hellbender/utils/runtime/ProcessSettings.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1Byb2Nlc3NTZXR0aW5ncy5qYXZh) | `93.75% <0%> (+6.25%)` | `18% <0%> (+2%)` | :arrow_up: |; | [...te/hellbender/utils/python/PythonExecutorBase.java](https://codecov.io/gh/br,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5365#issuecomment-433471265
https://github.com/broadinstitute/gatk/pull/5365#issuecomment-433471265:1968,Modifiability,Config,ConfigFactory,1968,typingEngineUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyR2Vub3R5cGluZ0VuZ2luZVVuaXRUZXN0LmphdmE=) | `100% <100%> (ø)` | `31 <0> (ø)` | :arrow_down: |; | [...ypecaller/AssemblyBasedCallerGenotypingEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseUJhc2VkQ2FsbGVyR2Vub3R5cGluZ0VuZ2luZS5qYXZh) | `89.45% <100%> (+0.049%)` | `89 <0> (+1)` | :arrow_up: |; | [...stitute/hellbender/cmdline/CommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0NvbW1hbmRMaW5lUHJvZ3JhbS5qYXZh) | `83.117% <0%> (+1.948%)` | `43% <0%> (+1%)` | :arrow_up: |; | [...stitute/hellbender/utils/config/ConfigFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb25maWcvQ29uZmlnRmFjdG9yeS5qYXZh) | `76.398% <0%> (+3.727%)` | `45% <0%> (+2%)` | :arrow_up: |; | [...r/arguments/CopyNumberArgumentValidationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9Db3B5TnVtYmVyQXJndW1lbnRWYWxpZGF0aW9uVXRpbHMuamF2YQ==) | `77.778% <0%> (+6.173%)` | `20% <0%> (+1%)` | :arrow_up: |; | [...tute/hellbender/utils/runtime/ProcessSettings.java](https://codecov.io/gh/broadinstitute/gatk/pull/5365/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1Byb2Nlc3NTZXR0aW5ncy5qYXZh) | `93.75% <0%> (+6.25%)` | `18% <0%> (+2%)` | :arrow_up: |; | [...te/hellbender/utils/python/PythonExecutorBase.java](https://codecov.io/gh/br,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5365#issuecomment-433471265
https://github.com/broadinstitute/gatk/pull/5367#issuecomment-433753127:2475,Deployability,pipeline,pipelines,2475,C5qYXZh) | `100% <100%> (ø)` | `8 <8> (?)` | |; | [...nder/engine/filters/IntervalOverlapReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5367/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9JbnRlcnZhbE92ZXJsYXBSZWFkRmlsdGVyLmphdmE=) | `100% <100%> (ø)` | `5 <5> (?)` | |; | [...ils/nio/NioFileCopierWithProgressMeterResults.java](https://codecov.io/gh/broadinstitute/gatk/pull/5367/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyUmVzdWx0cy5qYXZh) | `0% <0%> (-94.737%)` | `0% <0%> (-9%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5367/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5367/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...ols/funcotator/FuncotatorDataSourceDownloader.java](https://codecov.io/gh/broadinstitute/gatk/pull/5367/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JEYXRhU291cmNlRG93bmxvYWRlci5qYXZh) | `0% <0%> (-66.197%)` | `0% <0%> (-14%)` | |; | [...nder/utils/nio/NioFileCopierWithProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5367/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyLmphdmE=) | `17% <0%> (-52.5%)` | `9% <0%> (-30%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5367/d,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5367#issuecomment-433753127
https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434419408:207,Availability,avail,available,207,"Do we really want to enable this as a general purpose filter ? It will appear to users that it does the same thing as `-L`, but it won't be obvious that its much less efficient in the case where an index is available. Perhaps this should be `@Advanced`, or enabled only for PrintReads ? A more drastic alternative would be to have the filter throw if the input header indicates the input is already sorted (although using -L would still require an index).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434419408
https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434419408:167,Energy Efficiency,efficient,efficient,167,"Do we really want to enable this as a general purpose filter ? It will appear to users that it does the same thing as `-L`, but it won't be obvious that its much less efficient in the case where an index is available. Perhaps this should be `@Advanced`, or enabled only for PrintReads ? A more drastic alternative would be to have the filter throw if the input header indicates the input is already sorted (although using -L would still require an index).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434419408
https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434579278:294,Modifiability,plugin,plugin,294,"@cmnbroad - I agree that we can add it as an `@Advanced` agument/filter, and clarify in the documentaion (javadoc for barclay-generated pages and in the argument itself) the purpose of this filter, but I would like to have this as a general purpose filter in `ReadTools` and thus picked by the plugin.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434579278
https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434681393:61,Modifiability,plugin,plugin,61,"@magicdgs You could include this filter in ReadTools and the plugin would discover it - after all, thats part of the purpose of plugins ;-). Anyway, at a minimum we should make sure the doc clearly explains when/how to use this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434681393
https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434681393:128,Modifiability,plugin,plugins,128,"@magicdgs You could include this filter in ReadTools and the plugin would discover it - after all, thats part of the purpose of plugins ;-). Anyway, at a minimum we should make sure the doc clearly explains when/how to use this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434681393
https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434681393:190,Usability,clear,clearly,190,"@magicdgs You could include this filter in ReadTools and the plugin would discover it - after all, thats part of the purpose of plugins ;-). Anyway, at a minimum we should make sure the doc clearly explains when/how to use this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5367#issuecomment-434681393
https://github.com/broadinstitute/gatk/pull/5367#issuecomment-435175872:64,Modifiability,refactor,refactor,64,@magicDGS Perhaps a better solution to this problem would be to refactor the -L code to be able to handle queryname sorted files (we could produce a very similar filter to your filter and add it to the traversal early),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5367#issuecomment-435175872
https://github.com/broadinstitute/gatk/issues/5372#issuecomment-434156611:488,Integrability,wrap,wrapper,488,"I thought I figured this out but I haven't. I'm looking at sample1.md.bam file header, but I can't figure it out. ```. for BAM in sample1.md.bam ; do samtools view -H $BAM; > header.sam; done; @HD	VN:1.5	SO:coordinate; @SQ	SN:1	LN:4918979; @SQ	SN:2	LN:4844472; @SQ	SN:3	LN:4079167; @SQ	SN:4	LN:3923705; @SQ	SN:5	LN:3948441; @SQ	SN:6	LN:3778736; @SQ	SN:7	LN:2058334; @SQ	SN:8	LN:1833124; @PG	ID:hisat2	PN:hisat2	VN:2.1.0	CL:""/usr/local/apps/eb/HISAT2/2.1.0-foss-2016b/bin/hisat2-align-s --wrapper basic-0 -p 8 --no-spliced-alignment -I 100 -x ./ref_tran.dir/ref_tran -S sample1.sam -1 e1_R1.fastq -2 e1_R2.fastq""; @PG	ID:MarkDuplicates	VN:2.16.0-SNAPSHOT	CL:MarkDuplicates INPUT=[sample1.bam] OUTPUT=sample1.md.bam METRICS_FILE=sample1.md.metrics.txt MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP=50000 MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=8000 SORTING_COLLECTION_SIZE_RATIO=0.25 TAG_DUPLICATE_SET_MEMBERS=false REMOVE_SEQUENCING_DUPLICATES=false TAGGING_POLICY=DontTag CLEAR_DT=true ADD_PG_TAG_TO_READS=true REMOVE_DUPLICATES=false ASSUME_SORTED=false DUPLICATE_SCORING_STRATEGY=SUM_OF_BASE_QUALITIES PROGRAM_RECORD_ID=MarkDuplicates PROGRAM_GROUP_NAME=MarkDuplicates READ_NAME_REGEX=<optimized capture of last three ':' separated fields as numeric values> OPTICAL_DUPLICATE_PIXEL_DISTANCE=100 MAX_OPTICAL_DUPLICATE_SET_SIZE=300000 VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json USE_JDK_DEFLATER=false USE_JDK_INFLATER=false	PN:MarkDuplicates. ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5372#issuecomment-434156611
https://github.com/broadinstitute/gatk/issues/5372#issuecomment-434156611:1174,Performance,optimiz,optimized,1174,"I thought I figured this out but I haven't. I'm looking at sample1.md.bam file header, but I can't figure it out. ```. for BAM in sample1.md.bam ; do samtools view -H $BAM; > header.sam; done; @HD	VN:1.5	SO:coordinate; @SQ	SN:1	LN:4918979; @SQ	SN:2	LN:4844472; @SQ	SN:3	LN:4079167; @SQ	SN:4	LN:3923705; @SQ	SN:5	LN:3948441; @SQ	SN:6	LN:3778736; @SQ	SN:7	LN:2058334; @SQ	SN:8	LN:1833124; @PG	ID:hisat2	PN:hisat2	VN:2.1.0	CL:""/usr/local/apps/eb/HISAT2/2.1.0-foss-2016b/bin/hisat2-align-s --wrapper basic-0 -p 8 --no-spliced-alignment -I 100 -x ./ref_tran.dir/ref_tran -S sample1.sam -1 e1_R1.fastq -2 e1_R2.fastq""; @PG	ID:MarkDuplicates	VN:2.16.0-SNAPSHOT	CL:MarkDuplicates INPUT=[sample1.bam] OUTPUT=sample1.md.bam METRICS_FILE=sample1.md.metrics.txt MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP=50000 MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=8000 SORTING_COLLECTION_SIZE_RATIO=0.25 TAG_DUPLICATE_SET_MEMBERS=false REMOVE_SEQUENCING_DUPLICATES=false TAGGING_POLICY=DontTag CLEAR_DT=true ADD_PG_TAG_TO_READS=true REMOVE_DUPLICATES=false ASSUME_SORTED=false DUPLICATE_SCORING_STRATEGY=SUM_OF_BASE_QUALITIES PROGRAM_RECORD_ID=MarkDuplicates PROGRAM_GROUP_NAME=MarkDuplicates READ_NAME_REGEX=<optimized capture of last three ':' separated fields as numeric values> OPTICAL_DUPLICATE_PIXEL_DISTANCE=100 MAX_OPTICAL_DUPLICATE_SET_SIZE=300000 VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json USE_JDK_DEFLATER=false USE_JDK_INFLATER=false	PN:MarkDuplicates. ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5372#issuecomment-434156611
https://github.com/broadinstitute/gatk/issues/5373#issuecomment-434275953:136,Deployability,pipeline,pipeline,136,"Hi @shengqh, tools such as you describe are still under development. We are also still working to tune hyperparameters in the main gCNV pipeline, so thanks for trying it out! Please let us know if you encounter any issues.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5373#issuecomment-434275953
https://github.com/broadinstitute/gatk/issues/5373#issuecomment-434275953:98,Performance,tune,tune,98,"Hi @shengqh, tools such as you describe are still under development. We are also still working to tune hyperparameters in the main gCNV pipeline, so thanks for trying it out! Please let us know if you encounter any issues.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5373#issuecomment-434275953
https://github.com/broadinstitute/gatk/issues/5373#issuecomment-434476283:46,Availability,avail,available,46,"@samuelklee Since currently there is no tools available, I am trying to combine the CNV at interval level first. But I don't understand very clearly what the GT (genotype) 0,1,2 and CN (0,1,2,4) indicated in gVCF result. Should I filter out all entries with GT not equals to 0 as CNV events?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5373#issuecomment-434476283
https://github.com/broadinstitute/gatk/issues/5373#issuecomment-434476283:141,Usability,clear,clearly,141,"@samuelklee Since currently there is no tools available, I am trying to combine the CNV at interval level first. But I don't understand very clearly what the GT (genotype) 0,1,2 and CN (0,1,2,4) indicated in gVCF result. Should I filter out all entries with GT not equals to 0 as CNV events?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5373#issuecomment-434476283
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334:13,Testability,test,test,13,"I've added a test to write via NIO, but instead of writing to an actual bucket I'm using the jimfs in-memory filesystem NIO provider. This still checks that the VCF code can use NIO paths, but it runs a lot faster.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-446352022:2845,Availability,down,downsampling,2845,...ls/genomicsdb/GenomicsDBImportIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5378/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnRJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `88.47% <100%> (ø)` | `80 <0> (ø)` | :arrow_down: |; | [...s/spark/pathseq/PSBuildReferenceTaxonomyUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5378/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL1BTQnVpbGRSZWZlcmVuY2VUYXhvbm9teVV0aWxzLmphdmE=) | `87.742% <100%> (ø)` | `43 <1> (ø)` | :arrow_down: |; | [...ls/walkers/mutect/CreateSomaticPanelOfNormals.java](https://codecov.io/gh/broadinstitute/gatk/pull/5378/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHMuamF2YQ==) | `93.846% <100%> (ø)` | `21 <0> (ø)` | :arrow_down: |; | [...ls/downsampling/AlleleBiasedDownsamplingUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5378/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvQWxsZWxlQmlhc2VkRG93bnNhbXBsaW5nVXRpbHMuamF2YQ==) | `79.31% <100%> (ø)` | `24 <0> (ø)` | :arrow_down: |; | [...kers/vqsr/VariantGaussianMixtureModelUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5378/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvVmFyaWFudEdhdXNzaWFuTWl4dHVyZU1vZGVsVW5pdFRlc3QuamF2YQ==) | `83.019% <100%> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5378/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `73.148% <100%> (ø)` | `98 <1> (ø)` | :arrow_down: |; | [.../walkers/vqsr/TruthSensitivityTrancheUnitTest.java](https://codecov.io/gh/broadinstit,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-446352022
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:149,Deployability,integrat,integration,149,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:364,Deployability,integrat,integration,364,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:149,Integrability,integrat,integration,149,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:364,Integrability,integrat,integration,364,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:116,Testability,test,test,116,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:161,Testability,test,test,161,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:229,Testability,test,test,229,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:268,Testability,test,testing,268,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:376,Testability,test,test,376,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:541,Availability,redundant,redundant,541,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:69,Deployability,integrat,integration,69,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:400,Deployability,integrat,integration,400,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:69,Integrability,integrat,integration,69,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:400,Integrability,integrat,integration,400,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:541,Safety,redund,redundant,541,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:55,Testability,test,test,55,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:81,Testability,test,test,81,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:224,Testability,test,test,224,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:412,Testability,test,test,412,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:533,Testability,test,test,533,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:83,Deployability,Integrat,IntegrationTestSpec,83,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:209,Deployability,Integrat,IntegrationTestSpec,209,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:83,Integrability,Integrat,IntegrationTestSpec,83,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:209,Integrability,Integrat,IntegrationTestSpec,209,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:197,Modifiability,refactor,refactoring,197,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:291,Modifiability,refactor,refactoring,291,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:28,Testability,test,test,28,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:362,Testability,test,tests,362,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:470,Testability,test,test,470,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612:165,Usability,simpl,simply,165,"I've added a new end-to-end test for SelectVariants that writes to GCS. Sadly, the IntegrationTestSpec class uses Files throughout, so it wasn't possible to do this simply without first completely refactoring IntegrationTestSpec (which should probably be its own pull request). . Doing this refactoring would have the advantage that changing existing end-to-end tests from local to GCS would be trivial. For now instead I went with an ad-hoc approach. It works, and the test passes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455686612
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:167,Availability,failure,failures,167,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:352,Availability,failure,failures,352,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:584,Availability,failure,failures,584,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:65,Deployability,Integrat,IntegrationTest,65,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:388,Deployability,Integrat,IntegrationTest,388,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:65,Integrability,Integrat,IntegrationTest,65,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:388,Integrability,Integrat,IntegrationTest,388,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:55,Modifiability,refactor,refactor,55,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:131,Testability,test,tests,131,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:579,Testability,test,test,579,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065:49,Availability,failure,failures,49,"@cmnbroad Thank you for pointing out those build failures and even digging down to the apparent cause! I investigated and the issue wasn't inability to decompress gzip files (or at least wasn't only that), but XReadLines trims the lines by default and my code doesn't. The ""expected"" files have an extra tab at the end of some lines (the CHROM line for example) that this was picking up. What I've done is updated XReadLines so it can take Paths as input, so we get good matching behavior without having to duplicate code. While I was at it I also exposed XReadLines' ability to strip out comments, so assertEqualTextFiles didn't need to re-implement it anymore. Assuming Travis passes, this should be ready to review. I have the feeling we're getting close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065:75,Availability,down,down,75,"@cmnbroad Thank you for pointing out those build failures and even digging down to the apparent cause! I investigated and the issue wasn't inability to decompress gzip files (or at least wasn't only that), but XReadLines trims the lines by default and my code doesn't. The ""expected"" files have an extra tab at the end of some lines (the CHROM line for example) that this was picking up. What I've done is updated XReadLines so it can take Paths as input, so we get good matching behavior without having to duplicate code. While I was at it I also exposed XReadLines' ability to strip out comments, so assertEqualTextFiles didn't need to re-implement it anymore. Assuming Travis passes, this should be ready to review. I have the feeling we're getting close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065:406,Deployability,update,updated,406,"@cmnbroad Thank you for pointing out those build failures and even digging down to the apparent cause! I investigated and the issue wasn't inability to decompress gzip files (or at least wasn't only that), but XReadLines trims the lines by default and my code doesn't. The ""expected"" files have an extra tab at the end of some lines (the CHROM line for example) that this was picking up. What I've done is updated XReadLines so it can take Paths as input, so we get good matching behavior without having to duplicate code. While I was at it I also exposed XReadLines' ability to strip out comments, so assertEqualTextFiles didn't need to re-implement it anymore. Assuming Travis passes, this should be ready to review. I have the feeling we're getting close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065:548,Security,expose,exposed,548,"@cmnbroad Thank you for pointing out those build failures and even digging down to the apparent cause! I investigated and the issue wasn't inability to decompress gzip files (or at least wasn't only that), but XReadLines trims the lines by default and my code doesn't. The ""expected"" files have an extra tab at the end of some lines (the CHROM line for example) that this was picking up. What I've done is updated XReadLines so it can take Paths as input, so we get good matching behavior without having to duplicate code. While I was at it I also exposed XReadLines' ability to strip out comments, so assertEqualTextFiles didn't need to re-implement it anymore. Assuming Travis passes, this should be ready to review. I have the feeling we're getting close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065:602,Testability,assert,assertEqualTextFiles,602,"@cmnbroad Thank you for pointing out those build failures and even digging down to the apparent cause! I investigated and the issue wasn't inability to decompress gzip files (or at least wasn't only that), but XReadLines trims the lines by default and my code doesn't. The ""expected"" files have an extra tab at the end of some lines (the CHROM line for example) that this was picking up. What I've done is updated XReadLines so it can take Paths as input, so we get good matching behavior without having to duplicate code. While I was at it I also exposed XReadLines' ability to strip out comments, so assertEqualTextFiles didn't need to re-implement it anymore. Assuming Travis passes, this should be ready to review. I have the feeling we're getting close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-458336902:56,Availability,failure,failure,56,"@droazen, how do you interpret these results? I see one failure is a timeout, the other I'm not sure about but neither look really related to this code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-458336902
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-458336902:69,Safety,timeout,timeout,69,"@droazen, how do you interpret these results? I see one failure is a timeout, the other I'm not sure about but neither look really related to this code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-458336902
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462427965:199,Energy Efficiency,green,green,199,"There appears to be something about this branch that is causing the tests to take ~2x longer than usual (~2 hours instead of ~1). Before merging this, we should make sure that the tests are not only green, but also back to the normal runtime for the test suite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462427965
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462427965:68,Testability,test,tests,68,"There appears to be something about this branch that is causing the tests to take ~2x longer than usual (~2 hours instead of ~1). Before merging this, we should make sure that the tests are not only green, but also back to the normal runtime for the test suite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462427965
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462427965:180,Testability,test,tests,180,"There appears to be something about this branch that is causing the tests to take ~2x longer than usual (~2 hours instead of ~1). Before merging this, we should make sure that the tests are not only green, but also back to the normal runtime for the test suite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462427965
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462427965:250,Testability,test,test,250,"There appears to be something about this branch that is causing the tests to take ~2x longer than usual (~2 hours instead of ~1). Before merging this, we should make sure that the tests are not only green, but also back to the normal runtime for the test suite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462427965
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:107,Deployability,Integrat,IntegrationTestSpec,107,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:248,Deployability,integrat,integration,248,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:107,Integrability,Integrat,IntegrationTestSpec,107,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:248,Integrability,integrat,integration,248,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:294,Integrability,depend,dependency,294,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:61,Performance,perform,performance,61,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:18,Testability,test,tests,18,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:127,Testability,assert,assertEqualTextFiles,127,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:170,Testability,test,tests,170,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:260,Testability,test,tests,260,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:381,Testability,test,test-logs,381,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:420,Testability,test,tests,420,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:426,Testability,test,test,426,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:594,Testability,test,test-logs,594,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:633,Testability,test,tests,633,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:639,Testability,test,test,639,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:797,Testability,test,tests,797,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:863,Testability,assert,assertEqualTextFiles,863,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143:999,Testability,assert,assertEqualTextFiles,999,"It looks like the tests are running very slowly because of a performance regression due to the changes in `IntegrationTestSpec.assertEqualTextFiles`. You can see this on tests that should be unaffected by the core changes in this PR, like the VQSR integration tests, which have no cloud/bucket dependency and usually take about [1 minute](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24775.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html), but took [25 minutes](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24563.2/tests/test/classes/org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorIntegrationTest.html) with this branch. The same thing happens when the VQSR tests are run locally with this branch; all the time is spent in `assertEqualTextFiles`. @jean-philippe-martin I don't want to push to this branch without your ok, but reverting the first few lines of `assertEqualTextFiles` seems to fix the problem locally. (Separately, I will do some profiling to figure out for posterity sake why that change had such a dramatic affect ).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462772143
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462784167:223,Security,access,access,223,"Totally get it now; with these changes, `assertEqualTextFiles` is getting `LinkedList`s from `XReadLines`, rather than `ArrayList`s, which it used to get from the trailing `stream.collect` calls. Since it then uses indexed access to iterate thorough the two lists zip style, the serial `get` calls are super slow on even moderately sized (100k) linked lists. Should be an easy fix. @jean-philippe-martin let me know if you want me to make this change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462784167
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462784167:41,Testability,assert,assertEqualTextFiles,41,"Totally get it now; with these changes, `assertEqualTextFiles` is getting `LinkedList`s from `XReadLines`, rather than `ArrayList`s, which it used to get from the trailing `stream.collect` calls. Since it then uses indexed access to iterate thorough the two lists zip style, the serial `get` calls are super slow on even moderately sized (100k) linked lists. Should be an easy fix. @jean-philippe-martin let me know if you want me to make this change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462784167
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462862138:189,Testability,assert,assertEqualTextFiles,189,"@cmnbroad thank you so much for looking into this carefully! I have pushed a fix for the issue. In addition to using an `ArrayList` in `XReadLines` (to speed up all callers), I also fixed `assertEqualTextFiles` to do a streaming comparison so it uses less memory (and might even run a bit faster).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462862138
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462980596:39,Testability,test,tests,39,"Travis passed. I looked at a couple of tests, and their time is back to the pre-regression levels. Sadly we're not faster, but we're about the same. On the plus side, we can now write VCF to cloud for SelectVariants and HaplotypeCaller!. Test | time before | time while broken | time now; -- | -- | -- | --; `VariantRecalibratorIntegrationTest` | 1m29s | 25m50s | 1m43s; `BaseRecalibratorIntegrationTest` | 43s | 5m1s | 46s",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462980596
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462980596:238,Testability,Test,Test,238,"Travis passed. I looked at a couple of tests, and their time is back to the pre-regression levels. Sadly we're not faster, but we're about the same. On the plus side, we can now write VCF to cloud for SelectVariants and HaplotypeCaller!. Test | time before | time while broken | time now; -- | -- | -- | --; `VariantRecalibratorIntegrationTest` | 1m29s | 25m50s | 1m43s; `BaseRecalibratorIntegrationTest` | 43s | 5m1s | 46s",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462980596
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-467021369:59,Testability,test,test,59,👍 Just needs a rebase with conflict resolution and a final test run.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-467021369
https://github.com/broadinstitute/gatk/pull/5378#issuecomment-467213589:60,Testability,test,tests,60,OK here's a squashed and rebased version. Let's see how the tests go.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-467213589
https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675:223,Availability,down,down,223,"@jonn-smith Something is weird here, it looks like the the stubs are committed now by accident. That's what I see if I check it out locally. They're still valid git-lfs stubs, so running a `git-lfs checkout` will pull them down and then git will think that they've all been modified since they're not being tracked correctly by git-lfs... In the past to move things out of git-lfs I've had to do it in 2 commits. ; 1. remove the file from git, ; 2. re-commit it to a new location that isnt tracked by git-lfs. `git lfs migrate export` might help, but I've never used it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675
https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675:59,Testability,stub,stubs,59,"@jonn-smith Something is weird here, it looks like the the stubs are committed now by accident. That's what I see if I check it out locally. They're still valid git-lfs stubs, so running a `git-lfs checkout` will pull them down and then git will think that they've all been modified since they're not being tracked correctly by git-lfs... In the past to move things out of git-lfs I've had to do it in 2 commits. ; 1. remove the file from git, ; 2. re-commit it to a new location that isnt tracked by git-lfs. `git lfs migrate export` might help, but I've never used it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675
https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675:169,Testability,stub,stubs,169,"@jonn-smith Something is weird here, it looks like the the stubs are committed now by accident. That's what I see if I check it out locally. They're still valid git-lfs stubs, so running a `git-lfs checkout` will pull them down and then git will think that they've all been modified since they're not being tracked correctly by git-lfs... In the past to move things out of git-lfs I've had to do it in 2 commits. ; 1. remove the file from git, ; 2. re-commit it to a new location that isnt tracked by git-lfs. `git lfs migrate export` might help, but I've never used it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675
https://github.com/broadinstitute/gatk/issues/5382#issuecomment-435050904:257,Availability,down,down,257,"Yes, also recall that @asmirnov239 tried to address #4397, but that led to #5217, so we reverted. We can try to address all of these issues again correctly if it's low-hanging fruit (which it probably is) and if it'll bring the overall cost of the pipeline down significantly. However, for the most part, I think bringing down costs in the gCNV step will have more impact. Thanks for diagnosing and pointing out these issues. You should feel free to open PRs against the gCNV code as well!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5382#issuecomment-435050904
https://github.com/broadinstitute/gatk/issues/5382#issuecomment-435050904:322,Availability,down,down,322,"Yes, also recall that @asmirnov239 tried to address #4397, but that led to #5217, so we reverted. We can try to address all of these issues again correctly if it's low-hanging fruit (which it probably is) and if it'll bring the overall cost of the pipeline down significantly. However, for the most part, I think bringing down costs in the gCNV step will have more impact. Thanks for diagnosing and pointing out these issues. You should feel free to open PRs against the gCNV code as well!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5382#issuecomment-435050904
https://github.com/broadinstitute/gatk/issues/5382#issuecomment-435050904:248,Deployability,pipeline,pipeline,248,"Yes, also recall that @asmirnov239 tried to address #4397, but that led to #5217, so we reverted. We can try to address all of these issues again correctly if it's low-hanging fruit (which it probably is) and if it'll bring the overall cost of the pipeline down significantly. However, for the most part, I think bringing down costs in the gCNV step will have more impact. Thanks for diagnosing and pointing out these issues. You should feel free to open PRs against the gCNV code as well!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5382#issuecomment-435050904
https://github.com/broadinstitute/gatk/issues/5383#issuecomment-459134349:72,Deployability,update,update,72,"Hey @bhanugandham @rcmajovski, what is the status of this documentation update? It would be great to be able to point users to this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5383#issuecomment-459134349
https://github.com/broadinstitute/gatk/pull/5384#issuecomment-435106152:116,Testability,test,tests,116,@samuelklee Most of these changes are to unsupported WDL. And the (very few) changes to GATK code were to automated tests only.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5384#issuecomment-435106152
https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950:47,Availability,down,downstream,47,"I can definitely appreciate that in some cases downstream analysis might be made easier if the original representations of GGA mode alleles were preserved. . Internally, HaplotypeCaller has to convert all variants at a position to share the same reference context so that read alignments can be compared to all possible alternate alleles simultaneously, and it would be a complex and error-prone process to re-map the unified alleles back to their original representations, and would also pose problems in terms of computing the correct values for INFO field annotations such as DP if the output VCF had to be split across multiple lines according to the how things were specified in the input files. I'm going to close this for now unless you strongly object or have an additional case that shows an error in GGA mode output. It's possible that in the future we could implement an enhancement in the form of a mode that preserves the GGA input allele representations, possibly under some stricter conditions upon the input, but that would likely be a tricky implementation. Pinging @ldgauthier to make sure she agrees.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950
https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950:384,Availability,error,error-prone,384,"I can definitely appreciate that in some cases downstream analysis might be made easier if the original representations of GGA mode alleles were preserved. . Internally, HaplotypeCaller has to convert all variants at a position to share the same reference context so that read alignments can be compared to all possible alternate alleles simultaneously, and it would be a complex and error-prone process to re-map the unified alleles back to their original representations, and would also pose problems in terms of computing the correct values for INFO field annotations such as DP if the output VCF had to be split across multiple lines according to the how things were specified in the input files. I'm going to close this for now unless you strongly object or have an additional case that shows an error in GGA mode output. It's possible that in the future we could implement an enhancement in the form of a mode that preserves the GGA input allele representations, possibly under some stricter conditions upon the input, but that would likely be a tricky implementation. Pinging @ldgauthier to make sure she agrees.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950
https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950:801,Availability,error,error,801,"I can definitely appreciate that in some cases downstream analysis might be made easier if the original representations of GGA mode alleles were preserved. . Internally, HaplotypeCaller has to convert all variants at a position to share the same reference context so that read alignments can be compared to all possible alternate alleles simultaneously, and it would be a complex and error-prone process to re-map the unified alleles back to their original representations, and would also pose problems in terms of computing the correct values for INFO field annotations such as DP if the output VCF had to be split across multiple lines according to the how things were specified in the input files. I'm going to close this for now unless you strongly object or have an additional case that shows an error in GGA mode output. It's possible that in the future we could implement an enhancement in the form of a mode that preserves the GGA input allele representations, possibly under some stricter conditions upon the input, but that would likely be a tricky implementation. Pinging @ldgauthier to make sure she agrees.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950
https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950:1075,Availability,Ping,Pinging,1075,"I can definitely appreciate that in some cases downstream analysis might be made easier if the original representations of GGA mode alleles were preserved. . Internally, HaplotypeCaller has to convert all variants at a position to share the same reference context so that read alignments can be compared to all possible alternate alleles simultaneously, and it would be a complex and error-prone process to re-map the unified alleles back to their original representations, and would also pose problems in terms of computing the correct values for INFO field annotations such as DP if the output VCF had to be split across multiple lines according to the how things were specified in the input files. I'm going to close this for now unless you strongly object or have an additional case that shows an error in GGA mode output. It's possible that in the future we could implement an enhancement in the form of a mode that preserves the GGA input allele representations, possibly under some stricter conditions upon the input, but that would likely be a tricky implementation. Pinging @ldgauthier to make sure she agrees.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950
https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950:882,Modifiability,enhance,enhancement,882,"I can definitely appreciate that in some cases downstream analysis might be made easier if the original representations of GGA mode alleles were preserved. . Internally, HaplotypeCaller has to convert all variants at a position to share the same reference context so that read alignments can be compared to all possible alternate alleles simultaneously, and it would be a complex and error-prone process to re-map the unified alleles back to their original representations, and would also pose problems in terms of computing the correct values for INFO field annotations such as DP if the output VCF had to be split across multiple lines according to the how things were specified in the input files. I'm going to close this for now unless you strongly object or have an additional case that shows an error in GGA mode output. It's possible that in the future we could implement an enhancement in the form of a mode that preserves the GGA input allele representations, possibly under some stricter conditions upon the input, but that would likely be a tricky implementation. Pinging @ldgauthier to make sure she agrees.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5385#issuecomment-435902950
https://github.com/broadinstitute/gatk/pull/5386#issuecomment-435416461:1864,Deployability,pipeline,pipelines,1864, Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...der/tools/HaplotypeCallerSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5386/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `58.73% <ø> (-3.035%)` | `12 <0> (-1)` | |; | [...ols/examples/ExampleAssemblyRegionWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5386/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlQXNzZW1ibHlSZWdpb25XYWxrZXJTcGFyay5qYXZh) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...engine/spark/AssemblyRegionArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5386/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvQXNzZW1ibHlSZWdpb25Bcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `100% <100%> (ø)` | `1 <1> (?)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5386/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `90.566% <100%> (+0.983%)` | `13 <1> (+1)` | :arrow_up: |; | [...ark/AssemblyRegionReadShardArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5386/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvQXNzZW1ibHlSZWdpb25SZWFkU2hhcmRBcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `100% <100%> (ø)` | `1 <1> (?)` | |; | [...bender/engine/spark/AssemblyRegionWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5386/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvQXNzZW1ibHlSZWdpb25XYWxrZXJTcGFyay5qYXZh) | `77.083% <85.185%> (+77.083%)` | `15 <7> (+15)` | :arrow_up: |; | [...stitute/hellbender/tools/HaplotypeCallerSpark.java](https://codecov.io,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5386#issuecomment-435416461
https://github.com/broadinstitute/gatk/pull/5386#issuecomment-436634110:110,Performance,perform,performance,110,"Thanks for the review @jamesemery. I have tried these changes on a cluster with an exome-sized input, with no performance issues, so I'd be comfortable merging. As you say it will be a useful basis for the HaplotypeCallerSpark work we are doing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5386#issuecomment-436634110
https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435476592:55,Availability,error,error,55,"@samuelklee, I tested using v4.0.11.0 and see the same error with `-XL` so here is the bug report as promised.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435476592
https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435476592:15,Testability,test,tested,15,"@samuelklee, I tested using v4.0.11.0 and see the same error with `-XL` so here is the bug report as promised.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435476592
https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435494187:475,Availability,mask,mask,475,"Can you describe the inputs you are passing to `-L` and `-XL`? (I'm guessing the latter is just a BED file of centromeric regions, but how about the former?). Is there any issue when you use `FilterIntervals` as is done in the WDL, i.e., running `FilterIntervals` with `-L` = the interval list of bins output by `PreprocessIntervals` and `-XL` = your blacklist, and then passing the corresponding interval list to the `-L` argument of `GermlineCNVCaller`? This allows one to mask intervals at the modeling steps without recollecting coverage as you describe.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435494187
https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435497601:11,Usability,clear,clear,11,"Just to be clear, the gCNV code expects that the intervals obtained after resolving the inputs of `-L` and `-XL` via the engine should specify the *bins* that the user wishes to retain from the coverage files.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435497601
https://github.com/broadinstitute/gatk/issues/5388#issuecomment-437033704:20,Availability,error,error,20,"Yes, I see the same error when using FilterIntervals in the context of the WDL when supplying the BED file with the `-XL` param.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-437033704
https://github.com/broadinstitute/gatk/issues/5388#issuecomment-437393687:212,Availability,avail,available,212,"Did some more thinking about this issue. Ideally, we'd drop all -L bins that overlap at all with any -XL regions, then check that the remaining bins are a subset of the annotated intervals and/or count files, if available. This seems most natural, in that -L/-XL would specify the desired set of intervals for filtering, and we'd fail if all of these are not available in the other inputs. However, due to the way intervals are resolved by the engine, I don't think it's easy to identify which bins overlap with -XL regions---the engine will instead split bins and retain the parts that don't overlap. So alternatively, if we assume that in typical use the annotated intervals and count files will contain the desired intervals as a subset, we can simply take the intersection of all intervals to drop these partial bins. However, if a user screws up and provides annotated intervals or count files with bins that don't match those specified via -L, then we don't really have a good strategy for failing---probably the only fair check we can do is fail if no bins remain after intersection. If we assume that users will typically be using or following the WDL, I think I'm OK with the second strategy. Any objections or thoughts, @sooheelee?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-437393687
https://github.com/broadinstitute/gatk/issues/5388#issuecomment-437393687:359,Availability,avail,available,359,"Did some more thinking about this issue. Ideally, we'd drop all -L bins that overlap at all with any -XL regions, then check that the remaining bins are a subset of the annotated intervals and/or count files, if available. This seems most natural, in that -L/-XL would specify the desired set of intervals for filtering, and we'd fail if all of these are not available in the other inputs. However, due to the way intervals are resolved by the engine, I don't think it's easy to identify which bins overlap with -XL regions---the engine will instead split bins and retain the parts that don't overlap. So alternatively, if we assume that in typical use the annotated intervals and count files will contain the desired intervals as a subset, we can simply take the intersection of all intervals to drop these partial bins. However, if a user screws up and provides annotated intervals or count files with bins that don't match those specified via -L, then we don't really have a good strategy for failing---probably the only fair check we can do is fail if no bins remain after intersection. If we assume that users will typically be using or following the WDL, I think I'm OK with the second strategy. Any objections or thoughts, @sooheelee?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-437393687
https://github.com/broadinstitute/gatk/issues/5388#issuecomment-437393687:748,Usability,simpl,simply,748,"Did some more thinking about this issue. Ideally, we'd drop all -L bins that overlap at all with any -XL regions, then check that the remaining bins are a subset of the annotated intervals and/or count files, if available. This seems most natural, in that -L/-XL would specify the desired set of intervals for filtering, and we'd fail if all of these are not available in the other inputs. However, due to the way intervals are resolved by the engine, I don't think it's easy to identify which bins overlap with -XL regions---the engine will instead split bins and retain the parts that don't overlap. So alternatively, if we assume that in typical use the annotated intervals and count files will contain the desired intervals as a subset, we can simply take the intersection of all intervals to drop these partial bins. However, if a user screws up and provides annotated intervals or count files with bins that don't match those specified via -L, then we don't really have a good strategy for failing---probably the only fair check we can do is fail if no bins remain after intersection. If we assume that users will typically be using or following the WDL, I think I'm OK with the second strategy. Any objections or thoughts, @sooheelee?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-437393687
https://github.com/broadinstitute/gatk/issues/5391#issuecomment-435634331:240,Availability,down,downward,240,"IMO we probably should accept any valid VCFs but I can't say it's a high priority to me when our provided resource file works and the user has zero reason not to use it. I mean, if users want to shoot themselves in the foot, and the GATK's downward aim is buggy, that's kind of a feature, isn't it?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5391#issuecomment-435634331
https://github.com/broadinstitute/gatk/issues/5391#issuecomment-435840613:323,Availability,error,error,323,"@davidbenjamin I think that is a bit of a cop out. I would have been happy to use a provided resource but there was none to be found for hg38. I had to do a liftover for the gnomAD data and that introduced subtle changes to the VCF that invoked this bug in <20% of my samples after hours of processing without any sensible error message to lead me onto what was the cause of the problem. I have wasted many days on debugging this issue and creating a bug report and I was considering switching to GATK3 or some other variant caller because of it. I think someone else reported a very similar issue on the forum and went back to using GATK3. . Maybe Mutect2 should, by default, run a filter on the pop resource VCF to get rid of unnecessary or erroneous lines. When users get more familiar with the algorithm, they could disable this filtering to save time and provide a pre-filtered VCF (--germline-resource or --germline-filtered-resource).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5391#issuecomment-435840613
https://github.com/broadinstitute/gatk/issues/5391#issuecomment-435840613:329,Integrability,message,message,329,"@davidbenjamin I think that is a bit of a cop out. I would have been happy to use a provided resource but there was none to be found for hg38. I had to do a liftover for the gnomAD data and that introduced subtle changes to the VCF that invoked this bug in <20% of my samples after hours of processing without any sensible error message to lead me onto what was the cause of the problem. I have wasted many days on debugging this issue and creating a bug report and I was considering switching to GATK3 or some other variant caller because of it. I think someone else reported a very similar issue on the forum and went back to using GATK3. . Maybe Mutect2 should, by default, run a filter on the pop resource VCF to get rid of unnecessary or erroneous lines. When users get more familiar with the algorithm, they could disable this filtering to save time and provide a pre-filtered VCF (--germline-resource or --germline-filtered-resource).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5391#issuecomment-435840613
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435634712:174,Integrability,depend,dependency,174,@samuelklee From ~10 minutes of reading code it looks like the functionality is the same. It's been a while but I suspect we created the GATK tool to get rid of a Picard jar dependency.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435634712
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:187,Availability,ERROR,ERROR,187,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:535,Availability,redundant,redundant,535,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:88,Deployability,integrat,integration,88,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:88,Integrability,integrat,integration,88,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:535,Safety,redund,redundant,535,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:100,Testability,test,test,100,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:165,Testability,test,test,165,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:199,Testability,log,logging,199,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:468,Usability,simpl,simple,468,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196
https://github.com/broadinstitute/gatk/issues/5393#issuecomment-437056873:83,Availability,ping,pinging,83,Thanks @lbergelson. Looks like the repo hasn't been updated since March. Recommend pinging Paolo from Intel and asking who the current maintainer is.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5393#issuecomment-437056873
https://github.com/broadinstitute/gatk/issues/5393#issuecomment-437056873:52,Deployability,update,updated,52,Thanks @lbergelson. Looks like the repo hasn't been updated since March. Recommend pinging Paolo from Intel and asking who the current maintainer is.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5393#issuecomment-437056873
https://github.com/broadinstitute/gatk/pull/5394#issuecomment-436011521:1867,Deployability,pipeline,pipelines,1867,tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/5394/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `86.861% <71.429%> (-5.563%)` | `61 <0> (-2)` | |; | [...ils/nio/NioFileCopierWithProgressMeterResults.java](https://codecov.io/gh/broadinstitute/gatk/pull/5394/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyUmVzdWx0cy5qYXZh) | `0% <0%> (-94.737%)` | `0% <0%> (-9%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5394/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5394/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...ols/funcotator/FuncotatorDataSourceDownloader.java](https://codecov.io/gh/broadinstitute/gatk/pull/5394/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JEYXRhU291cmNlRG93bmxvYWRlci5qYXZh) | `0% <0%> (-66.197%)` | `0% <0%> (-14%)` | |; | [...nder/utils/nio/NioFileCopierWithProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5394/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyLmphdmE=) | `17% <0%> (-52.5%)` | `9% <0%> (-30%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5394/d,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5394#issuecomment-436011521
https://github.com/broadinstitute/gatk/pull/5394#issuecomment-436021670:201,Testability,test,test,201,"@mirounga Thanks for submitting this, but as @droazen said we're actively working on a URI facility to encompass things like this in a general way across input types. It does give me an idea for a new test for my URI PR though....",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5394#issuecomment-436021670
https://github.com/broadinstitute/gatk/pull/5395#issuecomment-451266508:1589,Deployability,pipeline,pipelines,1589,es 1915 1918 +3 ; Lines 144130 144650 +520 ; Branches 15901 15992 +91 ; ===============================================; + Hits 10005 125981 +115976 ; + Misses 133410 12859 -120551 ; - Partials 715 5810 +5095; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5395?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ellbender/cmdline/StandardArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5395/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1N0YW5kYXJkQXJndW1lbnREZWZpbml0aW9ucy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...er/utils/haplotype/HaplotypeBAMWriterUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5395/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oYXBsb3R5cGUvSGFwbG90eXBlQkFNV3JpdGVyVW5pdFRlc3QuamF2YQ==) | `89.076% <ø> (+86.555%)` | `23 <0> (+22)` | :arrow_up: |; | [...hellbender/tools/spark/pipelines/SortSamSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5395/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvU29ydFNhbVNwYXJrLmphdmE=) | `100% <100%> (+100%)` | `6 <0> (+6)` | :arrow_up: |; | [.../AbstractMarkDuplicatesCommandLineProgramTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5395/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL21hcmtkdXBsaWNhdGVzL0Fic3RyYWN0TWFya0R1cGxpY2F0ZXNDb21tYW5kTGluZVByb2dyYW1UZXN0LmphdmE=) | `96.241% <100%> (+95.865%)` | `92 <0> (+90)` | :arrow_up: |; | [...lbender/utils/read/SAMRecordToGATKReadAdapter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5395/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1NBTVJlY29yZFRvR0FUS1JlYWRBZGFwdGVyLmphdmE=) | `92.806% <100%> (+87.331%)` | `146 <1> (+135)` | :arrow_up: |; | [...rkduplicates/MarkDuplicatesSparkUtils,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5395#issuecomment-451266508
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437139132:34,Testability,test,tests,34,@nalinigans - this should fix the tests with respect to the latest jar,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437139132
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783:18,Availability,error,errors,18,This release also errors out with a descriptive error message if the length of a field in the data lines does not match the length descriptor in the header - see https://github.com/broadinstitute/gatk/issues/5045.; Error out behavior as per [Laura's comment here](https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783:48,Availability,error,error,48,This release also errors out with a descriptive error message if the length of a field in the data lines does not match the length descriptor in the header - see https://github.com/broadinstitute/gatk/issues/5045.; Error out behavior as per [Laura's comment here](https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783:215,Availability,Error,Error,215,This release also errors out with a descriptive error message if the length of a field in the data lines does not match the length descriptor in the header - see https://github.com/broadinstitute/gatk/issues/5045.; Error out behavior as per [Laura's comment here](https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783:5,Deployability,release,release,5,This release also errors out with a descriptive error message if the length of a field in the data lines does not match the length descriptor in the header - see https://github.com/broadinstitute/gatk/issues/5045.; Error out behavior as per [Laura's comment here](https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783:54,Integrability,message,message,54,This release also errors out with a descriptive error message if the length of a field in the data lines does not match the length descriptor in the header - see https://github.com/broadinstitute/gatk/issues/5045.; Error out behavior as per [Laura's comment here](https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413667356),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437140783
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437157098:3542,Security,validat,validation,3542,h/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9Db2xsZWN0RjFSMkNvdW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `0.917% <0%> (-99.083%)` | `1% <0%> (-12%)` | |; | [.../walkers/bqsr/BaseRecalibratorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvckludGVncmF0aW9uVGVzdC5qYXZh) | `1.031% <0%> (-98.969%)` | `1% <0%> (-7%)` | |; | [...ers/vqsr/FilterVariantTranchesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.053% <0%> (-98.947%)` | `1% <0%> (-5%)` | |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYXJpYW50c1RvVGFibGVJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.205% <0%> (-98.795%)` | `1% <0%> (-20%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.563% <0%> (-98.438%)` | `1% <0%> (-5%)` | |; | [...ientation/ReadOrientationModelIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9SZWFkT3JpZW50YXRpb25Nb2RlbEludGVncmF0aW9uVGVzdC5qYXZh) | `1.667% <0%> (-98.333%)` | `1% <0%> (-5%)` | |; | ... and [154 more](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437157098
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-451257423:10,Availability,Ping,Pinging,10,"@kgururaj Pinging you on this one -- once the review comments above are addressed and the branch is rebased, I think this is good to go.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-451257423
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:593,Availability,failure,failures,593,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:1076,Availability,failure,failures,1076,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:124,Testability,test,tests,124,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:135,Testability,assert,assert,135,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:432,Testability,test,tests,432,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:484,Testability,test,testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData,484,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:1026,Testability,test,tests,1026,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:1071,Testability,test,test,1071,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372:240,Availability,Error,Error,240,"Hmm, that's strange, now only `testGenomicsDBImportFileInputs_newMQ()` is failing. `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`, which was failing for me this morning, is now passing despite no additional changes. Error is ""Attribute RAW_MQandDP expected [353426] but found [352585]"". See https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24137.4/tests/test/index.html",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372:84,Testability,test,testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData,84,"Hmm, that's strange, now only `testGenomicsDBImportFileInputs_newMQ()` is failing. `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`, which was failing for me this morning, is now passing despite no additional changes. Error is ""Attribute RAW_MQandDP expected [353426] but found [352585]"". See https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24137.4/tests/test/index.html",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372:357,Testability,test,test-logs,357,"Hmm, that's strange, now only `testGenomicsDBImportFileInputs_newMQ()` is failing. `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`, which was failing for me this morning, is now passing despite no additional changes. Error is ""Attribute RAW_MQandDP expected [353426] but found [352585]"". See https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24137.4/tests/test/index.html",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372:396,Testability,test,tests,396,"Hmm, that's strange, now only `testGenomicsDBImportFileInputs_newMQ()` is failing. `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`, which was failing for me this morning, is now passing despite no additional changes. Error is ""Attribute RAW_MQandDP expected [353426] but found [352585]"". See https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24137.4/tests/test/index.html",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372:402,Testability,test,test,402,"Hmm, that's strange, now only `testGenomicsDBImportFileInputs_newMQ()` is failing. `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`, which was failing for me this morning, is now passing despite no additional changes. Error is ""Attribute RAW_MQandDP expected [353426] but found [352585]"". See https://storage.googleapis.com/hellbender-test-logs/build_reports/master_24137.4/tests/test/index.html",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452881372
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-453889312:101,Availability,failure,failure,101,"@droazen, looks like the changes from PR https://github.com/broadinstitute/gatk/pull/5540 caused the failure with testGenomicsDBImportFileInputs_newMQ. Reverting the changes from that pull request got things working again. I will look at this issue tomorrow, meanwhile any suggestions @ldgauthier?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-453889312
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-454623888:241,Deployability,update,updated,241,"Got the tests to pass by generating a new expected result as mentioned in @kgururaj comment for expected.testGenomicsDBImportWithNonDiploidData.vcf and by using the GenomicsDBImports folder for expected results as some of the vcf files were updated as part of PR 5170. * testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData; * testGenomicsDBImportFileInputs_newMQ. @droazen, please feel free to merge. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-454623888
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-454623888:8,Testability,test,tests,8,"Got the tests to pass by generating a new expected result as mentioned in @kgururaj comment for expected.testGenomicsDBImportWithNonDiploidData.vcf and by using the GenomicsDBImports folder for expected results as some of the vcf files were updated as part of PR 5170. * testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData; * testGenomicsDBImportFileInputs_newMQ. @droazen, please feel free to merge. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-454623888
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-454623888:105,Testability,test,testGenomicsDBImportWithNonDiploidData,105,"Got the tests to pass by generating a new expected result as mentioned in @kgururaj comment for expected.testGenomicsDBImportWithNonDiploidData.vcf and by using the GenomicsDBImports folder for expected results as some of the vcf files were updated as part of PR 5170. * testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData; * testGenomicsDBImportFileInputs_newMQ. @droazen, please feel free to merge. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-454623888
https://github.com/broadinstitute/gatk/pull/5397#issuecomment-454623888:271,Testability,test,testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData,271,"Got the tests to pass by generating a new expected result as mentioned in @kgururaj comment for expected.testGenomicsDBImportWithNonDiploidData.vcf and by using the GenomicsDBImports folder for expected results as some of the vcf files were updated as part of PR 5170. * testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData; * testGenomicsDBImportFileInputs_newMQ. @droazen, please feel free to merge. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-454623888
https://github.com/broadinstitute/gatk/issues/5398#issuecomment-438050467:387,Deployability,pipeline,pipeline,387,"MergeBamAlignment is run on each readgroup seperately, currently MarkDuplicates is used to aggregate all the readgroups. I tried finding a nice graph type thing showing the dependencies of the workflow but couldn't find anything :(. But here is where MBA is run on each readgroup (the output of BWA gets streamed into MBA) - https://github.com/gatk-workflows/five-dollar-genome-analysis-pipeline/blob/master/tasks_pipelines/unmapped_bam_to_aligned_bam.wdl#L113. and here is markduplicates taking in each aligned MBA'd readgroup bam as input ( this is outside the per readgroup scatter) - https://github.com/gatk-workflows/five-dollar-genome-analysis-pipeline/blob/master/tasks_pipelines/unmapped_bam_to_aligned_bam.wdl#L157",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5398#issuecomment-438050467
https://github.com/broadinstitute/gatk/issues/5398#issuecomment-438050467:650,Deployability,pipeline,pipeline,650,"MergeBamAlignment is run on each readgroup seperately, currently MarkDuplicates is used to aggregate all the readgroups. I tried finding a nice graph type thing showing the dependencies of the workflow but couldn't find anything :(. But here is where MBA is run on each readgroup (the output of BWA gets streamed into MBA) - https://github.com/gatk-workflows/five-dollar-genome-analysis-pipeline/blob/master/tasks_pipelines/unmapped_bam_to_aligned_bam.wdl#L113. and here is markduplicates taking in each aligned MBA'd readgroup bam as input ( this is outside the per readgroup scatter) - https://github.com/gatk-workflows/five-dollar-genome-analysis-pipeline/blob/master/tasks_pipelines/unmapped_bam_to_aligned_bam.wdl#L157",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5398#issuecomment-438050467
https://github.com/broadinstitute/gatk/issues/5398#issuecomment-438050467:173,Integrability,depend,dependencies,173,"MergeBamAlignment is run on each readgroup seperately, currently MarkDuplicates is used to aggregate all the readgroups. I tried finding a nice graph type thing showing the dependencies of the workflow but couldn't find anything :(. But here is where MBA is run on each readgroup (the output of BWA gets streamed into MBA) - https://github.com/gatk-workflows/five-dollar-genome-analysis-pipeline/blob/master/tasks_pipelines/unmapped_bam_to_aligned_bam.wdl#L113. and here is markduplicates taking in each aligned MBA'd readgroup bam as input ( this is outside the per readgroup scatter) - https://github.com/gatk-workflows/five-dollar-genome-analysis-pipeline/blob/master/tasks_pipelines/unmapped_bam_to_aligned_bam.wdl#L157",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5398#issuecomment-438050467
https://github.com/broadinstitute/gatk/pull/5403#issuecomment-437496907:73,Testability,test,tests,73,"@jonn-smith and @LeeTL1220 please review. I still plan to add a few more tests (in particular, for overlapping genes and for all-transcripts mode), but I will add these during review rather than holding this branch up any longer.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-437496907
https://github.com/broadinstitute/gatk/pull/5403#issuecomment-437511781:1895,Testability,test,test,1895,omplexity Δ | |; |---|---|---|---|; | [...uncotator/mafOutput/MafOutputRendererUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5403/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL21hZk91dHB1dC9NYWZPdXRwdXRSZW5kZXJlclVuaXRUZXN0LmphdmE=) | `97.5% <ø> (ø)` | `27 <0> (ø)` | :arrow_down: |; | [...ools/funcotator/FuncotatorArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5403/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JBcmd1bWVudERlZmluaXRpb25zLmphdmE=) | `86.364% <ø> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...titute/hellbender/tools/funcotator/Funcotator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5403/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3IuamF2YQ==) | `91.667% <ø> (ø)` | `16 <0> (ø)` | :arrow_down: |; | [...ute/hellbender/utils/test/FuncotatorTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5403/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Z1bmNvdGF0b3JUZXN0VXRpbHMuamF2YQ==) | `98.246% <100%> (+0.064%)` | `6 <1> (+1)` | :arrow_up: |; | [...otator/dataSources/gencode/GencodeFuncotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5403/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvR2VuY29kZUZ1bmNvdGF0aW9uLmphdmE=) | `73.193% <100%> (+0.063%)` | `221 <0> (ø)` | :arrow_down: |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5403/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `86.957% <100%> (-1.68%)` | `17 <1> (ø)` | |; | [...urces/cosmic/CosmicFuncotationFactoryUnitTest.java](https://codec,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-437511781
https://github.com/broadinstitute/gatk/pull/5403#issuecomment-439152167:60,Testability,test,test,60,"Unfortunately I don't have time to implement the multi-gene test before I catch my flight, so I've spun it off into a separate issue to be addressed in a future PR: https://github.com/broadinstitute/gatk/issues/5417",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-439152167
https://github.com/broadinstitute/gatk/pull/5403#issuecomment-439152369:208,Testability,test,tests,208,"@jonn-smith All comments (except for https://github.com/broadinstitute/gatk/issues/5417) addressed, and the branch has been rebased onto your latest changes. If you give me a final thumbs up, I'll merge once tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-439152369
https://github.com/broadinstitute/gatk/issues/5404#issuecomment-439184102:1142,Availability,avail,available,1142,", but I'll try to answer a few of them here:. > Q1: you compared pon and paired in https://gatkforums.broadinstitute.org/dsde/discussion/11682#4，; > so are you implying we should just use PON, anothing you also gived a question ""Should we include our particular tumor’s matched normal in the PoN"", is there a definite answer?. Section 4.2 of the tutorial compares 1) denoising using a PoN containing multiple normal samples, and 2) denoising using a PoN containing only the matched normal. Assuming that the samples contained in the panel of normals are representative of the systematic biases present in the case samples (i.e., all samples were sequenced similarly), then option 1 will almost certainly yield better results. You can include the matched normals of tumor case samples in the PoN if you are really pressed for normal samples. However, you should be aware of the implications this might have for denoising those normals as cases; that is, you should be sure to select an appropriate number of eigensamples to use for denoising---if you use all available eigensamples, you will end up denoising away the copy-ratio signal of those samples entirely. > Q2: I am really puzzled about the function CollectAllelicCounts, we have CollectReadCounts， why need CollectAllelicCounts, both of them need bam, what is the relationship between PON and paired , my innner heart is Paralytic. CollectReadCounts counts the number of reads that overlap genomic bins (the size of which you can select, typically ~100bp-1kb); these counts are used to estimate copy ratio. In contrast, CollectAllelicCounts counts the number of alt and ref bases in the pileup at genomic sites; these allelic counts are used to estimate minor-allele fraction. > how can we understand this, though I know this fucntion has many possiboe inputs.; > but some has only normal inputs, how is related to tunor? thanks a lot. The possible inputs to ModelSegments are `denoised-copy-ratios`, `allelic-counts`, and `normal-allelic-coun",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5404#issuecomment-439184102
https://github.com/broadinstitute/gatk/issues/5404#issuecomment-439184102:2329,Availability,avail,available,2329,"licCounts, we have CollectReadCounts， why need CollectAllelicCounts, both of them need bam, what is the relationship between PON and paired , my innner heart is Paralytic. CollectReadCounts counts the number of reads that overlap genomic bins (the size of which you can select, typically ~100bp-1kb); these counts are used to estimate copy ratio. In contrast, CollectAllelicCounts counts the number of alt and ref bases in the pileup at genomic sites; these allelic counts are used to estimate minor-allele fraction. > how can we understand this, though I know this fucntion has many possiboe inputs.; > but some has only normal inputs, how is related to tunor? thanks a lot. The possible inputs to ModelSegments are `denoised-copy-ratios`, `allelic-counts`, and `normal-allelic-counts`. As alluded to above, you can run either tumor or normal samples as cases. In both scenarios, you would provide denoised copy ratios (generated by running the output of CollectReadCounts through DenoiseReadCounts, using a PoN to denoise if available) to `denoised-copy-ratios` and/or allelic counts (output by CollectAllelicCounts) to `allelic-counts`. Furthermore, when running a tumor case sample, you may additionally provide the allelic counts from a matched normal to `normal-allelic-counts`. Note that the PoN is only used to denoise copy ratios, not allelic counts. So the first example you showed is for running a normal case sample using only denoised copy ratios from the normal:. ```; gatk ModelSegments \; --denoised-copy-ratios normal.denoisedCR.tsv \; --output-prefix normal \; -O output_dir; ```. The second example is for running a tumor case sample using only allelic counts from the tumor:. ```; gatk ModelSegments \; --allelic-counts tumor.allelicCounts.tsv \; --output-prefix tumor \; -O output_dir; ```; Typically you will want to run a tumor case sample with all possible inputs, if available:. ```; gatk ModelSegments \; --denoised-copy-ratios tumor.denoisedCR.tsv \; --allelic-counts tumor",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5404#issuecomment-439184102
https://github.com/broadinstitute/gatk/issues/5404#issuecomment-439184102:3194,Availability,avail,available,3194,"of reads that overlap genomic bins (the size of which you can select, typically ~100bp-1kb); these counts are used to estimate copy ratio. In contrast, CollectAllelicCounts counts the number of alt and ref bases in the pileup at genomic sites; these allelic counts are used to estimate minor-allele fraction. > how can we understand this, though I know this fucntion has many possiboe inputs.; > but some has only normal inputs, how is related to tunor? thanks a lot. The possible inputs to ModelSegments are `denoised-copy-ratios`, `allelic-counts`, and `normal-allelic-counts`. As alluded to above, you can run either tumor or normal samples as cases. In both scenarios, you would provide denoised copy ratios (generated by running the output of CollectReadCounts through DenoiseReadCounts, using a PoN to denoise if available) to `denoised-copy-ratios` and/or allelic counts (output by CollectAllelicCounts) to `allelic-counts`. Furthermore, when running a tumor case sample, you may additionally provide the allelic counts from a matched normal to `normal-allelic-counts`. Note that the PoN is only used to denoise copy ratios, not allelic counts. So the first example you showed is for running a normal case sample using only denoised copy ratios from the normal:. ```; gatk ModelSegments \; --denoised-copy-ratios normal.denoisedCR.tsv \; --output-prefix normal \; -O output_dir; ```. The second example is for running a tumor case sample using only allelic counts from the tumor:. ```; gatk ModelSegments \; --allelic-counts tumor.allelicCounts.tsv \; --output-prefix tumor \; -O output_dir; ```; Typically you will want to run a tumor case sample with all possible inputs, if available:. ```; gatk ModelSegments \; --denoised-copy-ratios tumor.denoisedCR.tsv \; --allelic-counts tumor.allelicCounts.tsv \; --normal-allelic-counts normal.allelicCounts.tsv \; --output-prefix tumor \; -O output_dir; ```. Hope this helps. If you have additional questions, please feel free to post on the forum!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5404#issuecomment-439184102
https://github.com/broadinstitute/gatk/pull/5408#issuecomment-445248455:37,Testability,test,tests,37,"Thanks @asmirnov239, will merge once tests pass unless you have further objections!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5408#issuecomment-445248455
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-438740998:480,Deployability,update,update,480,"CalculateGenotypePosteriors is only intended for trios. This is noted (admittedly not too clearly) in the output section of the docs (`Per-site, per-trio joint likelihoods (JL) and joint posteriors (JL)` -- which needs a fix to be JP for posteriors) In GATK3, CalculateGenotypePosteriors shares some code with PhaseByTransmission (namely the FamilyLikelihoods.java), which does support parent-child pairs, which is why you encountered comments relevant to pairs. We can certainly update the docs for clarity.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-438740998
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-438740998:90,Usability,clear,clearly,90,"CalculateGenotypePosteriors is only intended for trios. This is noted (admittedly not too clearly) in the output section of the docs (`Per-site, per-trio joint likelihoods (JL) and joint posteriors (JL)` -- which needs a fix to be JP for posteriors) In GATK3, CalculateGenotypePosteriors shares some code with PhaseByTransmission (namely the FamilyLikelihoods.java), which does support parent-child pairs, which is why you encountered comments relevant to pairs. We can certainly update the docs for clarity.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-438740998
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-438741166:44,Deployability,update,update,44,@bhanugandham can you take a stab at a docs update? I'm happy to review.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-438741166
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-439052451:9,Deployability,update,update,9,"The docs update should be a pretty quick fix, but since we have some; explanation here in this issue it's not super high priority. On Wed, Nov 14, 2018 at 6:11 PM Bhanu Gandham <notifications@github.com>; wrote:. > Hi @ldgauthier <https://github.com/ldgauthier>; > I will look into this. What's the timeline? How soon do we need this?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5409#issuecomment-438854100>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdPBnavPNrzkjHM9tRZo499bECnYcks5uvKM5gaJpZM4YeJPw>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-439052451
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453587332:42,Deployability,update,update,42,"@ldgauthier, [I've been assigned this doc update](https://dsp-comms.monday.com/boards/145112271/pulses/149558386). I'm wondering if you have in mind updates to a specific existing document, e.g. tool doc, or if we are to create a new tutorial on CalculateGenotypePosteriors. I had already created some preliminary content covering the tool as an extension of the Variant Discovery workshop hands-on tutorial, which you reviewed at some point back last summer before the Cambridge UK workshop. What I can do is create a forum tutorial based on this content.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453587332
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453587332:149,Deployability,update,updates,149,"@ldgauthier, [I've been assigned this doc update](https://dsp-comms.monday.com/boards/145112271/pulses/149558386). I'm wondering if you have in mind updates to a specific existing document, e.g. tool doc, or if we are to create a new tutorial on CalculateGenotypePosteriors. I had already created some preliminary content covering the tool as an extension of the Variant Discovery workshop hands-on tutorial, which you reviewed at some point back last summer before the Cambridge UK workshop. What I can do is create a forum tutorial based on this content.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453587332
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453599368:119,Deployability,update,updated,119,"I didn't expect for this particular clarification to launch a tutorial. I think the tool docs (i.e. javadoc) should be updated and a new note about pairs in the workflow docs (https://software.broadinstitute.org/gatk/documentation/article?id=11074), in the intro and probably at the section at the end about ""family priors"". Incidentally I'm seeing that the LaTeX at the end of that doc isn't coming out right, so that would be a nice fix too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453599368
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453604969:24,Deployability,update,update,24,"Sure @ldgauthier, I can update the javadoc and [Article#11074](https://software.broadinstitute.org/gatk/documentation/article?id=11074). It might take me some time to figure out the LaTeX part. I remember @vdauwera mentioning this was something we will fix on the forum management side. Any help towards what needs to be fixed would be appreciated @vdauwera or I can contact Vanilla for help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453604969
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453613252:361,Availability,down,down,361,"@vdauwera, fyi here is a link to our SLACK discussion about the LaTeX issue: https://broadinstitute.slack.com/archives/C33EBDEAX/p1540481072000100. To quote:; > Yes we have a latex interpreter built into the forum and website styling code; First thing to check: is the formatting messed up on both the forum view and the doc website view? That will help narrow down the problem; We don’t want to use pictures of rendered equations. Then @bhanugandham confirms the issue is on both the forum view and the doc website view based on https://software.broadinstitute.org/gatk/documentation/article.php?id=8031. What is the next step?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453613252
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-454246500:611,Availability,down,down,611,"Given I won’t be able to address this in the immediate future, feel free to; use an image as a temporary workaround.; On Fri, Jan 11, 2019 at 1:32 PM sooheelee <notifications@github.com> wrote:. > @vdauwera <https://github.com/vdauwera>, fyi here is a link to our SLACK; > discussion about the LaTeX issue:; > https://broadinstitute.slack.com/archives/C33EBDEAX/p1540481072000100.; >; > To quote:; >; > Yes we have a latex interpreter built into the forum and website styling; > code; > First thing to check: is the formatting messed up on both the forum view; > and the doc website view? That will help narrow down the problem; > We don’t want to use pictures of rendered equations; >; > Then @bhanugandham <https://github.com/bhanugandham> confirms the issue; > is on both the forum view and the doc website view based on; > https://software.broadinstitute.org/gatk/documentation/article.php?id=8031.; > What is the next step?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5409#issuecomment-453613252>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACnwE93loKW8SJHXPQHejLnSj4oIMMfFks5vCNi4gaJpZM4YeJPw>; > .; >; -- ; Geraldine A. Van der Auwera, PhD; Associate Director of Outreach and Communications; Data Sciences Platform; Broad Institute",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-454246500
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-454436594:108,Deployability,update,updates,108,"Great, thanks @vdauwera. I'm having trouble placing images into the Monday.com issue ticket so will note my updates here. Studying the LaTeX issue, it appears that three of the equations do not render correctly but five do. This is the case for the <https://software.broadinstitute.org/gatk/documentation/article?id=11074> view. For the forum view at <https://gatkforums.broadinstitute.org/gatk/discussion/11074>, none of the equations render. . CORRECT RENDERING:; ---; ![screenshot 2019-01-15 10 24 43](https://user-images.githubusercontent.com/11543866/51190403-270d3b00-18b0-11e9-9b52-61835cb64646.png); ---. DO NOT RENDER:; ---; ![screenshot 2019-01-15 10 22 30](https://user-images.githubusercontent.com/11543866/51190414-2aa0c200-18b0-11e9-97d9-55cf5b148003.png); ---; ![screenshot 2019-01-15 10 23 12](https://user-images.githubusercontent.com/11543866/51190419-2d031c00-18b0-11e9-9a4e-1e5c479f1a65.png). ---. I will keep the LaTeX formatted text in HTML comment tags so the docs retain them and they remain untouched and also place in PNG images of the rendered equations, like so:. ![screenshot 2019-01-15 10 36 53](https://user-images.githubusercontent.com/11543866/51191023-83bd2580-18b1-11e9-8262-c6937b763731.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-454436594
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-454559871:8,Deployability,update,updates,8,Towards updates:. - CalculateGenotypePosteriors tooldoc (v4.0.12.0) commentable GoogleDoc: https://docs.google.com/document/d/1Ab8YGOCnTtT6Dapx8-wReDi-6E6NJ_FRbEOjWtll7hw/edit?usp=sharing; - Article#11074 commentable GoogleDoc:; https://docs.google.com/document/d/1si-XASjYRXpF7kCj1Ivw40-UOyOQ5uTYTDJx1JlQr6w/edit?usp=sharing,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-454559871
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-454572563:73,Deployability,update,updates,73,"@ldgauthier, I made some comments in the linked GoogleDocs above towards updates and referenced you in a number of the comments. I hope you have a moment to review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-454572563
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456575220:361,Modifiability,sandbox,sandbox,361,"Testing the tool behavior when given an incomplete PED file. PED; <img width=""847"" alt=""screenshot 2019-01-22 16 42 07"" src=""https://user-images.githubusercontent.com/11543866/51567234-b42e3200-1e64-11e9-942c-2934980dc04a.png"">. Command; ```; gatk CalculateGenotypePosteriors \; -V precomputed/trioGGVCF.vcf.gz \; -ped duo.ped \; --skip-population-priors \; -O sandbox/duoCGP.vcf.gz; ```. Results; <img width=""842"" alt=""screenshot 2019-01-22 16 44 01"" src=""https://user-images.githubusercontent.com/11543866/51567337-ef306580-1e64-11e9-8ca6-051ccb3fa18d.png"">. The line of interest reads:; ```; 16:27:00.401 INFO CalculateGenotypePosteriors - No PED file passed or no *non-skipped* trios found in PED file. Skipping family priors.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456575220
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456575220:0,Testability,Test,Testing,0,"Testing the tool behavior when given an incomplete PED file. PED; <img width=""847"" alt=""screenshot 2019-01-22 16 42 07"" src=""https://user-images.githubusercontent.com/11543866/51567234-b42e3200-1e64-11e9-942c-2934980dc04a.png"">. Command; ```; gatk CalculateGenotypePosteriors \; -V precomputed/trioGGVCF.vcf.gz \; -ped duo.ped \; --skip-population-priors \; -O sandbox/duoCGP.vcf.gz; ```. Results; <img width=""842"" alt=""screenshot 2019-01-22 16 44 01"" src=""https://user-images.githubusercontent.com/11543866/51567337-ef306580-1e64-11e9-8ca6-051ccb3fa18d.png"">. The line of interest reads:; ```; 16:27:00.401 INFO CalculateGenotypePosteriors - No PED file passed or no *non-skipped* trios found in PED file. Skipping family priors.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456575220
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456575220:361,Testability,sandbox,sandbox,361,"Testing the tool behavior when given an incomplete PED file. PED; <img width=""847"" alt=""screenshot 2019-01-22 16 42 07"" src=""https://user-images.githubusercontent.com/11543866/51567234-b42e3200-1e64-11e9-942c-2934980dc04a.png"">. Command; ```; gatk CalculateGenotypePosteriors \; -V precomputed/trioGGVCF.vcf.gz \; -ped duo.ped \; --skip-population-priors \; -O sandbox/duoCGP.vcf.gz; ```. Results; <img width=""842"" alt=""screenshot 2019-01-22 16 44 01"" src=""https://user-images.githubusercontent.com/11543866/51567337-ef306580-1e64-11e9-8ca6-051ccb3fa18d.png"">. The line of interest reads:; ```; 16:27:00.401 INFO CalculateGenotypePosteriors - No PED file passed or no *non-skipped* trios found in PED file. Skipping family priors.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456575220
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456975545:59,Deployability,update,updates,59,"Thank you @gmagoon. This is in the new draft now and these updates should be reflected in the next release of GATK. . @ldgauthier, the PR containing the updates is at https://github.com/broadinstitute/gatk/pull/5601.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456975545
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456975545:99,Deployability,release,release,99,"Thank you @gmagoon. This is in the new draft now and these updates should be reflected in the next release of GATK. . @ldgauthier, the PR containing the updates is at https://github.com/broadinstitute/gatk/pull/5601.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456975545
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456975545:153,Deployability,update,updates,153,"Thank you @gmagoon. This is in the new draft now and these updates should be reflected in the next release of GATK. . @ldgauthier, the PR containing the updates is at https://github.com/broadinstitute/gatk/pull/5601.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456975545
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456983294:147,Deployability,update,updated,147,"@ldgauthier, please let me know if it is okay to close this or if you would like to make further changes to either document. To summarize, we have updated the tooldoc and the visualization of the LaTeX equations in https://software.broadinstitute.org/gatk/documentation/article?id=11074. We have some suggestions for further updates to Article#11074 commented in the linked GoogleDoc above but will not update the article further at this time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456983294
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456983294:325,Deployability,update,updates,325,"@ldgauthier, please let me know if it is okay to close this or if you would like to make further changes to either document. To summarize, we have updated the tooldoc and the visualization of the LaTeX equations in https://software.broadinstitute.org/gatk/documentation/article?id=11074. We have some suggestions for further updates to Article#11074 commented in the linked GoogleDoc above but will not update the article further at this time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456983294
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456983294:403,Deployability,update,update,403,"@ldgauthier, please let me know if it is okay to close this or if you would like to make further changes to either document. To summarize, we have updated the tooldoc and the visualization of the LaTeX equations in https://software.broadinstitute.org/gatk/documentation/article?id=11074. We have some suggestions for further updates to Article#11074 commented in the linked GoogleDoc above but will not update the article further at this time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-456983294
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-458728389:82,Testability,test,tests,82,"I've incorporated your feedback to #5601 @ldgauthier and the commit is undergoing tests. Please feel free to merge the PR if you accept the changes and have no further comments. . As for [Article#11074](https://software.broadinstitute.org/gatk/documentation/article?id=11074), given we have addressed the original issues (e.g. Latex), I am going to consider the additional recommendations as something for the not-so-near future. Would that be okay with you @ldgauthier?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-458728389
https://github.com/broadinstitute/gatk/issues/5409#issuecomment-458728389:23,Usability,feedback,feedback,23,"I've incorporated your feedback to #5601 @ldgauthier and the commit is undergoing tests. Please feel free to merge the PR if you accept the changes and have no further comments. . As for [Article#11074](https://software.broadinstitute.org/gatk/documentation/article?id=11074), given we have addressed the original issues (e.g. Latex), I am going to consider the additional recommendations as something for the not-so-near future. Would that be okay with you @ldgauthier?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5409#issuecomment-458728389
https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438805556:60,Modifiability,rewrite,rewrite,60,"BTW, I wouldn't bother looking at the diff. It's a complete rewrite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438805556
https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438824631:4751,Deployability,update,update,4751,"zL2NvbnRhbWluYXRpb24vQ29udGFtaW5hdGlvbk1vZGVsLmphdmE=) | `92.39% <92.39%> (ø)` | `39 <39> (?)` | |; | [.../walkers/contamination/ContaminationSegmenter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ29udGFtaW5hdGlvblNlZ21lbnRlci5qYXZh) | `96.42% <96.42%> (ø)` | `9 <9> (?)` | |; | [...lbender/utils/read/SAMRecordToGATKReadAdapter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1NBTVJlY29yZFRvR0FUS1JlYWRBZGFwdGVyLmphdmE=) | `91.6% <0%> (-2.1%)` | `144% <0%> (+6%)` | |; | [...nder/tools/funcotator/TranscriptSelectionMode.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL1RyYW5zY3JpcHRTZWxlY3Rpb25Nb2RlLmphdmE=) | `89.71% <0%> (-1.87%)` | `1% <0%> (ø)` | |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `86.95% <0%> (-1.68%)` | `17% <0%> (ø)` | |; | ... and [23 more](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=footer). Last update [864b180...1183b3d](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438824631
https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438824631:4654,Energy Efficiency,Power,Powered,4654,"zL2NvbnRhbWluYXRpb24vQ29udGFtaW5hdGlvbk1vZGVsLmphdmE=) | `92.39% <92.39%> (ø)` | `39 <39> (?)` | |; | [.../walkers/contamination/ContaminationSegmenter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ29udGFtaW5hdGlvblNlZ21lbnRlci5qYXZh) | `96.42% <96.42%> (ø)` | `9 <9> (?)` | |; | [...lbender/utils/read/SAMRecordToGATKReadAdapter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1NBTVJlY29yZFRvR0FUS1JlYWRBZGFwdGVyLmphdmE=) | `91.6% <0%> (-2.1%)` | `144% <0%> (+6%)` | |; | [...nder/tools/funcotator/TranscriptSelectionMode.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL1RyYW5zY3JpcHRTZWxlY3Rpb25Nb2RlLmphdmE=) | `89.71% <0%> (-1.87%)` | `1% <0%> (ø)` | |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `86.95% <0%> (-1.68%)` | `17% <0%> (ø)` | |; | ... and [23 more](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=footer). Last update [864b180...1183b3d](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438824631
https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438824631:1478,Performance,Optimiz,OptimizationUtils,1478,oken=7RuX7LsQVf&height=150&src=pr)](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #5413 +/- ##; ============================================; + Coverage 87.02% 87.08% +0.06% ; - Complexity 30454 30511 +57 ; ============================================; Files 1853 1856 +3 ; Lines 140995 141484 +489 ; Branches 15518 15536 +18 ; ============================================; + Hits 122706 123217 +511 ; + Misses 12648 12617 -31 ; - Partials 5641 5650 +9; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...der/tools/walkers/contamination/PileupSummary.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vUGlsZXVwU3VtbWFyeS5qYXZh) | `90% <ø> (+1.42%)` | `14 <0> (+1)` | :arrow_up: |; | [...dinstitute/hellbender/utils/OptimizationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9PcHRpbWl6YXRpb25VdGlscy5qYXZh) | `42.1% <100%> (+3.21%)` | `4 <1> (+1)` | :arrow_up: |; | [...ination/CalculateContaminationIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ2FsY3VsYXRlQ29udGFtaW5hdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <100%> (ø)` | `14 <1> (+2)` | :arrow_up: |; | [...ols/walkers/contamination/ContaminationRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ29udGFtaW5hdGlvblJlY29yZC5qYXZh) | `88.23% <100%> (-2.88%)` | `5 <1> (-1)` | |; | [.../walkers/contamination/CalculateContamination.java](https://codecov.io/gh/broadi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438824631
https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438824631:4517,Usability,learn,learn,4517,"zL2NvbnRhbWluYXRpb24vQ29udGFtaW5hdGlvbk1vZGVsLmphdmE=) | `92.39% <92.39%> (ø)` | `39 <39> (?)` | |; | [.../walkers/contamination/ContaminationSegmenter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ29udGFtaW5hdGlvblNlZ21lbnRlci5qYXZh) | `96.42% <96.42%> (ø)` | `9 <9> (?)` | |; | [...lbender/utils/read/SAMRecordToGATKReadAdapter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1NBTVJlY29yZFRvR0FUS1JlYWRBZGFwdGVyLmphdmE=) | `91.6% <0%> (-2.1%)` | `144% <0%> (+6%)` | |; | [...nder/tools/funcotator/TranscriptSelectionMode.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL1RyYW5zY3JpcHRTZWxlY3Rpb25Nb2RlLmphdmE=) | `89.71% <0%> (-1.87%)` | `1% <0%> (ø)` | |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `86.95% <0%> (-1.68%)` | `17% <0%> (ø)` | |; | ... and [23 more](https://codecov.io/gh/broadinstitute/gatk/pull/5413/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=footer). Last update [864b180...1183b3d](https://codecov.io/gh/broadinstitute/gatk/pull/5413?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5413#issuecomment-438824631
https://github.com/broadinstitute/gatk/pull/5413#issuecomment-440136061:20,Availability,error,error,20,Put in docs for the error bars. Now this PR has no sloppy loose ends.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5413#issuecomment-440136061
https://github.com/broadinstitute/gatk/pull/5416#issuecomment-439324985:2187,Deployability,pipeline,pipelines,2187,6% <100%> (+0.926%)` | `8 <1> (+1)` | :arrow_up: |; | [...bender/engine/spark/AssemblyRegionWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5416/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvQXNzZW1ibHlSZWdpb25XYWxrZXJTcGFyay5qYXZh) | `100% <100%> (+22.917%)` | `13 <0> (-2)` | :arrow_down: |; | [...nstitute/hellbender/engine/spark/SparkSharder.java](https://codecov.io/gh/broadinstitute/gatk/pull/5416/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtTaGFyZGVyLmphdmE=) | `90.789% <100%> (-0.367%)` | `28 <3> (-3)` | |; | [...der/tools/HaplotypeCallerSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5416/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `68.293% <100%> (+9.563%)` | `16 <5> (+4)` | :arrow_up: |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5416/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `90.741% <100%> (+0.175%)` | `13 <0> (ø)` | :arrow_down: |; | [...nstitute/hellbender/engine/ShardBoundaryShard.java](https://codecov.io/gh/broadinstitute/gatk/pull/5416/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvU2hhcmRCb3VuZGFyeVNoYXJkLmphdmE=) | `100% <100%> (ø)` | `5 <1> (+1)` | :arrow_up: |; | [...ampleAssemblyRegionWalkerSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5416/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlQXNzZW1ibHlSZWdpb25XYWxrZXJTcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `100% <100%> (+88.889%)` | `4 <1> (+2)` | :arrow_up: |; | [...tute/hellbender/engine/ReadlessAssemblyRegion.java](https://codecov.io/gh,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5416#issuecomment-439324985
https://github.com/broadinstitute/gatk/pull/5416#issuecomment-439843425:399,Availability,Down,Downsampling,399,"Thanks for the review @jamesemery. I've addressed your comments. A few outstanding issues:; * `ActivityProfileStateIterator` and `AssemblyRegionFromActivityProfileStateIterator` duplicate parts of `AssemblyRegionIterator`, so it would be nice to remove the code duplication. Not totally straightforward as the latter does read caching, but the first two don't (Spark shouldn't be caching reads).; * Downsampling needs more work. I would be OK doing that separately, since I've only ever seen it when running on a full genome, and the new strict code needs more work to work on a full genome (I've only got it running on an exome so far).; * There are some improvements we could make to `ReadlessAssemblyRegion` regarding Java interface design and generics, but I'm not sure what they are yet. I'm not sure if these are blockers, since the strict codepath is a new option (off by default), but would like to know what you and @jonn-smith think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5416#issuecomment-439843425
https://github.com/broadinstitute/gatk/pull/5416#issuecomment-439843425:726,Integrability,interface,interface,726,"Thanks for the review @jamesemery. I've addressed your comments. A few outstanding issues:; * `ActivityProfileStateIterator` and `AssemblyRegionFromActivityProfileStateIterator` duplicate parts of `AssemblyRegionIterator`, so it would be nice to remove the code duplication. Not totally straightforward as the latter does read caching, but the first two don't (Spark shouldn't be caching reads).; * Downsampling needs more work. I would be OK doing that separately, since I've only ever seen it when running on a full genome, and the new strict code needs more work to work on a full genome (I've only got it running on an exome so far).; * There are some improvements we could make to `ReadlessAssemblyRegion` regarding Java interface design and generics, but I'm not sure what they are yet. I'm not sure if these are blockers, since the strict codepath is a new option (off by default), but would like to know what you and @jonn-smith think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5416#issuecomment-439843425
https://github.com/broadinstitute/gatk/issues/5420#issuecomment-439188100:41,Usability,simpl,simple,41,@bhanugandham This might be a relatively simple thing for you to get started with.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5420#issuecomment-439188100
https://github.com/broadinstitute/gatk/pull/5422#issuecomment-439972461:38,Deployability,update,update,38,"Here are the documents we should also update to reflect these updates:; - https://gatkforums.broadinstitute.org/gatk/discussion/1255/using-jexl-to-apply-hard-filters-or-select-variants-based-on-annotation-values; - https://software.broadinstitute.org/gatk/documentation/article?id=11080. Also, here is a list of documents with the `jexl` tag:; https://gatkforums.broadinstitute.org/gatk/discussions/tagged/jexl. I have put in a word of caution in https://gatkforums.broadinstitute.org/gatk/discussion/12350/how-to-filter-on-genotype-using-variantfiltration/p1?new=1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5422#issuecomment-439972461
https://github.com/broadinstitute/gatk/pull/5422#issuecomment-439972461:62,Deployability,update,updates,62,"Here are the documents we should also update to reflect these updates:; - https://gatkforums.broadinstitute.org/gatk/discussion/1255/using-jexl-to-apply-hard-filters-or-select-variants-based-on-annotation-values; - https://software.broadinstitute.org/gatk/documentation/article?id=11080. Also, here is a list of documents with the `jexl` tag:; https://gatkforums.broadinstitute.org/gatk/discussions/tagged/jexl. I have put in a word of caution in https://gatkforums.broadinstitute.org/gatk/discussion/12350/how-to-filter-on-genotype-using-variantfiltration/p1?new=1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5422#issuecomment-439972461
https://github.com/broadinstitute/gatk/pull/5422#issuecomment-440374899:52,Deployability,update,updates,52,"Tagging @rcmajovski, who will lead on the forum doc updates.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5422#issuecomment-440374899
https://github.com/broadinstitute/gatk/pull/5422#issuecomment-444122485:89,Deployability,update,updated,89,"@rcmajovski @sooheelee I'm going to take this link out of the gatk doc until there is an updated version of it online. Is there an eta for that, or a ticket somewhere, so I can make a ticket to restore the link in the tools that use JEXL when thats finished ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5422#issuecomment-444122485
https://github.com/broadinstitute/gatk/pull/5422#issuecomment-447206700:1187,Deployability,update,update,1187,"@cmnbroad, sorry for the delayed response. I was in Taiwan giving a workshop last week and then I fell ill (run of the mill cold virus). The Comms team has been migrating issue tracking to a new system on Monday.com, which I am just now familiarizing myself to as I have been occupied with Taiwan workshop preparation. Forum questions are tracked in a separate system, Zendesk. The SOPs towards handling work for the two different systems are still under development so the best way to ensure you are up to date with the progress of work is to contact Robert @rcmajovski. The previous GitHub board that we used at https://github.com/broadinstitute/dsde-docs is still up and I still have my issue tickets here as I haven't had a chance to migrate these. . I do not know if you have access, but here is the link to track the issue ticket on Monday.com:; https://dsp-comms.monday.com/boards/145112271/. Just to orient you, if you click on the issue, a sideboard slides out from the right and you can comment on the work:; ![screenshot 2018-12-13 22 51 00](https://user-images.githubusercontent.com/11543866/49982483-c0040b80-ff2a-11e8-99a5-b6aae33d0311.png). It seems I've been assigned to update these documents. I'm unfamiliar with JEXL itself. I will survey the work that needs to be done and let you know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5422#issuecomment-447206700
https://github.com/broadinstitute/gatk/pull/5422#issuecomment-447206700:781,Security,access,access,781,"@cmnbroad, sorry for the delayed response. I was in Taiwan giving a workshop last week and then I fell ill (run of the mill cold virus). The Comms team has been migrating issue tracking to a new system on Monday.com, which I am just now familiarizing myself to as I have been occupied with Taiwan workshop preparation. Forum questions are tracked in a separate system, Zendesk. The SOPs towards handling work for the two different systems are still under development so the best way to ensure you are up to date with the progress of work is to contact Robert @rcmajovski. The previous GitHub board that we used at https://github.com/broadinstitute/dsde-docs is still up and I still have my issue tickets here as I haven't had a chance to migrate these. . I do not know if you have access, but here is the link to track the issue ticket on Monday.com:; https://dsp-comms.monday.com/boards/145112271/. Just to orient you, if you click on the issue, a sideboard slides out from the right and you can comment on the work:; ![screenshot 2018-12-13 22 51 00](https://user-images.githubusercontent.com/11543866/49982483-c0040b80-ff2a-11e8-99a5-b6aae33d0311.png). It seems I've been assigned to update these documents. I'm unfamiliar with JEXL itself. I will survey the work that needs to be done and let you know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5422#issuecomment-447206700
https://github.com/broadinstitute/gatk/pull/5425#issuecomment-439976455:95,Security,access,access,95,"@jonn-smith Is there a forum post (or other docs) on how to setup a datasource for remote, NIO access? Do we make it clear that this only supports what the GATK supports?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5425#issuecomment-439976455
https://github.com/broadinstitute/gatk/pull/5425#issuecomment-439976455:117,Usability,clear,clear,117,"@jonn-smith Is there a forum post (or other docs) on how to setup a datasource for remote, NIO access? Do we make it clear that this only supports what the GATK supports?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5425#issuecomment-439976455
https://github.com/broadinstitute/gatk/pull/5425#issuecomment-440011054:150,Deployability,update,updates,150,@LeeTL1220 Currently there is no extra documentation going over the NIO functionality. This will be documented as part of the yet-to-be documentation updates that I am writing for the release.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5425#issuecomment-440011054
https://github.com/broadinstitute/gatk/pull/5425#issuecomment-440011054:184,Deployability,release,release,184,@LeeTL1220 Currently there is no extra documentation going over the NIO functionality. This will be documented as part of the yet-to-be documentation updates that I am writing for the release.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5425#issuecomment-440011054
https://github.com/broadinstitute/gatk/issues/5427#issuecomment-592086085:102,Safety,predict,prediction,102,"The DREAM SMC-RNA does not pertain to SNv and indel calling. Rather, it's only for fusion and isoform prediction.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5427#issuecomment-592086085
https://github.com/broadinstitute/gatk/issues/5428#issuecomment-452833680:53,Deployability,release,released,53,"@droazen No. It won't be fixed until the sources are released again, which is backed up by a couple of other things.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5428#issuecomment-452833680
https://github.com/broadinstitute/gatk/pull/5430#issuecomment-442613021:1614,Deployability,pipeline,pipelines,1614,s 15891 15910 +19 ; ===============================================; + Hits 125471 125553 +82 ; - Misses 12837 12839 +2 ; - Partials 5771 5786 +15; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5430?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...pelines/metrics/QualityScoreDistributionSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9RdWFsaXR5U2NvcmVEaXN0cmlidXRpb25TcGFyay5qYXZh) | `95.238% <100%> (ø)` | `16 <0> (ø)` | :arrow_down: |; | [...transforms/markduplicates/MarkDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `94.872% <100%> (+0.427%)` | `38 <9> (+4)` | :arrow_up: |; | [...pipelines/metrics/CollectMultipleMetricsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9Db2xsZWN0TXVsdGlwbGVNZXRyaWNzU3BhcmsuamF2YQ==) | `92.593% <100%> (ø)` | `9 <0> (ø)` | :arrow_down: |; | [...k/pipelines/metrics/MetricsCollectorSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9NZXRyaWNzQ29sbGVjdG9yU3BhcmtUb29sLmphdmE=) | `75% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...ark/pipelines/metrics/MeanQualityByCycleSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9NZWFuUXVhbGl0eUJ5Q3ljbGVTcGFyay5qYXZh) | `90.816% <100%> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...s/metrics/CollectBaseDistribut,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5430#issuecomment-442613021
https://github.com/broadinstitute/gatk/pull/5430#issuecomment-442613021:1952,Deployability,pipeline,pipelines,1952,onSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9RdWFsaXR5U2NvcmVEaXN0cmlidXRpb25TcGFyay5qYXZh) | `95.238% <100%> (ø)` | `16 <0> (ø)` | :arrow_down: |; | [...transforms/markduplicates/MarkDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `94.872% <100%> (+0.427%)` | `38 <9> (+4)` | :arrow_up: |; | [...pipelines/metrics/CollectMultipleMetricsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9Db2xsZWN0TXVsdGlwbGVNZXRyaWNzU3BhcmsuamF2YQ==) | `92.593% <100%> (ø)` | `9 <0> (ø)` | :arrow_down: |; | [...k/pipelines/metrics/MetricsCollectorSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9NZXRyaWNzQ29sbGVjdG9yU3BhcmtUb29sLmphdmE=) | `75% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...ark/pipelines/metrics/MeanQualityByCycleSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9NZWFuUXVhbGl0eUJ5Q3ljbGVTcGFyay5qYXZh) | `90.816% <100%> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...s/metrics/CollectBaseDistributionByCycleSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9Db2xsZWN0QmFzZURpc3RyaWJ1dGlvbkJ5Q3ljbGVTcGFyay5qYXZh) | `87.037% <100%> (ø)` | `9 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/eng,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5430#issuecomment-442613021
https://github.com/broadinstitute/gatk/pull/5430#issuecomment-442613021:2282,Deployability,pipeline,pipelines,2282,kDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `94.872% <100%> (+0.427%)` | `38 <9> (+4)` | :arrow_up: |; | [...pipelines/metrics/CollectMultipleMetricsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9Db2xsZWN0TXVsdGlwbGVNZXRyaWNzU3BhcmsuamF2YQ==) | `92.593% <100%> (ø)` | `9 <0> (ø)` | :arrow_down: |; | [...k/pipelines/metrics/MetricsCollectorSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9NZXRyaWNzQ29sbGVjdG9yU3BhcmtUb29sLmphdmE=) | `75% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...ark/pipelines/metrics/MeanQualityByCycleSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9NZWFuUXVhbGl0eUJ5Q3ljbGVTcGFyay5qYXZh) | `90.816% <100%> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...s/metrics/CollectBaseDistributionByCycleSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9Db2xsZWN0QmFzZURpc3RyaWJ1dGlvbkJ5Q3ljbGVTcGFyay5qYXZh) | `87.037% <100%> (ø)` | `9 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/engine/spark/GATKSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1NwYXJrVG9vbC5qYXZh) | `82.286% <76.923%> (-0.147%)` | `78 <9> (+10)` | |; | [.../pipelines/MarkDuplicatesSparkIntegrationTest.java](https:/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5430#issuecomment-442613021
https://github.com/broadinstitute/gatk/pull/5430#issuecomment-442613021:3243,Deployability,pipeline,pipelines,3243,:arrow_down: |; | [...ark/pipelines/metrics/MeanQualityByCycleSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9NZWFuUXVhbGl0eUJ5Q3ljbGVTcGFyay5qYXZh) | `90.816% <100%> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...s/metrics/CollectBaseDistributionByCycleSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvbWV0cmljcy9Db2xsZWN0QmFzZURpc3RyaWJ1dGlvbkJ5Q3ljbGVTcGFyay5qYXZh) | `87.037% <100%> (ø)` | `9 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/engine/spark/GATKSparkTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1NwYXJrVG9vbC5qYXZh) | `82.286% <76.923%> (-0.147%)` | `78 <9> (+10)` | |; | [.../pipelines/MarkDuplicatesSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvTWFya0R1cGxpY2F0ZXNTcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `91.144% <93.103%> (-0.262%)` | `42 <1> (+6)` | |; | [...hellbender/utils/runtime/RuntimeUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1J1bnRpbWVVdGlsc1VuaXRUZXN0LmphdmE=) | `87.5% <0%> (-12.5%)` | `4% <0%> (+1%)` | |; | [...te/hellbender/tools/funcotator/OutputRenderer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL091dHB1dFJlbmRlcmVyLmphdmE=) | `92.857% <0%> (-7.143%)` | `4% <0%> (ø)` | |; | ... and [17 more](https://codecov.io/gh/broadinstitute/gatk/pull/5430/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5430#issuecomment-442613021
https://github.com/broadinstitute/gatk/issues/5431#issuecomment-439981502:363,Deployability,update,updated,363,"Yes - Funcotator supports this out of the box right now (including for MT chromosomes). Funcotator is still a beta tool, but will be out of beta _very_ soon. There is some documentation on the [forums](https://gatkforums.broadinstitute.org/dsde/discussion/11193/funcotator-information-and-tutorial/) as well as in the GATK Docs. All the documentation needs to be updated but none of it should be wrong. If you run the HaplotypeCaller output VCF through Funcotator you'll get many annotations. Protein position is one of them. However, this is the position of the actual change in the protein sequence, rather than the variant locus. The distinction is that there can be indels that change bases in position X and the protein sequence doesn't differ until position X+Z (for example in short tandem repeats, if one repeat is deleted).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5431#issuecomment-439981502
https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439892644:469,Availability,down,downstream,469,"Hi @fpbarthel,. You have a few options, but I think they would all require a bit of manual processing on your part. For example, you could use CollectReadCounts with your initial list of bins, but then you'd have to do the averaging step manually. Hopefully, it should not be too trouble to put together your own script to do this; however, since it is somewhat of a custom operation, it's unlikely we'll support it as a feature. In any case, note that the rest of the downstream tools in both our germline and somatic pipelines are only set up to work with integer counts. I don't know your reasons for wanting to average counts over multiple bins, but since 1) averages contain less information than the full resolution bins, 2) the BAM I/O to perform count collection is expensive (so we don't want to discard information during the CollectReadCounts step that we might need later), and 3) we want to build generative models of the counts, our philosophy is to always retain the integer counts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439892644
https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439892644:519,Deployability,pipeline,pipelines,519,"Hi @fpbarthel,. You have a few options, but I think they would all require a bit of manual processing on your part. For example, you could use CollectReadCounts with your initial list of bins, but then you'd have to do the averaging step manually. Hopefully, it should not be too trouble to put together your own script to do this; however, since it is somewhat of a custom operation, it's unlikely we'll support it as a feature. In any case, note that the rest of the downstream tools in both our germline and somatic pipelines are only set up to work with integer counts. I don't know your reasons for wanting to average counts over multiple bins, but since 1) averages contain less information than the full resolution bins, 2) the BAM I/O to perform count collection is expensive (so we don't want to discard information during the CollectReadCounts step that we might need later), and 3) we want to build generative models of the counts, our philosophy is to always retain the integer counts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439892644
https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439892644:746,Performance,perform,perform,746,"Hi @fpbarthel,. You have a few options, but I think they would all require a bit of manual processing on your part. For example, you could use CollectReadCounts with your initial list of bins, but then you'd have to do the averaging step manually. Hopefully, it should not be too trouble to put together your own script to do this; however, since it is somewhat of a custom operation, it's unlikely we'll support it as a feature. In any case, note that the rest of the downstream tools in both our germline and somatic pipelines are only set up to work with integer counts. I don't know your reasons for wanting to average counts over multiple bins, but since 1) averages contain less information than the full resolution bins, 2) the BAM I/O to perform count collection is expensive (so we don't want to discard information during the CollectReadCounts step that we might need later), and 3) we want to build generative models of the counts, our philosophy is to always retain the integer counts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439892644
https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439916142:153,Deployability,pipeline,pipeline,153,"@fpbarthel In that case, I would not average the bins---I'd simply take the total integer count across them, which you can then use with the rest of the pipeline and should decrease the noise as you describe. You can still use CollectReadCounts, but it will be up to you whether you want to 1) collect counts on manually merged bins, or 2) collect counts on the initial bins and manually sum the counts for the merged bins. Another option might be to use PreprocessIntervals to create 10kb bins across the genome and then manually intersect that with your list of exons (i.e., keeping only the bins that overlap with your exons) before collecting counts. There are multiple ways one might define such merged bins, which makes it hard to come up with a single tool to cover every possibility. Fortunately, it should be relatively easy for users to put together their own custom script for merging bins. For these reasons, I think it makes sense to not focus too much CNV-team development effort on adding features like this---our philosophy is to leave such pre/postprocessing steps to the user, and focus on CNV-specific algorithms such as denoising, segmentation, etc. Hopefully that makes sense!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439916142
https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439916142:60,Usability,simpl,simply,60,"@fpbarthel In that case, I would not average the bins---I'd simply take the total integer count across them, which you can then use with the rest of the pipeline and should decrease the noise as you describe. You can still use CollectReadCounts, but it will be up to you whether you want to 1) collect counts on manually merged bins, or 2) collect counts on the initial bins and manually sum the counts for the merged bins. Another option might be to use PreprocessIntervals to create 10kb bins across the genome and then manually intersect that with your list of exons (i.e., keeping only the bins that overlap with your exons) before collecting counts. There are multiple ways one might define such merged bins, which makes it hard to come up with a single tool to cover every possibility. Fortunately, it should be relatively easy for users to put together their own custom script for merging bins. For these reasons, I think it makes sense to not focus too much CNV-team development effort on adding features like this---our philosophy is to leave such pre/postprocessing steps to the user, and focus on CNV-specific algorithms such as denoising, segmentation, etc. Hopefully that makes sense!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5432#issuecomment-439916142
https://github.com/broadinstitute/gatk/issues/5432#issuecomment-440027365:66,Deployability,pipeline,pipelines,66,@fpbarthel The denoising methods in both the somatic and germline pipelines correct for bin-specific biases. So no weighting of the raw counts should be necessary.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5432#issuecomment-440027365
https://github.com/broadinstitute/gatk/issues/5433#issuecomment-449899779:28,Integrability,message,message,28,"Yes, I messed up the commit message and wrote that it ""resolves issue 5433"" instead of ""resolves issue #5433"". Without the hash I guess github assumes it's stupid meatbag language and ignores it. The bug should be fixed so I'm closing the issue manually. Sorry to leave this hanging the last month, and thanks for pointing it out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5433#issuecomment-449899779
https://github.com/broadinstitute/gatk/issues/5433#issuecomment-449899779:123,Security,hash,hash,123,"Yes, I messed up the commit message and wrote that it ""resolves issue 5433"" instead of ""resolves issue #5433"". Without the hash I guess github assumes it's stupid meatbag language and ignores it. The bug should be fixed so I'm closing the issue manually. Sorry to leave this hanging the last month, and thanks for pointing it out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5433#issuecomment-449899779
https://github.com/broadinstitute/gatk/issues/5434#issuecomment-439966204:342,Usability,simpl,simply,342,@ldgauthier what do you think would be the implications of fixing this by either keeping the 2bp ALLELE_EXTENSION overlap or remove it. I guess that most of the time the variant is supported by a healthy number of reads and the AD/DP is perhaps a couple of reads lower that is supposed based on the PL if anything. It is more parsimonious to simply don't consider reads that don't overlap the variant but it seems to me that the 2bp was put there for a reason (increase sensitivity?),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-439966204
https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447125138:101,Deployability,integrat,integration,101,I guess that should be fixed as well. Do you have the command and data to reproduce... I can add the integration test for that.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447125138
https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447125138:101,Integrability,integrat,integration,101,I guess that should be fixed as well. Do you have the command and data to reproduce... I can add the integration test for that.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447125138
https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447125138:113,Testability,test,test,113,I guess that should be fixed as well. Do you have the command and data to reproduce... I can add the integration test for that.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447125138
https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447350938:1280,Security,access,access,1280,"This is a different sample/locus, but same issue:; `java -jar $GATKjar HaplotypeCaller --emit-ref-confidence GVCF --gvcf-gq-bands 10 --gvcf-gq-bands 20 --gvcf-gq-bands 30 --gvcf-gq-bands 40 --gvcf-gq-bands 50 --gvcf-gq-bands 60 --gvcf-gq-bands 70 --gvcf-gq-bands 80 --gvcf-gq-bands 90 --contamination-fraction-to-filter 0.011583226666666667 -L gs://broad-gotc-dev-cromwell-execution/ExomeGermlineSingleSample/873ad750-62ac-41a1-857a-a9388ad23392/call-BamToGvcf/BamToGvcf/c6c55d1d-7f26-4816-b268-10acfe409083/call-ScatterIntervalList/glob-cb4648beeaff920acb03de7603c06f98/41scattered.interval_list -I gs://broad-gotc-dev-cromwell-execution/ExomeGermlineSingleSample/873ad750-62ac-41a1-857a-a9388ad23392/call-UnmappedBamToAlignedBam/UnmappedBamToAlignedBam/3945800d-4668-41b0-9eb0-602c2bf9b209/call-GatherBamFiles/NA12878.bam -G StandardAnnotation -G AS_StandardAnnotaiton -new-qual`; where GATKjar is 4.0.10.1 in my case. My problematic output is:; `chr6 149638730 . G GTTT,<NON_REF> 0.13 . AS_RAW_BaseQRankSum=||;AS_RAW_MQ=0.00|0.00|0.00;AS_RAW_MQRankSum=||;AS_RAW_ReadPosRankSum=||;AS_SB_TABLE=0,0|0,0|0,0;ExcessHet=3.0103;MLEAC=1,0;MLEAF=0.500,0.00 GT:AD:DP:GQ:PL:SB 1/1:0,0,0:0:3:19,3,0,19,3,19:0,0,0,0`; which is missing DP, QD, and RAW_MQandDP. Let me know if you don't have access to the gotc-dev bucket.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447350938
https://github.com/broadinstitute/gatk/issues/5434#issuecomment-557828837:22,Modifiability,refactor,refactoring,22,Doing some additional refactoring and rebasing.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-557828837
https://github.com/broadinstitute/gatk/issues/5434#issuecomment-557830846:61,Availability,avail,available,61,Tried to add that example/bug above but the bam is no longer available. A quick try with another NA12878 bam didn't reproduce the bug. So won't do it for now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-557830846
https://github.com/broadinstitute/gatk/pull/5435#issuecomment-440032835:258,Deployability,update,update,258,"I did one thing I expect may be controversial, I implemented getAttributeAsLongList() in RMSMappingQuality. It's unlikely that ints would overflow in that particular case, so it might be possible to go without doing that. The cleaner alternative would be to update VariantContext and CommonInfo, but they were in htsjdk, so I wasn't sure how to proceed there.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5435#issuecomment-440032835
https://github.com/broadinstitute/gatk/pull/5435#issuecomment-440649639:306,Modifiability,refactor,refactoring,306,"I made the change you suggested but just realized I forgot to push before; leaving for my flight. I'll push when I get back. On Tue, Nov 20, 2018, 12:04 PM ldgauthier <notifications@github.com wrote:. > *@ldgauthier* commented on this pull request.; >; > Looks lovely, thanks for the quick fix! I have one refactoring suggestion; > -- take it or leave it.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/RMSMappingQuality.java; > <https://github.com/broadinstitute/gatk/pull/5435#discussion_r235089237>:; >; > > return Arrays.asList(squareSum,totalDP);; > } catch (final NumberFormatException e) {; > throw new UserException.BadInput(""malformed "" + GATKVCFConstants.RAW_RMS_MAPPING_QUALITY_KEY + "" annotation: "" + rawDataString);; > }; > }; >; > + /**; > + * Private getter function to replace VariantContext::getAttributeAsIntList in instances where there is a chance; > + * that ints will overlow beyond Integer.MAX_VALUE; > + * @return VariantContext attribute indexed by key, as list of long.; > + */; > + static private List<Long> getAttributeAsLongList(final VariantContext vc, final String key, final Long defaultValue) {; >; > I agree with your reticence to put this into htsjdk. The type handling; > there is super awkward, but I don't think it's worth dealing with until it; > gets improved in 3.0. However, I might suggest making this method public; > and moving it to a utility class. GATKProtectedVariantContextUtils has a; > lot of similar methods; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5435#pullrequestreview-176875488>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGKhCBnSuwz30W-52kw9uZTXywWUCua-ks5uxDYbgaJpZM4Yp2Gl>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5435#issuecomment-440649639
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443552901:149,Availability,error,error,149,"@gmagoon You're right to raise the issue. The tricky thing about it is that overlapping mates' bases *are* independent evidence as far as sequencing error is concerned, but are not independent as far as PCR error is concerned, so there are reasons to use fragments as the fundamental unit, but also reasons to use reads. This is why a quick fix is probably not going to be satisfactory. A few of us are thinking about something principled. Suggestions are welcome, of course!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443552901
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443552901:207,Availability,error,error,207,"@gmagoon You're right to raise the issue. The tricky thing about it is that overlapping mates' bases *are* independent evidence as far as sequencing error is concerned, but are not independent as far as PCR error is concerned, so there are reasons to use fragments as the fundamental unit, but also reasons to use reads. This is why a quick fix is probably not going to be satisfactory. A few of us are thinking about something principled. Suggestions are welcome, of course!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443552901
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420:247,Availability,error,error,247,"Thanks @davidbenjamin. . For what it is worth, here are some of my thoughts. From my perspective, it might helpful to separate the discussion into read likelihood calculation and the genotype likelihood calculation. As I understand it, sequencing error is directly relevant to the pairHMM read likelihood calculation. I guess the location where PCR error is most relevant (read likelihood vs genotype likelihood) would depend on whether the read likelihood is computing a ""fragment likelihood"" (the likely DNA sequence of the fragment being sequenced) or a ""haplotype likelihood"" (the likely source haplotype for the fragment being sequenced). In any case, as I see it, this particular issue could be interpreted as a shortcoming in only the HaplotypeCaller genotype likelihood calculation, and it would essentially be an issue of double counting. So I'm not sure that a quick fix for this issue is necessarily off the table...Maybe something like one of the following could be used just before or during the genotype likelihood calculation:; - something like `filterOverlappingReads` from Mutect2 (https://github.com/broadinstitute/gatk/blob/master/src/main/java/org/broadinstitute/hellbender/tools/walkers/mutect/SomaticGenotypingEngine.java#L326); - separate consideration of overlapping reads when calculating genotype likelihoods, as used in UnifiedGenotyper (https://github.com/broadgsa/gatk-protected/blob/aa8764d6c3de146856b174a8674fa787a6311d7c/protected/gatk-tools-protected/src/main/java/org/broadinstitute/gatk/tools/walkers/genotyper/DiploidSNPGenotypeLikelihoods.java#L183). As I see it, #4958, which seems to be more related to read likelihood calculation, is where a more involved solution, with more fundamental changes, might be warranted. From my perspective (not being especially familiar with the pairHMM model), an ideal solution would transition the pairHMM from read likelihood to a ""fragment likelihood"" or ""haplotype likelihood"" when information from read pairs is available,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420:349,Availability,error,error,349,"Thanks @davidbenjamin. . For what it is worth, here are some of my thoughts. From my perspective, it might helpful to separate the discussion into read likelihood calculation and the genotype likelihood calculation. As I understand it, sequencing error is directly relevant to the pairHMM read likelihood calculation. I guess the location where PCR error is most relevant (read likelihood vs genotype likelihood) would depend on whether the read likelihood is computing a ""fragment likelihood"" (the likely DNA sequence of the fragment being sequenced) or a ""haplotype likelihood"" (the likely source haplotype for the fragment being sequenced). In any case, as I see it, this particular issue could be interpreted as a shortcoming in only the HaplotypeCaller genotype likelihood calculation, and it would essentially be an issue of double counting. So I'm not sure that a quick fix for this issue is necessarily off the table...Maybe something like one of the following could be used just before or during the genotype likelihood calculation:; - something like `filterOverlappingReads` from Mutect2 (https://github.com/broadinstitute/gatk/blob/master/src/main/java/org/broadinstitute/hellbender/tools/walkers/mutect/SomaticGenotypingEngine.java#L326); - separate consideration of overlapping reads when calculating genotype likelihoods, as used in UnifiedGenotyper (https://github.com/broadgsa/gatk-protected/blob/aa8764d6c3de146856b174a8674fa787a6311d7c/protected/gatk-tools-protected/src/main/java/org/broadinstitute/gatk/tools/walkers/genotyper/DiploidSNPGenotypeLikelihoods.java#L183). As I see it, #4958, which seems to be more related to read likelihood calculation, is where a more involved solution, with more fundamental changes, might be warranted. From my perspective (not being especially familiar with the pairHMM model), an ideal solution would transition the pairHMM from read likelihood to a ""fragment likelihood"" or ""haplotype likelihood"" when information from read pairs is available,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420:1991,Availability,avail,available,1991," is necessarily off the table...Maybe something like one of the following could be used just before or during the genotype likelihood calculation:; - something like `filterOverlappingReads` from Mutect2 (https://github.com/broadinstitute/gatk/blob/master/src/main/java/org/broadinstitute/hellbender/tools/walkers/mutect/SomaticGenotypingEngine.java#L326); - separate consideration of overlapping reads when calculating genotype likelihoods, as used in UnifiedGenotyper (https://github.com/broadgsa/gatk-protected/blob/aa8764d6c3de146856b174a8674fa787a6311d7c/protected/gatk-tools-protected/src/main/java/org/broadinstitute/gatk/tools/walkers/genotyper/DiploidSNPGenotypeLikelihoods.java#L183). As I see it, #4958, which seems to be more related to read likelihood calculation, is where a more involved solution, with more fundamental changes, might be warranted. From my perspective (not being especially familiar with the pairHMM model), an ideal solution would transition the pairHMM from read likelihood to a ""fragment likelihood"" or ""haplotype likelihood"" when information from read pairs is available, even if they aren't overlapping. The idea would be that a modified pairHMM model could produce a single fragment (or haplotype) likelihood for a given read pair. Such an approach would unify the issues of ""merging"" read pairs and phasing in a read-pair aware manner (and potentially also modeling PCR errors). In principle, a ""fragment likelihood""-type approach could even incorporate info from corresponding PCR duplicates to improve the results when sequencing error rates are high. This sort of approach could also flow into the genotype likelihood calculation by providing a single, merged fragment likelihood to consider rather than a separate read likelihood for each read. UPDATE: On further thought, it probably wasn't a good idea for me to use the terms fragment likelihood or haplotype likelihood to distinguish the proposed approach, since the read likelihood is effectively already ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420:2303,Availability,error,errors,2303,"Reads` from Mutect2 (https://github.com/broadinstitute/gatk/blob/master/src/main/java/org/broadinstitute/hellbender/tools/walkers/mutect/SomaticGenotypingEngine.java#L326); - separate consideration of overlapping reads when calculating genotype likelihoods, as used in UnifiedGenotyper (https://github.com/broadgsa/gatk-protected/blob/aa8764d6c3de146856b174a8674fa787a6311d7c/protected/gatk-tools-protected/src/main/java/org/broadinstitute/gatk/tools/walkers/genotyper/DiploidSNPGenotypeLikelihoods.java#L183). As I see it, #4958, which seems to be more related to read likelihood calculation, is where a more involved solution, with more fundamental changes, might be warranted. From my perspective (not being especially familiar with the pairHMM model), an ideal solution would transition the pairHMM from read likelihood to a ""fragment likelihood"" or ""haplotype likelihood"" when information from read pairs is available, even if they aren't overlapping. The idea would be that a modified pairHMM model could produce a single fragment (or haplotype) likelihood for a given read pair. Such an approach would unify the issues of ""merging"" read pairs and phasing in a read-pair aware manner (and potentially also modeling PCR errors). In principle, a ""fragment likelihood""-type approach could even incorporate info from corresponding PCR duplicates to improve the results when sequencing error rates are high. This sort of approach could also flow into the genotype likelihood calculation by providing a single, merged fragment likelihood to consider rather than a separate read likelihood for each read. UPDATE: On further thought, it probably wasn't a good idea for me to use the terms fragment likelihood or haplotype likelihood to distinguish the proposed approach, since the read likelihood is effectively already calculating those. Probably a better term would be ""read set likelihood"", where the read set would consist of paired reads and potentially also any corresponding PCR duplicate reads.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420:2465,Availability,error,error,2465,"Reads` from Mutect2 (https://github.com/broadinstitute/gatk/blob/master/src/main/java/org/broadinstitute/hellbender/tools/walkers/mutect/SomaticGenotypingEngine.java#L326); - separate consideration of overlapping reads when calculating genotype likelihoods, as used in UnifiedGenotyper (https://github.com/broadgsa/gatk-protected/blob/aa8764d6c3de146856b174a8674fa787a6311d7c/protected/gatk-tools-protected/src/main/java/org/broadinstitute/gatk/tools/walkers/genotyper/DiploidSNPGenotypeLikelihoods.java#L183). As I see it, #4958, which seems to be more related to read likelihood calculation, is where a more involved solution, with more fundamental changes, might be warranted. From my perspective (not being especially familiar with the pairHMM model), an ideal solution would transition the pairHMM from read likelihood to a ""fragment likelihood"" or ""haplotype likelihood"" when information from read pairs is available, even if they aren't overlapping. The idea would be that a modified pairHMM model could produce a single fragment (or haplotype) likelihood for a given read pair. Such an approach would unify the issues of ""merging"" read pairs and phasing in a read-pair aware manner (and potentially also modeling PCR errors). In principle, a ""fragment likelihood""-type approach could even incorporate info from corresponding PCR duplicates to improve the results when sequencing error rates are high. This sort of approach could also flow into the genotype likelihood calculation by providing a single, merged fragment likelihood to consider rather than a separate read likelihood for each read. UPDATE: On further thought, it probably wasn't a good idea for me to use the terms fragment likelihood or haplotype likelihood to distinguish the proposed approach, since the read likelihood is effectively already calculating those. Probably a better term would be ""read set likelihood"", where the read set would consist of paired reads and potentially also any corresponding PCR duplicate reads.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420:2682,Deployability,UPDATE,UPDATE,2682,"Reads` from Mutect2 (https://github.com/broadinstitute/gatk/blob/master/src/main/java/org/broadinstitute/hellbender/tools/walkers/mutect/SomaticGenotypingEngine.java#L326); - separate consideration of overlapping reads when calculating genotype likelihoods, as used in UnifiedGenotyper (https://github.com/broadgsa/gatk-protected/blob/aa8764d6c3de146856b174a8674fa787a6311d7c/protected/gatk-tools-protected/src/main/java/org/broadinstitute/gatk/tools/walkers/genotyper/DiploidSNPGenotypeLikelihoods.java#L183). As I see it, #4958, which seems to be more related to read likelihood calculation, is where a more involved solution, with more fundamental changes, might be warranted. From my perspective (not being especially familiar with the pairHMM model), an ideal solution would transition the pairHMM from read likelihood to a ""fragment likelihood"" or ""haplotype likelihood"" when information from read pairs is available, even if they aren't overlapping. The idea would be that a modified pairHMM model could produce a single fragment (or haplotype) likelihood for a given read pair. Such an approach would unify the issues of ""merging"" read pairs and phasing in a read-pair aware manner (and potentially also modeling PCR errors). In principle, a ""fragment likelihood""-type approach could even incorporate info from corresponding PCR duplicates to improve the results when sequencing error rates are high. This sort of approach could also flow into the genotype likelihood calculation by providing a single, merged fragment likelihood to consider rather than a separate read likelihood for each read. UPDATE: On further thought, it probably wasn't a good idea for me to use the terms fragment likelihood or haplotype likelihood to distinguish the proposed approach, since the read likelihood is effectively already calculating those. Probably a better term would be ""read set likelihood"", where the read set would consist of paired reads and potentially also any corresponding PCR duplicate reads.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420:419,Integrability,depend,depend,419,"Thanks @davidbenjamin. . For what it is worth, here are some of my thoughts. From my perspective, it might helpful to separate the discussion into read likelihood calculation and the genotype likelihood calculation. As I understand it, sequencing error is directly relevant to the pairHMM read likelihood calculation. I guess the location where PCR error is most relevant (read likelihood vs genotype likelihood) would depend on whether the read likelihood is computing a ""fragment likelihood"" (the likely DNA sequence of the fragment being sequenced) or a ""haplotype likelihood"" (the likely source haplotype for the fragment being sequenced). In any case, as I see it, this particular issue could be interpreted as a shortcoming in only the HaplotypeCaller genotype likelihood calculation, and it would essentially be an issue of double counting. So I'm not sure that a quick fix for this issue is necessarily off the table...Maybe something like one of the following could be used just before or during the genotype likelihood calculation:; - something like `filterOverlappingReads` from Mutect2 (https://github.com/broadinstitute/gatk/blob/master/src/main/java/org/broadinstitute/hellbender/tools/walkers/mutect/SomaticGenotypingEngine.java#L326); - separate consideration of overlapping reads when calculating genotype likelihoods, as used in UnifiedGenotyper (https://github.com/broadgsa/gatk-protected/blob/aa8764d6c3de146856b174a8674fa787a6311d7c/protected/gatk-tools-protected/src/main/java/org/broadinstitute/gatk/tools/walkers/genotyper/DiploidSNPGenotypeLikelihoods.java#L183). As I see it, #4958, which seems to be more related to read likelihood calculation, is where a more involved solution, with more fundamental changes, might be warranted. From my perspective (not being especially familiar with the pairHMM model), an ideal solution would transition the pairHMM from read likelihood to a ""fragment likelihood"" or ""haplotype likelihood"" when information from read pairs is available,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-443558420
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-481740688:55,Deployability,update,update,55,"Sounds great, thanks for your work on this and for the update, @davidbenjamin !",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-481740688
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-521379039:213,Safety,avoid,avoid,213,"I also have the same problem here. I don't really care about the GQ field, but I do care about the AD fields. I get over-counting due to overlapping reads. @davidbenjamin what options should I use with Mutect2 to avoid this issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-521379039
https://github.com/broadinstitute/gatk/issues/5436#issuecomment-523617830:108,Modifiability,refactor,refactor,108,"@freeseek No option currently, but after #5831 goes in and Mutect2 groups paired reads together I intend to refactor our annotation engine to account for this. That way we can have both read-based annotations and pair-based annotations.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5436#issuecomment-523617830
https://github.com/broadinstitute/gatk/issues/5439#issuecomment-443750050:0,Integrability,Depend,Depends,0,Depends on #4571.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-443750050
https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720514553:363,Performance,perform,performance,363,"@bbimber Let me see if I can dig up the old branches where I started this work. I'm not sure what state they're in, and I'm sure they're very out of date wrt/master, but they're probably at least worth looking at. I recall thinking that https://github.com/broadinstitute/gatk/issues/5441 would be quite a lot of work. Have you done any profiling to see where the performance issues actually are for your use case? I'd highly recommend doing that first before embarking on any big changes like this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720514553
https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720617033:258,Modifiability,refactor,refactoring,258,"@cmnbroad OK, thanks. I need to do more investigation, but my initial thoughts/investigation were two-fold:. 1) Our main use-case if our VariantQC tool, which makes several instances of VariantEval in kind of a hacky way and calls apply() on them. Therefore refactoring a VariantEvalEngine out of VariantEval has value on this front, even if tricky. 2) From what I could tell, the worst perf is the iteration pattern. Using something like MultiVariantWalkerGroupedOnStart would be a big savings and avoid re-querying the component VCFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720617033
https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720617033:499,Safety,avoid,avoid,499,"@cmnbroad OK, thanks. I need to do more investigation, but my initial thoughts/investigation were two-fold:. 1) Our main use-case if our VariantQC tool, which makes several instances of VariantEval in kind of a hacky way and calls apply() on them. Therefore refactoring a VariantEvalEngine out of VariantEval has value on this front, even if tricky. 2) From what I could tell, the worst perf is the iteration pattern. Using something like MultiVariantWalkerGroupedOnStart would be a big savings and avoid re-querying the component VCFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720617033
https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720719517:160,Testability,test,test,160,"Both sound right, but it would be comforting to know for sure that the proposed changes will actually fix the problem. I ran a profiler on some of the existing test cases, but they're not substantial enough to make the profiling results interesting. My previous hacking branch is https://github.com/broadinstitute/gatk/tree/cn_variant_eval_walker. The changes were basically exploratory - I was really just hacking to see what kinds of issues we'd run into. The branch is way behind master so it really needs a rebase. It would be great it you want to pursue this, but I'd strongly suggest trying to break it up into a series of incremental PRs as much as possible. I haven't looked at these classes for quite a while, but one proposal would be to start with a PR that just does #5441, then one that factors out the eval engine so it can be reused, and then another to change the VariantEval base class.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720719517
https://github.com/broadinstitute/gatk/issues/5439#issuecomment-730532600:20,Availability,down,down,20,"@cmnbroad I started down this road. i wanted to make sure i follow your reasoning on some of this. I think you propose to change the tool arguments such that each input VCF is tagged by name (like -V:eval vcf1.vcf.gz -V:comp vcf2.vcf.gz), instead of different argument names. This is paired with a change to set the 'source' on each VariantContext to match the name of the source feature context. Unless I'm missing something, this basically makes everything identified by strings, with no direct FeatureInput <-> VariantContext reference, right? . Presumably, MultiVariantWalkerGroupedOnStart could implement something like:. protected Map<FeatureInput<VariantContext>, List<VariantContext>> groupVariantsByFeatureInput(List<VariantContext> variants) {; Map<String, FeatureInput<VariantContext>> sourceMap = new HashMap<>();; getDrivingVariantsFeatureInputs().forEach(x -> sourceMap.put(x.getName(), x));; ; Map<FeatureInput<VariantContext>, List<VariantContext>> ret = new HashMap<>();; variants.forEach(vc -> {; FeatureInput<VariantContext> fi = sourceMap.get(vc.getSource());; if (fi == null) {; //possibly throw? ; }; ; List<VariantContext> l = ret.getOrDefault(fi, new ArrayList<>());; l.add(vc);; ret.put(fi, l);; }); ; ; return ret;; }",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-730532600
https://github.com/broadinstitute/gatk/issues/5439#issuecomment-730532600:813,Security,Hash,HashMap,813,"@cmnbroad I started down this road. i wanted to make sure i follow your reasoning on some of this. I think you propose to change the tool arguments such that each input VCF is tagged by name (like -V:eval vcf1.vcf.gz -V:comp vcf2.vcf.gz), instead of different argument names. This is paired with a change to set the 'source' on each VariantContext to match the name of the source feature context. Unless I'm missing something, this basically makes everything identified by strings, with no direct FeatureInput <-> VariantContext reference, right? . Presumably, MultiVariantWalkerGroupedOnStart could implement something like:. protected Map<FeatureInput<VariantContext>, List<VariantContext>> groupVariantsByFeatureInput(List<VariantContext> variants) {; Map<String, FeatureInput<VariantContext>> sourceMap = new HashMap<>();; getDrivingVariantsFeatureInputs().forEach(x -> sourceMap.put(x.getName(), x));; ; Map<FeatureInput<VariantContext>, List<VariantContext>> ret = new HashMap<>();; variants.forEach(vc -> {; FeatureInput<VariantContext> fi = sourceMap.get(vc.getSource());; if (fi == null) {; //possibly throw? ; }; ; List<VariantContext> l = ret.getOrDefault(fi, new ArrayList<>());; l.add(vc);; ret.put(fi, l);; }); ; ; return ret;; }",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-730532600
https://github.com/broadinstitute/gatk/issues/5439#issuecomment-730532600:975,Security,Hash,HashMap,975,"@cmnbroad I started down this road. i wanted to make sure i follow your reasoning on some of this. I think you propose to change the tool arguments such that each input VCF is tagged by name (like -V:eval vcf1.vcf.gz -V:comp vcf2.vcf.gz), instead of different argument names. This is paired with a change to set the 'source' on each VariantContext to match the name of the source feature context. Unless I'm missing something, this basically makes everything identified by strings, with no direct FeatureInput <-> VariantContext reference, right? . Presumably, MultiVariantWalkerGroupedOnStart could implement something like:. protected Map<FeatureInput<VariantContext>, List<VariantContext>> groupVariantsByFeatureInput(List<VariantContext> variants) {; Map<String, FeatureInput<VariantContext>> sourceMap = new HashMap<>();; getDrivingVariantsFeatureInputs().forEach(x -> sourceMap.put(x.getName(), x));; ; Map<FeatureInput<VariantContext>, List<VariantContext>> ret = new HashMap<>();; variants.forEach(vc -> {; FeatureInput<VariantContext> fi = sourceMap.get(vc.getSource());; if (fi == null) {; //possibly throw? ; }; ; List<VariantContext> l = ret.getOrDefault(fi, new ArrayList<>());; l.add(vc);; ret.put(fi, l);; }); ; ; return ret;; }",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-730532600
https://github.com/broadinstitute/gatk/pull/5442#issuecomment-440776502:4007,Deployability,update,update,4007,"tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRW5naW5lLmphdmE=) | `89.88% <66.66%> (-1.26%)` | `63 <3> (+3)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `81.09% <0%> (+0.6%)` | `42% <0%> (ø)` | :arrow_down: |; | [...walkers/haplotypecaller/AssemblyRegionTrimmer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseVJlZ2lvblRyaW1tZXIuamF2YQ==) | `62.72% <0%> (+2.72%)` | `20% <0%> (+2%)` | :arrow_up: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=footer). Last update [9c4a27b...bf39362](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5442#issuecomment-440776502
https://github.com/broadinstitute/gatk/pull/5442#issuecomment-440776502:3910,Energy Efficiency,Power,Powered,3910,"tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRW5naW5lLmphdmE=) | `89.88% <66.66%> (-1.26%)` | `63 <3> (+3)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `81.09% <0%> (+0.6%)` | `42% <0%> (ø)` | :arrow_down: |; | [...walkers/haplotypecaller/AssemblyRegionTrimmer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseVJlZ2lvblRyaW1tZXIuamF2YQ==) | `62.72% <0%> (+2.72%)` | `20% <0%> (+2%)` | :arrow_up: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=footer). Last update [9c4a27b...bf39362](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5442#issuecomment-440776502
https://github.com/broadinstitute/gatk/pull/5442#issuecomment-440776502:3773,Usability,learn,learn,3773,"tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRW5naW5lLmphdmE=) | `89.88% <66.66%> (-1.26%)` | `63 <3> (+3)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXJVbml0VGVzdC5qYXZh) | `60% <0%> (ø)` | `2% <0%> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `81.09% <0%> (+0.6%)` | `42% <0%> (ø)` | :arrow_down: |; | [...walkers/haplotypecaller/AssemblyRegionTrimmer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5442/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9Bc3NlbWJseVJlZ2lvblRyaW1tZXIuamF2YQ==) | `62.72% <0%> (+2.72%)` | `20% <0%> (+2%)` | :arrow_up: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=footer). Last update [9c4a27b...bf39362](https://codecov.io/gh/broadinstitute/gatk/pull/5442?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5442#issuecomment-440776502
https://github.com/broadinstitute/gatk/pull/5443#issuecomment-440888980:1861,Deployability,pipeline,pipelines,1861,ee) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...itute/hellbender/utils/report/GATKReportTable.java](https://codecov.io/gh/broadinstitute/gatk/pull/5443/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZXBvcnQvR0FUS1JlcG9ydFRhYmxlLmphdmE=) | `70.412% <0%> (-0.265%)` | `67 <0> (ø)` | |; | [...ils/nio/NioFileCopierWithProgressMeterResults.java](https://codecov.io/gh/broadinstitute/gatk/pull/5443/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyUmVzdWx0cy5qYXZh) | `0% <0%> (-94.737%)` | `0% <0%> (-9%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5443/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5443/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...ols/funcotator/FuncotatorDataSourceDownloader.java](https://codecov.io/gh/broadinstitute/gatk/pull/5443/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JEYXRhU291cmNlRG93bmxvYWRlci5qYXZh) | `0% <0%> (-66.197%)` | `0% <0%> (-14%)` | |; | [...nder/utils/nio/NioFileCopierWithProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5443/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vTmlvRmlsZUNvcGllcldpdGhQcm9ncmVzc01ldGVyLmphdmE=) | `17% <0%> (-52.5%)` | `9% <0%> (-30%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5443/d,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5443#issuecomment-440888980
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-441671265:113,Availability,down,down,113,"Hi @jjfarrell,; Unfortunately there are some shortcuts and approximations that happen in GVCF mode that do break down in a small number of cases. I suspect your issue may be related to #5171. I can take a look at this, but it could be a while. What would speed things along is if you could share an IGV screenshot and GVCF snippet for cram 1 around the GQ0 call.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-441671265
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-441887865:430,Safety,risk,risk,430,"@ldgauthier Thanks for looking into this! Below is the info requested. Let me know if you need anything else. . I am not so sure that it is such a rare case. I have attached a DP histogram of all the GQ=0 for chr19. There are many more than I expected to see. . For the one SNP rs429358, GQ=0 occurred in 1% of the samples. This happens to be one of the 2 SNPs that are used to determine the APOE genotypes for Alzheimers Disease risk. These are all APOE 33. . Sample 1 gVCF record:; `chr19 44908684 . T <NON_REF> . . END=44908688 GT:DP:GQ:MIN_DP:PL 0/0:44:0:41:0,0,1097`. Sample 1: vcf output via gvcf: ; `GT:AD:DP:GQ:PL 0/0:41,0:41:0:0,0,1097`. Sample 1: vcf output without gvcf; `GT:AD:DP:GQ:PL 0/0:37,0:37:99:0,111,1236`. Here is the IGV screenshot.; ![sample1](https://user-images.githubusercontent.com/1960717/49054868-bad15d80-f1c3-11e8-8059-d26e2beb21a2.png). This is a histogram of the DP for each GQ=0 genotype on chr19 for 5000 samples. ![gq0_dp](https://user-images.githubusercontent.com/1960717/49055161-a3df3b00-f1c4-11e8-9acb-904667f78d38.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-441887865
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476230026:632,Energy Efficiency,efficient,efficient,632,"Oooh, that read that's soft-clipped at both ends is super suspicious. How; many bases are ""match"" in the CIGAR? We've seen cases where contaminating; reads from bacteria (and the occasional food-derived species) have a chance; 19bp (or maybe 21bp?) match to the human reference, which is the default; minimum BWA seed size. Can you try rerunning HC with the; OverclippedReadFilter? (see; https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_hellbender_engine_filters_OverclippedReadFilter.php; and https://software.broadinstitute.org/gatk/documentation/article?id=11007); It might also be more efficient if you're able to share a small snippet of; the bam just showing this region. On Sat, Mar 16, 2019 at 6:59 PM jjfarrell <notifications@github.com> wrote:. > Here is the IGV view near SNPs rs429358+rs7412; >; > [image: image]; > <https://user-images.githubusercontent.com/1960717/54482671-91454c00-481d-11e9-866f-59d1644f9fe5.png>; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5445#issuecomment-473599597>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdFVk4r82ciOUN3UsMca7z1-rzbNsks5vXXdVgaJpZM4YxgEF>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476230026
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476360195:99,Deployability,pipeline,pipeline,99,"We use the overclippedReadFilter as an argument to HaplotypeCaller in our; standard WGS production pipeline. Maybe it would be worthwhile making it; the default for HC. I expect some GQ0 sites, but 62K still seems high. How does that compare; to running HC while ignoring soft clips?. On Mon, Mar 25, 2019 at 3:08 PM jjfarrell <notifications@github.com> wrote:. > Yes, those are bacterial reads. I had recently used blat to align those; > soft-clipped reads and found they were a 100% match to a bacteria. The; > cigar string has *21bp* of the 150bp read aligning to the APOE gene near; > the two variants which is consistent with your observation on bacteria.; >; > I ran HaplotypeCaller with the -RF OverclippedReadFilter argument.; >; > That filtered out the reads and as a result made an accurate call with a; > GQ=48 instead of 0 when creating the g.vcf.; >; > chr19 44908684 . T <NON_REF> . . END=44908684 GT:DP:GQ:MIN_DP:PL 0/0:39:; > *48*:39:0,48,1167; >; > Without the OverclippedReadFilter, the GQ ad been set to 0 when creating a; > g.vcf.; > chr19 44908684 . T <NON_REF> . . END=44908688 GT:DP:GQ:MIN_DP:PL 0/0:44:; > *0*:41:0,0,1097; >; > The number of sites on chr19 with a GQ=0 dropped from 78,342 to 62,470; > with the OverclippedReadFilter.; >; > So that filter does clean things up when creating a gvcf. Is there a; > reason that is not a default filter? Are there any cons to always apply; > this filter when running HaplotypeCaller?; >; > John; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476337308>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdCE7EM8R-_js3szXniGOAaGAJ-nGks5vaR7IgaJpZM4YxgEF>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476360195
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990:198,Energy Efficiency,adapt,adapter,198,"It seems that there are a lot of soft clips that aren't bacterial reads.; What's your mean insert size? I've seen lots of aberrant soft clips when; the insert size is small and Picard doesn't catch adapter sequences with; multiple mismatches. Does the Picard percent adapter in alignment summary; metrics seem high? I've also seen lots of soft clips when the chimera rate; is high, sometimes because of bad sample extraction. What's the percent; chimeras in your alignment summary metrics? 5% is bad and I've seen up to; 15%, but that was an FFPE tumor sample. On Mon, Mar 25, 2019 at 8:48 PM jjfarrell <notifications@github.com> wrote:. > When the --dontUseSoftCliiped flag is used, the GQ=0 is much lower- N=1355; > for '0/0' calls.; >; > zcat; > A-ADC-AD004288-BL-NCR-15AD82285.hg38.realign.bqsr.dontUseSoftclipped.g.vcf.gz; > |tr '\t' '\n'|grep '0/0'|tr ':' '\t'|cut -f2,3|awk '$2 == ""0"" {print; > $0}'|cut -f1|sort -n|uniq -c; > 1355 0; > 6 0,0,0; > 7 0,0,0,0; > 602 1; > 537 2; > 520 3; > 595 4; > 441 5; > 511 6; > 583 7; > 701 8; > 403 9; > 468 10; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476431178>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdA_gZKYn3vuqNDvvDadvM9tgzQqGks5vaW5IgaJpZM4YxgEF>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990:267,Energy Efficiency,adapt,adapter,267,"It seems that there are a lot of soft clips that aren't bacterial reads.; What's your mean insert size? I've seen lots of aberrant soft clips when; the insert size is small and Picard doesn't catch adapter sequences with; multiple mismatches. Does the Picard percent adapter in alignment summary; metrics seem high? I've also seen lots of soft clips when the chimera rate; is high, sometimes because of bad sample extraction. What's the percent; chimeras in your alignment summary metrics? 5% is bad and I've seen up to; 15%, but that was an FFPE tumor sample. On Mon, Mar 25, 2019 at 8:48 PM jjfarrell <notifications@github.com> wrote:. > When the --dontUseSoftCliiped flag is used, the GQ=0 is much lower- N=1355; > for '0/0' calls.; >; > zcat; > A-ADC-AD004288-BL-NCR-15AD82285.hg38.realign.bqsr.dontUseSoftclipped.g.vcf.gz; > |tr '\t' '\n'|grep '0/0'|tr ':' '\t'|cut -f2,3|awk '$2 == ""0"" {print; > $0}'|cut -f1|sort -n|uniq -c; > 1355 0; > 6 0,0,0; > 7 0,0,0,0; > 602 1; > 537 2; > 520 3; > 595 4; > 441 5; > 511 6; > 583 7; > 701 8; > 403 9; > 468 10; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476431178>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdA_gZKYn3vuqNDvvDadvM9tgzQqGks5vaW5IgaJpZM4YxgEF>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990:198,Integrability,adapter,adapter,198,"It seems that there are a lot of soft clips that aren't bacterial reads.; What's your mean insert size? I've seen lots of aberrant soft clips when; the insert size is small and Picard doesn't catch adapter sequences with; multiple mismatches. Does the Picard percent adapter in alignment summary; metrics seem high? I've also seen lots of soft clips when the chimera rate; is high, sometimes because of bad sample extraction. What's the percent; chimeras in your alignment summary metrics? 5% is bad and I've seen up to; 15%, but that was an FFPE tumor sample. On Mon, Mar 25, 2019 at 8:48 PM jjfarrell <notifications@github.com> wrote:. > When the --dontUseSoftCliiped flag is used, the GQ=0 is much lower- N=1355; > for '0/0' calls.; >; > zcat; > A-ADC-AD004288-BL-NCR-15AD82285.hg38.realign.bqsr.dontUseSoftclipped.g.vcf.gz; > |tr '\t' '\n'|grep '0/0'|tr ':' '\t'|cut -f2,3|awk '$2 == ""0"" {print; > $0}'|cut -f1|sort -n|uniq -c; > 1355 0; > 6 0,0,0; > 7 0,0,0,0; > 602 1; > 537 2; > 520 3; > 595 4; > 441 5; > 511 6; > 583 7; > 701 8; > 403 9; > 468 10; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476431178>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdA_gZKYn3vuqNDvvDadvM9tgzQqGks5vaW5IgaJpZM4YxgEF>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990:267,Integrability,adapter,adapter,267,"It seems that there are a lot of soft clips that aren't bacterial reads.; What's your mean insert size? I've seen lots of aberrant soft clips when; the insert size is small and Picard doesn't catch adapter sequences with; multiple mismatches. Does the Picard percent adapter in alignment summary; metrics seem high? I've also seen lots of soft clips when the chimera rate; is high, sometimes because of bad sample extraction. What's the percent; chimeras in your alignment summary metrics? 5% is bad and I've seen up to; 15%, but that was an FFPE tumor sample. On Mon, Mar 25, 2019 at 8:48 PM jjfarrell <notifications@github.com> wrote:. > When the --dontUseSoftCliiped flag is used, the GQ=0 is much lower- N=1355; > for '0/0' calls.; >; > zcat; > A-ADC-AD004288-BL-NCR-15AD82285.hg38.realign.bqsr.dontUseSoftclipped.g.vcf.gz; > |tr '\t' '\n'|grep '0/0'|tr ':' '\t'|cut -f2,3|awk '$2 == ""0"" {print; > $0}'|cut -f1|sort -n|uniq -c; > 1355 0; > 6 0,0,0; > 7 0,0,0,0; > 602 1; > 537 2; > 520 3; > 595 4; > 441 5; > 511 6; > 583 7; > 701 8; > 403 9; > 468 10; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476431178>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdA_gZKYn3vuqNDvvDadvM9tgzQqGks5vaW5IgaJpZM4YxgEF>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990:198,Modifiability,adapt,adapter,198,"It seems that there are a lot of soft clips that aren't bacterial reads.; What's your mean insert size? I've seen lots of aberrant soft clips when; the insert size is small and Picard doesn't catch adapter sequences with; multiple mismatches. Does the Picard percent adapter in alignment summary; metrics seem high? I've also seen lots of soft clips when the chimera rate; is high, sometimes because of bad sample extraction. What's the percent; chimeras in your alignment summary metrics? 5% is bad and I've seen up to; 15%, but that was an FFPE tumor sample. On Mon, Mar 25, 2019 at 8:48 PM jjfarrell <notifications@github.com> wrote:. > When the --dontUseSoftCliiped flag is used, the GQ=0 is much lower- N=1355; > for '0/0' calls.; >; > zcat; > A-ADC-AD004288-BL-NCR-15AD82285.hg38.realign.bqsr.dontUseSoftclipped.g.vcf.gz; > |tr '\t' '\n'|grep '0/0'|tr ':' '\t'|cut -f2,3|awk '$2 == ""0"" {print; > $0}'|cut -f1|sort -n|uniq -c; > 1355 0; > 6 0,0,0; > 7 0,0,0,0; > 602 1; > 537 2; > 520 3; > 595 4; > 441 5; > 511 6; > 583 7; > 701 8; > 403 9; > 468 10; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476431178>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdA_gZKYn3vuqNDvvDadvM9tgzQqGks5vaW5IgaJpZM4YxgEF>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990
https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990:267,Modifiability,adapt,adapter,267,"It seems that there are a lot of soft clips that aren't bacterial reads.; What's your mean insert size? I've seen lots of aberrant soft clips when; the insert size is small and Picard doesn't catch adapter sequences with; multiple mismatches. Does the Picard percent adapter in alignment summary; metrics seem high? I've also seen lots of soft clips when the chimera rate; is high, sometimes because of bad sample extraction. What's the percent; chimeras in your alignment summary metrics? 5% is bad and I've seen up to; 15%, but that was an FFPE tumor sample. On Mon, Mar 25, 2019 at 8:48 PM jjfarrell <notifications@github.com> wrote:. > When the --dontUseSoftCliiped flag is used, the GQ=0 is much lower- N=1355; > for '0/0' calls.; >; > zcat; > A-ADC-AD004288-BL-NCR-15AD82285.hg38.realign.bqsr.dontUseSoftclipped.g.vcf.gz; > |tr '\t' '\n'|grep '0/0'|tr ':' '\t'|cut -f2,3|awk '$2 == ""0"" {print; > $0}'|cut -f1|sort -n|uniq -c; > 1355 0; > 6 0,0,0; > 7 0,0,0,0; > 602 1; > 537 2; > 520 3; > 595 4; > 441 5; > 511 6; > 583 7; > 701 8; > 403 9; > 468 10; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476431178>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdA_gZKYn3vuqNDvvDadvM9tgzQqGks5vaW5IgaJpZM4YxgEF>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5445#issuecomment-476654990
https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281:24,Deployability,Integrat,IntegrationTestSpec,24,"@bbimber I don't think `IntegrationTestSpec` has any provisions for this, and it has a number of other limitations around output files as well. We mostly only keep it around to make it easier to port GATK3 test - I'd recommend writing new tests using `ArgumentsBuilder` and `runCommandLine`, and checking results manually, perhaps by delegating to the static assert* methods in `IntegrationTestSpec`. Take a look at `HaplotypeCallerIntegrationTest` as an example. For the case of multiple outputs, create a temporary directory and specify that for the prefix input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281
https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281:379,Deployability,Integrat,IntegrationTestSpec,379,"@bbimber I don't think `IntegrationTestSpec` has any provisions for this, and it has a number of other limitations around output files as well. We mostly only keep it around to make it easier to port GATK3 test - I'd recommend writing new tests using `ArgumentsBuilder` and `runCommandLine`, and checking results manually, perhaps by delegating to the static assert* methods in `IntegrationTestSpec`. Take a look at `HaplotypeCallerIntegrationTest` as an example. For the case of multiple outputs, create a temporary directory and specify that for the prefix input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281
https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281:24,Integrability,Integrat,IntegrationTestSpec,24,"@bbimber I don't think `IntegrationTestSpec` has any provisions for this, and it has a number of other limitations around output files as well. We mostly only keep it around to make it easier to port GATK3 test - I'd recommend writing new tests using `ArgumentsBuilder` and `runCommandLine`, and checking results manually, perhaps by delegating to the static assert* methods in `IntegrationTestSpec`. Take a look at `HaplotypeCallerIntegrationTest` as an example. For the case of multiple outputs, create a temporary directory and specify that for the prefix input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281
https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281:379,Integrability,Integrat,IntegrationTestSpec,379,"@bbimber I don't think `IntegrationTestSpec` has any provisions for this, and it has a number of other limitations around output files as well. We mostly only keep it around to make it easier to port GATK3 test - I'd recommend writing new tests using `ArgumentsBuilder` and `runCommandLine`, and checking results manually, perhaps by delegating to the static assert* methods in `IntegrationTestSpec`. Take a look at `HaplotypeCallerIntegrationTest` as an example. For the case of multiple outputs, create a temporary directory and specify that for the prefix input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281
https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281:206,Testability,test,test,206,"@bbimber I don't think `IntegrationTestSpec` has any provisions for this, and it has a number of other limitations around output files as well. We mostly only keep it around to make it easier to port GATK3 test - I'd recommend writing new tests using `ArgumentsBuilder` and `runCommandLine`, and checking results manually, perhaps by delegating to the static assert* methods in `IntegrationTestSpec`. Take a look at `HaplotypeCallerIntegrationTest` as an example. For the case of multiple outputs, create a temporary directory and specify that for the prefix input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281
https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281:239,Testability,test,tests,239,"@bbimber I don't think `IntegrationTestSpec` has any provisions for this, and it has a number of other limitations around output files as well. We mostly only keep it around to make it easier to port GATK3 test - I'd recommend writing new tests using `ArgumentsBuilder` and `runCommandLine`, and checking results manually, perhaps by delegating to the static assert* methods in `IntegrationTestSpec`. Take a look at `HaplotypeCallerIntegrationTest` as an example. For the case of multiple outputs, create a temporary directory and specify that for the prefix input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281
https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281:359,Testability,assert,assert,359,"@bbimber I don't think `IntegrationTestSpec` has any provisions for this, and it has a number of other limitations around output files as well. We mostly only keep it around to make it easier to port GATK3 test - I'd recommend writing new tests using `ArgumentsBuilder` and `runCommandLine`, and checking results manually, perhaps by delegating to the static assert* methods in `IntegrationTestSpec`. Take a look at `HaplotypeCallerIntegrationTest` as an example. For the case of multiple outputs, create a temporary directory and specify that for the prefix input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5446#issuecomment-441636281
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1414,Availability,error,error,1414,"local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:7352,Availability,down,down,7352,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:816,Performance,Load,Loading,816,"Just tested this locally outside of the Docker. I do not see the WARN:; ```; WMCF9-CB5:shlee$ gatk40110 LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv ; Using GATK jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java run",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1145,Security,authenticat,authenticated,1145,"alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv ; Using GATK jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1500,Security,authenticat,authentication,1500,"Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5,Testability,test,tested,5,"Just tested this locally outside of the Docker. I do not see the WARN:; ```; WMCF9-CB5:shlee$ gatk40110 LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv ; Using GATK jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java run",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:104,Usability,Learn,LearnReadOrientationModel,104,"Just tested this locally outside of the Docker. I do not see the WARN:; ```; WMCF9-CB5:shlee$ gatk40110 LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv ; Using GATK jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java run",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:615,Usability,Learn,LearnReadOrientationModel,615,"Just tested this locally outside of the Docker. I do not see the WARN:; ```; WMCF9-CB5:shlee$ gatk40110 LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv ; Using GATK jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java run",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1536,Usability,Learn,LearnReadOrientationModel,1536,"0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRES",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1644,Usability,Learn,LearnReadOrientationModel,1644,"f-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_R",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1736,Usability,Learn,LearnReadOrientationModel,1736,"sv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_I",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1861,Usability,Learn,LearnReadOrientationModel,1861,"tk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1965,Usability,Learn,LearnReadOrientationModel,1965,"18 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnRea",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2075,Usability,Learn,LearnReadOrientationModel,2075,"WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens:",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2173,Usability,Learn,LearnReadOrientationModel,2173,"end that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnRea",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2281,Usability,Learn,LearnReadOrientationModel,2281,"r credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing eng",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2389,Usability,Learn,LearnReadOrientationModel,2389,"abled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref an",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2459,Usability,Learn,LearnReadOrientationModel,2459,"/cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO Learn",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2530,Usability,Learn,LearnReadOrientationModel,2530,"ientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2615,Usability,Learn,LearnReadOrientationModel,2615,"20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2717,Usability,Learn,LearnReadOrientationModel,2717,"O LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrien",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2819,Usability,Learn,LearnReadOrientationModel,2819,"gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.8",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2921,Usability,Learn,LearnReadOrientationModel,2921,"12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 step",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:2992,Usability,Learn,LearnReadOrientationModel,2992,"t(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 8318",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3063,Usability,Learn,LearnReadOrientationModel,3063,"tionModel - Start Date/Time: November 26, 2018 12:16:19 PM EST; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3138,Usability,Learn,LearnReadOrientationModel,3138,"77 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt exa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3210,Usability,Learn,LearnReadOrientationModel,3210,"---------------------------; 12:16:20.177 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientatio",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3277,Usability,Learn,LearnReadOrientationModel,3277,"el - ------------------------------------------------------------; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM conve",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3349,Usability,Learn,LearnReadOrientationModel,3349,"ntationModel - HTSJDK Version: 2.16.1; 12:16:20.178 INFO LearnReadOrientationModel - Picard Version: 2.18.13; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3473,Usability,Learn,LearnReadOrientationModel,3473,"NFO LearnReadOrientationModel - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3597,Usability,Learn,LearnReadOrientationModel,3597,"Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3721,Usability,Learn,LearnReadOrientationModel,3721,"WRITE_FOR_SAMTOOLS : true; 12:16:20.178 INFO LearnReadOrientationModel - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3845,Usability,Learn,LearnReadOrientationModel,3845,"lse; 12:16:20.178 INFO LearnReadOrientationModel - Deflater: IntelDeflater; 12:16:20.178 INFO LearnReadOrientationModel - Inflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:3969,Usability,Learn,LearnReadOrientationModel,3969,"nflater: IntelInflater; 12:16:20.178 INFO LearnReadOrientationModel - GCS max retries/reopens: 20; 12:16:20.179 INFO LearnReadOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:4092,Usability,Learn,LearnReadOrientationModel,4092,"adOrientationModel - Requester pays: disabled; 12:16:20.179 INFO LearnReadOrientationModel - Initializing engine; 12:16:20.264 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:4216,Usability,Learn,LearnReadOrientationModel,4216,"64 INFO LearnReadOrientationModel - Done initializing engine; 12:16:22.006 INFO LearnReadOrientationModel - Context AAC: with 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:4340,Usability,Learn,LearnReadOrientationModel,4340,"h 217930 ref and 1616 alt examples, EM converged in 12 steps; 12:16:22.710 INFO LearnReadOrientationModel - Context AAG: with 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:4464,Usability,Learn,LearnReadOrientationModel,4464,"h 354938 ref and 3337 alt examples, EM converged in 12 steps; 12:16:23.278 INFO LearnReadOrientationModel - Context AAT: with 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:4588,Usability,Learn,LearnReadOrientationModel,4588,"h 252561 ref and 1308 alt examples, EM converged in 11 steps; 12:16:24.064 INFO LearnReadOrientationModel - Context ACA: with 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:4712,Usability,Learn,LearnReadOrientationModel,4712,"h 323210 ref and 5248 alt examples, EM converged in 13 steps; 12:16:24.802 INFO LearnReadOrientationModel - Context ACC: with 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:4836,Usability,Learn,LearnReadOrientationModel,4836,"h 284921 ref and 4351 alt examples, EM converged in 13 steps; 12:16:25.586 INFO LearnReadOrientationModel - Context ACG: with 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:4960,Usability,Learn,LearnReadOrientationModel,4960,"h 83185 ref and 2548 alt examples, EM converged in 13 steps; 12:16:26.245 INFO LearnReadOrientationModel - Context ACT: with 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5084,Usability,Learn,LearnReadOrientationModel,5084," 257420 ref and 3512 alt examples, EM converged in 13 steps; 12:16:27.027 INFO LearnReadOrientationModel - Context AGA: with 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5208,Usability,Learn,LearnReadOrientationModel,5208," 393111 ref and 6728 alt examples, EM converged in 13 steps; 12:16:27.911 INFO LearnReadOrientationModel - Context AGC: with 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5332,Usability,Learn,LearnReadOrientationModel,5332," 358648 ref and 6527 alt examples, EM converged in 13 steps; 12:16:28.813 INFO LearnReadOrientationModel - Context AGG: with 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5456,Usability,Learn,LearnReadOrientationModel,5456," 494947 ref and 7682 alt examples, EM converged in 14 steps; 12:16:29.461 INFO LearnReadOrientationModel - Context ATA: with 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5580,Usability,Learn,LearnReadOrientationModel,5580," 180560 ref and 1078 alt examples, EM converged in 12 steps; 12:16:29.940 INFO LearnReadOrientationModel - Context ATC: with 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5704,Usability,Learn,LearnReadOrientationModel,5704,"h 213079 ref and 1522 alt examples, EM converged in 11 steps; 12:16:30.524 INFO LearnReadOrientationModel - Context ATG: with 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5827,Usability,Learn,LearnReadOrientationModel,5827,"h 282561 ref and 2106 alt examples, EM converged in 12 steps; 12:16:31.007 INFO LearnReadOrientationModel - Context CAA: with 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:5951,Usability,Learn,LearnReadOrientationModel,5951,"h 284942 ref and 1909 alt examples, EM converged in 11 steps; 12:16:31.710 INFO LearnReadOrientationModel - Context CAC: with 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:6075,Usability,Learn,LearnReadOrientationModel,6075,"h 351720 ref and 3718 alt examples, EM converged in 12 steps; 12:16:32.407 INFO LearnReadOrientationModel - Context CAG: with 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:6199,Usability,Learn,LearnReadOrientationModel,6199,"h 547234 ref and 5940 alt examples, EM converged in 12 steps; 12:16:33.215 INFO LearnReadOrientationModel - Context CCA: with 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:6323,Usability,Learn,LearnReadOrientationModel,6323,"h 464164 ref and 8212 alt examples, EM converged in 13 steps; 12:16:34.070 INFO LearnReadOrientationModel - Context CCC: with 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 2",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:6447,Usability,Learn,LearnReadOrientationModel,6447,"h 512128 ref and 7580 alt examples, EM converged in 13 steps; 12:16:34.860 INFO LearnReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:6571,Usability,Learn,LearnReadOrientationModel,6571,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:6695,Usability,Learn,LearnReadOrientationModel,6695,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:6819,Usability,Learn,LearnReadOrientationModel,6819,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:6943,Usability,Learn,LearnReadOrientationModel,6943,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:7067,Usability,Learn,LearnReadOrientationModel,7067,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:7191,Usability,Learn,LearnReadOrientationModel,7191,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:7315,Usability,Learn,LearnReadOrientationModel,7315,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:7461,Usability,Learn,LearnReadOrientationModel,7461,"nReadOrientationModel - Context CCG: with 143118 ref and 4274 alt examples, EM converged in 14 steps; 12:16:35.567 INFO LearnReadOrientationModel - Context CGA: with 74445 ref and 2480 alt examples, EM converged in 14 steps; 12:16:36.368 INFO LearnReadOrientationModel - Context CGC: with 115334 ref and 3741 alt examples, EM converged in 14 steps; 12:16:36.931 INFO LearnReadOrientationModel - Context CTA: with 173673 ref and 1472 alt examples, EM converged in 13 steps; 12:16:37.537 INFO LearnReadOrientationModel - Context CTC: with 439622 ref and 3855 alt examples, EM converged in 12 steps; 12:16:38.010 INFO LearnReadOrientationModel - Context GAA: with 333082 ref and 2101 alt examples, EM converged in 11 steps; 12:16:38.546 INFO LearnReadOrientationModel - Context GAC: with 227508 ref and 2090 alt examples, EM converged in 12 steps; 12:16:39.384 INFO LearnReadOrientationModel - Context GCA: with 340865 ref and 6507 alt examples, EM converged in 14 steps; 12:16:40.330 INFO LearnReadOrientationModel - Context GCC: with 404793 ref and 8210 alt examples, EM converged in 14 steps; 12:16:41.107 INFO LearnReadOrientationModel - Context GGA: with 409382 ref and 6784 alt examples, EM converged in 13 steps; 12:16:41.620 INFO LearnReadOrientationModel - Context GTA: with 153202 ref and 1568 alt examples, EM converged in 12 steps; 12:16:42.114 INFO LearnReadOrientationModel - Context TAA: with 208518 ref and 1131 alt examples, EM converged in 12 steps; 12:16:42.902 INFO LearnReadOrientationModel - Context TCA: with 325628 ref and 6437 alt examples, EM converged in 13 steps; 12:16:43.443 INFO LearnReadOrientationModel - Context AAA: with 426193 ref and 2055 alt examples, EM converged in 12 steps; 12:16:43.452 INFO LearnReadOrientationModel - Shutting down engine; [November 26, 2018 12:16:43 PM EST] org.broadinstitute.hellbender.tools.walkers.readorientation.LearnReadOrientationModel done. Elapsed time: 0.39 minutes.; Runtime.totalMemory()=1543503872; Tool returned:; SUCCESS; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:210,Deployability,install,install,210,"I am also seeing this warning 3x with 4.0.11.0 on a cluster but outside of docker (centos 6). . ```; 18:05:08.861 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/pkg/gatk/4.0.11.0/install/bin/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Nov 24, 2018 6:05:09 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredential",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:524,Integrability,rout,route,524,"I am also seeing this warning 3x with 4.0.11.0 on a cluster but outside of docker (centos 6). . ```; 18:05:08.861 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/pkg/gatk/4.0.11.0/install/bin/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Nov 24, 2018 6:05:09 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredential",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:1349,Integrability,protocol,protocol,1349,th.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsPr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:1443,Integrability,protocol,protocol,1443,e are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.goo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:1534,Integrability,protocol,protocol,1534,(Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); at sha,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:1624,Integrability,protocol,protocol,1624,AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredent,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:3773,Integrability,rout,route,3773,"s.java:278); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:83); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:31); at com.google.cloud.storage.StorageOptions$Builder.build(StorageOptions.java:78); at org.broadinstitute.hellbender.utils.gcs.BucketUtils.setGlobalNIODefaultOptions(BucketUtils.java:382); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:183); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289). Nov 24, 2018 6:05:09 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.ww",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:4598,Integrability,protocol,protocol,4598,th.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsPr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:4692,Integrability,protocol,protocol,4692,e are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.goo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:4783,Integrability,protocol,protocol,4783,(Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); at sha,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:4873,Integrability,protocol,protocol,4873,AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredent,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:7022,Integrability,rout,route,7022,"s.java:278); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:83); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:31); at com.google.cloud.storage.StorageOptions$Builder.build(StorageOptions.java:78); at org.broadinstitute.hellbender.utils.gcs.BucketUtils.setGlobalNIODefaultOptions(BucketUtils.java:382); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:183); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289). Nov 24, 2018 6:05:09 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.ww",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:7847,Integrability,protocol,protocol,7847,th.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsPr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:7941,Integrability,protocol,protocol,7941,e are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.goo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:8032,Integrability,protocol,protocol,8032,(Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); at sha,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:8122,Integrability,protocol,protocol,8122,AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); at shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); at shaded.cloud_nio.com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredent,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:141,Performance,Load,Loading,141,"I am also seeing this warning 3x with 4.0.11.0 on a cluster but outside of docker (centos 6). . ```; 18:05:08.861 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/pkg/gatk/4.0.11.0/install/bin/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Nov 24, 2018 6:05:09 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredential",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:431,Safety,detect,detect,431,"I am also seeing this warning 3x with 4.0.11.0 on a cluster but outside of docker (centos 6). . ```; 18:05:08.861 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/pkg/gatk/4.0.11.0/install/bin/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Nov 24, 2018 6:05:09 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220); at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984); at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredential",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:3680,Safety,detect,detect,3680,"ptions.defaultCredentials(ServiceOptions.java:304); at com.google.cloud.ServiceOptions.<init>(ServiceOptions.java:278); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:83); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:31); at com.google.cloud.storage.StorageOptions$Builder.build(StorageOptions.java:78); at org.broadinstitute.hellbender.utils.gcs.BucketUtils.setGlobalNIODefaultOptions(BucketUtils.java:382); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:183); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289). Nov 24, 2018 6:05:09 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417:6929,Safety,detect,detect,6929,"ptions.defaultCredentials(ServiceOptions.java:304); at com.google.cloud.ServiceOptions.<init>(ServiceOptions.java:278); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:83); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:31); at com.google.cloud.storage.StorageOptions$Builder.build(StorageOptions.java:78); at org.broadinstitute.hellbender.utils.gcs.BucketUtils.setGlobalNIODefaultOptions(BucketUtils.java:382); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:183); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289). Nov 24, 2018 6:05:09 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; WARNING: Failed to detect whether we are running on Google Compute Engine.; java.net.NoRouteToHostException: No route to host (Host unreachable); at java.net.PlainSocketImpl.socketConnect(Native Method); at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); at java.net.Socket.connect(Socket.java:589); at sun.net.NetworkClient.doConnect(NetworkClient.java:175); at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); at sun.net.www.http.HttpClient.<init>(HttpClient.java:242); at sun.net.www.http.HttpClient.New(HttpClient.java:339); at sun.net.www.http.HttpClient.New(HttpClient.java:357); at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441873417
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-442117552:44,Deployability,update,updates,44,We need to wait for google cloud dependency updates in order for the fix to be incorporated into gatk.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-442117552
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-442117552:33,Integrability,depend,dependency,33,We need to wait for google cloud dependency updates in order for the fix to be incorporated into gatk.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-442117552
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-449468992:144,Deployability,release,release,144,"This will be fixed once https://github.com/googleapis/google-auth-library-java/pull/214 is incorporated into gatk, but we're waiting on another release of the google auth library and then the nio library which might take a bit.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-449468992
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-472935667:176,Availability,error,error,176,Is this actually fixed? Is there a version of GATK tools that incorporates this change so I can stop having the majority of my logs when run locally be filled up by this exact error message?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-472935667
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-472935667:182,Integrability,message,message,182,Is this actually fixed? Is there a version of GATK tools that incorporates this change so I can stop having the majority of my logs when run locally be filled up by this exact error message?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-472935667
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-472935667:127,Testability,log,logs,127,Is this actually fixed? Is there a version of GATK tools that incorporates this change so I can stop having the majority of my logs when run locally be filled up by this exact error message?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-472935667
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-472957288:70,Deployability,release,release,70,"@vortexing This is fixed in master, and will be part of the next GATK release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-472957288
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-473005736:33,Testability,log,log,33,"Excellent, thank you!!!! (and my log files thank you too!!)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-473005736
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-559145335:76,Safety,detect,detect,76,"I have the seam problem with app engine and Mac OS ; INFORMACIÓN: Failed to detect whether we are running on Google Compute Engine.; I init cloud, I am SU my IDE is Eclipse.; Run as - App Engine, I don't have a problem with ubuntu, just MAC",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-559145335
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:9389,Availability,error,errorprone,9389,-rev135-1.24.1.jar;E:\repository\com\google\cloud\google-cloud-firestore\0.61.0-beta\google-cloud-firestore-0.61.0-beta.jar;E:\repository\com\google\cloud\google-cloud-core-grpc\1.43.0\google-cloud-core-grpc-1.43.0.jar;E:\repository\com\google\protobuf\protobuf-java\3.6.0\protobuf-java-3.6.0.jar;E:\repository\io\grpc\grpc-protobuf\1.13.1\grpc-protobuf-1.13.1.jar;E:\repository\io\grpc\grpc-protobuf-lite\1.13.1\grpc-protobuf-lite-1.13.1.jar;E:\repository\io\grpc\grpc-context\1.13.1\grpc-context-1.13.1.jar;E:\repository\com\google\api\gax-grpc\1.30.0\gax-grpc-1.30.0.jar;E:\repository\org\threeten\threetenbp\1.3.3\threetenbp-1.3.3.jar;E:\repository\com\google\api\grpc\proto-google-cloud-firestore-v1beta1\0.26.0\proto-google-cloud-firestore-v1beta1-0.26.0.jar;E:\repository\com\google\auto\value\auto-value\1.4\auto-value-1.4.jar;E:\repository\io\grpc\grpc-netty-shaded\1.13.1\grpc-netty-shaded-1.13.1.jar;E:\repository\io\grpc\grpc-core\1.13.1\grpc-core-1.13.1.jar;E:\repository\com\google\errorprone\error_prone_annotations\2.1.2\error_prone_annotations-2.1.2.jar;E:\repository\io\opencensus\opencensus-contrib-grpc-metrics\0.12.3\opencensus-contrib-grpc-metrics-0.12.3.jar;E:\repository\io\grpc\grpc-stub\1.13.1\grpc-stub-1.13.1.jar;E:\repository\io\grpc\grpc-auth\1.13.1\grpc-auth-1.13.1.jar;E:\repository\io\opencensus\opencensus-api\0.15.0\opencensus-api-0.15.0.jar;E:\repository\io\opencensus\opencensus-contrib-grpc-util\0.15.0\opencensus-contrib-grpc-util-0.15.0.jar;E:\repository\com\google\guava\guava\20.0\guava-20.0.jar;E:\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;E:\repository\io\netty\netty-codec-http\4.1.49.Final\netty-codec-http-4.1.49.Final.jar;E:\repository\io\netty\netty-common\4.1.49.Final\netty-common-4.1.49.Final.jar;E:\repository\io\netty\netty-buffer\4.1.49.Final\netty-buffer-4.1.49.Final.jar;E:\repository\io\netty\netty-codec\4.1.49.Final\netty-codec-4.1.49.Final.jar;E:\repository\io\netty\netty-handler\4.1.49.Final\netty-handler-4.1.49.Final.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:28694,Availability,avail,available,28694,"895); 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878); 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550); 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750); 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226); 	at com.luz.push.PushApplication.main(PushApplication.java:10). java.io.IOException: The Application Default Credentials are not available. They are available if running in Google Compute Engine. Otherwise, the environment variable GOOGLE_APPLICATION_CREDENTIALS must be defined pointing to a file defining the credentials. See https://developers.google.com/accounts/docs/application-default-credentials for more information.; 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:131); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.utils.GcmUtils.init(GcmUtils.java:31); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.springframework.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:28714,Availability,avail,available,28714,"ionContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878); 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550); 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750); 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226); 	at com.luz.push.PushApplication.main(PushApplication.java:10). java.io.IOException: The Application Default Credentials are not available. They are available if running in Google Compute Engine. Otherwise, the environment variable GOOGLE_APPLICATION_CREDENTIALS must be defined pointing to a file defining the credentials. See https://developers.google.com/accounts/docs/application-default-credentials for more information.; 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:131); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.utils.GcmUtils.init(GcmUtils.java:31); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcess",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:564,Deployability,deploy,deploy,564,"""D:\Program Files\Java\jdk1.8.0_121\bin\java.exe"" -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:62530,suspend=y,server=n -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true -javaagent:C:\Users\Sweet\AppData\Local\JetBrains\IntelliJIdea2020.1\captureAgent\debugger-agent.jar -Dfile.encoding=UTF-8 -classpath ""D:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\deploy.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\access-bridge-64.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\cldrdata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\dnsns.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jaccess.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jfxrt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\localedata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\nashorn.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunec.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:1888,Deployability,RELEASE,RELEASE,1888,0_121\jre\lib\ext\localedata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\nashorn.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunec.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:1927,Deployability,RELEASE,RELEASE,1927,ta.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\nashorn.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunec.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\r,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2004,Deployability,RELEASE,RELEASE,2004,jdk1.8.0_121\jre\lib\ext\sunec.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2038,Deployability,RELEASE,RELEASE,2038,t\sunec.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELE,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2107,Deployability,RELEASE,RELEASE,2107,ar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-b,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2133,Deployability,RELEASE,RELEASE,2133,\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2216,Deployability,RELEASE,RELEASE,2216,cs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2256,Deployability,RELEASE,RELEASE,2256,Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\rep,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2341,Deployability,RELEASE,RELEASE,2341,gram Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2383,Deployability,RELEASE,RELEASE,2383,1\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3038,Deployability,RELEASE,RELEASE,3038,;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-pa,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3064,Deployability,RELEASE,RELEASE,3064,springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3129,Deployability,RELEASE,RELEASE,3129,.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframe,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3156,Deployability,RELEASE,RELEASE,3156,rg\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-bo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3218,Deployability,RELEASE,RELEASE,3218,ng-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.REL,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3242,Deployability,RELEASE,RELEASE,3242,ure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\reposi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3323,Deployability,RELEASE,RELEASE,3323,.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\reposito,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3361,Deployability,RELEASE,RELEASE,3361,ter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3443,Deployability,RELEASE,RELEASE,3443,c-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.3,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:3482,Deployability,RELEASE,RELEASE,3482,ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4184,Deployability,RELEASE,RELEASE,4184,spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\rep,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4225,Deployability,RELEASE,RELEASE,4225,ing-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybati,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4548,Deployability,RELEASE,RELEASE,4548,\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\reposi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4573,Deployability,RELEASE,RELEASE,4573,.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springfra,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4639,Deployability,RELEASE,RELEASE,4639,1.0\jackson-annotations-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\reposito,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4667,Deployability,RELEASE,RELEASE,4667,ons-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframewo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4730,Deployability,RELEASE,RELEASE,4730,2.11.0\jackson-core-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4755,Deployability,RELEASE,RELEASE,4755,-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\fireba,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4822,Deployability,RELEASE,RELEASE,4822,dk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\ap,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4851,Deployability,RELEASE,RELEASE,4851,tatype-jdk8-2.11.0.jar;E:\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4921,Deployability,RELEASE,RELEASE,4921,type-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:4953,Deployability,RELEASE,RELEASE,4953,kson-datatype-jsr310-2.11.0.jar;E:\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;E:\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;E:\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;E:\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5458,Deployability,configurat,configuration-processor,5458,ed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5488,Deployability,RELEASE,RELEASE,5488,org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-client-1.25.0.jar;E:\repository\com\google\code\findbugs\jsr305\3.0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5508,Deployability,configurat,configuration-processor-,5508,org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-client-1.25.0.jar;E:\repository\com\google\code\findbugs\jsr305\3.0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5538,Deployability,RELEASE,RELEASE,5538,5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-client-1.25.0.jar;E:\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;E:\reposito,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5602,Deployability,RELEASE,RELEASE,5602,ework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-client-1.25.0.jar;E:\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;E:\repository\org\apache\httpcomponents\httpclient\4.5.12\httpclient-4.5.12.jar;E:,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5628,Deployability,RELEASE,RELEASE,5628,\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-client-1.25.0.jar;E:\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;E:\repository\org\apache\httpcomponents\httpclient\4.5.12\httpclient-4.5.12.jar;E:\repository\org\apa,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5691,Deployability,RELEASE,RELEASE,5691,ngframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-client-1.25.0.jar;E:\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;E:\repository\org\apache\httpcomponents\httpclient\4.5.12\httpclient-4.5.12.jar;E:\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;E:\repository\c,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5716,Deployability,RELEASE,RELEASE,5716,aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-client-1.25.0.jar;E:\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;E:\repository\org\apache\httpcomponents\httpclient\4.5.12\httpclient-4.5.12.jar;E:\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;E:\repository\commons-codec\commo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:11171,Deployability,RELEASE,RELEASE,11171,"\netty\netty-buffer\4.1.49.Final\netty-buffer-4.1.49.Final.jar;E:\repository\io\netty\netty-codec\4.1.49.Final\netty-codec-4.1.49.Final.jar;E:\repository\io\netty\netty-handler\4.1.49.Final\netty-handler-4.1.49.Final.jar;E:\repository\io\netty\netty-resolver\4.1.49.Final\netty-resolver-4.1.49.Final.jar;E:\repository\io\netty\netty-transport\4.1.49.Final\netty-transport-4.1.49.Final.jar;E:\repository\com\alibaba\druid\1.1.6\druid-1.1.6.jar;E:\repository\redis\clients\jedis\3.1.0\jedis-3.1.0.jar;E:\repository\org\apache\commons\commons-pool2\2.8.0\commons-pool2-2.8.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar"" com.luz.push.PushApplication; Connected to the target VM, address: '127.0.0.1:62530', transport: 'socket'. . ____ _ __ _ _; /\\ / ___'_ __ _ _(_)_ __ __ _ \ \ \ \; ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \; \\/ ___)| |_)| | | | | || (_| | ) ) ) ); ' |____| .__|_| |_|_| |_\__, | / / / /; =========|_|==============|___/=/_/_/_/; :: Spring Boot :: (v2.3.0.RELEASE). 2020-05-29 15:14:30.695 INFO 12904 --- [ main] com.luz.push.PushApplication : Starting PushApplication on DESKTOP-05L3FQL with PID 12904 (C:\project\push\target\classes started by Sweet in C:\project\push); 2020-05-29 15:14:30.712 INFO 12904 --- [ main] com.luz.push.PushApplication : No active profile set, falling back to default profiles: default; 2020-05-29 15:14:32.088 WARN 12904 --- [ main] o.m.s.mapper.ClassPathMapperScanner : No MyBatis mapper was found in '[com.luz.push]' package. Please check your configuration.; 2020-05-29 15:14:32.662 INFO 12904 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8282 (http); 2020-05-29 15:14:32.675 INFO 12904 --- [ main] o.a.coyote.http11.Http11NioProtocol : Initializing ProtocolHandler [""http-nio-8282""]; 2020-05-29 15:14:32.676 INFO 12904 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]; 2020-05-29 15:14:32.677 INFO 12904 --- [ main] org.apache.catalina.core.StandardEngin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:11692,Deployability,configurat,configuration,11692,"rg\apache\commons\commons-pool2\2.8.0\commons-pool2-2.8.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar"" com.luz.push.PushApplication; Connected to the target VM, address: '127.0.0.1:62530', transport: 'socket'. . ____ _ __ _ _; /\\ / ___'_ __ _ _(_)_ __ __ _ \ \ \ \; ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \; \\/ ___)| |_)| | | | | || (_| | ) ) ) ); ' |____| .__|_| |_|_| |_\__, | / / / /; =========|_|==============|___/=/_/_/_/; :: Spring Boot :: (v2.3.0.RELEASE). 2020-05-29 15:14:30.695 INFO 12904 --- [ main] com.luz.push.PushApplication : Starting PushApplication on DESKTOP-05L3FQL with PID 12904 (C:\project\push\target\classes started by Sweet in C:\project\push); 2020-05-29 15:14:30.712 INFO 12904 --- [ main] com.luz.push.PushApplication : No active profile set, falling back to default profiles: default; 2020-05-29 15:14:32.088 WARN 12904 --- [ main] o.m.s.mapper.ClassPathMapperScanner : No MyBatis mapper was found in '[com.luz.push]' package. Please check your configuration.; 2020-05-29 15:14:32.662 INFO 12904 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8282 (http); 2020-05-29 15:14:32.675 INFO 12904 --- [ main] o.a.coyote.http11.Http11NioProtocol : Initializing ProtocolHandler [""http-nio-8282""]; 2020-05-29 15:14:32.676 INFO 12904 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]; 2020-05-29 15:14:32.677 INFO 12904 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.35]; 2020-05-29 15:14:32.802 INFO 12904 --- [ main] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext; 2020-05-29 15:14:32.802 INFO 12904 --- [ main] o.s.web.context.ContextLoader : Root WebApplicationContext: initialization completed in 1944 ms; 2020-05-29 15:14:32.899 INFO 12904 --- [ main] com.luz.push.utils.GcmUtils : start init gcm server; 2020-05-29 15:14:33.029 WARN 12904 --- [ main] c.g.a.oauth2.ComputeEngineCredenti",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:629,Integrability,bridg,bridge-,629,"""D:\Program Files\Java\jdk1.8.0_121\bin\java.exe"" -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:62530,suspend=y,server=n -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true -javaagent:C:\Users\Sweet\AppData\Local\JetBrains\IntelliJIdea2020.1\captureAgent\debugger-agent.jar -Dfile.encoding=UTF-8 -classpath ""D:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\deploy.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\access-bridge-64.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\cldrdata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\dnsns.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jaccess.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jfxrt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\localedata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\nashorn.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunec.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:11941,Integrability,Protocol,ProtocolHandler,11941,"__ _ _(_)_ __ __ _ \ \ \ \; ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \; \\/ ___)| |_)| | | | | || (_| | ) ) ) ); ' |____| .__|_| |_|_| |_\__, | / / / /; =========|_|==============|___/=/_/_/_/; :: Spring Boot :: (v2.3.0.RELEASE). 2020-05-29 15:14:30.695 INFO 12904 --- [ main] com.luz.push.PushApplication : Starting PushApplication on DESKTOP-05L3FQL with PID 12904 (C:\project\push\target\classes started by Sweet in C:\project\push); 2020-05-29 15:14:30.712 INFO 12904 --- [ main] com.luz.push.PushApplication : No active profile set, falling back to default profiles: default; 2020-05-29 15:14:32.088 WARN 12904 --- [ main] o.m.s.mapper.ClassPathMapperScanner : No MyBatis mapper was found in '[com.luz.push]' package. Please check your configuration.; 2020-05-29 15:14:32.662 INFO 12904 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8282 (http); 2020-05-29 15:14:32.675 INFO 12904 --- [ main] o.a.coyote.http11.Http11NioProtocol : Initializing ProtocolHandler [""http-nio-8282""]; 2020-05-29 15:14:32.676 INFO 12904 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]; 2020-05-29 15:14:32.677 INFO 12904 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.35]; 2020-05-29 15:14:32.802 INFO 12904 --- [ main] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext; 2020-05-29 15:14:32.802 INFO 12904 --- [ main] o.s.web.context.ContextLoader : Root WebApplicationContext: initialization completed in 1944 ms; 2020-05-29 15:14:32.899 INFO 12904 --- [ main] com.luz.push.utils.GcmUtils : start init gcm server; 2020-05-29 15:14:33.029 WARN 12904 --- [ main] c.g.a.oauth2.ComputeEngineCredentials : Failed to detect whether we are running on Google Compute Engine. java.net.SocketException: Network is unreachable: connect; 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackP",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:13786,Integrability,protocol,protocol,13786,twork is unreachable: connect; 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:13881,Integrability,protocol,protocol,13881,od); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:13973,Integrability,protocol,protocol,13973,	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.util,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:14064,Integrability,protocol,protocol,14064,net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.utils.GcmUtils.init(GcmUtils.java:31); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:19126,Integrability,protocol,protocol,19126,twork is unreachable: connect; 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:19221,Integrability,protocol,protocol,19221,od); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:19313,Integrability,protocol,protocol,19313,	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.util,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:19404,Integrability,protocol,protocol,19404,net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.utils.GcmUtils.init(GcmUtils.java:31); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:24466,Integrability,protocol,protocol,24466,twork is unreachable: connect; 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:24561,Integrability,protocol,protocol,24561,od); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:24653,Integrability,protocol,protocol,24653,	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.util,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:24744,Integrability,protocol,protocol,24744,net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at sun.net.www.http.HttpClient.New(HttpClient.java:326); 	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:104); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.auth.oauth2.ComputeEngineCredentials.runningOnComputeEngine(ComputeEngineCredentials.java:210); 	at com.google.auth.oauth2.DefaultCredentialsProvider.tryGetComputeCredentials(DefaultCredentialsProvider.java:290); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentialsUnsynchronized(DefaultCredentialsProvider.java:207); 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:124); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.utils.GcmUtils.init(GcmUtils.java:31); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:1669,Modifiability,plugin,plugin,1669,jdk1.8.0_121\jre\lib\ext\cldrdata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\dnsns.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jaccess.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jfxrt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\localedata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\nashorn.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunec.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5458,Modifiability,config,configuration-processor,5458,ed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;E:\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:5508,Modifiability,config,configuration-processor-,5508,org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-starter\2.1.2\mybatis-spring-boot-starter-2.1.2.jar;E:\repository\org\mybatis\spring\boot\mybatis-spring-boot-autoconfigure\2.1.2\mybatis-spring-boot-autoconfigure-2.1.2.jar;E:\repository\org\mybatis\mybatis\3.5.4\mybatis-3.5.4.jar;E:\repository\org\mybatis\mybatis-spring\2.0.4\mybatis-spring-2.0.4.jar;E:\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;E:\repository\org\springframework\boot\spring-boot-configuration-processor\2.3.0.RELEASE\spring-boot-configuration-processor-2.3.0.RELEASE.jar;E:\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;E:\repository\com\google\firebase\firebase-admin\6.8.1\firebase-admin-6.8.1.jar;E:\repository\com\google\api-client\google-api-client\1.25.0\google-api-client-1.25.0.jar;E:\repository\com\google\oauth-client\google-oauth-client\1.25.0\google-oauth-client-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-jackson2\1.25.0\google-http-client-jackson2-1.25.0.jar;E:\repository\com\google\api-client\google-api-client-gson\1.25.0\google-api-client-gson-1.25.0.jar;E:\repository\com\google\http-client\google-http-client-gson\1.25.0\google-http-client-gson-1.25.0.jar;E:\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;E:\repository\com\google\http-client\google-http-client\1.25.0\google-http-client-1.25.0.jar;E:\repository\com\google\code\findbugs\jsr305\3.0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:11692,Modifiability,config,configuration,11692,"rg\apache\commons\commons-pool2\2.8.0\commons-pool2-2.8.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2020.1\lib\idea_rt.jar"" com.luz.push.PushApplication; Connected to the target VM, address: '127.0.0.1:62530', transport: 'socket'. . ____ _ __ _ _; /\\ / ___'_ __ _ _(_)_ __ __ _ \ \ \ \; ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \; \\/ ___)| |_)| | | | | || (_| | ) ) ) ); ' |____| .__|_| |_|_| |_\__, | / / / /; =========|_|==============|___/=/_/_/_/; :: Spring Boot :: (v2.3.0.RELEASE). 2020-05-29 15:14:30.695 INFO 12904 --- [ main] com.luz.push.PushApplication : Starting PushApplication on DESKTOP-05L3FQL with PID 12904 (C:\project\push\target\classes started by Sweet in C:\project\push); 2020-05-29 15:14:30.712 INFO 12904 --- [ main] com.luz.push.PushApplication : No active profile set, falling back to default profiles: default; 2020-05-29 15:14:32.088 WARN 12904 --- [ main] o.m.s.mapper.ClassPathMapperScanner : No MyBatis mapper was found in '[com.luz.push]' package. Please check your configuration.; 2020-05-29 15:14:32.662 INFO 12904 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8282 (http); 2020-05-29 15:14:32.675 INFO 12904 --- [ main] o.a.coyote.http11.Http11NioProtocol : Initializing ProtocolHandler [""http-nio-8282""]; 2020-05-29 15:14:32.676 INFO 12904 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]; 2020-05-29 15:14:32.677 INFO 12904 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.35]; 2020-05-29 15:14:32.802 INFO 12904 --- [ main] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext; 2020-05-29 15:14:32.802 INFO 12904 --- [ main] o.s.web.context.ContextLoader : Root WebApplicationContext: initialization completed in 1944 ms; 2020-05-29 15:14:32.899 INFO 12904 --- [ main] com.luz.push.utils.GcmUtils : start init gcm server; 2020-05-29 15:14:33.029 WARN 12904 --- [ main] c.g.a.oauth2.ComputeEngineCredenti",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:28788,Modifiability,variab,variable,28788,"ingframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550); 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750); 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226); 	at com.luz.push.PushApplication.main(PushApplication.java:10). java.io.IOException: The Application Default Credentials are not available. They are available if running in Google Compute Engine. Otherwise, the environment variable GOOGLE_APPLICATION_CREDENTIALS must be defined pointing to a file defining the credentials. See https://developers.google.com/accounts/docs/application-default-credentials for more information.; 	at com.google.auth.oauth2.DefaultCredentialsProvider.getDefaultCredentials(DefaultCredentialsProvider.java:131); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:127); 	at com.google.auth.oauth2.GoogleCredentials.getApplicationDefault(GoogleCredentials.java:100); 	at com.luz.push.utils.GcmUtils.init(GcmUtils.java:31); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389); 	at org.springf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:12706,Safety,detect,detect,12706,"-29 15:14:32.662 INFO 12904 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8282 (http); 2020-05-29 15:14:32.675 INFO 12904 --- [ main] o.a.coyote.http11.Http11NioProtocol : Initializing ProtocolHandler [""http-nio-8282""]; 2020-05-29 15:14:32.676 INFO 12904 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]; 2020-05-29 15:14:32.677 INFO 12904 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.35]; 2020-05-29 15:14:32.802 INFO 12904 --- [ main] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext; 2020-05-29 15:14:32.802 INFO 12904 --- [ main] o.s.web.context.ContextLoader : Root WebApplicationContext: initialization completed in 1944 ms; 2020-05-29 15:14:32.899 INFO 12904 --- [ main] com.luz.push.utils.GcmUtils : start init gcm server; 2020-05-29 15:14:33.029 WARN 12904 --- [ main] c.g.a.oauth2.ComputeEngineCredentials : Failed to detect whether we are running on Google Compute Engine. java.net.SocketException: Network is unreachable: connect; 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:18046,Safety,detect,detect,18046,Context.finishBeanFactoryInitialization(AbstractApplicationContext.java:878); 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550); 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750); 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226); 	at com.luz.push.PushApplication.main(PushApplication.java:10). 2020-05-29 15:14:33.032 WARN 12904 --- [ main] c.g.a.oauth2.ComputeEngineCredentials : Failed to detect whether we are running on Google Compute Engine. java.net.SocketException: Network is unreachable: connect; 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:23386,Safety,detect,detect,23386,Context.finishBeanFactoryInitialization(AbstractApplicationContext.java:878); 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550); 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758); 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750); 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237); 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226); 	at com.luz.push.PushApplication.main(PushApplication.java:10). 2020-05-29 15:14:33.035 WARN 12904 --- [ main] c.g.a.oauth2.ComputeEngineCredentials : Failed to detect whether we are running on Google Compute Engine. java.net.SocketException: Network is unreachable: connect; 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method); 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211); 	at sun.net.www.http.HttpClient.New(HttpClient.java:308); 	at,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:622,Security,access,access-bridge-,622,"""D:\Program Files\Java\jdk1.8.0_121\bin\java.exe"" -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:62530,suspend=y,server=n -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true -javaagent:C:\Users\Sweet\AppData\Local\JetBrains\IntelliJIdea2020.1\captureAgent\debugger-agent.jar -Dfile.encoding=UTF-8 -classpath ""D:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\deploy.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\access-bridge-64.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\cldrdata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\dnsns.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jaccess.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jfxrt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\localedata.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\nashorn.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunec.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2327,Testability,log,logging,2327,D:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-b,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2369,Testability,log,logging-,2369,gram Files\Java\jdk1.8.0_121\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2416,Testability,log,logback,2416,Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\sprin,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2424,Testability,log,logback-classic,2424,Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\sprin,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2446,Testability,log,logback-classic-,2446,r;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2493,Testability,log,logback,2493,re\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.ja,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2501,Testability,log,logback-core,2501,re\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.ja,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2520,Testability,log,logback-core-,2520,\Java\jdk1.8.0_121\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jacks,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2568,Testability,log,logging,2568,ram Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-da,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:2655,Testability,log,logging,2655,8.0_121\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\project\push\target\classes;E:\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-logging\2.3.0.RELEASE\spring-boot-starter-logging-2.3.0.RELEASE.jar;E:\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.2\log4j-to-slf4j-2.13.2.jar;E:\repository\org\apache\logging\log4j\log4j-api\2.13.2\log4j-api-2.13.2.jar;E:\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;E:\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;E:\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;E:\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;E:\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;E:\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;E:\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;E:\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;E:\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:9601,Testability,stub,stub,9601,d-core-grpc-1.43.0.jar;E:\repository\com\google\protobuf\protobuf-java\3.6.0\protobuf-java-3.6.0.jar;E:\repository\io\grpc\grpc-protobuf\1.13.1\grpc-protobuf-1.13.1.jar;E:\repository\io\grpc\grpc-protobuf-lite\1.13.1\grpc-protobuf-lite-1.13.1.jar;E:\repository\io\grpc\grpc-context\1.13.1\grpc-context-1.13.1.jar;E:\repository\com\google\api\gax-grpc\1.30.0\gax-grpc-1.30.0.jar;E:\repository\org\threeten\threetenbp\1.3.3\threetenbp-1.3.3.jar;E:\repository\com\google\api\grpc\proto-google-cloud-firestore-v1beta1\0.26.0\proto-google-cloud-firestore-v1beta1-0.26.0.jar;E:\repository\com\google\auto\value\auto-value\1.4\auto-value-1.4.jar;E:\repository\io\grpc\grpc-netty-shaded\1.13.1\grpc-netty-shaded-1.13.1.jar;E:\repository\io\grpc\grpc-core\1.13.1\grpc-core-1.13.1.jar;E:\repository\com\google\errorprone\error_prone_annotations\2.1.2\error_prone_annotations-2.1.2.jar;E:\repository\io\opencensus\opencensus-contrib-grpc-metrics\0.12.3\opencensus-contrib-grpc-metrics-0.12.3.jar;E:\repository\io\grpc\grpc-stub\1.13.1\grpc-stub-1.13.1.jar;E:\repository\io\grpc\grpc-auth\1.13.1\grpc-auth-1.13.1.jar;E:\repository\io\opencensus\opencensus-api\0.15.0\opencensus-api-0.15.0.jar;E:\repository\io\opencensus\opencensus-contrib-grpc-util\0.15.0\opencensus-contrib-grpc-util-0.15.0.jar;E:\repository\com\google\guava\guava\20.0\guava-20.0.jar;E:\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;E:\repository\io\netty\netty-codec-http\4.1.49.Final\netty-codec-http-4.1.49.Final.jar;E:\repository\io\netty\netty-common\4.1.49.Final\netty-common-4.1.49.Final.jar;E:\repository\io\netty\netty-buffer\4.1.49.Final\netty-buffer-4.1.49.Final.jar;E:\repository\io\netty\netty-codec\4.1.49.Final\netty-codec-4.1.49.Final.jar;E:\repository\io\netty\netty-handler\4.1.49.Final\netty-handler-4.1.49.Final.jar;E:\repository\io\netty\netty-resolver\4.1.49.Final\netty-resolver-4.1.49.Final.jar;E:\repository\io\netty\netty-transport\4.1.49.Final\netty-transport-4.1.49.Final.jar;E:\repository\com\alibaba,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233:9618,Testability,stub,stub-,9618,ository\com\google\protobuf\protobuf-java\3.6.0\protobuf-java-3.6.0.jar;E:\repository\io\grpc\grpc-protobuf\1.13.1\grpc-protobuf-1.13.1.jar;E:\repository\io\grpc\grpc-protobuf-lite\1.13.1\grpc-protobuf-lite-1.13.1.jar;E:\repository\io\grpc\grpc-context\1.13.1\grpc-context-1.13.1.jar;E:\repository\com\google\api\gax-grpc\1.30.0\gax-grpc-1.30.0.jar;E:\repository\org\threeten\threetenbp\1.3.3\threetenbp-1.3.3.jar;E:\repository\com\google\api\grpc\proto-google-cloud-firestore-v1beta1\0.26.0\proto-google-cloud-firestore-v1beta1-0.26.0.jar;E:\repository\com\google\auto\value\auto-value\1.4\auto-value-1.4.jar;E:\repository\io\grpc\grpc-netty-shaded\1.13.1\grpc-netty-shaded-1.13.1.jar;E:\repository\io\grpc\grpc-core\1.13.1\grpc-core-1.13.1.jar;E:\repository\com\google\errorprone\error_prone_annotations\2.1.2\error_prone_annotations-2.1.2.jar;E:\repository\io\opencensus\opencensus-contrib-grpc-metrics\0.12.3\opencensus-contrib-grpc-metrics-0.12.3.jar;E:\repository\io\grpc\grpc-stub\1.13.1\grpc-stub-1.13.1.jar;E:\repository\io\grpc\grpc-auth\1.13.1\grpc-auth-1.13.1.jar;E:\repository\io\opencensus\opencensus-api\0.15.0\opencensus-api-0.15.0.jar;E:\repository\io\opencensus\opencensus-contrib-grpc-util\0.15.0\opencensus-contrib-grpc-util-0.15.0.jar;E:\repository\com\google\guava\guava\20.0\guava-20.0.jar;E:\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;E:\repository\io\netty\netty-codec-http\4.1.49.Final\netty-codec-http-4.1.49.Final.jar;E:\repository\io\netty\netty-common\4.1.49.Final\netty-common-4.1.49.Final.jar;E:\repository\io\netty\netty-buffer\4.1.49.Final\netty-buffer-4.1.49.Final.jar;E:\repository\io\netty\netty-codec\4.1.49.Final\netty-codec-4.1.49.Final.jar;E:\repository\io\netty\netty-handler\4.1.49.Final\netty-handler-4.1.49.Final.jar;E:\repository\io\netty\netty-resolver\4.1.49.Final\netty-resolver-4.1.49.Final.jar;E:\repository\io\netty\netty-transport\4.1.49.Final\netty-transport-4.1.49.Final.jar;E:\repository\com\alibaba\druid\1.1.6\druid-1.1.6.jar;,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-635805233
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:4225,Availability,Avail,Available,4225,"age/cancer/reference/GRCh37/variants/dbsnp_grch37_b138.vcf.gz; 11:47:51.457 INFO FeatureManager - Using codec BEDCodec to read file file:///home/proj/stage/cancer/reference/target_capture_bed/production/balsamic/gicfdna_3.1_hg19_design.bed; 11:47:51.465 INFO IntervalArgumentCollection - Processing 74592 bp from intervals; 11:47:51.474 INFO Mutect2 - Done initializing engine; 11:47:51.487 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_utils.so; 11:47:51.489 INFO NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so; 11:47:51.534 INFO IntelPairHmm - Using CPU-supported AVX-512 instructions; 11:47:51.534 INFO IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM; 11:47:51.534 INFO IntelPairHmm - Available threads: 16; 11:47:51.534 INFO IntelPairHmm - Requested threads: 4; 11:47:51.534 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 11:47:51.557 INFO ProgressMeter - Starting traversal; 11:47:51.557 INFO ProgressMeter - Current Locus Elapsed Minutes Regions Processed Regions/Minute; 11:47:52.683 INFO VectorLoglessPairHMM - Time spent in setup for JNI call : 0.0; 11:47:52.683 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 0.0; 11:47:52.683 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 0.24 sec; 11:47:52.684 INFO Mutect2 - Shutting down engine; [July 2, 2020 11:47:52 AM CEST] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.03 minutes.; Runtime.totalMemory()=2511863808; java.lang.IllegalArgumentException: Read bases and read quality arrays aren't the same size: Bases: 38 vs Base Q's: 38 vs Insert Q's: 146 vs Delete Q's: 146.; 	at org.broadinstitute.hellbender",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:4864,Availability,down,down,4864,"m_omp.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so; 11:47:51.534 INFO IntelPairHmm - Using CPU-supported AVX-512 instructions; 11:47:51.534 INFO IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM; 11:47:51.534 INFO IntelPairHmm - Available threads: 16; 11:47:51.534 INFO IntelPairHmm - Requested threads: 4; 11:47:51.534 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 11:47:51.557 INFO ProgressMeter - Starting traversal; 11:47:51.557 INFO ProgressMeter - Current Locus Elapsed Minutes Regions Processed Regions/Minute; 11:47:52.683 INFO VectorLoglessPairHMM - Time spent in setup for JNI call : 0.0; 11:47:52.683 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 0.0; 11:47:52.683 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 0.24 sec; 11:47:52.684 INFO Mutect2 - Shutting down engine; [July 2, 2020 11:47:52 AM CEST] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.03 minutes.; Runtime.totalMemory()=2511863808; java.lang.IllegalArgumentException: Read bases and read quality arrays aren't the same size: Bases: 38 vs Base Q's: 38 vs Insert Q's: 146 vs Delete Q's: 146.; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:734); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.createQualityModifiedRead(PairHMMLikelihoodCalculationEngine.java:205); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.modifyReadQualities(PairHMMLikelihoodCalculationEngine.java:268); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngine.java:236); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:2177,Deployability,release,release-,2177,"ce/GRCh37/variants/dbsnp_grch37_b138.vcf.gz -O mutect2/concatenated_ACC5611A5_XXXXXX_mutect2_unfiltered_ss_r2.vcf.gz; 11:47:50.850 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jul 02, 2020 11:47:51 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 11:47:51.054 INFO Mutect2 - ------------------------------------------------------------; 11:47:51.055 INFO Mutect2 - The Genome Analysis Toolkit (GATK) v4.1.8.0; 11:47:51.055 INFO Mutect2 - For support and documentation go to https://software.broadinstitute.org/gatk/; 11:47:51.055 INFO Mutect2 - Executing as ashwini.jeggari@compute-0-0.local on Linux v3.10.0-1062.4.1.el7.x86_64 amd64; 11:47:51.055 INFO Mutect2 - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_152-release-1056-b12; 11:47:51.055 INFO Mutect2 - Start Date/Time: July 2, 2020 11:47:50 AM CEST; 11:47:51.056 INFO Mutect2 - ------------------------------------------------------------; 11:47:51.056 INFO Mutect2 - ------------------------------------------------------------; 11:47:51.056 INFO Mutect2 - HTSJDK Version: 2.22.0; 11:47:51.056 INFO Mutect2 - Picard Version: 2.22.8; 11:47:51.056 INFO Mutect2 - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 11:47:51.056 INFO Mutect2 - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 11:47:51.056 INFO Mutect2 - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 11:47:51.057 INFO Mutect2 - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 11:47:51.057 INFO Mutect2 - Deflater: IntelDeflater; 11:47:51.057 INFO Mutect2 - Inflater: IntelInflater; 11:47:51.057 INFO Mutect2 - GCS max retries/reopens: 20; 11:47:51.057 INFO Mutect2 - Requester pays: disabled; 11:47:51.057 INFO Mutect2 - Initializing engine; 11:47:51.372 INFO FeatureManager - Using codec V",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:1345,Performance,Load,Loading,1345,"germline-resource /home/proj/stage/cancer/reference/GRCh37/variants/dbsnp_grch37_b138.vcf.gz -O mutect2/concatenated_ACC5611A5_XXXXXX_mutect2_unfiltered_ss_r2.vcf.gz; Using GATK jar /home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar Mutect2 -R /home/proj/stage/cancer/reference/GRCh37/genome/human_g1k_v37_decoy.fasta -L /home/proj/stage/cancer/reference/target_capture_bed/production/balsamic/gicfdna_3.1_hg19_design.bed -I consensus/concatenated_ACC5611A5_XXXXXX_consensusalign_ss_r2.bam --germline-resource /home/proj/stage/cancer/reference/GRCh37/variants/dbsnp_grch37_b138.vcf.gz -O mutect2/concatenated_ACC5611A5_XXXXXX_mutect2_unfiltered_ss_r2.vcf.gz; 11:47:50.850 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jul 02, 2020 11:47:51 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 11:47:51.054 INFO Mutect2 - ------------------------------------------------------------; 11:47:51.055 INFO Mutect2 - The Genome Analysis Toolkit (GATK) v4.1.8.0; 11:47:51.055 INFO Mutect2 - For support and documentation go to https://software.broadinstitute.org/gatk/; 11:47:51.055 INFO Mutect2 - Executing as ashwini.jeggari@compute-0-0.local on Linux v3.10.0-1062.4.1.el7.x86_64 amd64; 11:47:51.055 INFO Mutect2 - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_152-release-1056-b12; 11:47:51.055 INFO Mutect2 - Start Date/Time: July 2, 2020 11:47:50 AM CEST; 11:47:51.056 INFO Mutect2 - --------------------------------------------",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:3647,Performance,Load,Loading,3647,tect2 - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 11:47:51.056 INFO Mutect2 - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 11:47:51.057 INFO Mutect2 - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 11:47:51.057 INFO Mutect2 - Deflater: IntelDeflater; 11:47:51.057 INFO Mutect2 - Inflater: IntelInflater; 11:47:51.057 INFO Mutect2 - GCS max retries/reopens: 20; 11:47:51.057 INFO Mutect2 - Requester pays: disabled; 11:47:51.057 INFO Mutect2 - Initializing engine; 11:47:51.372 INFO FeatureManager - Using codec VCFCodec to read file file:///home/proj/stage/cancer/reference/GRCh37/variants/dbsnp_grch37_b138.vcf.gz; 11:47:51.457 INFO FeatureManager - Using codec BEDCodec to read file file:///home/proj/stage/cancer/reference/target_capture_bed/production/balsamic/gicfdna_3.1_hg19_design.bed; 11:47:51.465 INFO IntervalArgumentCollection - Processing 74592 bp from intervals; 11:47:51.474 INFO Mutect2 - Done initializing engine; 11:47:51.487 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_utils.so; 11:47:51.489 INFO NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so; 11:47:51.534 INFO IntelPairHmm - Using CPU-supported AVX-512 instructions; 11:47:51.534 INFO IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM; 11:47:51.534 INFO IntelPairHmm - Available threads: 16; 11:47:51.534 INFO IntelPairHmm - Requested threads: 4; 11:47:51.534 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 11:47:51.557 INFO ProgressMeter - Starting traversal; 11:47:51.557 INFO ProgressMeter - Current Locus Elapsed Minutes Regions Processed Regions/Minute; 11:47:52.683 INFO VectorLoglessPairHMM - Time spent in setup for JNI call : 0.0;,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:3853,Performance,Load,Loading,3853,E_FOR_TRIBBLE : false; 11:47:51.057 INFO Mutect2 - Deflater: IntelDeflater; 11:47:51.057 INFO Mutect2 - Inflater: IntelInflater; 11:47:51.057 INFO Mutect2 - GCS max retries/reopens: 20; 11:47:51.057 INFO Mutect2 - Requester pays: disabled; 11:47:51.057 INFO Mutect2 - Initializing engine; 11:47:51.372 INFO FeatureManager - Using codec VCFCodec to read file file:///home/proj/stage/cancer/reference/GRCh37/variants/dbsnp_grch37_b138.vcf.gz; 11:47:51.457 INFO FeatureManager - Using codec BEDCodec to read file file:///home/proj/stage/cancer/reference/target_capture_bed/production/balsamic/gicfdna_3.1_hg19_design.bed; 11:47:51.465 INFO IntervalArgumentCollection - Processing 74592 bp from intervals; 11:47:51.474 INFO Mutect2 - Done initializing engine; 11:47:51.487 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_utils.so; 11:47:51.489 INFO NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so; 11:47:51.534 INFO IntelPairHmm - Using CPU-supported AVX-512 instructions; 11:47:51.534 INFO IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM; 11:47:51.534 INFO IntelPairHmm - Available threads: 16; 11:47:51.534 INFO IntelPairHmm - Requested threads: 4; 11:47:51.534 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 11:47:51.557 INFO ProgressMeter - Starting traversal; 11:47:51.557 INFO ProgressMeter - Current Locus Elapsed Minutes Regions Processed Regions/Minute; 11:47:52.683 INFO VectorLoglessPairHMM - Time spent in setup for JNI call : 0.0; 11:47:52.683 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 0.0; 11:47:52.683 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 0.24 sec; 11:47:52.684 INFO Mutect,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:4348,Performance,multi-thread,multi-threaded,4348,":///home/proj/stage/cancer/reference/target_capture_bed/production/balsamic/gicfdna_3.1_hg19_design.bed; 11:47:51.465 INFO IntervalArgumentCollection - Processing 74592 bp from intervals; 11:47:51.474 INFO Mutect2 - Done initializing engine; 11:47:51.487 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_utils.so; 11:47:51.489 INFO NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so; 11:47:51.534 INFO IntelPairHmm - Using CPU-supported AVX-512 instructions; 11:47:51.534 INFO IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM; 11:47:51.534 INFO IntelPairHmm - Available threads: 16; 11:47:51.534 INFO IntelPairHmm - Requested threads: 4; 11:47:51.534 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 11:47:51.557 INFO ProgressMeter - Starting traversal; 11:47:51.557 INFO ProgressMeter - Current Locus Elapsed Minutes Regions Processed Regions/Minute; 11:47:52.683 INFO VectorLoglessPairHMM - Time spent in setup for JNI call : 0.0; 11:47:52.683 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 0.0; 11:47:52.683 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 0.24 sec; 11:47:52.684 INFO Mutect2 - Shutting down engine; [July 2, 2020 11:47:52 AM CEST] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.03 minutes.; Runtime.totalMemory()=2511863808; java.lang.IllegalArgumentException: Read bases and read quality arrays aren't the same size: Bases: 38 vs Base Q's: 38 vs Insert Q's: 146 vs Delete Q's: 146.; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:734); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEng",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:1653,Safety,detect,detect,1653,"_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar Mutect2 -R /home/proj/stage/cancer/reference/GRCh37/genome/human_g1k_v37_decoy.fasta -L /home/proj/stage/cancer/reference/target_capture_bed/production/balsamic/gicfdna_3.1_hg19_design.bed -I consensus/concatenated_ACC5611A5_XXXXXX_consensusalign_ss_r2.bam --germline-resource /home/proj/stage/cancer/reference/GRCh37/variants/dbsnp_grch37_b138.vcf.gz -O mutect2/concatenated_ACC5611A5_XXXXXX_mutect2_unfiltered_ss_r2.vcf.gz; 11:47:50.850 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/proj/bin/conda/envs/D_UMI_APJ/share/gatk4-4.1.8.0-0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jul 02, 2020 11:47:51 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 11:47:51.054 INFO Mutect2 - ------------------------------------------------------------; 11:47:51.055 INFO Mutect2 - The Genome Analysis Toolkit (GATK) v4.1.8.0; 11:47:51.055 INFO Mutect2 - For support and documentation go to https://software.broadinstitute.org/gatk/; 11:47:51.055 INFO Mutect2 - Executing as ashwini.jeggari@compute-0-0.local on Linux v3.10.0-1062.4.1.el7.x86_64 amd64; 11:47:51.055 INFO Mutect2 - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_152-release-1056-b12; 11:47:51.055 INFO Mutect2 - Start Date/Time: July 2, 2020 11:47:50 AM CEST; 11:47:51.056 INFO Mutect2 - ------------------------------------------------------------; 11:47:51.056 INFO Mutect2 - ------------------------------------------------------------; 11:47:51.056 INFO Mutect2 - HTSJDK Version: 2.22.0; 11:47:51.056 INFO Mutect2 - Picard Version: 2.22.8; 11:47:51.056 INFO Mutect2 - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 11:47:51.056 INFO Mutect2 ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482:5242,Security,validat,validateArg,5242,"47:51.534 INFO IntelPairHmm - Requested threads: 4; 11:47:51.534 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 11:47:51.557 INFO ProgressMeter - Starting traversal; 11:47:51.557 INFO ProgressMeter - Current Locus Elapsed Minutes Regions Processed Regions/Minute; 11:47:52.683 INFO VectorLoglessPairHMM - Time spent in setup for JNI call : 0.0; 11:47:52.683 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 0.0; 11:47:52.683 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 0.24 sec; 11:47:52.684 INFO Mutect2 - Shutting down engine; [July 2, 2020 11:47:52 AM CEST] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.03 minutes.; Runtime.totalMemory()=2511863808; java.lang.IllegalArgumentException: Read bases and read quality arrays aren't the same size: Bases: 38 vs Base Q's: 38 vs Insert Q's: 146 vs Delete Q's: 146.; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:734); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.createQualityModifiedRead(PairHMMLikelihoodCalculationEngine.java:205); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.modifyReadQualities(PairHMMLikelihoodCalculationEngine.java:268); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngine.java:236); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngine.java:164); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.callRegion(Mutect2Engine.java:246); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.apply(Mutect2.java:299); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:200); 	at ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-652912482
https://github.com/broadinstitute/gatk/pull/5448#issuecomment-442185802:1219,Availability,down,downsampling,1219,mit/46cd10f8f2130da871da611eb6b48e501eda3cf1?src=pr&el=desc) will **decrease** coverage by `0.001%`.; > The diff coverage is `94.444%`. ```diff; @@ Coverage Diff @@; ## master #5448 +/- ##; ==============================================; - Coverage 87.01% 87.008% -0.001% ; - Complexity 31177 31184 +7 ; ==============================================; Files 1908 1908 ; Lines 144007 144037 +30 ; Branches 15927 15930 +3 ; ==============================================; + Hits 125300 125324 +24 ; - Misses 12950 12955 +5 ; - Partials 5757 5758 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5448?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ava/org/broadinstitute/hellbender/utils/Utils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9VdGlscy5qYXZh) | `81.573% <100%> (+0.041%)` | `159 <1> (+1)` | :arrow_up: |; | [...nder/utils/downsampling/PositionalDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUG9zaXRpb25hbERvd25zYW1wbGVyLmphdmE=) | `100% <100%> (ø)` | `23 <6> (+2)` | :arrow_up: |; | [...ils/downsampling/ReservoirDownsamplerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXJVbml0VGVzdC5qYXZh) | `81.818% <100%> (+4.769%)` | `12 <2> (+2)` | :arrow_up: |; | [...ender/utils/downsampling/ReservoirDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXIuamF2YQ==) | `95.745% <80%> (-4.255%)` | `25 <6> (+4)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadins,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5448#issuecomment-442185802
https://github.com/broadinstitute/gatk/pull/5448#issuecomment-442185802:1521,Availability,down,downsampling,1521,=========================================; Files 1908 1908 ; Lines 144007 144037 +30 ; Branches 15927 15930 +3 ; ==============================================; + Hits 125300 125324 +24 ; - Misses 12950 12955 +5 ; - Partials 5757 5758 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5448?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ava/org/broadinstitute/hellbender/utils/Utils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9VdGlscy5qYXZh) | `81.573% <100%> (+0.041%)` | `159 <1> (+1)` | :arrow_up: |; | [...nder/utils/downsampling/PositionalDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUG9zaXRpb25hbERvd25zYW1wbGVyLmphdmE=) | `100% <100%> (ø)` | `23 <6> (+2)` | :arrow_up: |; | [...ils/downsampling/ReservoirDownsamplerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXJVbml0VGVzdC5qYXZh) | `81.818% <100%> (+4.769%)` | `12 <2> (+2)` | :arrow_up: |; | [...ender/utils/downsampling/ReservoirDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXIuamF2YQ==) | `95.745% <80%> (-4.255%)` | `25 <6> (+4)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...itute/hellbender/utils/report/GATKReportTable.java](https://codecov.io/gh/broadinst,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5448#issuecomment-442185802
https://github.com/broadinstitute/gatk/pull/5448#issuecomment-442185802:1855,Availability,down,downsampling,1855,ree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ava/org/broadinstitute/hellbender/utils/Utils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9VdGlscy5qYXZh) | `81.573% <100%> (+0.041%)` | `159 <1> (+1)` | :arrow_up: |; | [...nder/utils/downsampling/PositionalDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUG9zaXRpb25hbERvd25zYW1wbGVyLmphdmE=) | `100% <100%> (ø)` | `23 <6> (+2)` | :arrow_up: |; | [...ils/downsampling/ReservoirDownsamplerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXJVbml0VGVzdC5qYXZh) | `81.818% <100%> (+4.769%)` | `12 <2> (+2)` | :arrow_up: |; | [...ender/utils/downsampling/ReservoirDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvUmVzZXJ2b2lyRG93bnNhbXBsZXIuamF2YQ==) | `95.745% <80%> (-4.255%)` | `25 <6> (+4)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...itute/hellbender/utils/report/GATKReportTable.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZXBvcnQvR0FUS1JlcG9ydFRhYmxlLmphdmE=) | `70.412% <0%> (-0.265%)` | `67% <0%> (ø)` | |; | [...ithwaterman/SmithWatermanIntelAlignerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5448/diff?src=pr&el=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5448#issuecomment-442185802
https://github.com/broadinstitute/gatk/issues/5449#issuecomment-445910647:26,Availability,error,error,26,"I tried to reproduce this error, but failed. In fact, we have CI tests that exercise this case. Could you describe the case in more detail? Perhaps I misunderstood. * VCF A (single sample VCF) has a long deletion and overlapping spanning deletions in subsequent lines; * It gets imported into GenomicsDB along with other files; * Querying a position that overlaps the long deletion causes a crash",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-445910647
https://github.com/broadinstitute/gatk/issues/5449#issuecomment-445910647:65,Testability,test,tests,65,"I tried to reproduce this error, but failed. In fact, we have CI tests that exercise this case. Could you describe the case in more detail? Perhaps I misunderstood. * VCF A (single sample VCF) has a long deletion and overlapping spanning deletions in subsequent lines; * It gets imported into GenomicsDB along with other files; * Querying a position that overlaps the long deletion causes a crash",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-445910647
https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484558863:23,Availability,error,errors,23,"This is still throwing errors. Importing `chr2	6861126	.	ACCCACACAC	*,<NON_REF>	2.22	.	AS_RAW_BaseQRankSum=|||;AS_RAW_MQ=0.00|0.00|10800.00|0.00;AS_RAW_MQRankSum=|||;AS_RAW_ReadPosRankSum=|||;AS_SB_TABLE=0,0|0,0|3,0|0,0;DP=6;QUALapprox=126;RAW_MQandDP=21600,6;VarDP=3	GT:AD:DP:GQ:PL:SB	1/1:0,3,0:3:10:126,10,0,129,18,168:0,0,3,0`; for interval -L chr2:6861134-7268940 produces the log; ```; 11:11:14.566 INFO ProgressMeter - Current Locus Elapsed Minutes Batches Processed Batches/Minute; 11:11:15.838 INFO GenomicsDBImport - Importing batch 1 with 1 samples; libc++abi.dylib: terminating with uncaught exception of type LoadOperatorException: LoadOperatorException : Found cell [ 0, [ 255817547, 255817547 ] ] that does not belong to TileDB/GenomicsDB partition with row_bounds [ 0, 0 ] column_bounds [ 255817555, 256225361 ]; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484558863
https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484558863:621,Performance,Load,LoadOperatorException,621,"This is still throwing errors. Importing `chr2	6861126	.	ACCCACACAC	*,<NON_REF>	2.22	.	AS_RAW_BaseQRankSum=|||;AS_RAW_MQ=0.00|0.00|10800.00|0.00;AS_RAW_MQRankSum=|||;AS_RAW_ReadPosRankSum=|||;AS_SB_TABLE=0,0|0,0|3,0|0,0;DP=6;QUALapprox=126;RAW_MQandDP=21600,6;VarDP=3	GT:AD:DP:GQ:PL:SB	1/1:0,3,0:3:10:126,10,0,129,18,168:0,0,3,0`; for interval -L chr2:6861134-7268940 produces the log; ```; 11:11:14.566 INFO ProgressMeter - Current Locus Elapsed Minutes Batches Processed Batches/Minute; 11:11:15.838 INFO GenomicsDBImport - Importing batch 1 with 1 samples; libc++abi.dylib: terminating with uncaught exception of type LoadOperatorException: LoadOperatorException : Found cell [ 0, [ 255817547, 255817547 ] ] that does not belong to TileDB/GenomicsDB partition with row_bounds [ 0, 0 ] column_bounds [ 255817555, 256225361 ]; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484558863
https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484558863:644,Performance,Load,LoadOperatorException,644,"This is still throwing errors. Importing `chr2	6861126	.	ACCCACACAC	*,<NON_REF>	2.22	.	AS_RAW_BaseQRankSum=|||;AS_RAW_MQ=0.00|0.00|10800.00|0.00;AS_RAW_MQRankSum=|||;AS_RAW_ReadPosRankSum=|||;AS_SB_TABLE=0,0|0,0|3,0|0,0;DP=6;QUALapprox=126;RAW_MQandDP=21600,6;VarDP=3	GT:AD:DP:GQ:PL:SB	1/1:0,3,0:3:10:126,10,0,129,18,168:0,0,3,0`; for interval -L chr2:6861134-7268940 produces the log; ```; 11:11:14.566 INFO ProgressMeter - Current Locus Elapsed Minutes Batches Processed Batches/Minute; 11:11:15.838 INFO GenomicsDBImport - Importing batch 1 with 1 samples; libc++abi.dylib: terminating with uncaught exception of type LoadOperatorException: LoadOperatorException : Found cell [ 0, [ 255817547, 255817547 ] ] that does not belong to TileDB/GenomicsDB partition with row_bounds [ 0, 0 ] column_bounds [ 255817555, 256225361 ]; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484558863
https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484558863:381,Testability,log,log,381,"This is still throwing errors. Importing `chr2	6861126	.	ACCCACACAC	*,<NON_REF>	2.22	.	AS_RAW_BaseQRankSum=|||;AS_RAW_MQ=0.00|0.00|10800.00|0.00;AS_RAW_MQRankSum=|||;AS_RAW_ReadPosRankSum=|||;AS_SB_TABLE=0,0|0,0|3,0|0,0;DP=6;QUALapprox=126;RAW_MQandDP=21600,6;VarDP=3	GT:AD:DP:GQ:PL:SB	1/1:0,3,0:3:10:126,10,0,129,18,168:0,0,3,0`; for interval -L chr2:6861134-7268940 produces the log; ```; 11:11:14.566 INFO ProgressMeter - Current Locus Elapsed Minutes Batches Processed Batches/Minute; 11:11:15.838 INFO GenomicsDBImport - Importing batch 1 with 1 samples; libc++abi.dylib: terminating with uncaught exception of type LoadOperatorException: LoadOperatorException : Found cell [ 0, [ 255817547, 255817547 ] ] that does not belong to TileDB/GenomicsDB partition with row_bounds [ 0, 0 ] column_bounds [ 255817555, 256225361 ]; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484558863
https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484951791:135,Performance,load,loading,135,"@ldgauthier so I think this is a different issue with overlapping deletions. The original bug was with queries, this is manifesting on loading. This seems to be an issue specific to dealing with the * allele and the fact that the deletion spans the interval specified. We're working on a fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-484951791
https://github.com/broadinstitute/gatk/issues/5449#issuecomment-485448056:73,Testability,log,logic,73,"@mlathara that's a fair point about query vs. import, I just thought the logic might be similar. And I didn't mention it, but maybe it's helpful to know that I was running the import with the consolidate option. Thanks for taking a look!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-485448056
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442097742:3544,Availability,down,downsampling,3544,ber/utils/TagGermlineEventsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `6.349% <8.911%> (-93.651%)` | `2 <0> (-7)` | |; | [...er/utils/germlinetagging/SimpleGermlineTagger.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL2dlcm1saW5ldGFnZ2luZy9TaW1wbGVHZXJtbGluZVRhZ2dlci5qYXZh) | `84.746% <85.938%> (-5.395%)` | `50 <30> (+16)` | |; | [...ls/variant/writers/GVCFBlockCombiningIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L3dyaXRlcnMvR1ZDRkJsb2NrQ29tYmluaW5nSXRlcmF0b3IuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-1%)` | |; | [...ls/walkers/genotyper/HeterogeneousPloidyModel.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9IZXRlcm9nZW5lb3VzUGxvaWR5TW9kZWwuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-14%)` | |; | [...nder/utils/downsampling/FractionalDownsampler.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9kb3duc2FtcGxpbmcvRnJhY3Rpb25hbERvd25zYW1wbGVyLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-17%)` | |; | [...park/pathseq/MarkedOpticalDuplicateReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL01hcmtlZE9wdGljYWxEdXBsaWNhdGVSZWFkRmlsdGVyLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | ... and [1267 more](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442097742
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442097742:967,Usability,Simpl,SimpleGermlineTaggerUnitTest,967,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5450?src=pr&el=h1) Report; > Merging [#5450](https://codecov.io/gh/broadinstitute/gatk/pull/5450?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/caad1bb76248d67c4a2e0d4d664b4b8610984190?src=pr&el=desc) will **decrease** coverage by `51.98%`.; > The diff coverage is `46.114%`. ```diff; @@ Coverage Diff @@; ## master #5450 +/- ##; ===============================================; - Coverage 86.982% 35.002% -51.98% ; + Complexity 31861 16704 -15157 ; ===============================================; Files 1943 1944 +1 ; Lines 146770 147267 +497 ; Branches 16223 16234 +11 ; ===============================================; - Hits 127663 51546 -76117 ; - Misses 13194 90768 +77574 ; + Partials 5913 4953 -960; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5450?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [.../germlinetagging/SimpleGermlineTaggerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL2dlcm1saW5ldGFnZ2luZy9TaW1wbGVHZXJtbGluZVRhZ2dlclVuaXRUZXN0LmphdmE=) | `1.314% <ø> (-98.686%)` | `2 <0> (-2)` | |; | [.../formats/collections/ModeledSegmentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvTW9kZWxlZFNlZ21lbnRDb2xsZWN0aW9uLmphdmE=) | `100% <100%> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...nder/tools/copynumber/utils/TagGermlineEvents.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzLmphdmE=) | `100% <100%> (ø)` | `4 <0> (+1)` | :arrow_up: |; | [...pynumber/formats/records/CalledModeledSegment.java](https://codecov,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442097742
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442097742:2597,Usability,Simpl,SimpleGermlineTagger,2597,> (ø)` | :arrow_down: |; | [...nder/tools/copynumber/utils/TagGermlineEvents.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzLmphdmE=) | `100% <100%> (ø)` | `4 <0> (+1)` | :arrow_up: |; | [...pynumber/formats/records/CalledModeledSegment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvcmVjb3Jkcy9DYWxsZWRNb2RlbGVkU2VnbWVudC5qYXZh) | `75% <75%> (ø)` | `0 <0> (?)` | |; | [...number/utils/TagGermlineEventsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `6.349% <8.911%> (-93.651%)` | `2 <0> (-7)` | |; | [...er/utils/germlinetagging/SimpleGermlineTagger.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL2dlcm1saW5ldGFnZ2luZy9TaW1wbGVHZXJtbGluZVRhZ2dlci5qYXZh) | `84.746% <85.938%> (-5.395%)` | `50 <30> (+16)` | |; | [...ls/variant/writers/GVCFBlockCombiningIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L3dyaXRlcnMvR1ZDRkJsb2NrQ29tYmluaW5nSXRlcmF0b3IuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-1%)` | |; | [...ls/walkers/genotyper/HeterogeneousPloidyModel.java](https://codecov.io/gh/broadinstitute/gatk/pull/5450/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9IZXRlcm9nZW5lb3VzUGxvaWR5TW9kZWwuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-14%)` | |; | [...nder/utils/downsampling/FractionalDownsampler.java](https://co,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442097742
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810:1259,Availability,down,downstream,1259,"As we discussed, it's possible that these are simply common germline CNVs that are being median-normalized out in CR by the PoN. Let's investigate the sample-median-normalized counts in some of the questionable regions, along with the per-bin medians in the PoN. I do not think a gCNV run is necessary (it will probably be a bit expensive, anyway). More generally, I think a better approach to germline tagging would be to avoid the caller entirely. Let's take the ModelSegments output for a normal, and then tag ModelSegments segments in the tumor that sufficiently overlap any normal segment in CR-AF-genomic space (where we have some freedom to define the overlap criteria). Essentially, let's just try to highlight differences between the tumor and normal in CR-AF space. This would rescue events in the normal that may be further amplified or deleted in the tumor. Subsequently, simple filtering of these events would be less misleading than imputation. I do not think such tagging should be implemented in Java, if we can avoid it. Rather, a relatively simple python script that runs through each tumor segment and checks for overlaps would suffice. This script could output a tagged/filtered ModelSegments result, as well as do the conversion step for downstream tools. This also obviates the need for the Java code for combining segment breakpoints and additional CNV collection classes in the current post-processing tools. What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810:423,Safety,avoid,avoid,423,"As we discussed, it's possible that these are simply common germline CNVs that are being median-normalized out in CR by the PoN. Let's investigate the sample-median-normalized counts in some of the questionable regions, along with the per-bin medians in the PoN. I do not think a gCNV run is necessary (it will probably be a bit expensive, anyway). More generally, I think a better approach to germline tagging would be to avoid the caller entirely. Let's take the ModelSegments output for a normal, and then tag ModelSegments segments in the tumor that sufficiently overlap any normal segment in CR-AF-genomic space (where we have some freedom to define the overlap criteria). Essentially, let's just try to highlight differences between the tumor and normal in CR-AF space. This would rescue events in the normal that may be further amplified or deleted in the tumor. Subsequently, simple filtering of these events would be less misleading than imputation. I do not think such tagging should be implemented in Java, if we can avoid it. Rather, a relatively simple python script that runs through each tumor segment and checks for overlaps would suffice. This script could output a tagged/filtered ModelSegments result, as well as do the conversion step for downstream tools. This also obviates the need for the Java code for combining segment breakpoints and additional CNV collection classes in the current post-processing tools. What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810:1028,Safety,avoid,avoid,1028,"As we discussed, it's possible that these are simply common germline CNVs that are being median-normalized out in CR by the PoN. Let's investigate the sample-median-normalized counts in some of the questionable regions, along with the per-bin medians in the PoN. I do not think a gCNV run is necessary (it will probably be a bit expensive, anyway). More generally, I think a better approach to germline tagging would be to avoid the caller entirely. Let's take the ModelSegments output for a normal, and then tag ModelSegments segments in the tumor that sufficiently overlap any normal segment in CR-AF-genomic space (where we have some freedom to define the overlap criteria). Essentially, let's just try to highlight differences between the tumor and normal in CR-AF space. This would rescue events in the normal that may be further amplified or deleted in the tumor. Subsequently, simple filtering of these events would be less misleading than imputation. I do not think such tagging should be implemented in Java, if we can avoid it. Rather, a relatively simple python script that runs through each tumor segment and checks for overlaps would suffice. This script could output a tagged/filtered ModelSegments result, as well as do the conversion step for downstream tools. This also obviates the need for the Java code for combining segment breakpoints and additional CNV collection classes in the current post-processing tools. What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810:46,Usability,simpl,simply,46,"As we discussed, it's possible that these are simply common germline CNVs that are being median-normalized out in CR by the PoN. Let's investigate the sample-median-normalized counts in some of the questionable regions, along with the per-bin medians in the PoN. I do not think a gCNV run is necessary (it will probably be a bit expensive, anyway). More generally, I think a better approach to germline tagging would be to avoid the caller entirely. Let's take the ModelSegments output for a normal, and then tag ModelSegments segments in the tumor that sufficiently overlap any normal segment in CR-AF-genomic space (where we have some freedom to define the overlap criteria). Essentially, let's just try to highlight differences between the tumor and normal in CR-AF space. This would rescue events in the normal that may be further amplified or deleted in the tumor. Subsequently, simple filtering of these events would be less misleading than imputation. I do not think such tagging should be implemented in Java, if we can avoid it. Rather, a relatively simple python script that runs through each tumor segment and checks for overlaps would suffice. This script could output a tagged/filtered ModelSegments result, as well as do the conversion step for downstream tools. This also obviates the need for the Java code for combining segment breakpoints and additional CNV collection classes in the current post-processing tools. What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810:884,Usability,simpl,simple,884,"As we discussed, it's possible that these are simply common germline CNVs that are being median-normalized out in CR by the PoN. Let's investigate the sample-median-normalized counts in some of the questionable regions, along with the per-bin medians in the PoN. I do not think a gCNV run is necessary (it will probably be a bit expensive, anyway). More generally, I think a better approach to germline tagging would be to avoid the caller entirely. Let's take the ModelSegments output for a normal, and then tag ModelSegments segments in the tumor that sufficiently overlap any normal segment in CR-AF-genomic space (where we have some freedom to define the overlap criteria). Essentially, let's just try to highlight differences between the tumor and normal in CR-AF space. This would rescue events in the normal that may be further amplified or deleted in the tumor. Subsequently, simple filtering of these events would be less misleading than imputation. I do not think such tagging should be implemented in Java, if we can avoid it. Rather, a relatively simple python script that runs through each tumor segment and checks for overlaps would suffice. This script could output a tagged/filtered ModelSegments result, as well as do the conversion step for downstream tools. This also obviates the need for the Java code for combining segment breakpoints and additional CNV collection classes in the current post-processing tools. What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810:1059,Usability,simpl,simple,1059,"As we discussed, it's possible that these are simply common germline CNVs that are being median-normalized out in CR by the PoN. Let's investigate the sample-median-normalized counts in some of the questionable regions, along with the per-bin medians in the PoN. I do not think a gCNV run is necessary (it will probably be a bit expensive, anyway). More generally, I think a better approach to germline tagging would be to avoid the caller entirely. Let's take the ModelSegments output for a normal, and then tag ModelSegments segments in the tumor that sufficiently overlap any normal segment in CR-AF-genomic space (where we have some freedom to define the overlap criteria). Essentially, let's just try to highlight differences between the tumor and normal in CR-AF space. This would rescue events in the normal that may be further amplified or deleted in the tumor. Subsequently, simple filtering of these events would be less misleading than imputation. I do not think such tagging should be implemented in Java, if we can avoid it. Rather, a relatively simple python script that runs through each tumor segment and checks for overlaps would suffice. This script could output a tagged/filtered ModelSegments result, as well as do the conversion step for downstream tools. This also obviates the need for the Java code for combining segment breakpoints and additional CNV collection classes in the current post-processing tools. What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-442911810
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250:752,Availability,avail,available,752,"If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. If tagging/filtering rare germline is still a concern, then I'd say the next step is to see whether simply changing segmentation parameters to artificially decrease resolution and/or simple length-based filtering suffices. Finally, simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250:997,Performance,perform,performed,997,"If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. If tagging/filtering rare germline is still a concern, then I'd say the next step is to see whether simply changing segmentation parameters to artificially decrease resolution and/or simple length-based filtering suffices. Finally, simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250:164,Usability,simpl,simply,164,"If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. If tagging/filtering rare germline is still a concern, then I'd say the next step is to see whether simply changing segmentation parameters to artificially decrease resolution and/or simple length-based filtering suffices. Finally, simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250:530,Usability,simpl,simply,530,"If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. If tagging/filtering rare germline is still a concern, then I'd say the next step is to see whether simply changing segmentation parameters to artificially decrease resolution and/or simple length-based filtering suffices. Finally, simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250:613,Usability,simpl,simple,613,"If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. If tagging/filtering rare germline is still a concern, then I'd say the next step is to see whether simply changing segmentation parameters to artificially decrease resolution and/or simple length-based filtering suffices. Finally, simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250:662,Usability,simpl,simple,662,"If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. If tagging/filtering rare germline is still a concern, then I'd say the next step is to see whether simply changing segmentation parameters to artificially decrease resolution and/or simple length-based filtering suffices. Finally, simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250:791,Usability,simpl,simply,791,"If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. If tagging/filtering rare germline is still a concern, then I'd say the next step is to see whether simply changing segmentation parameters to artificially decrease resolution and/or simple length-based filtering suffices. Finally, simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250:1078,Usability,simpl,simple,1078,"If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. If tagging/filtering rare germline is still a concern, then I'd say the next step is to see whether simply changing segmentation parameters to artificially decrease resolution and/or simple length-based filtering suffices. Finally, simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-458551250
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:2352,Availability,avail,available,2352,"r definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. As a compromise, I can always default the CNLoH piece to `false`, since there are other useful changes on this branch. (Users did not have as strong an opinion about the faux-CNLoH pruning, since GISTIC does not use MAF and ABSOLUTE requires a manual review). > simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF. And this would be a possible ""better solution"" Shall I file an issue for this? This could also allow us to obviate the TagGermline tool, which is fine by me.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:1512,Performance,tune,tuned,1512,"pled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. Two comments: ; > If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. As a compromise, I can always default the CNLoH piece to `false`, since there are other useful changes on this branch. (Users did not have as strong an opinion about the faux-CNLoH pruning, since GISTIC does not use MAF and ABSOLUTE requires a manual review). > simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:2597,Performance,perform,performed,2597,"r definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. As a compromise, I can always default the CNLoH piece to `false`, since there are other useful changes on this branch. (Users did not have as strong an opinion about the faux-CNLoH pruning, since GISTIC does not use MAF and ABSOLUTE requires a manual review). > simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF. And this would be a possible ""better solution"" Shall I file an issue for this? This could also allow us to obviate the TagGermline tool, which is fine by me.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:339,Usability,feedback,feedback,339,"@samuelklee . The CNLoH are probably artifacts (faux-CNLoH) -- I think I misdiagnosed. However, there are other changes in this PR and we can always disable the faux-CNLoH pruning by default (there is a flag). Additionally, artifact or not, it is useful to remove the faux-CNLoH. Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. Two comments: ; > If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. A",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:546,Usability,clear,clearly,546,"@samuelklee . The CNLoH are probably artifacts (faux-CNLoH) -- I think I misdiagnosed. However, there are other changes in this PR and we can always disable the faux-CNLoH pruning by default (there is a flag). Additionally, artifact or not, it is useful to remove the faux-CNLoH. Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. Two comments: ; > If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. A",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:960,Usability,simpl,simply,960,"@samuelklee . The CNLoH are probably artifacts (faux-CNLoH) -- I think I misdiagnosed. However, there are other changes in this PR and we can always disable the faux-CNLoH pruning by default (there is a flag). Additionally, artifact or not, it is useful to remove the faux-CNLoH. Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. Two comments: ; > If these events were indeed not CNLOH, as we discussed, then I don't think we should merge this. Perhaps we should take a step back and answer definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. A",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:2262,Usability,simpl,simple,2262,"r definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. As a compromise, I can always default the CNLoH piece to `false`, since there are other useful changes on this branch. (Users did not have as strong an opinion about the faux-CNLoH pruning, since GISTIC does not use MAF and ABSOLUTE requires a manual review). > simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF. And this would be a possible ""better solution"" Shall I file an issue for this? This could also allow us to obviate the TagGermline tool, which is fine by me.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:2391,Usability,simpl,simply,2391,"r definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. As a compromise, I can always default the CNLoH piece to `false`, since there are other useful changes on this branch. (Users did not have as strong an opinion about the faux-CNLoH pruning, since GISTIC does not use MAF and ABSOLUTE requires a manual review). > simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF. And this would be a possible ""better solution"" Shall I file an issue for this? This could also allow us to obviate the TagGermline tool, which is fine by me.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874:2678,Usability,simpl,simple,2678,"r definitively whether simply blacklisting common germline regions is enough to replicate/obviate most of the postprocessing. Should be straightforward to run an evaluation with and without blacklisting---and hopefully our truth data accurately reflects whether blacklisting is desirable. There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. I am pretty sure that most common germline regions are being blacklisted already. The hotspots addressed in this PR (faux-CNLoH) could be added, but I think we will find new areas and a few of these areas were rather big. I have users that are actively using this from the branch, for reasons other than the faux-CNLoH pruning. Results are improving without an appreciable hit to sensitivity, which we got when using parameters like num_changepoints_penalty_factor. As a compromise, I can always default the CNLoH piece to `false`, since there are other useful changes on this branch. (Users did not have as strong an opinion about the faux-CNLoH pruning, since GISTIC does not use MAF and ABSOLUTE requires a manual review). > simple filtering based on CR-AF as described above could be implemented. If the normal is available, we can make IS_NORMAL calls simply based on the overlap of the ModelSegments posteriors (with corresponding qualities). If not, then some heuristic determination of the normal state from the tumor alone as in Marton's caller could be performed. This would combine the IS_NORMAL calling and filtering steps into one simple tool. The output could be a tagged/filtered ModelSegments .seg file and the corresponding VCF. And this would be a possible ""better solution"" Shall I file an issue for this? This could also allow us to obviate the TagGermline tool, which is fine by me.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461258874
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:2785,Availability,avail,available,2785,"ositive feedback, I refer you to CellBender team's manifesto at https://github.com/broadinstitute/CellBender/commit/28f02f8dbd716aff922bb8da1e56da29347b245b. Can these users help us definitively resolve whether these events are 1) germline with incorrectly normalized CR, or 2) mosaic CNLOH? If not, then we have not even taken the first step to correctly identify the issue. So it seems a bit premature to even prototype a method, much less merge it. I think this PR, as is, muddies the waters quite a bit. For example, it introduces a new Record class that denotes this type of ""CNLOH"" with a `C`. If we want to merge this, I suggest that we first correctly identify the issue. If these events are not mosaic CNLOH, then we should clean up all mention of CNLOH in this code. Either way, can we quantify the level of improvement gained by filtering such events in a reproducible evaluation? If so, let's bring that into gatk-evaluation. Finally, there are many more options available to change the segmentation and/or resolution than the single one you mentioned. If the users you are working with can clearly specify their analysis goals in terms of resolution, then it might be possible to sidestep the problem entirely without adding more unsupported code. This would also buy us more time to put in a principled solution, without the risk of unsupported code getting entrenched in their workflows. > There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. This is encouraging. This means that a straightforward approach to germline filtering, such as simply identifying overlapping posteriors as mentioned above, should work well. Prototyping this approach shouldn't take long at all, especially when the matched normal is guaranteed to be avai",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:3807,Availability,avail,available,3807,"s are not mosaic CNLOH, then we should clean up all mention of CNLOH in this code. Either way, can we quantify the level of improvement gained by filtering such events in a reproducible evaluation? If so, let's bring that into gatk-evaluation. Finally, there are many more options available to change the segmentation and/or resolution than the single one you mentioned. If the users you are working with can clearly specify their analysis goals in terms of resolution, then it might be possible to sidestep the problem entirely without adding more unsupported code. This would also buy us more time to put in a principled solution, without the risk of unsupported code getting entrenched in their workflows. > There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. This is encouraging. This means that a straightforward approach to germline filtering, such as simply identifying overlapping posteriors as mentioned above, should work well. Prototyping this approach shouldn't take long at all, especially when the matched normal is guaranteed to be available, as it is in this workflow (tumor-only would require some work to identify the normal state, as mentioned previously). I'd rather just roll that, evaluate it, and merge it instead. Key here is that we sidestep the deficiencies of the current CR-only caller, which also shares the blame for this ""CNLOH"" issue (since these events aren't called in the normal and don't become candidates for tagging, as currently implemented). > And this would be a possible ""better solution"" Shall I file an issue for this? This could also allow us to obviate the TagGermline tool, which is fine by me. I've already expanded the scope of https://github.com/broadinstitute/gatk/issues/4115 to include this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:378,Deployability,release,release,378,"Executive summary: . My main concern is that the amount of unsupported code is continuing to grow. Adding this PR would bring the total to about ~5k lines of WDL, Java, and test code. In comparison, the amount of corresponding supported CNV code clocks in around ~33k---this includes all of gCNV, as well! Development time has also been non-negligible and dates back to pre-4.0 release. Another concern is that the number of users of this unsupported code is also growing. In fact, it seems like we are actively pointing users to it. This seems unsustainable going forward. Finally, I don't think we have satisfactorily demonstrated which of the functions accomplished by this code (format conversion, post-hoc blacklisting, germline/""CNLOH"" tagging and imputation) are necessary or cannot be performed by existing code or more streamlined and principled methods. (Some of these functions, such as IGV conversion, are already performed by existing code.) Of those functions, I think format conversion is the only one we should retain from this code in an unsupported fashion. So if this PR introduces a useful GISTIC conversion, no harm in merging that. This all sounds like a decision for the new tech lead! @mwalker174 any thoughts? . More detailed responses follow:. > Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. While it's great that users are giving positive feedback, I refer you to CellBender team's manifesto at https://github.com/broadinstitute/CellBender/commit/28f02f8dbd716aff922bb8da1e56da29347b245b. Can these users help us definitiv",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:793,Performance,perform,performed,793,"Executive summary: . My main concern is that the amount of unsupported code is continuing to grow. Adding this PR would bring the total to about ~5k lines of WDL, Java, and test code. In comparison, the amount of corresponding supported CNV code clocks in around ~33k---this includes all of gCNV, as well! Development time has also been non-negligible and dates back to pre-4.0 release. Another concern is that the number of users of this unsupported code is also growing. In fact, it seems like we are actively pointing users to it. This seems unsustainable going forward. Finally, I don't think we have satisfactorily demonstrated which of the functions accomplished by this code (format conversion, post-hoc blacklisting, germline/""CNLOH"" tagging and imputation) are necessary or cannot be performed by existing code or more streamlined and principled methods. (Some of these functions, such as IGV conversion, are already performed by existing code.) Of those functions, I think format conversion is the only one we should retain from this code in an unsupported fashion. So if this PR introduces a useful GISTIC conversion, no harm in merging that. This all sounds like a decision for the new tech lead! @mwalker174 any thoughts? . More detailed responses follow:. > Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. While it's great that users are giving positive feedback, I refer you to CellBender team's manifesto at https://github.com/broadinstitute/CellBender/commit/28f02f8dbd716aff922bb8da1e56da29347b245b. Can these users help us definitiv",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:926,Performance,perform,performed,926,"Executive summary: . My main concern is that the amount of unsupported code is continuing to grow. Adding this PR would bring the total to about ~5k lines of WDL, Java, and test code. In comparison, the amount of corresponding supported CNV code clocks in around ~33k---this includes all of gCNV, as well! Development time has also been non-negligible and dates back to pre-4.0 release. Another concern is that the number of users of this unsupported code is also growing. In fact, it seems like we are actively pointing users to it. This seems unsustainable going forward. Finally, I don't think we have satisfactorily demonstrated which of the functions accomplished by this code (format conversion, post-hoc blacklisting, germline/""CNLOH"" tagging and imputation) are necessary or cannot be performed by existing code or more streamlined and principled methods. (Some of these functions, such as IGV conversion, are already performed by existing code.) Of those functions, I think format conversion is the only one we should retain from this code in an unsupported fashion. So if this PR introduces a useful GISTIC conversion, no harm in merging that. This all sounds like a decision for the new tech lead! @mwalker174 any thoughts? . More detailed responses follow:. > Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. While it's great that users are giving positive feedback, I refer you to CellBender team's manifesto at https://github.com/broadinstitute/CellBender/commit/28f02f8dbd716aff922bb8da1e56da29347b245b. Can these users help us definitiv",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:3501,Performance,tune,tuned,3501,"events are not mosaic CNLOH, then we should clean up all mention of CNLOH in this code. Either way, can we quantify the level of improvement gained by filtering such events in a reproducible evaluation? If so, let's bring that into gatk-evaluation. Finally, there are many more options available to change the segmentation and/or resolution than the single one you mentioned. If the users you are working with can clearly specify their analysis goals in terms of resolution, then it might be possible to sidestep the problem entirely without adding more unsupported code. This would also buy us more time to put in a principled solution, without the risk of unsupported code getting entrenched in their workflows. > There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. This is encouraging. This means that a straightforward approach to germline filtering, such as simply identifying overlapping posteriors as mentioned above, should work well. Prototyping this approach shouldn't take long at all, especially when the matched normal is guaranteed to be available, as it is in this workflow (tumor-only would require some work to identify the normal state, as mentioned previously). I'd rather just roll that, evaluate it, and merge it instead. Key here is that we sidestep the deficiencies of the current CR-only caller, which also shares the blame for this ""CNLOH"" issue (since these events aren't called in the normal and don't become candidates for tagging, as currently implemented). > And this would be a possible ""better solution"" Shall I file an issue for this? This could also allow us to obviate the TagGermline tool, which is fine by me. I've already expanded the scope of https://github.com/broadinstitute/gatk/issues/4115 to include t",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:3149,Safety,risk,risk,3149," first step to correctly identify the issue. So it seems a bit premature to even prototype a method, much less merge it. I think this PR, as is, muddies the waters quite a bit. For example, it introduces a new Record class that denotes this type of ""CNLOH"" with a `C`. If we want to merge this, I suggest that we first correctly identify the issue. If these events are not mosaic CNLOH, then we should clean up all mention of CNLOH in this code. Either way, can we quantify the level of improvement gained by filtering such events in a reproducible evaluation? If so, let's bring that into gatk-evaluation. Finally, there are many more options available to change the segmentation and/or resolution than the single one you mentioned. If the users you are working with can clearly specify their analysis goals in terms of resolution, then it might be possible to sidestep the problem entirely without adding more unsupported code. This would also buy us more time to put in a principled solution, without the risk of unsupported code getting entrenched in their workflows. > There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. This is encouraging. This means that a straightforward approach to germline filtering, such as simply identifying overlapping posteriors as mentioned above, should work well. Prototyping this approach shouldn't take long at all, especially when the matched normal is guaranteed to be available, as it is in this workflow (tumor-only would require some work to identify the normal state, as mentioned previously). I'd rather just roll that, evaluate it, and merge it instead. Key here is that we sidestep the deficiencies of the current CR-only caller, which also shares the blame for this ""CNLOH"" issue (since these ev",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:173,Testability,test,test,173,"Executive summary: . My main concern is that the amount of unsupported code is continuing to grow. Adding this PR would bring the total to about ~5k lines of WDL, Java, and test code. In comparison, the amount of corresponding supported CNV code clocks in around ~33k---this includes all of gCNV, as well! Development time has also been non-negligible and dates back to pre-4.0 release. Another concern is that the number of users of this unsupported code is also growing. In fact, it seems like we are actively pointing users to it. This seems unsustainable going forward. Finally, I don't think we have satisfactorily demonstrated which of the functions accomplished by this code (format conversion, post-hoc blacklisting, germline/""CNLOH"" tagging and imputation) are necessary or cannot be performed by existing code or more streamlined and principled methods. (Some of these functions, such as IGV conversion, are already performed by existing code.) Of those functions, I think format conversion is the only one we should retain from this code in an unsupported fashion. So if this PR introduces a useful GISTIC conversion, no harm in merging that. This all sounds like a decision for the new tech lead! @mwalker174 any thoughts? . More detailed responses follow:. > Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. While it's great that users are giving positive feedback, I refer you to CellBender team's manifesto at https://github.com/broadinstitute/CellBender/commit/28f02f8dbd716aff922bb8da1e56da29347b245b. Can these users help us definitiv",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:1331,Usability,feedback,feedback,1331,"negligible and dates back to pre-4.0 release. Another concern is that the number of users of this unsupported code is also growing. In fact, it seems like we are actively pointing users to it. This seems unsustainable going forward. Finally, I don't think we have satisfactorily demonstrated which of the functions accomplished by this code (format conversion, post-hoc blacklisting, germline/""CNLOH"" tagging and imputation) are necessary or cannot be performed by existing code or more streamlined and principled methods. (Some of these functions, such as IGV conversion, are already performed by existing code.) Of those functions, I think format conversion is the only one we should retain from this code in an unsupported fashion. So if this PR introduces a useful GISTIC conversion, no harm in merging that. This all sounds like a decision for the new tech lead! @mwalker174 any thoughts? . More detailed responses follow:. > Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. While it's great that users are giving positive feedback, I refer you to CellBender team's manifesto at https://github.com/broadinstitute/CellBender/commit/28f02f8dbd716aff922bb8da1e56da29347b245b. Can these users help us definitively resolve whether these events are 1) germline with incorrectly normalized CR, or 2) mosaic CNLOH? If not, then we have not even taken the first step to correctly identify the issue. So it seems a bit premature to even prototype a method, much less merge it. I think this PR, as is, muddies the waters quite a bit. For example, it introduc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:1538,Usability,clear,clearly,1538,"g forward. Finally, I don't think we have satisfactorily demonstrated which of the functions accomplished by this code (format conversion, post-hoc blacklisting, germline/""CNLOH"" tagging and imputation) are necessary or cannot be performed by existing code or more streamlined and principled methods. (Some of these functions, such as IGV conversion, are already performed by existing code.) Of those functions, I think format conversion is the only one we should retain from this code in an unsupported fashion. So if this PR introduces a useful GISTIC conversion, no harm in merging that. This all sounds like a decision for the new tech lead! @mwalker174 any thoughts? . More detailed responses follow:. > Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. While it's great that users are giving positive feedback, I refer you to CellBender team's manifesto at https://github.com/broadinstitute/CellBender/commit/28f02f8dbd716aff922bb8da1e56da29347b245b. Can these users help us definitively resolve whether these events are 1) germline with incorrectly normalized CR, or 2) mosaic CNLOH? If not, then we have not even taken the first step to correctly identify the issue. So it seems a bit premature to even prototype a method, much less merge it. I think this PR, as is, muddies the waters quite a bit. For example, it introduces a new Record class that denotes this type of ""CNLOH"" with a `C`. If we want to merge this, I suggest that we first correctly identify the issue. If these events are not mosaic CNLOH, then we should clean up all mention ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:1818,Usability,feedback,feedback,1818,"treamlined and principled methods. (Some of these functions, such as IGV conversion, are already performed by existing code.) Of those functions, I think format conversion is the only one we should retain from this code in an unsupported fashion. So if this PR introduces a useful GISTIC conversion, no harm in merging that. This all sounds like a decision for the new tech lead! @mwalker174 any thoughts? . More detailed responses follow:. > Users are already using this branch and giving me positive feedback (definitely more positive than adjusting num_changepoints_penalty_factor). I suggest merging mostly for practical reasons. It buys us more time to put in a principled solution. And this workflow is clearly marked as an unsupported prototype anyway (as are the GATK CLIs). I want to emphasize that this whole workflow is not a long-term solution. In other words, I would like to get this in and then focus on a supported solution. While it's great that users are giving positive feedback, I refer you to CellBender team's manifesto at https://github.com/broadinstitute/CellBender/commit/28f02f8dbd716aff922bb8da1e56da29347b245b. Can these users help us definitively resolve whether these events are 1) germline with incorrectly normalized CR, or 2) mosaic CNLOH? If not, then we have not even taken the first step to correctly identify the issue. So it seems a bit premature to even prototype a method, much less merge it. I think this PR, as is, muddies the waters quite a bit. For example, it introduces a new Record class that denotes this type of ""CNLOH"" with a `C`. If we want to merge this, I suggest that we first correctly identify the issue. If these events are not mosaic CNLOH, then we should clean up all mention of CNLOH in this code. Either way, can we quantify the level of improvement gained by filtering such events in a reproducible evaluation? If so, let's bring that into gatk-evaluation. Finally, there are many more options available to change the segmentation and/or ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:2913,Usability,clear,clearly,2913,"these users help us definitively resolve whether these events are 1) germline with incorrectly normalized CR, or 2) mosaic CNLOH? If not, then we have not even taken the first step to correctly identify the issue. So it seems a bit premature to even prototype a method, much less merge it. I think this PR, as is, muddies the waters quite a bit. For example, it introduces a new Record class that denotes this type of ""CNLOH"" with a `C`. If we want to merge this, I suggest that we first correctly identify the issue. If these events are not mosaic CNLOH, then we should clean up all mention of CNLOH in this code. Either way, can we quantify the level of improvement gained by filtering such events in a reproducible evaluation? If so, let's bring that into gatk-evaluation. Finally, there are many more options available to change the segmentation and/or resolution than the single one you mentioned. If the users you are working with can clearly specify their analysis goals in terms of resolution, then it might be possible to sidestep the problem entirely without adding more unsupported code. This would also buy us more time to put in a principled solution, without the risk of unsupported code getting entrenched in their workflows. > There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. This is encouraging. This means that a straightforward approach to germline filtering, such as simply identifying overlapping posteriors as mentioned above, should work well. Prototyping this approach shouldn't take long at all, especially when the matched normal is guaranteed to be available, as it is in this workflow (tumor-only would require some work to identify the normal state, as mentioned previously). I'd rather just roll that, evaluate ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199:3618,Usability,simpl,simply,3618,"s are not mosaic CNLOH, then we should clean up all mention of CNLOH in this code. Either way, can we quantify the level of improvement gained by filtering such events in a reproducible evaluation? If so, let's bring that into gatk-evaluation. Finally, there are many more options available to change the segmentation and/or resolution than the single one you mentioned. If the users you are working with can clearly specify their analysis goals in terms of resolution, then it might be possible to sidestep the problem entirely without adding more unsupported code. This would also buy us more time to put in a principled solution, without the risk of unsupported code getting entrenched in their workflows. > There are definitely events that get missed without the germline tagging, so this is an improvement over blacklisting alone. And while I have seen erroneous germline tagging (i.e. false calling a segment germline), it was only ever due to really noisy data (e.g. a bad PoN) or a poorly tuned segment caller. This is encouraging. This means that a straightforward approach to germline filtering, such as simply identifying overlapping posteriors as mentioned above, should work well. Prototyping this approach shouldn't take long at all, especially when the matched normal is guaranteed to be available, as it is in this workflow (tumor-only would require some work to identify the normal state, as mentioned previously). I'd rather just roll that, evaluate it, and merge it instead. Key here is that we sidestep the deficiencies of the current CR-only caller, which also shares the blame for this ""CNLOH"" issue (since these events aren't called in the normal and don't become candidates for tagging, as currently implemented). > And this would be a possible ""better solution"" Shall I file an issue for this? This could also allow us to obviate the TagGermline tool, which is fine by me. I've already expanded the scope of https://github.com/broadinstitute/gatk/issues/4115 to include this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199
https://github.com/broadinstitute/gatk/pull/5451#issuecomment-467537358:3912,Security,validat,validation,3912,odecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2ZpbHRlcnMvVmFyaWFudEZpbHRyYXRpb25JbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `0.826% <0%> (-99.174%)` | `1% <0%> (-25%)` | |; | [...dorientation/CollectF1R2CountsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9Db2xsZWN0RjFSMkNvdW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `0.917% <0%> (-99.083%)` | `1% <0%> (-12%)` | |; | [.../walkers/bqsr/BaseRecalibratorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvckludGVncmF0aW9uVGVzdC5qYXZh) | `1.031% <0%> (-98.969%)` | `1% <0%> (-7%)` | |; | [...ers/vqsr/FilterVariantTranchesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.053% <0%> (-98.947%)` | `1% <0%> (-5%)` | |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYXJpYW50c1RvVGFibGVJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.205% <0%> (-98.795%)` | `1% <0%> (-20%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.563% <0%> (-98.438%)` | `1% <0%> (-5%)` | |; | ... and [162 more](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5451#issuecomment-467537358
https://github.com/broadinstitute/gatk/pull/5451#issuecomment-582715942:17,Integrability,depend,depended,17,"@jamesemery This depended on #5416, which has since been merged. What's the status of this PR now?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5451#issuecomment-582715942
https://github.com/broadinstitute/gatk/pull/5452#issuecomment-442892032:29,Testability,test,tests,29,@MartonKN You can merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5452#issuecomment-442892032
https://github.com/broadinstitute/gatk/issues/5457#issuecomment-583401006:41,Availability,avail,available,41,is this chain file (b37->hg38) somewhere available?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5457#issuecomment-583401006
https://github.com/broadinstitute/gatk/issues/5459#issuecomment-442897874:254,Safety,avoid,avoid,254,"Here's what the code will be, I think:; ```; if (refSeq.length == altSeq.length && IntStream.range(0, refSeq.length).filter(n -> refSeq[n] != altSeq[n]).count() < 3) {; return same shortcut as before; }; ```. So 5 was actually an overestimate, unless we avoid the stream.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5459#issuecomment-442897874
https://github.com/broadinstitute/gatk/issues/5459#issuecomment-442902925:147,Usability,learn,learned,147,"> If it's in a critical haplotype caller hotspot you might want to actually write a for loop instead of the stream. They're faster. I know, having learned that lesson several times. Given that this is O(# of haplotypes) [each haplotype vs ref] and not O(# of haplotypes^2) [i.e. every haplotype vs every haplotype] or O(# of reads) I'm not expecting it to matter, but I will definitely profile.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5459#issuecomment-442902925
https://github.com/broadinstitute/gatk/pull/5462#issuecomment-449686567:87,Testability,test,tests,87,"No need to change anything really, go ahead and merge once conflicts are addressed and tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5462#issuecomment-449686567
https://github.com/broadinstitute/gatk/pull/5462#issuecomment-450062027:1281,Energy Efficiency,Adapt,AdaptiveChainPruner,1281,c=pr&el=desc) will **increase** coverage by `0.012%`.; > The diff coverage is `86.42%`. ```diff; @@ Coverage Diff @@; ## master #5462 +/- ##; ===============================================; + Coverage 87.075% 87.087% +0.012% ; + Complexity 31334 31225 -109 ; ===============================================; Files 1921 1915 -6 ; Lines 144602 144079 -523 ; Branches 15951 15891 -60 ; ===============================================; - Hits 125912 125474 -438 ; + Misses 12896 12834 -62 ; + Partials 5794 5771 -23; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5462?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/walkers/haplotypecaller/graphs/PathUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5462/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvUGF0aFVuaXRUZXN0LmphdmE=) | `93.258% <ø> (-0.22%)` | `7 <0> (ø)` | |; | [...rs/haplotypecaller/graphs/AdaptiveChainPruner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5462/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvQWRhcHRpdmVDaGFpblBydW5lci5qYXZh) | `95.349% <100%> (ø)` | `16 <0> (ø)` | :arrow_down: |; | [...ller/readthreading/ReadThreadingGraphUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5462/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9yZWFkdGhyZWFkaW5nL1JlYWRUaHJlYWRpbmdHcmFwaFVuaXRUZXN0LmphdmE=) | `95.238% <100%> (+0.018%)` | `55 <0> (ø)` | :arrow_down: |; | [...rs/haplotypecaller/graphs/ChainPrunerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5462/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvQ2hhaW5QcnVuZXJVbml0VGVzdC5qYXZh) | `99.194% <100%> (-0.006%)` | `40 <0> (ø)` | |; | [...der/t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5462#issuecomment-450062027
https://github.com/broadinstitute/gatk/pull/5462#issuecomment-450062027:1281,Modifiability,Adapt,AdaptiveChainPruner,1281,c=pr&el=desc) will **increase** coverage by `0.012%`.; > The diff coverage is `86.42%`. ```diff; @@ Coverage Diff @@; ## master #5462 +/- ##; ===============================================; + Coverage 87.075% 87.087% +0.012% ; + Complexity 31334 31225 -109 ; ===============================================; Files 1921 1915 -6 ; Lines 144602 144079 -523 ; Branches 15951 15891 -60 ; ===============================================; - Hits 125912 125474 -438 ; + Misses 12896 12834 -62 ; + Partials 5794 5771 -23; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5462?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/walkers/haplotypecaller/graphs/PathUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5462/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvUGF0aFVuaXRUZXN0LmphdmE=) | `93.258% <ø> (-0.22%)` | `7 <0> (ø)` | |; | [...rs/haplotypecaller/graphs/AdaptiveChainPruner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5462/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvQWRhcHRpdmVDaGFpblBydW5lci5qYXZh) | `95.349% <100%> (ø)` | `16 <0> (ø)` | :arrow_down: |; | [...ller/readthreading/ReadThreadingGraphUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5462/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9yZWFkdGhyZWFkaW5nL1JlYWRUaHJlYWRpbmdHcmFwaFVuaXRUZXN0LmphdmE=) | `95.238% <100%> (+0.018%)` | `55 <0> (ø)` | :arrow_down: |; | [...rs/haplotypecaller/graphs/ChainPrunerUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5462/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvQ2hhaW5QcnVuZXJVbml0VGVzdC5qYXZh) | `99.194% <100%> (-0.006%)` | `40 <0> (ø)` | |; | [...der/t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5462#issuecomment-450062027
https://github.com/broadinstitute/gatk/pull/5464#issuecomment-443263606:41,Testability,test,tests,41,@MartonKN Looks good! You can merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5464#issuecomment-443263606
https://github.com/broadinstitute/gatk/pull/5466#issuecomment-443324822:99,Availability,down,down,99,"Hmmm, rather than making assumptions, the aligner could expose its SW parameters and then it comes down to a line of arithmetic.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5466#issuecomment-443324822
https://github.com/broadinstitute/gatk/pull/5466#issuecomment-443324822:56,Security,expose,expose,56,"Hmmm, rather than making assumptions, the aligner could expose its SW parameters and then it comes down to a line of arithmetic.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5466#issuecomment-443324822
https://github.com/broadinstitute/gatk/pull/5467#issuecomment-443463884:294,Modifiability,rewrite,rewrite,294,"There is no conceivable worst case for this PR -- the only reason for having a `CountSet` was to be be able to have quick `min` and `max` operations (in log(n) time), *but*. * these operations are not used anywhere outside of unit tests, so to make an illuminating worst case you would have to rewrite the assembly engine.; * Even if we did use these operations they would be done once per assembly region, and therefore we could make this class 1000x slower and we would add about a second to the run time of a WGS bam.; * a plain old `TreeSet`, which is what this PR replaces the `CountSet` with, also has these operations in log time.; * the number of kmer sizes used is usually 2, and will be up to 6 in very rare cases.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5467#issuecomment-443463884
https://github.com/broadinstitute/gatk/pull/5467#issuecomment-443463884:153,Testability,log,log,153,"There is no conceivable worst case for this PR -- the only reason for having a `CountSet` was to be be able to have quick `min` and `max` operations (in log(n) time), *but*. * these operations are not used anywhere outside of unit tests, so to make an illuminating worst case you would have to rewrite the assembly engine.; * Even if we did use these operations they would be done once per assembly region, and therefore we could make this class 1000x slower and we would add about a second to the run time of a WGS bam.; * a plain old `TreeSet`, which is what this PR replaces the `CountSet` with, also has these operations in log time.; * the number of kmer sizes used is usually 2, and will be up to 6 in very rare cases.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5467#issuecomment-443463884
https://github.com/broadinstitute/gatk/pull/5467#issuecomment-443463884:231,Testability,test,tests,231,"There is no conceivable worst case for this PR -- the only reason for having a `CountSet` was to be be able to have quick `min` and `max` operations (in log(n) time), *but*. * these operations are not used anywhere outside of unit tests, so to make an illuminating worst case you would have to rewrite the assembly engine.; * Even if we did use these operations they would be done once per assembly region, and therefore we could make this class 1000x slower and we would add about a second to the run time of a WGS bam.; * a plain old `TreeSet`, which is what this PR replaces the `CountSet` with, also has these operations in log time.; * the number of kmer sizes used is usually 2, and will be up to 6 in very rare cases.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5467#issuecomment-443463884
https://github.com/broadinstitute/gatk/pull/5467#issuecomment-443463884:628,Testability,log,log,628,"There is no conceivable worst case for this PR -- the only reason for having a `CountSet` was to be be able to have quick `min` and `max` operations (in log(n) time), *but*. * these operations are not used anywhere outside of unit tests, so to make an illuminating worst case you would have to rewrite the assembly engine.; * Even if we did use these operations they would be done once per assembly region, and therefore we could make this class 1000x slower and we would add about a second to the run time of a WGS bam.; * a plain old `TreeSet`, which is what this PR replaces the `CountSet` with, also has these operations in log time.; * the number of kmer sizes used is usually 2, and will be up to 6 in very rare cases.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5467#issuecomment-443463884
https://github.com/broadinstitute/gatk/pull/5469#issuecomment-443322836:5,Safety,sanity check,sanity check,5,"As a sanity check, HaplotypeCaller run in GVCF mode over a bam subsetted to only chr15 on my laptop:; master: ; ```; real	4m28.600s; user	5m48.484s; sys	0m4.510s; ```; this branch: ; ```; real	3m58.043s; user	5m15.625s; sys	0m4.012s; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5469#issuecomment-443322836
https://github.com/broadinstitute/gatk/pull/5469#issuecomment-454945628:12,Availability,Ping,Pinging,12,@jamesemery Pinging you on this one -- do you want to get this in for the 4.1 release?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5469#issuecomment-454945628
https://github.com/broadinstitute/gatk/pull/5469#issuecomment-454945628:78,Deployability,release,release,78,@jamesemery Pinging you on this one -- do you want to get this in for the 4.1 release?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5469#issuecomment-454945628
https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443544817:76,Availability,error,error,76,:thumbsup: ready to merge once the test passes (probably a transient Travis error),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443544817
https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443544817:35,Testability,test,test,35,:thumbsup: ready to merge once the test passes (probably a transient Travis error),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443544817
https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443586033:14,Availability,error,errors,14,"Actually, the errors are not transient. It's probably a matter of fixing the truth data. But anyway, this still has my :thumbsup: once you resolve the failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443586033
https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443586033:151,Availability,failure,failures,151,"Actually, the errors are not transient. It's probably a matter of fixing the truth data. But anyway, this still has my :thumbsup: once you resolve the failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5471#issuecomment-443586033
https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443745103:28,Deployability,Pipeline,Pipeline,28,"@meganshand I ran the ""Full Pipeline"" workflows in a clone of your FC workspace: https://portal.firecloud.org/#workspaces/broad-firecloud-dsde/copy-of-megans-m2-mito-validations. I did not run any of the things that generate graphs because they were harder for me to understand. To compare the new results to your previous ones, I took all variants that were either PASS or had only the contamination filter applied, extracted just the locus and alleles columns, then manually inspected the diff. For the 5% and 50% spike-ins there were usually no differences at all, while for the 1% spike-in the difference was usually 2-5 variants that straddled the LOD threshold.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443745103
https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443745103:166,Security,validat,validations,166,"@meganshand I ran the ""Full Pipeline"" workflows in a clone of your FC workspace: https://portal.firecloud.org/#workspaces/broad-firecloud-dsde/copy-of-megans-m2-mito-validations. I did not run any of the things that generate graphs because they were harder for me to understand. To compare the new results to your previous ones, I took all variants that were either PASS or had only the contamination filter applied, extracted just the locus and alleles columns, then manually inspected the diff. For the 5% and 50% spike-ins there were usually no differences at all, while for the 1% spike-in the difference was usually 2-5 variants that straddled the LOD threshold.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443745103
https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443751026:161,Deployability,Pipeline,Pipeline,161,"Great, thanks!. On Mon, Dec 3, 2018 at 10:15 AM David Benjamin <notifications@github.com>; wrote:. > @meganshand <https://github.com/meganshand> I ran the ""Full Pipeline""; > workflows in a clone of your FC workspace:; > https://portal.firecloud.org/#workspaces/broad-firecloud-dsde/copy-of-megans-m2-mito-validations.; > I did not run any of the things that generate graphs because they were; > harder for me to understand. To compare the new results to your previous; > ones, I took all variants that were either PASS or had only the; > contamination filter applied, extracted just the locus and alleles columns,; > then manually inspected the diff. For the 5% and 50% spike-ins there were; > usually no differences at all, while for the 1% spike-in the difference was; > usually 2-5 variants that straddled the LOD threshold.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443745103>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdMwCcuQyzMweZjxWrXBODTCBaOSIks5u1T_-gaJpZM4Y9STI>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443751026
https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443751026:305,Security,validat,validations,305,"Great, thanks!. On Mon, Dec 3, 2018 at 10:15 AM David Benjamin <notifications@github.com>; wrote:. > @meganshand <https://github.com/meganshand> I ran the ""Full Pipeline""; > workflows in a clone of your FC workspace:; > https://portal.firecloud.org/#workspaces/broad-firecloud-dsde/copy-of-megans-m2-mito-validations.; > I did not run any of the things that generate graphs because they were; > harder for me to understand. To compare the new results to your previous; > ones, I took all variants that were either PASS or had only the; > contamination filter applied, extracted just the locus and alleles columns,; > then manually inspected the diff. For the 5% and 50% spike-ins there were; > usually no differences at all, while for the 1% spike-in the difference was; > usually 2-5 variants that straddled the LOD threshold.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443745103>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdMwCcuQyzMweZjxWrXBODTCBaOSIks5u1T_-gaJpZM4Y9STI>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5473#issuecomment-443751026
https://github.com/broadinstitute/gatk/pull/5473#issuecomment-444360492:32,Security,validat,validations,32,"@takutosato Based on all of our validations I added a commit to make this the default for M2. Because M2 shares a nested argument collection with HaplotypeCaller, this was pretty awkward. Louis told me this was the best among bad options.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5473#issuecomment-444360492
https://github.com/broadinstitute/gatk/pull/5475#issuecomment-443759397:4713,Deployability,update,update,4713,"hhaW5QcnVuZXIuamF2YQ==) | `83.33% <0%> (-12.23%)` | `5% <0%> (-15%)` | |; | [...r/arguments/CopyNumberArgumentValidationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9Db3B5TnVtYmVyQXJndW1lbnRWYWxpZGF0aW9uVXRpbHMuamF2YQ==) | `66.66% <0%> (-11.12%)` | `19% <0%> (-1%)` | |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `75.92% <0%> (-11.04%)` | `17% <0%> (ø)` | |; | [...ools/walkers/haplotypecaller/graphs/SeqVertex.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvU2VxVmVydGV4LmphdmE=) | `92.85% <0%> (-7.15%)` | `10% <0%> (-1%)` | |; | [...te/hellbender/tools/funcotator/OutputRenderer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL091dHB1dFJlbmRlcmVyLmphdmE=) | `92.85% <0%> (-7.15%)` | `4% <0%> (ø)` | |; | ... and [170 more](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=footer). Last update [1f6a172...623830b](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5475#issuecomment-443759397
https://github.com/broadinstitute/gatk/pull/5475#issuecomment-443759397:4616,Energy Efficiency,Power,Powered,4616,"hhaW5QcnVuZXIuamF2YQ==) | `83.33% <0%> (-12.23%)` | `5% <0%> (-15%)` | |; | [...r/arguments/CopyNumberArgumentValidationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9Db3B5TnVtYmVyQXJndW1lbnRWYWxpZGF0aW9uVXRpbHMuamF2YQ==) | `66.66% <0%> (-11.12%)` | `19% <0%> (-1%)` | |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `75.92% <0%> (-11.04%)` | `17% <0%> (ø)` | |; | [...ools/walkers/haplotypecaller/graphs/SeqVertex.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvU2VxVmVydGV4LmphdmE=) | `92.85% <0%> (-7.15%)` | `10% <0%> (-1%)` | |; | [...te/hellbender/tools/funcotator/OutputRenderer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL091dHB1dFJlbmRlcmVyLmphdmE=) | `92.85% <0%> (-7.15%)` | `4% <0%> (ø)` | |; | ... and [170 more](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=footer). Last update [1f6a172...623830b](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5475#issuecomment-443759397
https://github.com/broadinstitute/gatk/pull/5475#issuecomment-443759397:4479,Usability,learn,learn,4479,"hhaW5QcnVuZXIuamF2YQ==) | `83.33% <0%> (-12.23%)` | `5% <0%> (-15%)` | |; | [...r/arguments/CopyNumberArgumentValidationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2FyZ3VtZW50cy9Db3B5TnVtYmVyQXJndW1lbnRWYWxpZGF0aW9uVXRpbHMuamF2YQ==) | `66.66% <0%> (-11.12%)` | `19% <0%> (-1%)` | |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `75.92% <0%> (-11.04%)` | `17% <0%> (ø)` | |; | [...ools/walkers/haplotypecaller/graphs/SeqVertex.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvU2VxVmVydGV4LmphdmE=) | `92.85% <0%> (-7.15%)` | `10% <0%> (-1%)` | |; | [...te/hellbender/tools/funcotator/OutputRenderer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL091dHB1dFJlbmRlcmVyLmphdmE=) | `92.85% <0%> (-7.15%)` | `4% <0%> (ø)` | |; | ... and [170 more](https://codecov.io/gh/broadinstitute/gatk/pull/5475/diff?src=pr&el=tree-more) | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=footer). Last update [1f6a172...623830b](https://codecov.io/gh/broadinstitute/gatk/pull/5475?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5475#issuecomment-443759397
https://github.com/broadinstitute/gatk/pull/5477#issuecomment-457003839:39,Testability,log,logs,39,"I don't see anything bad in the Travis logs. Please rerun if necessary, or let me know what you'd like me to fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5477#issuecomment-457003839
https://github.com/broadinstitute/gatk/pull/5477#issuecomment-567219186:146,Availability,error,error,146,"Closing this one -- I think scraping the exception messages for keywords to infer what's gone wrong is too brittle an approach. If we want better error reporting, we should submit a patch to `google-cloud-java`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5477#issuecomment-567219186
https://github.com/broadinstitute/gatk/pull/5477#issuecomment-567219186:182,Deployability,patch,patch,182,"Closing this one -- I think scraping the exception messages for keywords to infer what's gone wrong is too brittle an approach. If we want better error reporting, we should submit a patch to `google-cloud-java`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5477#issuecomment-567219186
https://github.com/broadinstitute/gatk/pull/5477#issuecomment-567219186:51,Integrability,message,messages,51,"Closing this one -- I think scraping the exception messages for keywords to infer what's gone wrong is too brittle an approach. If we want better error reporting, we should submit a patch to `google-cloud-java`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5477#issuecomment-567219186
https://github.com/broadinstitute/gatk/issues/5481#issuecomment-592082423:37,Safety,risk,risk,37,"@ldgauthier They are use-at-your-own-risk, though in general we try to help users with problems. However, in this case the report is so old, and `ReadsPipelineSpark` has changed so much since then, that it's unclear whether this is still an issue with the current version.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5481#issuecomment-592082423
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444195902:55,Integrability,wrap,wrapper,55,"Hi @yurivict, gatk requires gradle 3.1. We include the wrapper script so you can always just run `./gradlew` instead of using the system gradle and it will automatically resolve the correct version.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444195902
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444198609:30,Deployability,patch,patch,30,We would be happy to accept a patch to move to a new version of gradle. (We've wanted to do so for a long time but haven't gotten around to it... https://github.com/broadinstitute/gatk/issues/4659). There's a partial upgraded version [here](https://github.com/broadinstitute/gatk/tree/lb_update_to_gradle_4.8) but it had some problem and I never got around to finishing it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444198609
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444198609:217,Deployability,upgrade,upgraded,217,We would be happy to accept a patch to move to a new version of gradle. (We've wanted to do so for a long time but haven't gotten around to it... https://github.com/broadinstitute/gatk/issues/4659). There's a partial upgraded version [here](https://github.com/broadinstitute/gatk/tree/lb_update_to_gradle_4.8) but it had some problem and I never got around to finishing it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444198609
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444199543:240,Integrability,wrap,wrapper,240,"Our gradle script does a bunch of testing and packaging, so while build might work I think we had problems with getting all of tests to run correctly and the javadoc built right or something like that... We definitely recommend you use the wrapper. Is there a reason that the wrapper won't work for you?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444199543
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444199543:276,Integrability,wrap,wrapper,276,"Our gradle script does a bunch of testing and packaging, so while build might work I think we had problems with getting all of tests to run correctly and the javadoc built right or something like that... We definitely recommend you use the wrapper. Is there a reason that the wrapper won't work for you?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444199543
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444199543:34,Testability,test,testing,34,"Our gradle script does a bunch of testing and packaging, so while build might work I think we had problems with getting all of tests to run correctly and the javadoc built right or something like that... We definitely recommend you use the wrapper. Is there a reason that the wrapper won't work for you?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444199543
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444199543:127,Testability,test,tests,127,"Our gradle script does a bunch of testing and packaging, so while build might work I think we had problems with getting all of tests to run correctly and the javadoc built right or something like that... We definitely recommend you use the wrapper. Is there a reason that the wrapper won't work for you?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444199543
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444200479:193,Integrability,wrap,wrapper,193,Ah. I see. It's not clear to me what that problem is though. You can have many version of gradle coexisting. Gatk doesn't have to build with system gradle because it comes with the `./gradlew` wrapper which chooses the correct version to build it with.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444200479
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444200479:20,Usability,clear,clear,20,Ah. I see. It's not clear to me what that problem is though. You can have many version of gradle coexisting. Gatk doesn't have to build with system gradle because it comes with the `./gradlew` wrapper which chooses the correct version to build it with.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444200479
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:38,Availability,down,download,38,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:163,Availability,down,download,163,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:386,Availability,down,downloads,386,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:840,Availability,down,download,840,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:277,Deployability,upgrade,upgraded,277,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:139,Integrability,depend,dependencies,139,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:543,Integrability,depend,dependencies,543,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:651,Integrability,inject,inject,651,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:810,Integrability,depend,dependencies,810,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:77,Security,secur,security,77,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:413,Security,secur,security,413,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:651,Security,inject,inject,651,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444208372:129,Availability,down,download,129,I agree that it is a good security measure to use fixed signed dependencies for repeatable builds. GATK depends on gradle 3.1.: [download](https://services.gradle.org/distributions/gradle-3.1-bin.zip) [shaw256](https://services.gradle.org/distributions/gradle-3.1-bin.zip.sha256),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444208372
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444208372:63,Integrability,depend,dependencies,63,I agree that it is a good security measure to use fixed signed dependencies for repeatable builds. GATK depends on gradle 3.1.: [download](https://services.gradle.org/distributions/gradle-3.1-bin.zip) [shaw256](https://services.gradle.org/distributions/gradle-3.1-bin.zip.sha256),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444208372
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444208372:104,Integrability,depend,depends,104,I agree that it is a good security measure to use fixed signed dependencies for repeatable builds. GATK depends on gradle 3.1.: [download](https://services.gradle.org/distributions/gradle-3.1-bin.zip) [shaw256](https://services.gradle.org/distributions/gradle-3.1-bin.zip.sha256),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444208372
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444208372:26,Security,secur,security,26,I agree that it is a good security measure to use fixed signed dependencies for repeatable builds. GATK depends on gradle 3.1.: [download](https://services.gradle.org/distributions/gradle-3.1-bin.zip) [shaw256](https://services.gradle.org/distributions/gradle-3.1-bin.zip.sha256),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444208372
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444210781:31,Availability,down,download,31,"> GATK depends on gradle 3.1.: download shaw256. It currently works with gradle-4.6, no need to go back to 3.1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444210781
https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444210781:7,Integrability,depend,depends,7,"> GATK depends on gradle 3.1.: download shaw256. It currently works with gradle-4.6, no need to go back to 3.1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444210781
https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457752526:37,Deployability,release,release,37,"@droazen this needs to go in the 4.1 release, but the rebase is potentially going to be a little hairy.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457752526
https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457754973:53,Deployability,release,release,53,"@ldgauthier Would it help if I told you that the 4.1 release is much more likely to happen on Tuesday rather than Monday, at this point?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457754973
https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993:53,Deployability,integrat,integration,53,"HaplotypeCaller, GenotypeGVCFs, and GenomicsDBImport integration tests are all passing locally. I'll check Travis in the morning to see what tests are left to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993
https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993:159,Deployability,update,update,159,"HaplotypeCaller, GenotypeGVCFs, and GenomicsDBImport integration tests are all passing locally. I'll check Travis in the morning to see what tests are left to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993
https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993:53,Integrability,integrat,integration,53,"HaplotypeCaller, GenotypeGVCFs, and GenomicsDBImport integration tests are all passing locally. I'll check Travis in the morning to see what tests are left to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993
https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993:65,Testability,test,tests,65,"HaplotypeCaller, GenotypeGVCFs, and GenomicsDBImport integration tests are all passing locally. I'll check Travis in the morning to see what tests are left to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993
https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993:141,Testability,test,tests,141,"HaplotypeCaller, GenotypeGVCFs, and GenomicsDBImport integration tests are all passing locally. I'll check Travis in the morning to see what tests are left to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5484#issuecomment-457893993
https://github.com/broadinstitute/gatk/pull/5484#issuecomment-458251853:108,Deployability,release,release,108,"No additional changes that might affect the `HaplotypeCaller` output are slated to be merged before the 4.1 release tomorrow, so today would be a good time to get this one in @ldgauthier @davidbenjamin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5484#issuecomment-458251853
https://github.com/broadinstitute/gatk/pull/5485#issuecomment-454749917:32,Availability,error,errors,32,Thanks @jamesemery. The compile errors will be fixed once Disq 0.2.0 is released.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5485#issuecomment-454749917
https://github.com/broadinstitute/gatk/pull/5485#issuecomment-454749917:72,Deployability,release,released,72,Thanks @jamesemery. The compile errors will be fixed once Disq 0.2.0 is released.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5485#issuecomment-454749917
https://github.com/broadinstitute/gatk/pull/5487#issuecomment-444951911:184,Availability,error,errors,184,"@xiucz it was 5; this PR sets it to 1, which is essentially ""off."" We are gradually converging on a more holistic filtering approach that directly evaluates the possibility of mapping errors, and as we do so these proxies for mapping error outlive their usefulness.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5487#issuecomment-444951911
https://github.com/broadinstitute/gatk/pull/5487#issuecomment-444951911:234,Availability,error,error,234,"@xiucz it was 5; this PR sets it to 1, which is essentially ""off."" We are gradually converging on a more holistic filtering approach that directly evaluates the possibility of mapping errors, and as we do so these proxies for mapping error outlive their usefulness.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5487#issuecomment-444951911
https://github.com/broadinstitute/gatk/pull/5489#issuecomment-444951052:184,Deployability,release,release,184,"@MartonKN One more thing: the PR title is currently not very informative, so when you merge, be sure to write a descriptive commit message. These are very useful when we come out with release notes, among other things.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5489#issuecomment-444951052
https://github.com/broadinstitute/gatk/pull/5489#issuecomment-444951052:131,Integrability,message,message,131,"@MartonKN One more thing: the PR title is currently not very informative, so when you merge, be sure to write a descriptive commit message. These are very useful when we come out with release notes, among other things.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5489#issuecomment-444951052
https://github.com/broadinstitute/gatk/pull/5490#issuecomment-450968381:41,Performance,queue,queue,41,I'll kick off a test run on FC soon (the queue is currently a bit backed up)...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5490#issuecomment-450968381
https://github.com/broadinstitute/gatk/pull/5490#issuecomment-450968381:16,Testability,test,test,16,I'll kick off a test run on FC soon (the queue is currently a bit backed up)...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5490#issuecomment-450968381
https://github.com/broadinstitute/gatk/pull/5491#issuecomment-445079102:3632,Usability,Simpl,SimpleKeyXsvFuncotationFactory,3632,YnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3hzdi9Mb2NhdGFibGVYc3ZGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `80.263% <100%> (+0.811%)` | `22 <1> (+1)` | :arrow_up: |; | [...cotator/dataSources/vcf/VcfFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5491/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `87.582% <100%> (+0.248%)` | `48 <1> (+1)` | :arrow_up: |; | [...r/dataSources/cosmic/CosmicFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5491/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2Nvc21pYy9Db3NtaWNGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `66.917% <100%> (+0.763%)` | `26 <1> (+1)` | :arrow_up: |; | [...ces/gencode/GencodeFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5491/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvR2VuY29kZUZ1bmNvdGF0aW9uRmFjdG9yeVVuaXRUZXN0LmphdmE=) | `94.033% <100%> (+0.009%)` | `67 <1> (ø)` | :arrow_down: |; | [...ataSources/xsv/SimpleKeyXsvFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5491/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3hzdi9TaW1wbGVLZXlYc3ZGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `87.5% <100%> (+0.403%)` | `28 <3> (+1)` | :arrow_up: |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5491/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0RhdGFTb3VyY2VGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `75.926% <22.222%> (-11.031%)` | `17 <1> (ø)` | |; | ... and [3 more](https://codecov.io/gh/broadinstitute/gatk/pull/5491/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5491#issuecomment-445079102
https://github.com/broadinstitute/gatk/issues/5492#issuecomment-445115098:55,Testability,test,test,55,You can consider this fixed if it passes a simple unit test where you run `ReadPosRankSumTest.getReadPosition` on a few artificial read of the form <ref match><short deletion><short ref match of 1-5 or so bases><short deletion>.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5492#issuecomment-445115098
https://github.com/broadinstitute/gatk/issues/5492#issuecomment-445115098:43,Usability,simpl,simple,43,You can consider this fixed if it passes a simple unit test where you run `ReadPosRankSumTest.getReadPosition` on a few artificial read of the form <ref match><short deletion><short ref match of 1-5 or so bases><short deletion>.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5492#issuecomment-445115098
https://github.com/broadinstitute/gatk/pull/5496#issuecomment-446270446:111,Deployability,update,update-the-gatk-base-docker,111,I wrote a very minimal guide that says the same thing here: https://github.com/broadinstitute/gatk/wiki/How-to-update-the-gatk-base-docker,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5496#issuecomment-446270446
https://github.com/broadinstitute/gatk/pull/5496#issuecomment-446270446:23,Usability,guid,guide,23,I wrote a very minimal guide that says the same thing here: https://github.com/broadinstitute/gatk/wiki/How-to-update-the-gatk-base-docker,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5496#issuecomment-446270446
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446221996:48,Testability,log,log,48,"@yurivict I cant actually navigate to the build log you included, but since you seem to have previously [succeeded](https://github.com/broadinstitute/gatk/issues/5483) in building with gradle-4.6, which gradle version are you seeing this issue with ? Do you know if its different in gradle 3.1 vs 4.x ?.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446221996
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446252538:4,Testability,log,log,4,The log in on IPv6.; I use gradle-4.6.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446252538
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:1341,Modifiability,plugin,plugins,1341,r/ports/biology/gatk/work/gatk-4.0.11.0/build/libs/gatk-package-1.0-SNAPSHOT-local.jar'.; 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423); 	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83); 	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:255); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$StreamAction.visitFile(ShadowCopyAction.groovy:185); 	at sun.reflect.GeneratedMethodAccessor34.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210); 	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$StreamAction.processFile(ShadowCopyAction.groovy:151); 	at org.gradle.api.internal.file.copy.NormalizingCopyActionDecorator$1$1.processFile(NormalizingCopyActionDecorator.java:66); 	at org.gradle.api.internal.file.copy.DuplicateHandlingCopyActionDecorator$1$1.processFile(DuplicateHandlingCopyAction,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:2008,Modifiability,plugin,plugins,2008,odehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:255); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$StreamAction.visitFile(ShadowCopyAction.groovy:185); 	at sun.reflect.GeneratedMethodAccessor34.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210); 	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$StreamAction.processFile(ShadowCopyAction.groovy:151); 	at org.gradle.api.internal.file.copy.NormalizingCopyActionDecorator$1$1.processFile(NormalizingCopyActionDecorator.java:66); 	at org.gradle.api.internal.file.copy.DuplicateHandlingCopyActionDecorator$1$1.processFile(DuplicateHandlingCopyActionDecorator.java:60); 	at org.gradle.api.internal.file.copy.CopyFileVisitorImpl.processFile(CopyFileVisitorImpl.java:62); 	at org.gradle.api.internal.file.copy.CopyFileVisitorImpl.visitFile(CopyFileVisitorImpl.java:46); 	at org.gradle.api.internal.file.collections.jdk7.Jdk7DirectoryWalker$1.visitFile(Jdk7DirectoryWalker.java:86); 	at org.gradle.api.internal.file.collections.jdk7.Jdk7DirectoryWalker$1.visitFile(Jdk7DirectoryWalker.java:59); 	at java.nio.file.Files.walkFileTree(Files.java:2670); 	at org.gradle.api.internal.file.collections.jdk7.Jdk7DirectoryWalker.walkDir(Jdk7DirectoryWalker.java:59); 	at org.gradle.api.internal.file.collections.DirectoryFileTree,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:4713,Modifiability,plugin,plugins,4713,ava:648); 	at org.gradle.api.internal.file.copy.DefaultCopySpec$DefaultCopySpecResolver.walk(DefaultCopySpec.java:650); 	at org.gradle.api.internal.file.copy.DefaultCopySpec.walk(DefaultCopySpec.java:458); 	at org.gradle.api.internal.file.copy.CopySpecBackedCopyActionProcessingStream.process(CopySpecBackedCopyActionProcessingStream.java:38); 	at org.gradle.api.internal.file.copy.DuplicateHandlingCopyActionDecorator$1.process(DuplicateHandlingCopyActionDecorator.java:44); 	at org.gradle.api.internal.file.copy.NormalizingCopyActionDecorator$1.process(NormalizingCopyActionDecorator.java:57); 	at org.gradle.api.internal.file.copy.CopyActionProcessingStream$process.call(Unknown Source); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1.execute(ShadowCopyAction.groovy:78); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1$execute.call(Unknown Source); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.withResource(ShadowCopyAction.groovy:109); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$Static,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:4822,Modifiability,plugin,plugins,4822,java:650); 	at org.gradle.api.internal.file.copy.DefaultCopySpec.walk(DefaultCopySpec.java:458); 	at org.gradle.api.internal.file.copy.CopySpecBackedCopyActionProcessingStream.process(CopySpecBackedCopyActionProcessingStream.java:38); 	at org.gradle.api.internal.file.copy.DuplicateHandlingCopyActionDecorator$1.process(DuplicateHandlingCopyActionDecorator.java:44); 	at org.gradle.api.internal.file.copy.NormalizingCopyActionDecorator$1.process(NormalizingCopyActionDecorator.java:57); 	at org.gradle.api.internal.file.copy.CopyActionProcessingStream$process.call(Unknown Source); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1.execute(ShadowCopyAction.groovy:78); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1$execute.call(Unknown Source); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.withResource(ShadowCopyAction.groovy:109); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151); 	at org.codehaus.groovy.runtime.callsit,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:5197,Modifiability,plugin,plugins,5197,gradle.api.internal.file.copy.NormalizingCopyActionDecorator$1.process(NormalizingCopyActionDecorator.java:57); 	at org.gradle.api.internal.file.copy.CopyActionProcessingStream$process.call(Unknown Source); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1.execute(ShadowCopyAction.groovy:78); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1$execute.call(Unknown Source); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.withResource(ShadowCopyAction.groovy:109); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); 	at com.github.jen,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:6215,Modifiability,plugin,plugins,6215,hadowCopyAction.withResource(ShadowCopyAction.groovy:109); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.execute(ShadowCopyAction.groovy:75); 	at org.gradle.api.internal.file.copy.NormalizingCopyActionDecorator.execute(NormalizingCopyActionDecorator.java:53); 	at org.gradle.api.internal.file.copy.DuplicateHandlingCopyActionDecorator.execute(DuplicateHandlingCopyActionDecorator.java:42); 	at org.gradle.api.internal.file.copy.CopyActionExecuter.execute(CopyActionExecuter.java:40); 	at org.gradle.api.tasks.AbstractCopyTask.copy(AbstractCopyTask.java:174); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.copy(ShadowJar.java:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73); 	at org.gradle.api.internal.project.taskfactory.StandardTask,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:6739,Modifiability,plugin,plugins,6739,erce.invoke(StaticMetaMethodSite.java:151); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.execute(ShadowCopyAction.groovy:75); 	at org.gradle.api.internal.file.copy.NormalizingCopyActionDecorator.execute(NormalizingCopyActionDecorator.java:53); 	at org.gradle.api.internal.file.copy.DuplicateHandlingCopyActionDecorator.execute(DuplicateHandlingCopyActionDecorator.java:42); 	at org.gradle.api.internal.file.copy.CopyActionExecuter.execute(CopyActionExecuter.java:40); 	at org.gradle.api.tasks.AbstractCopyTask.copy(AbstractCopyTask.java:174); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.copy(ShadowJar.java:70); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73); 	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:46); 	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39); 	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26); 	at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:788); 	at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:755); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:818,Performance,Cache,CachedConstructor,818,```; tarting a Gradle Daemon (subsequent builds will be faster); :compileJava; :processResources; :classes; :shadowJarex; org.gradle.api.GradleException: Could not add file '/wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/classes/java/main/org/broadinstitute/hellbender/metrics/MultiLevelCollector$Distributor.class' to ZIP '/wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/libs/gatk-package-1.0-SNAPSHOT-local.jar'.; 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423); 	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83); 	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:255); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$StreamAction.visitFile(ShadowCopyAction.groovy:185); 	at sun.reflect.GeneratedMethodAccessor34.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210); 	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166); 	at com.github.jengelman.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:843,Performance,Cache,CachedConstructor,843,```; tarting a Gradle Daemon (subsequent builds will be faster); :compileJava; :processResources; :classes; :shadowJarex; org.gradle.api.GradleException: Could not add file '/wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/classes/java/main/org/broadinstitute/hellbender/metrics/MultiLevelCollector$Distributor.class' to ZIP '/wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/libs/gatk-package-1.0-SNAPSHOT-local.jar'.; 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423); 	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83); 	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:255); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$StreamAction.visitFile(ShadowCopyAction.groovy:185); 	at sun.reflect.GeneratedMethodAccessor34.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210); 	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166); 	at com.github.jengelman.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:5606,Performance,Cache,CachedMethod,5606,y.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1.execute(ShadowCopyAction.groovy:78); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1$execute.call(Unknown Source); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.withResource(ShadowCopyAction.groovy:109); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.execute(ShadowCopyAction.groovy:75); 	at org.gradle.api.internal.file.copy.NormalizingCopyActionDecorator.execute(NormalizingCopyActionDecorator.java:53); 	at org.gradle.api.internal.file.copy.DuplicateHandlingCopyActionDecorator.execute(DuplicateHandlingCopyActionDecorator.java:42); 	at org.gradle.api.internal.file.copy.CopyActionExecuter.execute(CopyAction,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:5626,Performance,Cache,CachedMethod,5626,e.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1.execute(ShadowCopyAction.groovy:78); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction$1$execute.call(Unknown Source); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.withResource(ShadowCopyAction.groovy:109); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrapNoCoerce.invoke(StaticMetaMethodSite.java:151); 	at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); 	at com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.execute(ShadowCopyAction.groovy:75); 	at org.gradle.api.internal.file.copy.NormalizingCopyActionDecorator.execute(NormalizingCopyActionDecorator.java:53); 	at org.gradle.api.internal.file.copy.DuplicateHandlingCopyActionDecorator.execute(DuplicateHandlingCopyActionDecorator.java:42); 	at org.gradle.api.internal.file.copy.CopyActionExecuter.execute(CopyActionExecuter.java:40,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:12075,Performance,concurren,concurrent,12075,erationExecutor.java:199); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.io.FileNotFoundException: /wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/classes/java/main/org/broadinstitute/hellbender/metrics/MultiLevelCollector$Distributor.class (Too many open files); 	at java.io.FileInputStream.open0(Native Method); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:12183,Performance,concurren,concurrent,12183,erationExecutor.java:199); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.io.FileNotFoundException: /wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/classes/java/main/org/broadinstitute/hellbender/metrics/MultiLevelCollector$Distributor.class (Too many open files); 	at java.io.FileInputStream.open0(Native Method); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:12264,Performance,concurren,concurrent,12264,erationExecutor.java:199); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.io.FileNotFoundException: /wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/classes/java/main/org/broadinstitute/hellbender/metrics/MultiLevelCollector$Distributor.class (Too many open files); 	at java.io.FileInputStream.open0(Native Method); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:12349,Performance,concurren,concurrent,12349,erationExecutor.java:199); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.io.FileNotFoundException: /wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/classes/java/main/org/broadinstitute/hellbender/metrics/MultiLevelCollector$Distributor.class (Too many open files); 	at java.io.FileInputStream.open0(Native Method); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:12444,Performance,concurren,concurrent,12444,erationExecutor.java:199); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55); 	at java.lang.Thread.run(Thread.java:748); Caused by: java.io.FileNotFoundException: /wrkdirs/usr/ports/biology/gatk/work/gatk-4.0.11.0/build/classes/java/main/org/broadinstitute/hellbender/metrics/MultiLevelCollector$Distributor.class (Too many open files); 	at java.io.FileInputStream.open0(Native Method); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:9291,Security,Validat,ValidatingTaskExecuter,9291,sks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:113); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:95); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:73); 	at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51); 	at org.gradle.api.internal.tasks.execution.SkipCachedTaskExecuter.execute(SkipCachedTaskExecuter.java:103); 	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ResolveBuildCacheKeyExecuter.execute(ResolveBuildCacheKeyExecuter.java:66); 	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101); 	at org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44); 	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91); 	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62); 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); 	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:9322,Security,Validat,ValidatingTaskExecuter,9322,sTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:113); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:95); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:73); 	at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51); 	at org.gradle.api.internal.tasks.execution.SkipCachedTaskExecuter.execute(SkipCachedTaskExecuter.java:103); 	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ResolveBuildCacheKeyExecuter.execute(ResolveBuildCacheKeyExecuter.java:66); 	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101); 	at org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44); 	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91); 	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62); 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); 	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskE,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:11429,Security,access,access,11429,kGraphExecuter.java:256); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at org.gradle.internal.con,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445
