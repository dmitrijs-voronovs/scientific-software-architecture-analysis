id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/classTDataMember.html:12946,Integrability,message,message,12946,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:13487,Integrability,message,message,13487,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:14477,Integrability,message,message,14477,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:17571,Integrability,message,message,17571,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:17944,Integrability,message,message,17944," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:9251,Modifiability,inherit,inherited,9251,"const;  Return true if data member is an enum. ;  ; Bool_t IsPersistent () const;  ; Int_t IsSTLContainer ();  The return type is defined in TDictionary (kVector, kList, etc.) ;  ; Bool_t IsValid ();  Return true if this data member object is pointing to a currently loaded data member. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void SetClass (TClass *cl);  ; TMethodCall * SetterMethod (TClass *cl);  Return a TMethodCall method responsible for setting the value of data member. ;  ; void Streamer (TBuffer &) override;  Stream an object of TDataMember. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (DataMemberInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:9743,Modifiability,inherit,inherited,9743,"t property description word. For meaning of bits see EProperty. ;  ; void SetClass (TClass *cl);  ; TMethodCall * SetterMethod (TClass *cl);  Return a TMethodCall method responsible for setting the value of data member. ;  ; void Streamer (TBuffer &) override;  Stream an object of TDataMember. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (DataMemberInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:11483,Modifiability,inherit,inherited,11483,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:12576,Modifiability,inherit,inheritance,12576,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:14575,Modifiability,inherit,inherits,14575,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:14692,Modifiability,inherit,inherits,14692,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:18445,Modifiability,inherit,inherited,18445," SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object s",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:18978,Modifiability,inherit,inherited,18978,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataMember (const TDataMember &);  copy constructor ;  ; TDataMember & operator= (const TDataMember &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:19188,Modifiability,inherit,inherited,19188,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataMember (const TDataMember &);  copy constructor ;  ; TDataMember & operator= (const TDataMember &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:19862,Modifiability,inherit,inherited,19862,"rSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataMember (const TDataMember &);  copy constructor ;  ; TDataMember & operator= (const TDataMember &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Types; enum  EStatusBits { kObjIsPersistent = (1ULL << ( 2 )); };  . Private Member Functions; void ExtractOptionsFromComment ();  Build TOptionListItems from the member comment *OPTION={ ;  ; void Init (bool afterReading);  Routines called by the constructor and Update to reset the member's information. ;  . Private Attributes; Int_t fArrayDim;  ; TString fArrayIndex;  ; Int_t * fArrayMaxIndex;  ; TClass * fClass;  pointer to CINT data member info ;  ; TDataType * fDataType;  pointer to the class ;  ; TString fFullTypeName;  ; DataMemberInfo_t * fInfo;  ; Longptr_t fOffset;  pointer to data basic type descriptor ;  ; TList * fOptions;  method which sets value; ;  ; Long_t fProperty;  ; Int_t fSTLCont",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:20025,Modifiability,inherit,inherited,20025,"rSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataMember (const TDataMember &);  copy constructor ;  ; TDataMember & operator= (const TDataMember &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Types; enum  EStatusBits { kObjIsPersistent = (1ULL << ( 2 )); };  . Private Member Functions; void ExtractOptionsFromComment ();  Build TOptionListItems from the member comment *OPTION={ ;  ; void Init (bool afterReading);  Routines called by the constructor and Update to reset the member's information. ;  . Private Attributes; Int_t fArrayDim;  ; TString fArrayIndex;  ; Int_t * fArrayMaxIndex;  ; TClass * fClass;  pointer to CINT data member info ;  ; TDataType * fDataType;  pointer to the class ;  ; TString fFullTypeName;  ; DataMemberInfo_t * fInfo;  ; Longptr_t fOffset;  pointer to data basic type descriptor ;  ; TList * fOptions;  method which sets value; ;  ; Long_t fProperty;  ; Int_t fSTLCont",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:21117,Modifiability,inherit,inherited,21117,"d MakeZombie ();  . Private Types; enum  EStatusBits { kObjIsPersistent = (1ULL << ( 2 )); };  . Private Member Functions; void ExtractOptionsFromComment ();  Build TOptionListItems from the member comment *OPTION={ ;  ; void Init (bool afterReading);  Routines called by the constructor and Update to reset the member's information. ;  . Private Attributes; Int_t fArrayDim;  ; TString fArrayIndex;  ; Int_t * fArrayMaxIndex;  ; TClass * fClass;  pointer to CINT data member info ;  ; TDataType * fDataType;  pointer to the class ;  ; TString fFullTypeName;  ; DataMemberInfo_t * fInfo;  ; Longptr_t fOffset;  pointer to data basic type descriptor ;  ; TList * fOptions;  method which sets value; ;  ; Long_t fProperty;  ; Int_t fSTLCont;  ; TString fTrueTypeName;  ; TString fTypeName;  ; TMethodCall * fValueGetter;  ; TMethodCall * fValueSetter;  method that returns a value; ;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:21851,Modifiability,inherit,inherited,21851,"t;  ; TString fTrueTypeName;  ; TString fTypeName;  ; TMethodCall * fValueGetter;  ; TMethodCall * fValueSetter;  method that returns a value; ;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDataMember.h>. Inheritance diagram for TDataMember:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TDataMember::EStatusBits. private . EnumeratorkObjIsPersistent . De",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:22492,Modifiability,inherit,inherited,22492,"ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDataMember.h>. Inheritance diagram for TDataMember:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TDataMember::EStatusBits. private . EnumeratorkObjIsPersistent . Definition at line 34 of file TDataMember.h. Constructor & Destructor Documentation. ◆ TDataMember() [1/2]. TDataMember::TDataMember ; (; const TDataMember & ; dm). protected . copy constructor ; Definition at line 273 of file TDataMember.cxx. ◆ TDataMember() [2/2]. TDataMember::TDataMember ; (; DataMemberInfo_t * ; info = nullptr, . TClass * ; cl = nullptr . ). Default TDataMember ctor. ; TDataMembers are constructed in TClass via a call to TCling::CreateListOfDataMembers(). It parses the comment string, initializes optionlist and getter/setter methods. ; Definition at line 172 of file TDataMember.cxx. ◆ ~TDataMember(). TDa",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:22585,Modifiability,inherit,inherited,22585,"ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDataMember.h>. Inheritance diagram for TDataMember:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TDataMember::EStatusBits. private . EnumeratorkObjIsPersistent . Definition at line 34 of file TDataMember.h. Constructor & Destructor Documentation. ◆ TDataMember() [1/2]. TDataMember::TDataMember ; (; const TDataMember & ; dm). protected . copy constructor ; Definition at line 273 of file TDataMember.cxx. ◆ TDataMember() [2/2]. TDataMember::TDataMember ; (; DataMemberInfo_t * ; info = nullptr, . TClass * ; cl = nullptr . ). Default TDataMember ctor. ; TDataMembers are constructed in TClass via a call to TCling::CreateListOfDataMembers(). It parses the comment string, initializes optionlist and getter/setter methods. ; Definition at line 172 of file TDataMember.cxx. ◆ ~TDataMember(). TDa",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:26717,Modifiability,inherit,inheritance,26717," name, see TDataMember::GetTrueTypeName(). ; Definition at line 423 of file TDataMember.cxx. ◆ GetMaxIndex(). Int_t TDataMember::GetMaxIndex ; (; Int_t ; dim); const. Return maximum index for array dimension ""dim"". ; Definition at line 395 of file TDataMember.cxx. ◆ GetOffset(). Longptr_t TDataMember::GetOffset ; (; ); const. Get offset from ""this"". ; Definition at line 443 of file TDataMember.cxx. ◆ GetOffsetCint(). Longptr_t TDataMember::GetOffsetCint ; (; ); const. Get offset from ""this"" using the information in CINT only. ; Definition at line 492 of file TDataMember.cxx. ◆ GetOptions(). TList * TDataMember::GetOptions ; (; ). Returns list of options - list of TOptionListItems. ; Definition at line 820 of file TDataMember.cxx. ◆ GetterMethod(). TMethodCall * TDataMember::GetterMethod ; (; TClass * ; cl = nullptr). Return a TMethodCall method responsible for getting the value of data member. ; The cl argument specifies the class of the object which will be used to call this method (in case of multiple inheritance TMethodCall needs to know this to calculate the proper offset). ; Definition at line 834 of file TDataMember.cxx. ◆ GetTrueTypeName(). const char * TDataMember::GetTrueTypeName ; (; ); const. Get the desugared type name of this data member, including const and volatile qualifiers. ; This function resolves typedefs in the type name. E.g., let Foo_t be a typedef to class TDirectory; assuming this is a member of type const Foo_t*, this function will return const TDirectory*. ; Definition at line 435 of file TDataMember.cxx. ◆ GetTypeName(). const char * TDataMember::GetTypeName ; (; ); const. Get the decayed type name of this data member, removing const and volatile qualifiers, and pointers * and references &. ; This function resolves typedefs in the type name. E.g., let Foo_t be a typedef to class TDirectory; assuming this is a member of type const Foo_t*, this function will return TDirectory. ; Definition at line 410 of file TDataMember.cxx. ◆ GetUnitSize(",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:30196,Modifiability,inherit,inheritance,30196,"d ; (; ). Return true if this data member object is pointing to a currently loaded data member. ; If a function is unloaded after the TDataMember is created, the TDataMember will be set to be invalid. ; Definition at line 564 of file TDataMember.cxx. ◆ operator=(). TDataMember & TDataMember::operator= ; (; const TDataMember & ; dm). protected . assignment operator ; Definition at line 298 of file TDataMember.cxx. ◆ Property(). Long_t TDataMember::Property ; (; ); const. overridevirtual . Get property description word. For meaning of bits see EProperty. ; Implements TDictionary.; Definition at line 588 of file TDataMember.cxx. ◆ SetClass(). void TDataMember::SetClass ; (; TClass * ; cl). inline . Definition at line 95 of file TDataMember.h. ◆ SetterMethod(). TMethodCall * TDataMember::SetterMethod ; (; TClass * ; cl). Return a TMethodCall method responsible for setting the value of data member. ; The cl argument specifies the class of the object which will be used to call this method (in case of multiple inheritance TMethodCall needs to know this to calculate the proper offset). ; Definition at line 878 of file TDataMember.cxx. ◆ Streamer(). void TDataMember::Streamer ; (; TBuffer & ; b). overridevirtual . Stream an object of TDataMember. ; Forces calculation of all cached (and persistent) values. ; Reimplemented from TObject.; Definition at line 956 of file TDataMember.cxx. ◆ StreamerNVirtual(). void TDataMember::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 98 of file TDataMember.h. ◆ Update(). Bool_t TDataMember::Update ; (; DataMemberInfo_t * ; info). virtual . Update the TFunction to reflect the new info. ; This can be used to implement unloading (info == 0) and then reloading (info being the 'new' decl address). ; Definition at line 921 of file TDataMember.cxx. Member Data Documentation. ◆ fArrayDim. Int_t TDataMember::fArrayDim. private . Definition at line 45 of file TDataMember.h. ◆ fArrayIndex. TString TDataMemb",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:8700,Performance,load,loaded,8700,"ptionListItems. ;  ; TMethodCall * GetterMethod (TClass *cl=nullptr);  Return a TMethodCall method responsible for getting the value of data member. ;  ; const char * GetTrueTypeName () const;  Get the desugared type name of this data member, including const and volatile qualifiers. ;  ; const char * GetTypeName () const;  Get the decayed type name of this data member, removing const and volatile qualifiers, and pointers * and references &. ;  ; Int_t GetUnitSize () const;  Get the sizeof the underlying type of the data member (i.e. ;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const;  Return true if data member is a pointer. ;  ; Bool_t IsBasic () const;  Return true if data member is a basic type, e.g. char, int, long... ;  ; Bool_t IsEnum () const;  Return true if data member is an enum. ;  ; Bool_t IsPersistent () const;  ; Int_t IsSTLContainer ();  The return type is defined in TDictionary (kVector, kList, etc.) ;  ; Bool_t IsValid ();  Return true if this data member object is pointing to a currently loaded data member. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void SetClass (TClass *cl);  ; TMethodCall * SetterMethod (TClass *cl);  Return a TMethodCall method responsible for setting the value of data member. ;  ; void Streamer (TBuffer &) override;  Stream an object of TDataMember. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (DataMemberInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void Strea",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:29253,Performance,load,loaded,29253,"st. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 98 of file TDataMember.h. ◆ IsaPointer(). Bool_t TDataMember::IsaPointer ; (; ); const. Return true if data member is a pointer. ; Definition at line 542 of file TDataMember.cxx. ◆ IsBasic(). Bool_t TDataMember::IsBasic ; (; ); const. Return true if data member is a basic type, e.g. char, int, long... ; Definition at line 524 of file TDataMember.cxx. ◆ IsEnum(). Bool_t TDataMember::IsEnum ; (; ); const. Return true if data member is an enum. ; Definition at line 533 of file TDataMember.cxx. ◆ IsPersistent(). Bool_t TDataMember::IsPersistent ; (; ); const. inline . Definition at line 91 of file TDataMember.h. ◆ IsSTLContainer(). int TDataMember::IsSTLContainer ; (; ). The return type is defined in TDictionary (kVector, kList, etc.) ; Definition at line 551 of file TDataMember.cxx. ◆ IsValid(). Bool_t TDataMember::IsValid ; (; ). Return true if this data member object is pointing to a currently loaded data member. ; If a function is unloaded after the TDataMember is created, the TDataMember will be set to be invalid. ; Definition at line 564 of file TDataMember.cxx. ◆ operator=(). TDataMember & TDataMember::operator= ; (; const TDataMember & ; dm). protected . assignment operator ; Definition at line 298 of file TDataMember.cxx. ◆ Property(). Long_t TDataMember::Property ; (; ); const. overridevirtual . Get property description word. For meaning of bits see EProperty. ; Implements TDictionary.; Definition at line 588 of file TDataMember.cxx. ◆ SetClass(). void TDataMember::SetClass ; (; TClass * ; cl). inline . Definition at line 95 of file TDataMember.h. ◆ SetterMethod(). TMethodCall * TDataMember::SetterMethod ; (; TClass * ; cl). Return a TMethodCall method responsible for setting the value of data member. ; The cl argument specifies the class of the object which will be used to call this method (in case of multiple inheritance TMethodCall needs to ",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:30463,Performance,cache,cached,30463,mber::operator= ; (; const TDataMember & ; dm). protected . assignment operator ; Definition at line 298 of file TDataMember.cxx. ◆ Property(). Long_t TDataMember::Property ; (; ); const. overridevirtual . Get property description word. For meaning of bits see EProperty. ; Implements TDictionary.; Definition at line 588 of file TDataMember.cxx. ◆ SetClass(). void TDataMember::SetClass ; (; TClass * ; cl). inline . Definition at line 95 of file TDataMember.h. ◆ SetterMethod(). TMethodCall * TDataMember::SetterMethod ; (; TClass * ; cl). Return a TMethodCall method responsible for setting the value of data member. ; The cl argument specifies the class of the object which will be used to call this method (in case of multiple inheritance TMethodCall needs to know this to calculate the proper offset). ; Definition at line 878 of file TDataMember.cxx. ◆ Streamer(). void TDataMember::Streamer ; (; TBuffer & ; b). overridevirtual . Stream an object of TDataMember. ; Forces calculation of all cached (and persistent) values. ; Reimplemented from TObject.; Definition at line 956 of file TDataMember.cxx. ◆ StreamerNVirtual(). void TDataMember::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 98 of file TDataMember.h. ◆ Update(). Bool_t TDataMember::Update ; (; DataMemberInfo_t * ; info). virtual . Update the TFunction to reflect the new info. ; This can be used to implement unloading (info == 0) and then reloading (info being the 'new' decl address). ; Definition at line 921 of file TDataMember.cxx. Member Data Documentation. ◆ fArrayDim. Int_t TDataMember::fArrayDim. private . Definition at line 45 of file TDataMember.h. ◆ fArrayIndex. TString TDataMember::fArrayIndex. private . Definition at line 47 of file TDataMember.h. ◆ fArrayMaxIndex. Int_t* TDataMember::fArrayMaxIndex. private . Definition at line 46 of file TDataMember.h. ◆ fClass. TClass* TDataMember::fClass. private . pointer to CINT data member info ; Definition at line 39 ,MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:990,Security,access,access,990,"ember Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TDataMember Class Reference. ; All ROOT classes may have RTTI (run time type identification) support added. ; The data is stored in so called DICTIONARY (look at TDictionary). Information about a class is stored in TClass. This information may be obtained via the cling api - see class TCling. TClass has a list of TDataMember objects providing information about all data members of described class. TDataMember provides information about name of data member, its type, and comment field string. It also tries to find the TMethodCall objects responsible for getting/setting a value of it, and gives you pointers to these methods. This gives you a unique possibility to access protected and private (!) data members if only methods for doing that are defined.; These methods could either be specified in a comment field, or found out automatically by ROOT: here's an example: suppose you have a class definition: class MyClass{; private:; Float_t fX1;; ...; public:; void SetX1(Float_t x) {fX1 = x;};; Float_t GetX1() {return fX1;};; ...; }; Float_tfloat Float_tDefinition RtypesCore.h:57; xDouble_t x[n]Definition legend1.C:17; Look at the data member name and method names: a data member name has a prefix letter (f) and has a base name X1 . The methods for getting and setting this value have names which consist of string Get/Set and the same base name. This convention of naming data fields and methods which access them allows TDataMember find this methods by itself completely automatically. To make this description complete, one should know, that names that are automatically recognized may be also: for data fields: either fXXX or fIsXXX; and for getter function GetXXX() or IsXXX() [w",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:1734,Security,access,access,1734,"mation about name of data member, its type, and comment field string. It also tries to find the TMethodCall objects responsible for getting/setting a value of it, and gives you pointers to these methods. This gives you a unique possibility to access protected and private (!) data members if only methods for doing that are defined.; These methods could either be specified in a comment field, or found out automatically by ROOT: here's an example: suppose you have a class definition: class MyClass{; private:; Float_t fX1;; ...; public:; void SetX1(Float_t x) {fX1 = x;};; Float_t GetX1() {return fX1;};; ...; }; Float_tfloat Float_tDefinition RtypesCore.h:57; xDouble_t x[n]Definition legend1.C:17; Look at the data member name and method names: a data member name has a prefix letter (f) and has a base name X1 . The methods for getting and setting this value have names which consist of string Get/Set and the same base name. This convention of naming data fields and methods which access them allows TDataMember find this methods by itself completely automatically. To make this description complete, one should know, that names that are automatically recognized may be also: for data fields: either fXXX or fIsXXX; and for getter function GetXXX() or IsXXX() [where XXX is base name].; As an example of using it let's analyse a few lines which get and set a fEditable field in TCanvas: TCanvas *c = new TCanvas(""c""); // create a canvas; TClass *cl = c->IsA(); // get its class description object.; ; TDataMember *dm = cl->GetDataMember(""fEditable""); //This is our data member; ; TMethodCall *getter = dm->GetterMethod(c); //find a method that gets value!; Long_t l; // declare a storage for this value;; ; getter->Execute(c,"""",l); // Get this Value !!!! It will appear in l !!!; ; ; TMethodCall *setter = dm->SetterMethod(c);; setter->Execute(c,""0"",); // Set Value 0 !!!; c#define c(i)Definition RSha256.hxx:101; Long_tlong Long_tDefinition RtypesCore.h:54; TCanvasThe Canvas class.Definition T",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataMember.html:10611,Security,hash,hash,10611," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTDataMember.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataMember.html
https://root.cern/doc/master/classTDataSetManager.html:3449,Availability,error,error,3449,"nst char *uri, const char *server=0);  Utility function used in various methods for user dataset upload. ;  ; virtual TMap * GetDataSets (const char *uri, UInt_t=TDataSetManager::kExport);  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; TClass * IsA () const override;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; virtual Int_t NotifyUpdate (const char *group=0, const char *user=0, const char *dspath=0, Long_t mtime=0, const char *checksum=0);  Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ;  ; virtual void ParseInitOpts (const char *opts);  Parse the opts string and set the init bits accordingly Available options: Cq: set kCheckQuota Ar: set kAllowRegister Av: set kAllowVerify Ti: set kTrustInfo Sb: set kIsSandbox Ca: set kUseCache or kDoNotUseCache The opts string may also contain additional unrelated info: in such a case the field delimited by the prefix ""opt:"" is analyzed, e.g. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; virtual Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt);  Register a dataset, perfoming quota checkings, if needed. ;  ; virtual Bool_t RemoveDataSet (const char *uri);  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, const char *opt);  Scans the d",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:6932,Availability,error,error,6932,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:7021,Availability,error,error,7021,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:7176,Availability,error,error,7176,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:7473,Availability,error,error,7473,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:12037,Availability,error,error,12037," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Bool_t CheckDataSetSrvMaps (TUrl *furl, TString &fn, TList *srvmaplist=0);  Check if the dataset server mappings apply to the url defined by 'furl'. ;  ; static Bool_t CheckStagedStatus (TFileInfo *fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager *stager, Bool_t createStag",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:27313,Availability,error,error,27313,"omma-separated list of servers to exclude from the map. ; Definition at line 1006 of file TDataSetManager.cxx. ◆ GetUserUsedMap(). virtual TMap * TDataSetManager::GetUserUsedMap ; (; ). inlineprotectedvirtual . Definition at line 71 of file TDataSetManager.h. ◆ IsA(). TClass * TDataSetManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TDataSetManagerFile.; Definition at line 158 of file TDataSetManager.h. ◆ MonitorUsedSpace(). void TDataSetManager::MonitorUsedSpace ; (; TVirtualMonitoringWriter * ; monitoring). virtual . Log info to the monitoring server. ; Definition at line 673 of file TDataSetManager.cxx. ◆ NotifyUpdate(). Int_t TDataSetManager::NotifyUpdate ; (; const char * ; group = 0, . const char * ; user = 0, . const char * ; dspath = 0, . Long_t ; mtime = 0, . const char * ; checksum = 0 . ). virtual . Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ; Reimplemented in TDataSetManagerFile.; Definition at line 773 of file TDataSetManager.cxx. ◆ operator=(). TDataSetManager & TDataSetManager::operator= ; (; const TDataSetManager & ; ). private . ◆ ParseDataSetSrvMaps(). TList * TDataSetManager::ParseDataSetSrvMaps ; (; const TString & ; srvmaps). static . Create a server mapping list from the content of 'srvmaps' Return the list (owned by the caller) or 0 if no valid info could be found) ; Definition at line 1867 of file TDataSetManager.cxx. ◆ ParseInitOpts(). void TDataSetManager::ParseInitOpts ; (; const char * ; opts). virtual . Parse the opts string and set the init bits accordingly Available options: Cq: set kCheckQuota Ar: set kAllowRegister Av: set kAllowVerify Ti: set kTrustInfo Sb: set kIsSandbox Ca: set kUseCache or kDoNotUseCache The opts string may also contain additional unrelated info: in such a case the field delimited by the prefix ""opt:"" is analyzed, e.g. ; if opts",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:30832,Availability,avail,available,30832,"files u 0 => print file name only, 1 => print full URL ; Definition at line 1043 of file TDataSetManager.cxx. ◆ PrintUsedSpace(). void TDataSetManager::PrintUsedSpace ; (; ). protected . Prints the quota. ; Definition at line 638 of file TDataSetManager.cxx. ◆ ProcessFile(). void TDataSetManager::ProcessFile ; (; TFileInfo * ; fileInfo, . Int_t ; sopt, . Bool_t ; checkstg, . Bool_t ; doall, . TFileStager * ; stager, . Bool_t ; createStager, . const char * ; stageopts, . Bool_t ; dbg, . Bool_t & ; changed, . Bool_t & ; opened . ). static . Locate, stage, or fully validate file ""fileInfo"". ; Definition at line 1560 of file TDataSetManager.cxx. ◆ ReadGroupConfig(). Bool_t TDataSetManager::ReadGroupConfig ; (; const char * ; cf = 0). protected . Read group config file 'cf'. ; If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; expects the following directives: Group definition: group <groupname> <user>+ disk quota property <groupname> diskquota <quota in GB> average filesize (to be used when the file size is not available) averagefilesize <average size>{G,g,M,m,K,k} ; Definition at line 206 of file TDataSetManager.cxx. ◆ RegisterDataSet(). Int_t TDataSetManager::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; dataSet, . const char * ; opt . ). virtual . Register a dataset, perfoming quota checkings, if needed. ; Returns 0 on success, -1 on failure ; Reimplemented in TDataSetManagerFile.; Definition at line 761 of file TDataSetManager.cxx. ◆ RemoveDataSet(). Bool_t TDataSetManager::RemoveDataSet ; (; const char * ; uri). virtual . Removes the indicated dataset. ; Reimplemented in TDataSetManagerFile.; Definition at line 430 of file TDataSetManager.cxx. ◆ ScanDataSet() [1/3]. Int_t TDataSetManager::ScanDataSet ; (; const char * ; uri, . const char * ; opts . ). Scans the dataset indicated by 'uri' following the 'opts' directives. ; The 'opts' string contains up to 4 directive fields separated by ':'; 'selection' field : A, allfiles: proce",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:31181,Availability,failure,failure,31181,"Stager * ; stager, . Bool_t ; createStager, . const char * ; stageopts, . Bool_t ; dbg, . Bool_t & ; changed, . Bool_t & ; opened . ). static . Locate, stage, or fully validate file ""fileInfo"". ; Definition at line 1560 of file TDataSetManager.cxx. ◆ ReadGroupConfig(). Bool_t TDataSetManager::ReadGroupConfig ; (; const char * ; cf = 0). protected . Read group config file 'cf'. ; If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; expects the following directives: Group definition: group <groupname> <user>+ disk quota property <groupname> diskquota <quota in GB> average filesize (to be used when the file size is not available) averagefilesize <average size>{G,g,M,m,K,k} ; Definition at line 206 of file TDataSetManager.cxx. ◆ RegisterDataSet(). Int_t TDataSetManager::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; dataSet, . const char * ; opt . ). virtual . Register a dataset, perfoming quota checkings, if needed. ; Returns 0 on success, -1 on failure ; Reimplemented in TDataSetManagerFile.; Definition at line 761 of file TDataSetManager.cxx. ◆ RemoveDataSet(). Bool_t TDataSetManager::RemoveDataSet ; (; const char * ; uri). virtual . Removes the indicated dataset. ; Reimplemented in TDataSetManagerFile.; Definition at line 430 of file TDataSetManager.cxx. ◆ ScanDataSet() [1/3]. Int_t TDataSetManager::ScanDataSet ; (; const char * ; uri, . const char * ; opts . ). Scans the dataset indicated by 'uri' following the 'opts' directives. ; The 'opts' string contains up to 4 directive fields separated by ':'; 'selection' field : A, allfiles: process all files D, staged: process only staged (on Disk) files (if 'allfiles:' is not specified the default is to process only files marked as non-staged) 'pre-action field': O, open: open the files marked as staged when processing only files marked as non-staged T, touch: open and touch the files marked as staged when processing only files marked as non-staged I, nostagedcheck: do not check the actu",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:32560,Availability,failure,failure,32560,"ta checkings, if needed. ; Returns 0 on success, -1 on failure ; Reimplemented in TDataSetManagerFile.; Definition at line 761 of file TDataSetManager.cxx. ◆ RemoveDataSet(). Bool_t TDataSetManager::RemoveDataSet ; (; const char * ; uri). virtual . Removes the indicated dataset. ; Reimplemented in TDataSetManagerFile.; Definition at line 430 of file TDataSetManager.cxx. ◆ ScanDataSet() [1/3]. Int_t TDataSetManager::ScanDataSet ; (; const char * ; uri, . const char * ; opts . ). Scans the dataset indicated by 'uri' following the 'opts' directives. ; The 'opts' string contains up to 4 directive fields separated by ':'; 'selection' field : A, allfiles: process all files D, staged: process only staged (on Disk) files (if 'allfiles:' is not specified the default is to process only files marked as non-staged) 'pre-action field': O, open: open the files marked as staged when processing only files marked as non-staged T, touch: open and touch the files marked as staged when processing only files marked as non-staged I, nostagedcheck: do not check the actual stage status on selected files; 'process' field: N, noaction: do nothing on the selected files P, fullproc: open the selected files and extract the meta information L, locateonly: only locate the selected files S, stageonly: issue a stage request for the selected files not yet staged; 'auxiliary' field V, verbose: notify the actions; Returns 0 on success, -1 if any failure occurs. ; Definition at line 497 of file TDataSetManager.cxx. ◆ ScanDataSet() [2/3]. Int_t TDataSetManager::ScanDataSet ; (; const char * ; uri, . UInt_t ; option = kReopen | kDebug . ). virtual . Scans the dataset indicated by <uri> and returns the number of missing files. ; Returns -1 if any failure occurs. For more details, see documentation of ScanDataSet(TFileCollection *dataset, const char *option) ; Reimplemented in TDataSetManagerFile.; Definition at line 539 of file TDataSetManager.cxx. ◆ ScanDataSet() [3/3]. Int_t TDataSetManager::ScanDataSet ",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:32863,Availability,failure,failure,32863,"es:' is not specified the default is to process only files marked as non-staged) 'pre-action field': O, open: open the files marked as staged when processing only files marked as non-staged T, touch: open and touch the files marked as staged when processing only files marked as non-staged I, nostagedcheck: do not check the actual stage status on selected files; 'process' field: N, noaction: do nothing on the selected files P, fullproc: open the selected files and extract the meta information L, locateonly: only locate the selected files S, stageonly: issue a stage request for the selected files not yet staged; 'auxiliary' field V, verbose: notify the actions; Returns 0 on success, -1 if any failure occurs. ; Definition at line 497 of file TDataSetManager.cxx. ◆ ScanDataSet() [2/3]. Int_t TDataSetManager::ScanDataSet ; (; const char * ; uri, . UInt_t ; option = kReopen | kDebug . ). virtual . Scans the dataset indicated by <uri> and returns the number of missing files. ; Returns -1 if any failure occurs. For more details, see documentation of ScanDataSet(TFileCollection *dataset, const char *option) ; Reimplemented in TDataSetManagerFile.; Definition at line 539 of file TDataSetManager.cxx. ◆ ScanDataSet() [3/3]. Int_t TDataSetManager::ScanDataSet ; (; TFileCollection * ; dataset, . Int_t ; fopt, . Int_t ; sopt = 0, . Int_t ; ropt = 0, . Bool_t ; dbg = kFALSE, . Int_t * ; touched = 0, . Int_t * ; opened = 0, . Int_t * ; disappeared = 0, . TList * ; flist = 0, . Long64_t ; avgsz = -1, . const char * ; mss = 0, . Int_t ; maxfiles = -1, . const char * ; stageopts = 0 . ). static . Go through the files in the specified dataset, selecting files according to 'fopt' and doing on these files the actions described by 'sopt'. ; If required, the information in 'dataset' is updated.; The int fopt controls which files have to be processed (or added to the list if ropt is 1 - see below); 'fopt' is defined in term of csopt and fsopt: fopt = sign(fsopt) * csopt * 100 + fsopt where '",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:3382,Deployability,update,updated,3382,"nst char *uri, const char *server=0);  Utility function used in various methods for user dataset upload. ;  ; virtual TMap * GetDataSets (const char *uri, UInt_t=TDataSetManager::kExport);  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; TClass * IsA () const override;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; virtual Int_t NotifyUpdate (const char *group=0, const char *user=0, const char *dspath=0, Long_t mtime=0, const char *checksum=0);  Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ;  ; virtual void ParseInitOpts (const char *opts);  Parse the opts string and set the init bits accordingly Available options: Cq: set kCheckQuota Ar: set kAllowRegister Av: set kAllowVerify Ti: set kTrustInfo Sb: set kIsSandbox Ca: set kUseCache or kDoNotUseCache The opts string may also contain additional unrelated info: in such a case the field delimited by the prefix ""opt:"" is analyzed, e.g. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; virtual Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt);  Register a dataset, perfoming quota checkings, if needed. ;  ; virtual Bool_t RemoveDataSet (const char *uri);  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, const char *opt);  Scans the d",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:16018,Deployability,update,updates,16018,"Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ; virtual void UpdateUsedSpace ();  updates the used space maps ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  . Protected Attributes; Long64_t fAvgFileSize;  ; TUri fBase;  ; TString fCommonGroup;  ; TString fCommonUser;  ; TString fGroup;  ; TString fGroupConfigFile;  ; TMap fGroupQuota;  ; TMap fGroupUsed;  ; Long_t fMTimeGroupConfig;  ; Int_t fNDisappearedFiles;  ; Int_t fNOpenedFiles;  ; Int_t fNTouchedFiles;  ; TString fUser;  ; TMap fUserUsed;  . Static Protected Attributes; static TString fgCommonDataSetTag = ""COMMON"";  ; static TList * fgDataSetSrvMaps = 0;  . Private Member Functions;  TDataSetManager (const TDataSetManager &);  ; TDataSetManager & operator= (const TDataSetManag",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:23990,Deployability,update,update,23990,"aSetManager.h. ◆ GetDataSet(). TFileCollection * TDataSetManager::GetDataSet ; (; const char * ; uri, . const char * ; server = 0 . ). virtual . Utility function used in various methods for user dataset upload. ; Reimplemented in TDataSetManagerFile.; Definition at line 421 of file TDataSetManager.cxx. ◆ GetDataSets(). TMap * TDataSetManager::GetDataSets ; (; const char * ; uri, . UInt_t ; = TDataSetManager::kExport . ). virtual . Returns all datasets for the <group> and <user> specified by <uri>. ; If <user> is 0, it returns all datasets for the given <group>. If <group> is 0, it returns all datasets. The returned TMap contains: <group> --> <map of users> --> <map of datasets> --> <dataset> (TFileCollection); The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kShowDefault a default selection is shown that include the ones from the current user, the ones from the group and the common ones kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Reimplemented in TDataSetManagerFile.; Definition at line 464 of file TDataSetManager.cxx. ◆ GetDataSetSrvMaps(). TList * TDataSetManager::GetDataSetSrvMaps ; (; ). static . Static getter for server mapping list. ; Definition at line 1919 of file TDataSetManager.cxx. ◆ GetGroupQuota(). Long64_t TDataSetManager::GetGroupQuota ; (; const char * ; group). virtual . returns the quota a group is allowed to have ; Definition at line 734 of file TDataSetManager.cxx. ◆ GetGroupQuotaMap(). virtual TMap * TDataSetManager::GetGroupQuotaMap ; (; ). inlinevirtual . Definition at line 117 of file TDataSetManager.h. ◆ GetGroupUsed(). Long64_t TDataSetManager::GetGroupUsed ; (; const char * ; group). virtual . Returns the used space of that group. ; Definition at line 714 of file TDataSetManager.cxx. ◆ GetGroupUsedMap(). v",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:27246,Deployability,update,updated,27246,"omma-separated list of servers to exclude from the map. ; Definition at line 1006 of file TDataSetManager.cxx. ◆ GetUserUsedMap(). virtual TMap * TDataSetManager::GetUserUsedMap ; (; ). inlineprotectedvirtual . Definition at line 71 of file TDataSetManager.h. ◆ IsA(). TClass * TDataSetManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TDataSetManagerFile.; Definition at line 158 of file TDataSetManager.h. ◆ MonitorUsedSpace(). void TDataSetManager::MonitorUsedSpace ; (; TVirtualMonitoringWriter * ; monitoring). virtual . Log info to the monitoring server. ; Definition at line 673 of file TDataSetManager.cxx. ◆ NotifyUpdate(). Int_t TDataSetManager::NotifyUpdate ; (; const char * ; group = 0, . const char * ; user = 0, . const char * ; dspath = 0, . Long_t ; mtime = 0, . const char * ; checksum = 0 . ). virtual . Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ; Reimplemented in TDataSetManagerFile.; Definition at line 773 of file TDataSetManager.cxx. ◆ operator=(). TDataSetManager & TDataSetManager::operator= ; (; const TDataSetManager & ; ). private . ◆ ParseDataSetSrvMaps(). TList * TDataSetManager::ParseDataSetSrvMaps ; (; const TString & ; srvmaps). static . Create a server mapping list from the content of 'srvmaps' Return the list (owned by the caller) or 0 if no valid info could be found) ; Definition at line 1867 of file TDataSetManager.cxx. ◆ ParseInitOpts(). void TDataSetManager::ParseInitOpts ; (; const char * ; opts). virtual . Parse the opts string and set the init bits accordingly Available options: Cq: set kCheckQuota Ar: set kAllowRegister Av: set kAllowVerify Ti: set kTrustInfo Sb: set kIsSandbox Ca: set kUseCache or kDoNotUseCache The opts string may also contain additional unrelated info: in such a case the field delimited by the prefix ""opt:"" is analyzed, e.g. ; if opts",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:33652,Deployability,update,updated,33652,"ScanDataSet() [2/3]. Int_t TDataSetManager::ScanDataSet ; (; const char * ; uri, . UInt_t ; option = kReopen | kDebug . ). virtual . Scans the dataset indicated by <uri> and returns the number of missing files. ; Returns -1 if any failure occurs. For more details, see documentation of ScanDataSet(TFileCollection *dataset, const char *option) ; Reimplemented in TDataSetManagerFile.; Definition at line 539 of file TDataSetManager.cxx. ◆ ScanDataSet() [3/3]. Int_t TDataSetManager::ScanDataSet ; (; TFileCollection * ; dataset, . Int_t ; fopt, . Int_t ; sopt = 0, . Int_t ; ropt = 0, . Bool_t ; dbg = kFALSE, . Int_t * ; touched = 0, . Int_t * ; opened = 0, . Int_t * ; disappeared = 0, . TList * ; flist = 0, . Long64_t ; avgsz = -1, . const char * ; mss = 0, . Int_t ; maxfiles = -1, . const char * ; stageopts = 0 . ). static . Go through the files in the specified dataset, selecting files according to 'fopt' and doing on these files the actions described by 'sopt'. ; If required, the information in 'dataset' is updated.; The int fopt controls which files have to be processed (or added to the list if ropt is 1 - see below); 'fopt' is defined in term of csopt and fsopt: fopt = sign(fsopt) * csopt * 100 + fsopt where 'fsopt' controls the actual selection -1 all files in the dataset 0 process only files marked as 'non-staged' >=1 as 0 but files that are marked 'staged' are open >=2 as 1 but files that are marked 'staged' are touched 10 process only files marked as 'staged'; files marked as 'non-staged' are ignored and 'csopt' controls if an actual check on the staged status (via TFileStager) is done 0 check that the file is staged using TFileStager 1 do not hard check the staged status (example: use fopt = -101 to check the staged status of all the files, or fopt = 110 to re-check the stage status of all the files marked as staged); If 'dbg' is true, some information about the ongoing operations is reguraly printed; this can be useful when processing very large datasets, an op",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:35462,Deployability,update,update,35462,"files marked as staged); If 'dbg' is true, some information about the ongoing operations is reguraly printed; this can be useful when processing very large datasets, an operation which can take a very long time.; The int 'sopt' controls what is done on the selected files (this is effective only if ropt is 0 or 2 - see below): -1 no action (fopt = 2 and sopt = -1 touches all staged files) 0 do the full process: open the files and fill the meta-information in the TFileInfo object, including the end-point URL 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate which is must faster of an TFile::Open) 2 issue a stage request on the files; The int 'ropt' controls which actions are performed: 0 do the full process: get list of files to process and process them 1 get the list of files to be scanned and return it in flist 2 process the files in flist (according to sopt) When defined flist is under the responsability the caller.; If avgsz > 0 it is used for the final update of the dataset global counters.; If 'mss' is defined use it to initialize the stager (instead of the Url in the TFileInfo objects); If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2 all files marked as 'staged' are still open or touched); Return code 1 dataset was not changed 2 dataset was changed; The number of touched, opened and disappeared files are returned in the respective variables, if these are defined. ; Definition at line 1224 of file TDataSetManager.cxx. ◆ ScanFile(). Int_t TDataSetManager::ScanFile ; (; TFileInfo * ; fileinfo, . Bool_t ; dbg . ). static . Open the file described by 'fileinfo' to extract the relevant meta-information. ; Return 0 if OK, -2 if the file cannot be open, -1 if it is corrupted ; Definition at line 1654 of file TDataSetManager.cxx. ◆ SetScanCounters(). void TDataSetManager::SetScanCounters ; (; Int_t ; t = -1, . Int_t ; o = -1, . Int_t ; d = -1 . ). Update scan counters. ; Definition at line 1981 o",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:37708,Deployability,update,update,37708,"char * ; uri = ""*"", . const char * ; opt = """" . ). virtual . Prints formatted information about the dataset 'uri'. ; The type and format of output is driven by 'opt':. opt = ""server:srv1[,srv2[,srv3[,...]]]"" Print info about the subsets of 'uri' on servers srv1, srv2, ...; opt = ""servers[:exclude:srv1[,srv2[,srv3[,...]]]]"" Print info about the subsets of 'uri' on all servers, except the ones in the exclude list srv1, srv2, ...; opt = <any> Print info about all datasets matching 'uri'. If 'opt' contains 'full:' the list of files in the datasets are also printed. In case 3. this is enabled only if 'uri' matches a single dataset.; In case 3, if 'opt' contains 'full:' the list of files in the datasets are also printed. 'forcescan:' the dataset are open to get the information; otherwise the pre-processed information is used. 'noheader:' the labelling header is not printed; usefull when to chain several printouts 'noupdate:' do not update the cache (which may be slow on very remote servers) 'refresh:' refresh the information (requires appropriate credentials; typically it can be done only for owned datasets) ; Definition at line 1098 of file TDataSetManager.cxx. ◆ ShowQuota(). void TDataSetManager::ShowQuota ; (; const char * ; opt). virtual . Display quota information. ; Definition at line 585 of file TDataSetManager.cxx. ◆ Streamer(). void TDataSetManager::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TDataSetManagerFile. ◆ StreamerNVirtual(). void TDataSetManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 158 of file TDataSetManager.h. ◆ ToBytes(). Long64_t TDataSetManager::ToBytes ; (; const char * ; size = 0). staticprotected . Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ; Returns -1 if the format is wrong",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:38911,Deployability,update,updates,38911," ShowQuota(). void TDataSetManager::ShowQuota ; (; const char * ; opt). virtual . Display quota information. ; Definition at line 585 of file TDataSetManager.cxx. ◆ Streamer(). void TDataSetManager::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TDataSetManagerFile. ◆ StreamerNVirtual(). void TDataSetManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 158 of file TDataSetManager.h. ◆ ToBytes(). Long64_t TDataSetManager::ToBytes ; (; const char * ; size = 0). staticprotected . Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ; Returns -1 if the format is wrong. ; Definition at line 387 of file TDataSetManager.cxx. ◆ UpdateUsedSpace(). void TDataSetManager::UpdateUsedSpace ; (; ). protectedvirtual . updates the used space maps ; Reimplemented in TDataSetManagerFile.; Definition at line 752 of file TDataSetManager.cxx. Member Data Documentation. ◆ fAvgFileSize. Long64_t TDataSetManager::fAvgFileSize. protected . Definition at line 56 of file TDataSetManager.h. ◆ fBase. TUri TDataSetManager::fBase. protected . Definition at line 50 of file TDataSetManager.h. ◆ fCommonGroup. TString TDataSetManager::fCommonGroup. protected . Definition at line 48 of file TDataSetManager.h. ◆ fCommonUser. TString TDataSetManager::fCommonUser. protected . Definition at line 47 of file TDataSetManager.h. ◆ fgCommonDataSetTag. TString TDataSetManager::fgCommonDataSetTag = ""COMMON"". staticprotected . Definition at line 65 of file TDataSetManager.h. ◆ fgDataSetSrvMaps. TList * TDataSetManager::fgDataSetSrvMaps = 0. staticprotected . Definition at line 67 of file TDataSetManager.h. ◆ fGroup. TString TDataSetManager::fGroup. protected . Definition at line 45 of file TDataSetManager.h. ◆ fGroupConfigFile. TString TDataSetManager::fGroupConfi",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:3129,Energy Efficiency,monitor,monitoring,3129," () override;  Destructor. ;  ; virtual Int_t ClearCache (const char *uri);  Clear cached information matching uri. ;  ; virtual Bool_t ExistsDataSet (const char *uri);  Checks if the indicated dataset exits. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual TFileCollection * GetDataSet (const char *uri, const char *server=0);  Utility function used in various methods for user dataset upload. ;  ; virtual TMap * GetDataSets (const char *uri, UInt_t=TDataSetManager::kExport);  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; TClass * IsA () const override;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; virtual Int_t NotifyUpdate (const char *group=0, const char *user=0, const char *dspath=0, Long_t mtime=0, const char *checksum=0);  Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ;  ; virtual void ParseInitOpts (const char *opts);  Parse the opts string and set the init bits accordingly Available options: Cq: set kCheckQuota Ar: set kAllowRegister Av: set kAllowVerify Ti: set kTrustInfo Sb: set kIsSandbox Ca: set kUseCache or kDoNotUseCache The opts string may also contain additional unrelated info: in such a case the field delimited by the prefix ""opt:"" is analyzed, e.g. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; virtual ",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:3159,Energy Efficiency,monitor,monitoring,3159," () override;  Destructor. ;  ; virtual Int_t ClearCache (const char *uri);  Clear cached information matching uri. ;  ; virtual Bool_t ExistsDataSet (const char *uri);  Checks if the indicated dataset exits. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual TFileCollection * GetDataSet (const char *uri, const char *server=0);  Utility function used in various methods for user dataset upload. ;  ; virtual TMap * GetDataSets (const char *uri, UInt_t=TDataSetManager::kExport);  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; TClass * IsA () const override;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; virtual Int_t NotifyUpdate (const char *group=0, const char *user=0, const char *dspath=0, Long_t mtime=0, const char *checksum=0);  Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ;  ; virtual void ParseInitOpts (const char *opts);  Parse the opts string and set the init bits accordingly Available options: Cq: set kCheckQuota Ar: set kAllowRegister Av: set kAllowVerify Ti: set kTrustInfo Sb: set kIsSandbox Ca: set kUseCache or kDoNotUseCache The opts string may also contain additional unrelated info: in such a case the field delimited by the prefix ""opt:"" is analyzed, e.g. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; virtual ",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:26860,Energy Efficiency,monitor,monitoring,26860,"ts(). TMap * TDataSetManager::GetSubDataSets ; (; const char * ; ds, . const char * ; exclude . ). virtual . Partition dataset 'ds' accordingly to the servers. ; The returned TMap contains: <server> --> <subdataset> (TFileCollection) where <subdataset> is the subset of 'ds' on <server> The partitioning is done using all the URLs in the TFileInfo's, so the resulting datasets are not mutually exclusive. The string 'exclude' contains a comma-separated list of servers to exclude from the map. ; Definition at line 1006 of file TDataSetManager.cxx. ◆ GetUserUsedMap(). virtual TMap * TDataSetManager::GetUserUsedMap ; (; ). inlineprotectedvirtual . Definition at line 71 of file TDataSetManager.h. ◆ IsA(). TClass * TDataSetManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TDataSetManagerFile.; Definition at line 158 of file TDataSetManager.h. ◆ MonitorUsedSpace(). void TDataSetManager::MonitorUsedSpace ; (; TVirtualMonitoringWriter * ; monitoring). virtual . Log info to the monitoring server. ; Definition at line 673 of file TDataSetManager.cxx. ◆ NotifyUpdate(). Int_t TDataSetManager::NotifyUpdate ; (; const char * ; group = 0, . const char * ; user = 0, . const char * ; dspath = 0, . Long_t ; mtime = 0, . const char * ; checksum = 0 . ). virtual . Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ; Reimplemented in TDataSetManagerFile.; Definition at line 773 of file TDataSetManager.cxx. ◆ operator=(). TDataSetManager & TDataSetManager::operator= ; (; const TDataSetManager & ; ). private . ◆ ParseDataSetSrvMaps(). TList * TDataSetManager::ParseDataSetSrvMaps ; (; const TString & ; srvmaps). static . Create a server mapping list from the content of 'srvmaps' Return the list (owned by the caller) or 0 if no valid info could be found) ; Definition at line 1867 of file TDataSetManager.cxx. ◆ ParseIni",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:26899,Energy Efficiency,monitor,monitoring,26899," const char * ; exclude . ). virtual . Partition dataset 'ds' accordingly to the servers. ; The returned TMap contains: <server> --> <subdataset> (TFileCollection) where <subdataset> is the subset of 'ds' on <server> The partitioning is done using all the URLs in the TFileInfo's, so the resulting datasets are not mutually exclusive. The string 'exclude' contains a comma-separated list of servers to exclude from the map. ; Definition at line 1006 of file TDataSetManager.cxx. ◆ GetUserUsedMap(). virtual TMap * TDataSetManager::GetUserUsedMap ; (; ). inlineprotectedvirtual . Definition at line 71 of file TDataSetManager.h. ◆ IsA(). TClass * TDataSetManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TDataSetManagerFile.; Definition at line 158 of file TDataSetManager.h. ◆ MonitorUsedSpace(). void TDataSetManager::MonitorUsedSpace ; (; TVirtualMonitoringWriter * ; monitoring). virtual . Log info to the monitoring server. ; Definition at line 673 of file TDataSetManager.cxx. ◆ NotifyUpdate(). Int_t TDataSetManager::NotifyUpdate ; (; const char * ; group = 0, . const char * ; user = 0, . const char * ; dspath = 0, . Long_t ; mtime = 0, . const char * ; checksum = 0 . ). virtual . Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ; Reimplemented in TDataSetManagerFile.; Definition at line 773 of file TDataSetManager.cxx. ◆ operator=(). TDataSetManager & TDataSetManager::operator= ; (; const TDataSetManager & ; ). private . ◆ ParseDataSetSrvMaps(). TList * TDataSetManager::ParseDataSetSrvMaps ; (; const TString & ; srvmaps). static . Create a server mapping list from the content of 'srvmaps' Return the list (owned by the caller) or 0 if no valid info could be found) ; Definition at line 1867 of file TDataSetManager.cxx. ◆ ParseInitOpts(). void TDataSetManager::ParseInitOpts ; (; const char * ; opts).",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:6938,Integrability,message,message,6938,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:7479,Integrability,message,message,7479,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:8681,Integrability,message,message,8681,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:12043,Integrability,message,message,12043," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Bool_t CheckDataSetSrvMaps (TUrl *furl, TString &fn, TList *srvmaplist=0);  Check if the dataset server mappings apply to the url defined by 'furl'. ;  ; static Bool_t CheckStagedStatus (TFileInfo *fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager *stager, Bool_t createStag",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:12416,Integrability,message,message,12416," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Bool_t CheckDataSetSrvMaps (TUrl *furl, TString &fn, TList *srvmaplist=0);  Check if the dataset server mappings apply to the url defined by 'furl'. ;  ; static Bool_t CheckStagedStatus (TFileInfo *fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager *stager, Bool_t createStager, Bool_t dbg, Bool_t &changed, Bool_t &touched, Bool_t &disappeared);  Check stage status of the file described by ""fileInfo"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TString CreateUri (const char *dsGroup=0, const char *dsUser=0, const char *dsName=0, const char *dsTree=0);  Creates U",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:1331,Modifiability,inherit,inherited,1331,"ager Class Reference. . Definition at line 38 of file TDataSetManager.h. Public Types; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 )); , kTrustInfo = (1ULL << ( 18 )); , ;   kIsSandbox = (1ULL << ( 19 )); , kUseCache = (1ULL << ( 20 )); , kDoNotUseCache = (1ULL << ( 21 )). };  ; enum  EDataSetWorkOpts { ;   kDebug = 0x1; , kShowDefault = 0x2; , kPrint = 0x4; , kExport = 0x8; , ;   kQuotaUpdate = 0x10; , kSetDefaultTree = 0x20; , kForceScan = 0x40; , kNoHeaderPrint = 0x80; , ;   kReopen = 0x100; , kTouch = 0x200; , kMaxFiles = 0x400; , kReadShort = 0x800; , ;   kFileMustExist = 0x1000; , kNoAction = 0x2000; , kLocateOnly = 0x4000; , kStageOnly = 0x8000; , ;   kNoCacheUpdate = 0x10000; , kRefreshLs = 0x20000; , kList = 0x40000; , kAllFiles = 0x80000; , ;   kStagedFiles = 0x100000; , kNoStagedCheck = 0x200000. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDataSetManager (const char *group=0, const char *user=0, const char *options=0);  Main constructor. ;  ;  ~TDataSetManager () override;  Destructor. ;  ; virtual Int_t ClearCache (const char *uri);  Clear cached information matching uri. ;  ; virtual Bool_t ExistsDataSet (const char *uri);  Checks if the indicated dataset exits. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual TFileCollection * GetDataSet (const",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:5171,Modifiability,inherit,inherited,5171,"lection *dataSet, const char *opt);  Register a dataset, perfoming quota checkings, if needed. ;  ; virtual Bool_t RemoveDataSet (const char *uri);  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, const char *opt);  Scans the dataset indicated by 'uri' following the 'opts' directives. ;  ; virtual Int_t ScanDataSet (const char *uri, UInt_t option=kReopen|kDebug);  Scans the dataset indicated by <uri> and returns the number of missing files. ;  ; void SetScanCounters (Int_t t=-1, Int_t o=-1, Int_t d=-1);  Update scan counters. ;  ; virtual Int_t ShowCache (const char *uri);  Show cached information matching uri. ;  ; virtual void ShowDataSets (const char *uri=""*"", const char *opt="""");  Prints formatted information about the dataset 'uri'. ;  ; virtual void ShowQuota (const char *opt);  Display quota information. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:6568,Modifiability,inherit,inheritance,6568,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:8779,Modifiability,inherit,inherits,8779,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:8896,Modifiability,inherit,inherits,8896,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:14892,Modifiability,inherit,inherited,14892,"caller) or 0 if no valid info could be found) ;  ; static void ProcessFile (TFileInfo *fileInfo, Int_t sopt, Bool_t checkstg, Bool_t doall, TFileStager *stager, Bool_t createStager, const char *stageopts, Bool_t dbg, Bool_t &changed, Bool_t &opened);  Locate, stage, or fully validate file ""fileInfo"". ;  ; static Int_t ScanDataSet (TFileCollection *dataset, Int_t fopt, Int_t sopt=0, Int_t ropt=0, Bool_t dbg=kFALSE, Int_t *touched=0, Int_t *opened=0, Int_t *disappeared=0, TList *flist=0, Long64_t avgsz=-1, const char *mss=0, Int_t maxfiles=-1, const char *stageopts=0);  Go through the files in the specified dataset, selecting files according to 'fopt' and doing on these files the actions described by 'sopt'. ;  ; static Int_t ScanFile (TFileInfo *fileinfo, Bool_t notify);  Open the file described by 'fileinfo' to extract the relevant meta-information. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ; virtual vo",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:15961,Modifiability,config,config,15961,");  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ; virtual void UpdateUsedSpace ();  updates the used space maps ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  . Protected Attributes; Long64_t fAvgFileSize;  ; TUri fBase;  ; TString fCommonGroup;  ; TString fCommonUser;  ; TString fGroup;  ; TString fGroupConfigFile;  ; TMap fGroupQuota;  ; TMap fGroupUsed;  ; Long_t fMTimeGroupConfig;  ; Int_t fNDisappearedFiles;  ; Int_t fNOpenedFiles;  ; Int_t fNTouchedFiles;  ; TString fUser;  ; TMap fUserUsed;  . Static Protected Attributes; static TString fgCommonDataSetTag = ""COMMON",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:16079,Modifiability,inherit,inherited,16079,"Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ; virtual void UpdateUsedSpace ();  updates the used space maps ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  . Protected Attributes; Long64_t fAvgFileSize;  ; TUri fBase;  ; TString fCommonGroup;  ; TString fCommonUser;  ; TString fGroup;  ; TString fGroupConfigFile;  ; TMap fGroupQuota;  ; TMap fGroupUsed;  ; Long_t fMTimeGroupConfig;  ; Int_t fNDisappearedFiles;  ; Int_t fNOpenedFiles;  ; Int_t fNTouchedFiles;  ; TString fUser;  ; TMap fUserUsed;  . Static Protected Attributes; static TString fgCommonDataSetTag = ""COMMON"";  ; static TList * fgDataSetSrvMaps = 0;  . Private Member Functions;  TDataSetManager (const TDataSetManager &);  ; TDataSetManager & operator= (const TDataSetManag",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:17163,Modifiability,inherit,inherited,17163," va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  . Protected Attributes; Long64_t fAvgFileSize;  ; TUri fBase;  ; TString fCommonGroup;  ; TString fCommonUser;  ; TString fGroup;  ; TString fGroupConfigFile;  ; TMap fGroupQuota;  ; TMap fGroupUsed;  ; Long_t fMTimeGroupConfig;  ; Int_t fNDisappearedFiles;  ; Int_t fNOpenedFiles;  ; Int_t fNTouchedFiles;  ; TString fUser;  ; TMap fUserUsed;  . Static Protected Attributes; static TString fgCommonDataSetTag = ""COMMON"";  ; static TList * fgDataSetSrvMaps = 0;  . Private Member Functions;  TDataSetManager (const TDataSetManager &);  ; TDataSetManager & operator= (const TDataSetManager &);  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDataSetManager.h>. Inheritance diagram for TDataSetManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EDataSetStatusBits. enum TDataSetManager::EDataSetStatusBits. EnumeratorkCheckQuota ; kAllowRegister ; kAllowVerify ; kTrustInfo ; kIsSandbox ; kUseCache ; kDoNotUseCache . Definition at line 84 of file TDataSetManager.h. ◆ EDataSetWorkOpts. enum TDataSetManager::EDataSetWorkOpts. EnumeratorkDebug ; kShowDefault ; kPrint ; kExport ; kQuotaUpdate ; kSetDefaultTree ; kForceScan ; kNoHeaderPrint ; kReopen ; kTouch ; kMaxFiles ; kReadShort ; kFileMustExist ; kNoAction ; kLocateOnly ; kStageOnly ; kNoCacheUpdate ; kRefreshLs ; kList ; kAllFiles ; kStagedFiles ; kNoStagedCheck . Definition at line 94 of file TDataSetManager.h. Constructor & Destructor Documentation. ◆ TDataSetManager() [1/2]. TDataSetManager::TDataSetManager ; (; co",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:30551,Modifiability,config,config,30551,"er::PrintDataSet ; (; TFileCollection * ; fc, . Int_t ; popt = 0 . ). protected . Formatted printout of the content of TFileCollection 'fc'. ; Options in the form popt = u * 10 + f f 0 => header only, 1 => header + files when printing files u 0 => print file name only, 1 => print full URL ; Definition at line 1043 of file TDataSetManager.cxx. ◆ PrintUsedSpace(). void TDataSetManager::PrintUsedSpace ; (; ). protected . Prints the quota. ; Definition at line 638 of file TDataSetManager.cxx. ◆ ProcessFile(). void TDataSetManager::ProcessFile ; (; TFileInfo * ; fileInfo, . Int_t ; sopt, . Bool_t ; checkstg, . Bool_t ; doall, . TFileStager * ; stager, . Bool_t ; createStager, . const char * ; stageopts, . Bool_t ; dbg, . Bool_t & ; changed, . Bool_t & ; opened . ). static . Locate, stage, or fully validate file ""fileInfo"". ; Definition at line 1560 of file TDataSetManager.cxx. ◆ ReadGroupConfig(). Bool_t TDataSetManager::ReadGroupConfig ; (; const char * ; cf = 0). protected . Read group config file 'cf'. ; If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; expects the following directives: Group definition: group <groupname> <user>+ disk quota property <groupname> diskquota <quota in GB> average filesize (to be used when the file size is not available) averagefilesize <average size>{G,g,M,m,K,k} ; Definition at line 206 of file TDataSetManager.cxx. ◆ RegisterDataSet(). Int_t TDataSetManager::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; dataSet, . const char * ; opt . ). virtual . Register a dataset, perfoming quota checkings, if needed. ; Returns 0 on success, -1 on failure ; Reimplemented in TDataSetManagerFile.; Definition at line 761 of file TDataSetManager.cxx. ◆ RemoveDataSet(). Bool_t TDataSetManager::RemoveDataSet ; (; const char * ; uri). virtual . Removes the indicated dataset. ; Reimplemented in TDataSetManagerFile.; Definition at line 430 of file TDataSetManager.cxx. ◆ ScanDataSet() [1/3]. Int_t TDataSetManager::ScanDataS",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:35894,Modifiability,variab,variables,35894," the selected files (this is effective only if ropt is 0 or 2 - see below): -1 no action (fopt = 2 and sopt = -1 touches all staged files) 0 do the full process: open the files and fill the meta-information in the TFileInfo object, including the end-point URL 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate which is must faster of an TFile::Open) 2 issue a stage request on the files; The int 'ropt' controls which actions are performed: 0 do the full process: get list of files to process and process them 1 get the list of files to be scanned and return it in flist 2 process the files in flist (according to sopt) When defined flist is under the responsability the caller.; If avgsz > 0 it is used for the final update of the dataset global counters.; If 'mss' is defined use it to initialize the stager (instead of the Url in the TFileInfo objects); If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2 all files marked as 'staged' are still open or touched); Return code 1 dataset was not changed 2 dataset was changed; The number of touched, opened and disappeared files are returned in the respective variables, if these are defined. ; Definition at line 1224 of file TDataSetManager.cxx. ◆ ScanFile(). Int_t TDataSetManager::ScanFile ; (; TFileInfo * ; fileinfo, . Bool_t ; dbg . ). static . Open the file described by 'fileinfo' to extract the relevant meta-information. ; Return 0 if OK, -2 if the file cannot be open, -1 if it is corrupted ; Definition at line 1654 of file TDataSetManager.cxx. ◆ SetScanCounters(). void TDataSetManager::SetScanCounters ; (; Int_t ; t = -1, . Int_t ; o = -1, . Int_t ; d = -1 . ). Update scan counters. ; Definition at line 1981 of file TDataSetManager.cxx. ◆ ShowCache(). Int_t TDataSetManager::ShowCache ; (; const char * ; uri). virtual . Show cached information matching uri. ; Reimplemented in TDataSetManagerFile.; Definition at line 795 of file TDataSetManager.cxx. ◆ ShowDat",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:2187,Performance,cache,cached,2187,"= 0x10000; , kRefreshLs = 0x20000; , kList = 0x40000; , kAllFiles = 0x80000; , ;   kStagedFiles = 0x100000; , kNoStagedCheck = 0x200000. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDataSetManager (const char *group=0, const char *user=0, const char *options=0);  Main constructor. ;  ;  ~TDataSetManager () override;  Destructor. ;  ; virtual Int_t ClearCache (const char *uri);  Clear cached information matching uri. ;  ; virtual Bool_t ExistsDataSet (const char *uri);  Checks if the indicated dataset exits. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual TFileCollection * GetDataSet (const char *uri, const char *server=0);  Utility function used in various methods for user dataset upload. ;  ; virtual TMap * GetDataSets (const char *uri, UInt_t=TDataSetManager::kExport);  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; TClass * IsA () const override;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring serve",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:4762,Performance,cache,cached,4762,"tain additional unrelated info: in such a case the field delimited by the prefix ""opt:"" is analyzed, e.g. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; virtual Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt);  Register a dataset, perfoming quota checkings, if needed. ;  ; virtual Bool_t RemoveDataSet (const char *uri);  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, const char *opt);  Scans the dataset indicated by 'uri' following the 'opts' directives. ;  ; virtual Int_t ScanDataSet (const char *uri, UInt_t option=kReopen|kDebug);  Scans the dataset indicated by <uri> and returns the number of missing files. ;  ; void SetScanCounters (Int_t t=-1, Int_t o=-1, Int_t d=-1);  Update scan counters. ;  ; virtual Int_t ShowCache (const char *uri);  Show cached information matching uri. ;  ; virtual void ShowDataSets (const char *uri=""*"", const char *opt="""");  Prints formatted information about the dataset 'uri'. ;  ; virtual void ShowQuota (const char *opt);  Display quota information. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a ",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:21408,Performance,cache,cached,21408,"ge datasets, an operation which can take a very long time.; If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2 all files marked as 'staged' are still open or touched); Return code kTRUE the file appears newly staged kFALSE otherwise; changed is true if the fileinfo is modified touched is true if the file is open and read disappeared is true if the file is marked staged but actually not staged ; Definition at line 1414 of file TDataSetManager.cxx. ◆ Class(). static TClass * TDataSetManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 158 of file TDataSetManager.h. ◆ ClearCache(). Int_t TDataSetManager::ClearCache ; (; const char * ; uri). virtual . Clear cached information matching uri. ; Reimplemented in TDataSetManagerFile.; Definition at line 786 of file TDataSetManager.cxx. ◆ CreateUri(). TString TDataSetManager::CreateUri ; (; const char * ; dsGroup = 0, . const char * ; dsUser = 0, . const char * ; dsName = 0, . const char * ; dsTree = 0 . ). static . Creates URI for the dataset manger in the form '[[/dsGroup/]dsUser/]dsName[#dsObjPath]', The optional dsObjPath can be in the form [subdir/]objname]'. ; Definition at line 805 of file TDataSetManager.cxx. ◆ DeclFileName(). static const char * TDataSetManager::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 158 of file TDataSetManager.h. ◆ ExistsDataSet(). Bool_t TDataSetManager::ExistsDataSet ; (; const char * ; uri). virtual . Checks if the indicated dataset exits. ; Reimplemented in TDataSetManagerFile.; Definition at line 439 of file TDataSetManager.cxx. ◆ FillMetaData(). Int_t TDataSetManager::FillMetaData ; (; TFileInfo * ; f",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:35174,Performance,perform,performed,35174,"re marked 'staged' are touched 10 process only files marked as 'staged'; files marked as 'non-staged' are ignored and 'csopt' controls if an actual check on the staged status (via TFileStager) is done 0 check that the file is staged using TFileStager 1 do not hard check the staged status (example: use fopt = -101 to check the staged status of all the files, or fopt = 110 to re-check the stage status of all the files marked as staged); If 'dbg' is true, some information about the ongoing operations is reguraly printed; this can be useful when processing very large datasets, an operation which can take a very long time.; The int 'sopt' controls what is done on the selected files (this is effective only if ropt is 0 or 2 - see below): -1 no action (fopt = 2 and sopt = -1 touches all staged files) 0 do the full process: open the files and fill the meta-information in the TFileInfo object, including the end-point URL 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate which is must faster of an TFile::Open) 2 issue a stage request on the files; The int 'ropt' controls which actions are performed: 0 do the full process: get list of files to process and process them 1 get the list of files to be scanned and return it in flist 2 process the files in flist (according to sopt) When defined flist is under the responsability the caller.; If avgsz > 0 it is used for the final update of the dataset global counters.; If 'mss' is defined use it to initialize the stager (instead of the Url in the TFileInfo objects); If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2 all files marked as 'staged' are still open or touched); Return code 1 dataset was not changed 2 dataset was changed; The number of touched, opened and disappeared files are returned in the respective variables, if these are defined. ; Definition at line 1224 of file TDataSetManager.cxx. ◆ ScanFile(). Int_t TDataSetManager::ScanFile ; (; TFileInfo * ; ",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:36578,Performance,cache,cached,36578,"objects); If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2 all files marked as 'staged' are still open or touched); Return code 1 dataset was not changed 2 dataset was changed; The number of touched, opened and disappeared files are returned in the respective variables, if these are defined. ; Definition at line 1224 of file TDataSetManager.cxx. ◆ ScanFile(). Int_t TDataSetManager::ScanFile ; (; TFileInfo * ; fileinfo, . Bool_t ; dbg . ). static . Open the file described by 'fileinfo' to extract the relevant meta-information. ; Return 0 if OK, -2 if the file cannot be open, -1 if it is corrupted ; Definition at line 1654 of file TDataSetManager.cxx. ◆ SetScanCounters(). void TDataSetManager::SetScanCounters ; (; Int_t ; t = -1, . Int_t ; o = -1, . Int_t ; d = -1 . ). Update scan counters. ; Definition at line 1981 of file TDataSetManager.cxx. ◆ ShowCache(). Int_t TDataSetManager::ShowCache ; (; const char * ; uri). virtual . Show cached information matching uri. ; Reimplemented in TDataSetManagerFile.; Definition at line 795 of file TDataSetManager.cxx. ◆ ShowDataSets(). void TDataSetManager::ShowDataSets ; (; const char * ; uri = ""*"", . const char * ; opt = """" . ). virtual . Prints formatted information about the dataset 'uri'. ; The type and format of output is driven by 'opt':. opt = ""server:srv1[,srv2[,srv3[,...]]]"" Print info about the subsets of 'uri' on servers srv1, srv2, ...; opt = ""servers[:exclude:srv1[,srv2[,srv3[,...]]]]"" Print info about the subsets of 'uri' on all servers, except the ones in the exclude list srv1, srv2, ...; opt = <any> Print info about all datasets matching 'uri'. If 'opt' contains 'full:' the list of files in the datasets are also printed. In case 3. this is enabled only if 'uri' matches a single dataset.; In case 3, if 'opt' contains 'full:' the list of files in the datasets are also printed. 'forcescan:' the dataset are open to get the information; otherwise the pre-processed information ",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:37719,Performance,cache,cache,37719,"char * ; uri = ""*"", . const char * ; opt = """" . ). virtual . Prints formatted information about the dataset 'uri'. ; The type and format of output is driven by 'opt':. opt = ""server:srv1[,srv2[,srv3[,...]]]"" Print info about the subsets of 'uri' on servers srv1, srv2, ...; opt = ""servers[:exclude:srv1[,srv2[,srv3[,...]]]]"" Print info about the subsets of 'uri' on all servers, except the ones in the exclude list srv1, srv2, ...; opt = <any> Print info about all datasets matching 'uri'. If 'opt' contains 'full:' the list of files in the datasets are also printed. In case 3. this is enabled only if 'uri' matches a single dataset.; In case 3, if 'opt' contains 'full:' the list of files in the datasets are also printed. 'forcescan:' the dataset are open to get the information; otherwise the pre-processed information is used. 'noheader:' the labelling header is not printed; usefull when to chain several printouts 'noupdate:' do not update the cache (which may be slow on very remote servers) 'refresh:' refresh the information (requires appropriate credentials; typically it can be done only for owned datasets) ; Definition at line 1098 of file TDataSetManager.cxx. ◆ ShowQuota(). void TDataSetManager::ShowQuota ; (; const char * ; opt). virtual . Display quota information. ; Definition at line 585 of file TDataSetManager.cxx. ◆ Streamer(). void TDataSetManager::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TDataSetManagerFile. ◆ StreamerNVirtual(). void TDataSetManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 158 of file TDataSetManager.h. ◆ ToBytes(). Long64_t TDataSetManager::ToBytes ; (; const char * ; size = 0). staticprotected . Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ; Returns -1 if the format is wrong",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:3302,Security,checksum,checksum,3302,"r *uri);  Checks if the indicated dataset exits. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual TFileCollection * GetDataSet (const char *uri, const char *server=0);  Utility function used in various methods for user dataset upload. ;  ; virtual TMap * GetDataSets (const char *uri, UInt_t=TDataSetManager::kExport);  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; TClass * IsA () const override;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; virtual Int_t NotifyUpdate (const char *group=0, const char *user=0, const char *dspath=0, Long_t mtime=0, const char *checksum=0);  Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ;  ; virtual void ParseInitOpts (const char *opts);  Parse the opts string and set the init bits accordingly Available options: Cq: set kCheckQuota Ar: set kAllowRegister Av: set kAllowVerify Ti: set kTrustInfo Sb: set kIsSandbox Ca: set kUseCache or kDoNotUseCache The opts string may also contain additional unrelated info: in such a case the field delimited by the prefix ""opt:"" is analyzed, e.g. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; virtual Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt);  Register a dataset, perfoming quota checkings, if needed. ;  ; virtual Bool",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:8410,Security,hash,hash,8410," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:14269,Security,validat,validate,14269," Bool_t &touched, Bool_t &disappeared);  Check stage status of the file described by ""fileInfo"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TString CreateUri (const char *dsGroup=0, const char *dsUser=0, const char *dsName=0, const char *dsTree=0);  Creates URI for the dataset manger in the form '[[/dsGroup/]dsUser/]dsName[#dsObjPath]', The optional dsObjPath can be in the form [subdir/]objname]'. ;  ; static const char * DeclFileName ();  ; static Int_t FillMetaData (TFileInfo *fi, TDirectory *d, const char *rdir=""/"");  Navigate the directory 'd' (and its subdirectories) looking for TTree objects. ;  ; static TList * GetDataSetSrvMaps ();  Static getter for server mapping list. ;  ; static TList * ParseDataSetSrvMaps (const TString &srvmaps);  Create a server mapping list from the content of 'srvmaps' Return the list (owned by the caller) or 0 if no valid info could be found) ;  ; static void ProcessFile (TFileInfo *fileInfo, Int_t sopt, Bool_t checkstg, Bool_t doall, TFileStager *stager, Bool_t createStager, const char *stageopts, Bool_t dbg, Bool_t &changed, Bool_t &opened);  Locate, stage, or fully validate file ""fileInfo"". ;  ; static Int_t ScanDataSet (TFileCollection *dataset, Int_t fopt, Int_t sopt=0, Int_t ropt=0, Bool_t dbg=kFALSE, Int_t *touched=0, Int_t *opened=0, Int_t *disappeared=0, TList *flist=0, Long64_t avgsz=-1, const char *mss=0, Int_t maxfiles=-1, const char *stageopts=0);  Go through the files in the specified dataset, selecting files according to 'fopt' and doing on these files the actions described by 'sopt'. ;  ; static Int_t ScanFile (TFileInfo *fileinfo, Bool_t notify);  Open the file described by 'fileinfo' to extract the relevant meta-information. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:27152,Security,checksum,checksum,27152,"the URLs in the TFileInfo's, so the resulting datasets are not mutually exclusive. The string 'exclude' contains a comma-separated list of servers to exclude from the map. ; Definition at line 1006 of file TDataSetManager.cxx. ◆ GetUserUsedMap(). virtual TMap * TDataSetManager::GetUserUsedMap ; (; ). inlineprotectedvirtual . Definition at line 71 of file TDataSetManager.h. ◆ IsA(). TClass * TDataSetManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TDataSetManagerFile.; Definition at line 158 of file TDataSetManager.h. ◆ MonitorUsedSpace(). void TDataSetManager::MonitorUsedSpace ; (; TVirtualMonitoringWriter * ; monitoring). virtual . Log info to the monitoring server. ; Definition at line 673 of file TDataSetManager.cxx. ◆ NotifyUpdate(). Int_t TDataSetManager::NotifyUpdate ; (; const char * ; group = 0, . const char * ; user = 0, . const char * ; dspath = 0, . Long_t ; mtime = 0, . const char * ; checksum = 0 . ). virtual . Save into the <datasetdir>/dataset.list file the name of the last updated or created or modified dataset Returns 0 on success, -1 on error. ; Reimplemented in TDataSetManagerFile.; Definition at line 773 of file TDataSetManager.cxx. ◆ operator=(). TDataSetManager & TDataSetManager::operator= ; (; const TDataSetManager & ; ). private . ◆ ParseDataSetSrvMaps(). TList * TDataSetManager::ParseDataSetSrvMaps ; (; const TString & ; srvmaps). static . Create a server mapping list from the content of 'srvmaps' Return the list (owned by the caller) or 0 if no valid info could be found) ; Definition at line 1867 of file TDataSetManager.cxx. ◆ ParseInitOpts(). void TDataSetManager::ParseInitOpts ; (; const char * ; opts). virtual . Parse the opts string and set the init bits accordingly Available options: Cq: set kCheckQuota Ar: set kAllowRegister Av: set kAllowVerify Ti: set kTrustInfo Sb: set kIsSandbox Ca: set kUseCache or kDoNotUseCache The opts string may also co",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManager.html:30357,Security,validat,validate,30357,"sion are allowed. Only non-null parameters are filled by this function. Returns kTRUE in case of success. . Definition at line 842 of file TDataSetManager.cxx. ◆ PrintDataSet(). void TDataSetManager::PrintDataSet ; (; TFileCollection * ; fc, . Int_t ; popt = 0 . ). protected . Formatted printout of the content of TFileCollection 'fc'. ; Options in the form popt = u * 10 + f f 0 => header only, 1 => header + files when printing files u 0 => print file name only, 1 => print full URL ; Definition at line 1043 of file TDataSetManager.cxx. ◆ PrintUsedSpace(). void TDataSetManager::PrintUsedSpace ; (; ). protected . Prints the quota. ; Definition at line 638 of file TDataSetManager.cxx. ◆ ProcessFile(). void TDataSetManager::ProcessFile ; (; TFileInfo * ; fileInfo, . Int_t ; sopt, . Bool_t ; checkstg, . Bool_t ; doall, . TFileStager * ; stager, . Bool_t ; createStager, . const char * ; stageopts, . Bool_t ; dbg, . Bool_t & ; changed, . Bool_t & ; opened . ). static . Locate, stage, or fully validate file ""fileInfo"". ; Definition at line 1560 of file TDataSetManager.cxx. ◆ ReadGroupConfig(). Bool_t TDataSetManager::ReadGroupConfig ; (; const char * ; cf = 0). protected . Read group config file 'cf'. ; If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; expects the following directives: Group definition: group <groupname> <user>+ disk quota property <groupname> diskquota <quota in GB> average filesize (to be used when the file size is not available) averagefilesize <average size>{G,g,M,m,K,k} ; Definition at line 206 of file TDataSetManager.cxx. ◆ RegisterDataSet(). Int_t TDataSetManager::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; dataSet, . const char * ; opt . ). virtual . Register a dataset, perfoming quota checkings, if needed. ; Returns 0 on success, -1 on failure ; Reimplemented in TDataSetManagerFile.; Definition at line 761 of file TDataSetManager.cxx. ◆ RemoveDataSet(). Bool_t TDataSetManager::RemoveDataSet ; (; const char * ",MatchSource.WIKI,doc/master/classTDataSetManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html
https://root.cern/doc/master/classTDataSetManagerFile.html:6216,Availability,error,error,6216,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:6305,Availability,error,error,6305,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:6460,Availability,error,error,6460,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:6757,Availability,error,error,6757,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:11321,Availability,error,error,11321," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDataSetManager; static Bool_t CheckDataSetSrvMaps (TUrl *furl, TString &fn, TList *srvmaplist=0);  C",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:17598,Availability,failure,failure,17598,"tected Member Functions inherited from TDataSetManager; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 )); , kTrustInfo = (1ULL << ( 18 )); , ;   kIsSandbox = (1ULL << ( 19 )); , kUseCache = (1ULL << ( 20 )); , kDoNotUseCache = (1ULL << ( 21 )). };  ; enum  EDataSetWorkOpts { ;   kDebug = 0x1; , kShowDefault = 0x2; , kPrint = 0x4; , kExport = 0x8; , ;   kQuotaUpdate = 0x10; , kSet",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:22469,Availability,failure,failure,22469,"::BrowseDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option, . TObject * ; target . ). protected . Adds the dataset in the folder of group, user to the list in target. ; If dsName is defined, only the information about the specified dataset is processed.; The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming kList get a list of dataset names; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. ; Definition at line 577 of file TDataSetManagerFile.cxx. ◆ CheckLocalCache(). Int_t TDataSetManagerFile::CheckLocalCache ; (; const char * ; group, . const char * ; user, . const char * ; dsName = ""ls"", . UInt_t ; option = 0 . ). private . Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetMan",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:22867,Availability,error,error,22867,"s kExport use export naming kList get a list of dataset names; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. ; Definition at line 577 of file TDataSetManagerFile.cxx. ◆ CheckLocalCache(). Int_t TDataSetManagerFile::CheckLocalCache ; (; const char * ; group, . const char * ; user, . const char * ; dsName = ""ls"", . UInt_t ; option = 0 . ). private . Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetManagerFile::ClearCache ; (; const char * ; uri = 0). overridevirtual . Clear cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1253 of file TDataSetManagerFile.cxx. ◆ CreateLsFile(). Int_t TDataSetManagerFile::CreateLsFile ; (; const char * ; group, . const char * ; user, . Long_t & ; mtime, . TString & ; checksum . ). protected . Create or recreate the dataset lists for 'uri'. ; The list are saved in text form in 'uri'/ls.txt ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:24002,Availability,error,error,24002,"eturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetManagerFile::ClearCache ; (; const char * ; uri = 0). overridevirtual . Clear cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1253 of file TDataSetManagerFile.cxx. ◆ CreateLsFile(). Int_t TDataSetManagerFile::CreateLsFile ; (; const char * ; group, . const char * ; user, . Long_t & ; mtime, . TString & ; checksum . ). protected . Create or recreate the dataset lists for 'uri'. ; The list are saved in text form in 'uri'/ls.txt for fast browsing and in 'uri'/ls.root in form of TMacro for optimized and portable transfer. Return 0 on success, 1 if the file was empty, -1 on error ; Definition at line 474 of file TDataSetManagerFile.cxx. ◆ DeclFileName(). static const char * TDataSetManagerFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ExistsDataSet() [1/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Checks if the indicated dataset exits. ; Definition at line 1576 of file TDataSetManagerFile.cxx. ◆ ExistsDataSet() [2/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; uri). overridevirtual . Checks if the indicated dataset exits. ; Reimplemented from TDataSetManager.; Definition at line 1947 of file TDataSetManagerFile.cxx. ◆ FillLsDataSet(). Int_t TDataSetManagerFile::FillLsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsname, . TList * ; out, . UInt_t ; option . ). protected . Check for the 'ls.txt' for 'group' and 'us",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:25151,Availability,failure,failure,25151,"sName of the file containing the class declaration ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ExistsDataSet() [1/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Checks if the indicated dataset exits. ; Definition at line 1576 of file TDataSetManagerFile.cxx. ◆ ExistsDataSet() [2/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; uri). overridevirtual . Checks if the indicated dataset exits. ; Reimplemented from TDataSetManager.; Definition at line 1947 of file TDataSetManagerFile.cxx. ◆ FillLsDataSet(). Int_t TDataSetManagerFile::FillLsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsname, . TList * ; out, . UInt_t ; option . ). protected . Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ; If 'dsname' is defined, open the file and extract the relevant line. Return 0 on success, -1 on failure ; Definition at line 943 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [1/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = 0, . TMD5 ** ; checksum = 0 . ). Returns the dataset <dsName> of user <user> in group <group>. ; If checksum is non-zero, it will contain the pointer to a TMD5 sum object with the checksum of the file, has to be deleted by the user. If option has the bi kReadShort set, the shortobject is read, that does not contain the list of files. This is much faster. ; Definition at line 1015 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [2/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; uri, . const char * ; srv = 0 . ). overridevirtual . Utility function used in various methods for user dataset upload. ; Reimplemented from TDataSetManager.; Definition at line 1874 of file TDataSetManagerFile.cxx. ◆ GetDataSetPath() [1/2]. const char * TDataSetManagerFile::G",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:27325,Availability,avail,available,27325,">.<user>.<dsName>.<ext>. NB: contains a static TString for result, so copy result before using twice. ; Definition at line 351 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [1/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName = 0, . UInt_t ; option = 0 . ). General purpose call to go through the existing datasets. ; If <user> is 0 or ""*"", act on all datasets for the given <group>. If <group> is 0 or ""*"", act on all datasets. If <dsName> is defined, only the information about the specified dataset is processed. Action depends on option; available options:; kExport Return a TMap object containing all the information about datasets in the form: { <group>, <map of users> } | { <map of datasets>, <dataset>} (<dataset> are TFileCollection objects) kShowDefault as kExport with in addition a default selection including the datasets from the current user, the ones from the group and the common ones; kPrint print the dataset content; no output is returned kList get a list of available dataset names kForceScan Re-open files while processing kPrint (do not use the pre-processed information) kNoHeaderPrint Labelling header is not printed kQuotaUpdate update {group, user} quotas; no output is returned; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Definition at line 742 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [2/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; uri, . UInt_t ; option = TDataSetManager::kExport . ). overridevirtual . Returns all datasets for the <group> and <user> specified by <uri>. ; If <user> is 0, it returns all datasets for the given <group>. If <group> is 0, it returns all datasets. The returned TMap contains: <group> --> <map of users> --> <map of datasets> --> <dataset> (TFileCollection); The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available opti",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:27763,Availability,avail,available,27763,">.<user>.<dsName>.<ext>. NB: contains a static TString for result, so copy result before using twice. ; Definition at line 351 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [1/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName = 0, . UInt_t ; option = 0 . ). General purpose call to go through the existing datasets. ; If <user> is 0 or ""*"", act on all datasets for the given <group>. If <group> is 0 or ""*"", act on all datasets. If <dsName> is defined, only the information about the specified dataset is processed. Action depends on option; available options:; kExport Return a TMap object containing all the information about datasets in the form: { <group>, <map of users> } | { <map of datasets>, <dataset>} (<dataset> are TFileCollection objects) kShowDefault as kExport with in addition a default selection including the datasets from the current user, the ones from the group and the common ones; kPrint print the dataset content; no output is returned kList get a list of available dataset names kForceScan Re-open files while processing kPrint (do not use the pre-processed information) kNoHeaderPrint Labelling header is not printed kQuotaUpdate update {group, user} quotas; no output is returned; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Definition at line 742 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [2/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; uri, . UInt_t ; option = TDataSetManager::kExport . ). overridevirtual . Returns all datasets for the <group> and <user> specified by <uri>. ; If <user> is 0, it returns all datasets for the given <group>. If <group> is 0, it returns all datasets. The returned TMap contains: <group> --> <map of users> --> <map of datasets> --> <dataset> (TFileCollection); The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available opti",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:29316,Availability,error,error,29316,"s for the <group> and <user> specified by <uri>. ; If <user> is 0, it returns all datasets for the given <group>. If <group> is 0, it returns all datasets. The returned TMap contains: <group> --> <map of users> --> <map of datasets> --> <dataset> (TFileCollection); The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kShowDefault a default selection is shown that include the ones from the current user, the ones from the group and the common ones kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Reimplemented from TDataSetManager.; Definition at line 1859 of file TDataSetManagerFile.cxx. ◆ GetModTime(). Long_t TDataSetManagerFile::GetModTime ; (; const char * ; uri). Gets last dataset modification time. ; Returns -1 on error, or number of seconds since epoch on success ; Definition at line 1973 of file TDataSetManagerFile.cxx. ◆ GetMSSUrl(). const char * TDataSetManagerFile::GetMSSUrl ; (; ); const. inline . Definition at line 94 of file TDataSetManagerFile.h. ◆ GetStageOpts(). const char * TDataSetManagerFile::GetStageOpts ; (; ); const. inline . Definition at line 95 of file TDataSetManagerFile.h. ◆ Init(). void TDataSetManagerFile::Init ; (; ). protected . Do the real inititialization. ; Definition at line 93 of file TDataSetManagerFile.cxx. ◆ InitLocalCache(). void TDataSetManagerFile::InitLocalCache ; (; ). private . Init the local cache if required. ; Definition at line 234 of file TDataSetManagerFile.cxx. ◆ IsA(). TClass * TDataSetManagerFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDataSetManager.; Definition at line 100 of file TDataSetManagerFile.h. ◆ NotifyUpdate(). Int_t TDataSetManagerFile::NotifyUpdate ; (; const char * ; group, . const char * ; user, . const char *",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:30666,Availability,error,error,30666,"of file TDataSetManagerFile.h. ◆ Init(). void TDataSetManagerFile::Init ; (; ). protected . Do the real inititialization. ; Definition at line 93 of file TDataSetManagerFile.cxx. ◆ InitLocalCache(). void TDataSetManagerFile::InitLocalCache ; (; ). private . Init the local cache if required. ; Definition at line 234 of file TDataSetManagerFile.cxx. ◆ IsA(). TClass * TDataSetManagerFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDataSetManager.; Definition at line 100 of file TDataSetManagerFile.h. ◆ NotifyUpdate(). Int_t TDataSetManagerFile::NotifyUpdate ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . Long_t ; mtime, . const char * ; checksum = 0 . ). overridevirtual . Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ; For still existing datasets, fill the modification date in seconds anf the checksum. Returns 0 on success, -1 on error ; Reimplemented from TDataSetManager.; Definition at line 382 of file TDataSetManagerFile.cxx. ◆ ParseInitOpts(). void TDataSetManagerFile::ParseInitOpts ; (; const char * ; ins). overridevirtual . Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ; See TDataSetManager::ParseInitOpts for the available base options. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). overridevirtual . Register a dataset, perfoming quota checkings and verification, if required. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in which case the old dataset is overwritten, or contains 'U', in which case 'newDa",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:31067,Availability,avail,available,31067,"rFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDataSetManager.; Definition at line 100 of file TDataSetManagerFile.h. ◆ NotifyUpdate(). Int_t TDataSetManagerFile::NotifyUpdate ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . Long_t ; mtime, . const char * ; checksum = 0 . ). overridevirtual . Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ; For still existing datasets, fill the modification date in seconds anf the checksum. Returns 0 on success, -1 on error ; Reimplemented from TDataSetManager.; Definition at line 382 of file TDataSetManagerFile.cxx. ◆ ParseInitOpts(). void TDataSetManagerFile::ParseInitOpts ; (; const char * ; ins). overridevirtual . Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ; See TDataSetManager::ParseInitOpts for the available base options. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). overridevirtual . Register a dataset, perfoming quota checkings and verification, if required. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in which case the old dataset is overwritten, or contains 'U', in which case 'newDataSet' is added to the existing dataset (duplications are ignored, if any). If 'opts' contains 'V' the dataset files are also verified (if the dataset manager is configured to allow so). By default the dataset is not verified. If 'opts' contains 'T' the in the dataset object (status bits, meta,...) is trusted, i.e. not reset (if the dataset manager is configured to allow so). Retu",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:32080,Availability,failure,failure,32080,"s. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). overridevirtual . Register a dataset, perfoming quota checkings and verification, if required. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in which case the old dataset is overwritten, or contains 'U', in which case 'newDataSet' is added to the existing dataset (duplications are ignored, if any). If 'opts' contains 'V' the dataset files are also verified (if the dataset manager is configured to allow so). By default the dataset is not verified. If 'opts' contains 'T' the in the dataset object (status bits, meta,...) is trusted, i.e. not reset (if the dataset manager is configured to allow so). Returns 0 on success, -1 on failure ; Reimplemented from TDataSetManager.; Definition at line 1598 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [1/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Removes the indicated dataset. ; Definition at line 1544 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [2/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; uri). overridevirtual . Removes the indicated dataset. ; Reimplemented from TDataSetManager.; Definition at line 1930 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [1/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = kReopen | kDebug . ). protected . See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ; Definition at line 1783 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [2/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; uri, . UInt_",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:33236,Availability,failure,failure,33236,"veDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Removes the indicated dataset. ; Definition at line 1544 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [2/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; uri). overridevirtual . Removes the indicated dataset. ; Reimplemented from TDataSetManager.; Definition at line 1930 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [1/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = kReopen | kDebug . ). protected . See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ; Definition at line 1783 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [2/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; uri, . UInt_t ; opt = kReopen | kDebug . ). overridevirtual . Scans the dataset indicated by <uri> and returns the number of missing files. ; Returns -1 if any failure occurs, >= 0 on success. For more details, see documentation of ScanDataSet(TFileCollection *dataset, const char *option) ; Reimplemented from TDataSetManager.; Definition at line 1730 of file TDataSetManagerFile.cxx. ◆ ShowCache(). Int_t TDataSetManagerFile::ShowCache ; (; const char * ; uri = 0). overridevirtual . Show cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1319 of file TDataSetManagerFile.cxx. ◆ Streamer(). void TDataSetManagerFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDataSetManager. ◆ StreamerNVirtual(). void TDataSetManagerFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TDataSetManagerFile.h. ◆ UpdateUsedSpace(). void TDataSetManagerFile::UpdateUsedSpace ; (; ). overrideprotectedvirtual . updates the used space maps ; Reimplemented from TDataSetManager.; Definition at line 1959 of file TDataSetMa",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:34939,Availability,error,error,34939,"treamerNVirtual_b). inline . Definition at line 100 of file TDataSetManagerFile.h. ◆ UpdateUsedSpace(). void TDataSetManagerFile::UpdateUsedSpace ; (; ). overrideprotectedvirtual . updates the used space maps ; Reimplemented from TDataSetManager.; Definition at line 1959 of file TDataSetManagerFile.cxx. ◆ WriteDataSet(). Int_t TDataSetManagerFile::WriteDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TFileCollection * ; dataset, . UInt_t ; option = 0, . TMD5 * ; checksum = 0 . ). Writes indicated dataset. ; If option has the bit kFileMustExist set, the file must still exist, otherwise the new dataset is not written (returns 3 in this case). If checksum is non-zero the files current checksum is checked against it, if it does not match the file is not written (the function returns 2 in this case, if the file has disappeared it is also not written (i.e. checksum implies the bit kFileMustExist set in option). Returns != 0 for success, 0 for error ; Definition at line 1394 of file TDataSetManagerFile.cxx. Member Data Documentation. ◆ fCacheUpdatePeriod. Int_t TDataSetManagerFile::fCacheUpdatePeriod. private . Definition at line 42 of file TDataSetManagerFile.h. ◆ fDataSetDir. TString TDataSetManagerFile::fDataSetDir. private . Definition at line 33 of file TDataSetManagerFile.h. ◆ fDataSetLockFile. TString TDataSetManagerFile::fDataSetLockFile. private . Definition at line 36 of file TDataSetManagerFile.h. ◆ fIsRemote. Bool_t TDataSetManagerFile::fIsRemote. private . Definition at line 39 of file TDataSetManagerFile.h. ◆ fListFile. TString TDataSetManagerFile::fListFile. private . Definition at line 38 of file TDataSetManagerFile.h. ◆ fLocalCacheDir. TString TDataSetManagerFile::fLocalCacheDir. private . Definition at line 41 of file TDataSetManagerFile.h. ◆ fLockFileTimeLimit. Int_t TDataSetManagerFile::fLockFileTimeLimit. private . Definition at line 37 of file TDataSetManagerFile.h. ◆ fMSSUrl. TString TDataSetManagerFile::fMSSUrl. pr",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:1893,Deployability,update,updated,1893,"t ExistsDataSet (const char *uri) override;  Checks if the indicated dataset exits. ;  ; TFileCollection * GetDataSet (const char *group, const char *user, const char *dsName, UInt_t option=0, TMD5 **checksum=0);  Returns the dataset <dsName> of user <user> in group <group>. ;  ; TFileCollection * GetDataSet (const char *uri, const char *srv=0) override;  Utility function used in various methods for user dataset upload. ;  ; TMap * GetDataSets (const char *group, const char *user, const char *dsName=0, UInt_t option=0);  General purpose call to go through the existing datasets. ;  ; TMap * GetDataSets (const char *uri, UInt_t option=TDataSetManager::kExport) override;  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; Long_t GetModTime (const char *uri);  Gets last dataset modification time. ;  ; const char * GetMSSUrl () const;  ; const char * GetStageOpts () const;  ; TClass * IsA () const override;  ; Int_t NotifyUpdate (const char *group, const char *user, const char *dspath, Long_t mtime, const char *checksum=0) override;  Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ;  ; void ParseInitOpts (const char *opts) override;  Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ;  ; Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt) override;  Register a dataset, perfoming quota checkings and verification, if required. ;  ; Bool_t RemoveDataSet (const char *uri) override;  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, UInt_t option=kReopen|kDebug) override;  Scans the dataset indicated by <uri> and returns the number of missing files. ;  ; Int_t ShowCache (const char *uri=0) override;  Show cached information matching uri. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (T",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:16413,Deployability,update,updates,16413,"ser, const char *dsName);  Checks if the indicated dataset exits. ;  ; Int_t FillLsDataSet (const char *group, const char *user, const char *dsName, TList *out, UInt_t option);  Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ;  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName);  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName, TString &md5path, Bool_t local=kFALSE);  Returns path of the indicated dataset. ;  ; void Init ();  Do the real inititialization. ;  ; Bool_t RemoveDataSet (const char *group, const char *user, const char *dsName);  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *group, const char *user, const char *dsName, UInt_t option=kReopen|kDebug);  See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ;  ; void UpdateUsedSpace () override;  updates the used space maps ;  ;  Protected Member Functions inherited from TDataSetManager; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is u",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:17526,Deployability,update,updates,17526,"tected Member Functions inherited from TDataSetManager; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 )); , kTrustInfo = (1ULL << ( 18 )); , ;   kIsSandbox = (1ULL << ( 19 )); , kUseCache = (1ULL << ( 20 )); , kDoNotUseCache = (1ULL << ( 21 )). };  ; enum  EDataSetWorkOpts { ;   kDebug = 0x1; , kShowDefault = 0x2; , kPrint = 0x4; , kExport = 0x8; , ;   kQuotaUpdate = 0x10; , kSet",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:21844,Deployability,update,update,21844,"structor. ; Definition at line 65 of file TDataSetManagerFile.cxx. ◆ TDataSetManagerFile() [3/3]. TDataSetManagerFile::TDataSetManagerFile ; (; const char * ; ins). Main constructor. ; Definition at line 80 of file TDataSetManagerFile.cxx. ◆ ~TDataSetManagerFile(). TDataSetManagerFile::~TDataSetManagerFile ; (; ). inlineoverride . Definition at line 73 of file TDataSetManagerFile.h. Member Function Documentation. ◆ BrowseDataSets(). Bool_t TDataSetManagerFile::BrowseDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option, . TObject * ; target . ). protected . Adds the dataset in the folder of group, user to the list in target. ; If dsName is defined, only the information about the specified dataset is processed.; The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming kList get a list of dataset names; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. ; Definition at line 577 of file TDataSetManagerFile.cxx. ◆ CheckLocalCache(). Int_t TDataSetManagerFile::CheckLocalCache ; (; const char * ; group, . const char * ; user, . const char * ; dsName = ""ls"", . UInt_t ; option = 0 . ). private . Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerF",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:22397,Deployability,update,updates,22397,"::BrowseDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option, . TObject * ; target . ). protected . Adds the dataset in the folder of group, user to the list in target. ; If dsName is defined, only the information about the specified dataset is processed.; The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming kList get a list of dataset names; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. ; Definition at line 577 of file TDataSetManagerFile.cxx. ◆ CheckLocalCache(). Int_t TDataSetManagerFile::CheckLocalCache ; (; const char * ; group, . const char * ; user, . const char * ; dsName = ""ls"", . UInt_t ; option = 0 . ). private . Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetMan",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:27939,Deployability,update,update,27939,">.<user>.<dsName>.<ext>. NB: contains a static TString for result, so copy result before using twice. ; Definition at line 351 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [1/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName = 0, . UInt_t ; option = 0 . ). General purpose call to go through the existing datasets. ; If <user> is 0 or ""*"", act on all datasets for the given <group>. If <group> is 0 or ""*"", act on all datasets. If <dsName> is defined, only the information about the specified dataset is processed. Action depends on option; available options:; kExport Return a TMap object containing all the information about datasets in the form: { <group>, <map of users> } | { <map of datasets>, <dataset>} (<dataset> are TFileCollection objects) kShowDefault as kExport with in addition a default selection including the datasets from the current user, the ones from the group and the common ones; kPrint print the dataset content; no output is returned kList get a list of available dataset names kForceScan Re-open files while processing kPrint (do not use the pre-processed information) kNoHeaderPrint Labelling header is not printed kQuotaUpdate update {group, user} quotas; no output is returned; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Definition at line 742 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [2/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; uri, . UInt_t ; option = TDataSetManager::kExport . ). overridevirtual . Returns all datasets for the <group> and <user> specified by <uri>. ; If <user> is 0, it returns all datasets for the given <group>. If <group> is 0, it returns all datasets. The returned TMap contains: <group> --> <map of users> --> <map of datasets> --> <dataset> (TFileCollection); The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available opti",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:28909,Deployability,update,update,28909,"ader is not printed kQuotaUpdate update {group, user} quotas; no output is returned; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Definition at line 742 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [2/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; uri, . UInt_t ; option = TDataSetManager::kExport . ). overridevirtual . Returns all datasets for the <group> and <user> specified by <uri>. ; If <user> is 0, it returns all datasets for the given <group>. If <group> is 0, it returns all datasets. The returned TMap contains: <group> --> <map of users> --> <map of datasets> --> <dataset> (TFileCollection); The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kShowDefault a default selection is shown that include the ones from the current user, the ones from the group and the common ones kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Reimplemented from TDataSetManager.; Definition at line 1859 of file TDataSetManagerFile.cxx. ◆ GetModTime(). Long_t TDataSetManagerFile::GetModTime ; (; const char * ; uri). Gets last dataset modification time. ; Returns -1 on error, or number of seconds since epoch on success ; Definition at line 1973 of file TDataSetManagerFile.cxx. ◆ GetMSSUrl(). const char * TDataSetManagerFile::GetMSSUrl ; (; ); const. inline . Definition at line 94 of file TDataSetManagerFile.h. ◆ GetStageOpts(). const char * TDataSetManagerFile::GetStageOpts ; (; ); const. inline . Definition at line 95 of file TDataSetManagerFile.h. ◆ Init(). void TDataSetManagerFile::Init ; (; ). protected . Do the real inititialization. ; Definition at line 93 of file TDataSetManagerFile.cxx. ◆ InitLocalCache(). void TDataSetManagerFile::InitLoca",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:30511,Deployability,update,updated,30511,"nst. inline . Definition at line 94 of file TDataSetManagerFile.h. ◆ GetStageOpts(). const char * TDataSetManagerFile::GetStageOpts ; (; ); const. inline . Definition at line 95 of file TDataSetManagerFile.h. ◆ Init(). void TDataSetManagerFile::Init ; (; ). protected . Do the real inititialization. ; Definition at line 93 of file TDataSetManagerFile.cxx. ◆ InitLocalCache(). void TDataSetManagerFile::InitLocalCache ; (; ). private . Init the local cache if required. ; Definition at line 234 of file TDataSetManagerFile.cxx. ◆ IsA(). TClass * TDataSetManagerFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDataSetManager.; Definition at line 100 of file TDataSetManagerFile.h. ◆ NotifyUpdate(). Int_t TDataSetManagerFile::NotifyUpdate ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . Long_t ; mtime, . const char * ; checksum = 0 . ). overridevirtual . Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ; For still existing datasets, fill the modification date in seconds anf the checksum. Returns 0 on success, -1 on error ; Reimplemented from TDataSetManager.; Definition at line 382 of file TDataSetManagerFile.cxx. ◆ ParseInitOpts(). void TDataSetManagerFile::ParseInitOpts ; (; const char * ; ins). overridevirtual . Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ; See TDataSetManager::ParseInitOpts for the available base options. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). overridevirtual . Register a dataset, perfoming quota checkings and verification, if required. ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:34133,Deployability,update,updates,34133," by <uri> and returns the number of missing files. ; Returns -1 if any failure occurs, >= 0 on success. For more details, see documentation of ScanDataSet(TFileCollection *dataset, const char *option) ; Reimplemented from TDataSetManager.; Definition at line 1730 of file TDataSetManagerFile.cxx. ◆ ShowCache(). Int_t TDataSetManagerFile::ShowCache ; (; const char * ; uri = 0). overridevirtual . Show cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1319 of file TDataSetManagerFile.cxx. ◆ Streamer(). void TDataSetManagerFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDataSetManager. ◆ StreamerNVirtual(). void TDataSetManagerFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TDataSetManagerFile.h. ◆ UpdateUsedSpace(). void TDataSetManagerFile::UpdateUsedSpace ; (; ). overrideprotectedvirtual . updates the used space maps ; Reimplemented from TDataSetManager.; Definition at line 1959 of file TDataSetManagerFile.cxx. ◆ WriteDataSet(). Int_t TDataSetManagerFile::WriteDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TFileCollection * ; dataset, . UInt_t ; option = 0, . TMD5 * ; checksum = 0 . ). Writes indicated dataset. ; If option has the bit kFileMustExist set, the file must still exist, otherwise the new dataset is not written (returns 3 in this case). If checksum is non-zero the files current checksum is checked against it, if it does not match the file is not written (the function returns 2 in this case, if the file has disappeared it is also not written (i.e. checksum implies the bit kFileMustExist set in option). Returns != 0 for success, 0 for error ; Definition at line 1394 of file TDataSetManagerFile.cxx. Member Data Documentation. ◆ fCacheUpdatePeriod. Int_t TDataSetManagerFile::fCacheUpdatePeriod. private . Definition at line 42 of file TDataSetManagerFile.h. ◆ ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:3655,Energy Efficiency,monitor,monitoring,3655,"ri. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteDataSet (const char *group, const char *user, const char *dsName, TFileCollection *dataset, UInt_t option=0, TMD5 *checksum=0);  Writes indicated dataset. ;  ;  Public Member Functions inherited from TDataSetManager;  TDataSetManager (const char *group=0, const char *user=0, const char *options=0);  Main constructor. ;  ;  ~TDataSetManager () override;  Destructor. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; Int_t ScanDataSet (const char *uri, const char *opt);  Scans the dataset indicated by 'uri' following the 'opts' directives. ;  ; void SetScanCounters (Int_t t=-1, Int_t o=-1, Int_t d=-1);  Update scan counters. ;  ; virtual void ShowDataSets (const char *uri=""*"", const char *opt="""");  Prints formatted information about the dataset 'uri'. ;  ; virtual void ShowQuota (const char *opt);  Display quota information. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (co",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:3685,Energy Efficiency,monitor,monitoring,3685,"ri. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteDataSet (const char *group, const char *user, const char *dsName, TFileCollection *dataset, UInt_t option=0, TMD5 *checksum=0);  Writes indicated dataset. ;  ;  Public Member Functions inherited from TDataSetManager;  TDataSetManager (const char *group=0, const char *user=0, const char *options=0);  Main constructor. ;  ;  ~TDataSetManager () override;  Destructor. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; Int_t ScanDataSet (const char *uri, const char *opt);  Scans the dataset indicated by 'uri' following the 'opts' directives. ;  ; void SetScanCounters (Int_t t=-1, Int_t o=-1, Int_t d=-1);  Update scan counters. ;  ; virtual void ShowDataSets (const char *uri=""*"", const char *opt="""");  Prints formatted information about the dataset 'uri'. ;  ; virtual void ShowQuota (const char *opt);  Display quota information. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (co",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:6222,Integrability,message,message,6222,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:6763,Integrability,message,message,6763,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:7965,Integrability,message,message,7965,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:11327,Integrability,message,message,11327," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDataSetManager; static Bool_t CheckDataSetSrvMaps (TUrl *furl, TString &fn, TList *srvmaplist=0);  C",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:11700,Integrability,message,message,11700," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDataSetManager; static Bool_t CheckDataSetSrvMaps (TUrl *furl, TString &fn, TList *srvmaplist=0);  Check if the dataset server mappings apply to the url defined by 'furl'. ;  ; static Bool_t CheckStagedStatus (TFileInfo *fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager *stager, Bool_t createStager, Bool_t dbg, Bool_t &changed, Bool_t &touched, Bool_t &disappeared);  Check stage status of the file described by ""fileInfo"". ;  ; static TClass * Class ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:27306,Integrability,depend,depends,27306,">.<user>.<dsName>.<ext>. NB: contains a static TString for result, so copy result before using twice. ; Definition at line 351 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [1/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName = 0, . UInt_t ; option = 0 . ). General purpose call to go through the existing datasets. ; If <user> is 0 or ""*"", act on all datasets for the given <group>. If <group> is 0 or ""*"", act on all datasets. If <dsName> is defined, only the information about the specified dataset is processed. Action depends on option; available options:; kExport Return a TMap object containing all the information about datasets in the form: { <group>, <map of users> } | { <map of datasets>, <dataset>} (<dataset> are TFileCollection objects) kShowDefault as kExport with in addition a default selection including the datasets from the current user, the ones from the group and the common ones; kPrint print the dataset content; no output is returned kList get a list of available dataset names kForceScan Re-open files while processing kPrint (do not use the pre-processed information) kNoHeaderPrint Labelling header is not printed kQuotaUpdate update {group, user} quotas; no output is returned; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Definition at line 742 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [2/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; uri, . UInt_t ; option = TDataSetManager::kExport . ). overridevirtual . Returns all datasets for the <group> and <user> specified by <uri>. ; If <user> is 0, it returns all datasets for the given <group>. If <group> is 0, it returns all datasets. The returned TMap contains: <group> --> <map of users> --> <map of datasets> --> <dataset> (TFileCollection); The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available opti",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:2994,Modifiability,inherit,inherited,2994,"ormat is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ;  ; Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt) override;  Register a dataset, perfoming quota checkings and verification, if required. ;  ; Bool_t RemoveDataSet (const char *uri) override;  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, UInt_t option=kReopen|kDebug) override;  Scans the dataset indicated by <uri> and returns the number of missing files. ;  ; Int_t ShowCache (const char *uri=0) override;  Show cached information matching uri. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteDataSet (const char *group, const char *user, const char *dsName, TFileCollection *dataset, UInt_t option=0, TMD5 *checksum=0);  Writes indicated dataset. ;  ;  Public Member Functions inherited from TDataSetManager;  TDataSetManager (const char *group=0, const char *user=0, const char *options=0);  Main constructor. ;  ;  ~TDataSetManager () override;  Destructor. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; Int_t ScanDataSet (const char *uri, const char *opt);  Scans the dataset indicated by 'uri' following",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:4455,Modifiability,inherit,inherited,4455,"d space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE, Bool_t wildcards=kFALSE);  Parses a (relative) URI that describes a DataSet on the cluster. ;  ; Int_t ScanDataSet (const char *uri, const char *opt);  Scans the dataset indicated by 'uri' following the 'opts' directives. ;  ; void SetScanCounters (Int_t t=-1, Int_t o=-1, Int_t d=-1);  Update scan counters. ;  ; virtual void ShowDataSets (const char *uri=""*"", const char *opt="""");  Prints formatted information about the dataset 'uri'. ;  ; virtual void ShowQuota (const char *opt);  Display quota information. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:5852,Modifiability,inherit,inheritance,5852,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:8063,Modifiability,inherit,inherits,8063,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:8180,Modifiability,inherit,inherits,8180,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:12201,Modifiability,inherit,inherited,12201,"rtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDataSetManager; static Bool_t CheckDataSetSrvMaps (TUrl *furl, TString &fn, TList *srvmaplist=0);  Check if the dataset server mappings apply to the url defined by 'furl'. ;  ; static Bool_t CheckStagedStatus (TFileInfo *fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager *stager, Bool_t createStager, Bool_t dbg, Bool_t &changed, Bool_t &touched, Bool_t &disappeared);  Check stage status of the file described by ""fileInfo"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TString CreateUri (const char *dsGroup=0, const char *dsUser=0, const char *dsName=0, const char *dsTree=0);  Creates URI for the dataset manger in the form '[[/dsGroup/]dsUser/]dsName[#dsObjPath]', The optional dsObjPath can be in the form [subdir/]objname]'. ;  ; static const char * DeclFileName ();  ; static Int_t FillMetaData (TFileInfo *fi, TDirectory *d, const char *rdir=""/"");  Naviga",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:14395,Modifiability,inherit,inherited,14395,"caller) or 0 if no valid info could be found) ;  ; static void ProcessFile (TFileInfo *fileInfo, Int_t sopt, Bool_t checkstg, Bool_t doall, TFileStager *stager, Bool_t createStager, const char *stageopts, Bool_t dbg, Bool_t &changed, Bool_t &opened);  Locate, stage, or fully validate file ""fileInfo"". ;  ; static Int_t ScanDataSet (TFileCollection *dataset, Int_t fopt, Int_t sopt=0, Int_t ropt=0, Bool_t dbg=kFALSE, Int_t *touched=0, Int_t *opened=0, Int_t *disappeared=0, TList *flist=0, Long64_t avgsz=-1, const char *mss=0, Int_t maxfiles=-1, const char *stageopts=0);  Go through the files in the specified dataset, selecting files according to 'fopt' and doing on these files the actions described by 'sopt'. ;  ; static Int_t ScanFile (TFileInfo *fileinfo, Bool_t notify);  Open the file described by 'fileinfo' to extract the relevant meta-information. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BrowseDataSets (const char *group, const char *user, const char *dsName, UInt_t option, TObject *target);  Adds the dataset in the folder of group, user to the list in target. ;  ; Int_t ChecksumDataSet (const char *path, const char *md5path, TString &checksum);  Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ;  ; Int_t CreateLsFile (const char *group, const char *user, Long_t &mtime, TString &checksum);  Create or recreate the dataset lists for 'uri'. ;  ; Bool_t ExistsDataSet (const char *group, const char *user, co",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:16474,Modifiability,inherit,inherited,16474,"ser, const char *dsName);  Checks if the indicated dataset exits. ;  ; Int_t FillLsDataSet (const char *group, const char *user, const char *dsName, TList *out, UInt_t option);  Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ;  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName);  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName, TString &md5path, Bool_t local=kFALSE);  Returns path of the indicated dataset. ;  ; void Init ();  Do the real inititialization. ;  ; Bool_t RemoveDataSet (const char *group, const char *user, const char *dsName);  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *group, const char *user, const char *dsName, UInt_t option=kReopen|kDebug);  See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ;  ; void UpdateUsedSpace () override;  updates the used space maps ;  ;  Protected Member Functions inherited from TDataSetManager; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is u",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:17061,Modifiability,config,config,17061,"Do the real inititialization. ;  ; Bool_t RemoveDataSet (const char *group, const char *user, const char *dsName);  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *group, const char *user, const char *dsName, UInt_t option=kReopen|kDebug);  See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ;  ; void UpdateUsedSpace () override;  updates the used space maps ;  ;  Protected Member Functions inherited from TDataSetManager; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:17112,Modifiability,inherit,inherited,17112,"ated dataset. ;  ; Int_t ScanDataSet (const char *group, const char *user, const char *dsName, UInt_t option=kReopen|kDebug);  See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ;  ; void UpdateUsedSpace () override;  updates the used space maps ;  ;  Protected Member Functions inherited from TDataSetManager; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 ))",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:18007,Modifiability,inherit,inherited,18007,"irtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 )); , kTrustInfo = (1ULL << ( 18 )); , ;   kIsSandbox = (1ULL << ( 19 )); , kUseCache = (1ULL << ( 20 )); , kDoNotUseCache = (1ULL << ( 21 )). };  ; enum  EDataSetWorkOpts { ;   kDebug = 0x1; , kShowDefault = 0x2; , kPrint = 0x4; , kExport = 0x8; , ;   kQuotaUpdate = 0x10; , kSetDefaultTree = 0x20; , kForceScan = 0x40; , kNoHeaderPrint = 0x80; , ;   kReopen = 0x100; , kTouch = 0x200; , kMaxFiles = 0x400; , kReadShort = 0x800; , ;   kFileMustExist = 0x1000; , kNoAction = 0x2000; , kLocateOnly = 0x4000; , kStageOnly = 0x8000; , ;   kNoCacheUpdate = 0x10000; , kRefreshLs = 0x20000; , kList = 0x40000; , kAllFiles = 0x80000; , ;   kStagedFiles = 0x100000; , kNoStagedCheck = 0x200000. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDele",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:18878,Modifiability,inherit,inherited,18878,"eCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 )); , kTrustInfo = (1ULL << ( 18 )); , ;   kIsSandbox = (1ULL << ( 19 )); , kUseCache = (1ULL << ( 20 )); , kDoNotUseCache = (1ULL << ( 21 )). };  ; enum  EDataSetWorkOpts { ;   kDebug = 0x1; , kShowDefault = 0x2; , kPrint = 0x4; , kExport = 0x8; , ;   kQuotaUpdate = 0x10; , kSetDefaultTree = 0x20; , kForceScan = 0x40; , kNoHeaderPrint = 0x80; , ;   kReopen = 0x100; , kTouch = 0x200; , kMaxFiles = 0x400; , kReadShort = 0x800; , ;   kFileMustExist = 0x1000; , kNoAction = 0x2000; , kLocateOnly = 0x4000; , kStageOnly = 0x8000; , ;   kNoCacheUpdate = 0x10000; , kRefreshLs = 0x20000; , kList = 0x40000; , kAllFiles = 0x80000; , ;   kStagedFiles = 0x100000; , kNoStagedCheck = 0x200000. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDataSetManager; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  ;  Protected Attributes inherited from TDataSetManager; Long64_t fAvgFile",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:19519,Modifiability,inherit,inherited,19519,"Only = 0x8000; , ;   kNoCacheUpdate = 0x10000; , kRefreshLs = 0x20000; , kList = 0x40000; , kAllFiles = 0x80000; , ;   kStagedFiles = 0x100000; , kNoStagedCheck = 0x200000. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDataSetManager; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  ;  Protected Attributes inherited from TDataSetManager; Long64_t fAvgFileSize;  ; TUri fBase;  ; TString fCommonGroup;  ; TString fCommonUser;  ; TString fGroup;  ; TString fGroupConfigFile;  ; TMap fGroupQuota;  ; TMap fGroupUsed;  ; Long_t fMTimeGroupConfig;  ; Int_t fNDisappearedFiles;  ; Int_t fNOpenedFiles;  ; Int_t fNTouchedFiles;  ; TString fUser;  ; TMap fUserUsed;  ;  Static Protected Attributes inherited from TDataSetManager; static TString fgCommonDataSetTag = ""COMMON"";  ; static TList * fgDataSetSrvMaps = 0;  . #include <TDataSetManagerFile.h>. Inheritance diagram for TDataSetManagerFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDataSetManagerFile() [1/3]. TDataSetManagerFile::TDataSetM",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:19625,Modifiability,inherit,inherited,19625,"Only = 0x8000; , ;   kNoCacheUpdate = 0x10000; , kRefreshLs = 0x20000; , kList = 0x40000; , kAllFiles = 0x80000; , ;   kStagedFiles = 0x100000; , kNoStagedCheck = 0x200000. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDataSetManager; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  ;  Protected Attributes inherited from TDataSetManager; Long64_t fAvgFileSize;  ; TUri fBase;  ; TString fCommonGroup;  ; TString fCommonUser;  ; TString fGroup;  ; TString fGroupConfigFile;  ; TMap fGroupQuota;  ; TMap fGroupUsed;  ; Long_t fMTimeGroupConfig;  ; Int_t fNDisappearedFiles;  ; Int_t fNOpenedFiles;  ; Int_t fNTouchedFiles;  ; TString fUser;  ; TMap fUserUsed;  ;  Static Protected Attributes inherited from TDataSetManager; static TString fgCommonDataSetTag = ""COMMON"";  ; static TList * fgDataSetSrvMaps = 0;  . #include <TDataSetManagerFile.h>. Inheritance diagram for TDataSetManagerFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDataSetManagerFile() [1/3]. TDataSetManagerFile::TDataSetM",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:19904,Modifiability,inherit,inherited,19904,"(1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDataSetManager; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  ;  Protected Attributes inherited from TDataSetManager; Long64_t fAvgFileSize;  ; TUri fBase;  ; TString fCommonGroup;  ; TString fCommonUser;  ; TString fGroup;  ; TString fGroupConfigFile;  ; TMap fGroupQuota;  ; TMap fGroupUsed;  ; Long_t fMTimeGroupConfig;  ; Int_t fNDisappearedFiles;  ; Int_t fNOpenedFiles;  ; Int_t fNTouchedFiles;  ; TString fUser;  ; TMap fUserUsed;  ;  Static Protected Attributes inherited from TDataSetManager; static TString fgCommonDataSetTag = ""COMMON"";  ; static TList * fgDataSetSrvMaps = 0;  . #include <TDataSetManagerFile.h>. Inheritance diagram for TDataSetManagerFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDataSetManagerFile() [1/3]. TDataSetManagerFile::TDataSetManagerFile ; (; ). inline . Definition at line 70 of file TDataSetManagerFile.h. ◆ TDataSetManagerFile() [2/3]. TDataSetManagerFile::TDataSetManagerFile ; (; const char * ; group, . const char * ; user, . const char * ; ins . ). Main constructor. ; Definition at line 65 of file TDataSetManagerFile.cxx. ◆ TDataSetManagerFile() [3/3]. TDataSetManagerFile::TDataSetManagerFile ; (; const char * ; ins). Main constructor. ; Definition at line 80 of file TDat",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:20288,Modifiability,inherit,inherited,20288,"(1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDataSetManager; static Long64_t ToBytes (const char *size=0);  Static utility function to gt the number of bytes from a string representation in the form ""`<digit>``<sfx>`"" with <sfx> = {"""", ""k"", ""M"", ""G"", ""T"", ""P""} (case insensitive). ;  ;  Protected Attributes inherited from TDataSetManager; Long64_t fAvgFileSize;  ; TUri fBase;  ; TString fCommonGroup;  ; TString fCommonUser;  ; TString fGroup;  ; TString fGroupConfigFile;  ; TMap fGroupQuota;  ; TMap fGroupUsed;  ; Long_t fMTimeGroupConfig;  ; Int_t fNDisappearedFiles;  ; Int_t fNOpenedFiles;  ; Int_t fNTouchedFiles;  ; TString fUser;  ; TMap fUserUsed;  ;  Static Protected Attributes inherited from TDataSetManager; static TString fgCommonDataSetTag = ""COMMON"";  ; static TList * fgDataSetSrvMaps = 0;  . #include <TDataSetManagerFile.h>. Inheritance diagram for TDataSetManagerFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDataSetManagerFile() [1/3]. TDataSetManagerFile::TDataSetManagerFile ; (; ). inline . Definition at line 70 of file TDataSetManagerFile.h. ◆ TDataSetManagerFile() [2/3]. TDataSetManagerFile::TDataSetManagerFile ; (; const char * ; group, . const char * ; user, . const char * ; ins . ). Main constructor. ; Definition at line 65 of file TDataSetManagerFile.cxx. ◆ TDataSetManagerFile() [3/3]. TDataSetManagerFile::TDataSetManagerFile ; (; const char * ; ins). Main constructor. ; Definition at line 80 of file TDat",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:23931,Modifiability,portab,portable,23931,"agerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetManagerFile::ClearCache ; (; const char * ; uri = 0). overridevirtual . Clear cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1253 of file TDataSetManagerFile.cxx. ◆ CreateLsFile(). Int_t TDataSetManagerFile::CreateLsFile ; (; const char * ; group, . const char * ; user, . Long_t & ; mtime, . TString & ; checksum . ). protected . Create or recreate the dataset lists for 'uri'. ; The list are saved in text form in 'uri'/ls.txt for fast browsing and in 'uri'/ls.root in form of TMacro for optimized and portable transfer. Return 0 on success, 1 if the file was empty, -1 on error ; Definition at line 474 of file TDataSetManagerFile.cxx. ◆ DeclFileName(). static const char * TDataSetManagerFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ExistsDataSet() [1/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Checks if the indicated dataset exits. ; Definition at line 1576 of file TDataSetManagerFile.cxx. ◆ ExistsDataSet() [2/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; uri). overridevirtual . Checks if the indicated dataset exits. ; Reimplemented from TDataSetManager.; Definition at line 1947 of file TDataSetManagerFile.cxx. ◆ FillLsDataSet(). Int_t TDataSetManagerFile::FillLsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsname, . TList *",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:31835,Modifiability,config,configured,31835,"gerFile::ParseInitOpts ; (; const char * ; ins). overridevirtual . Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ; See TDataSetManager::ParseInitOpts for the available base options. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). overridevirtual . Register a dataset, perfoming quota checkings and verification, if required. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in which case the old dataset is overwritten, or contains 'U', in which case 'newDataSet' is added to the existing dataset (duplications are ignored, if any). If 'opts' contains 'V' the dataset files are also verified (if the dataset manager is configured to allow so). By default the dataset is not verified. If 'opts' contains 'T' the in the dataset object (status bits, meta,...) is trusted, i.e. not reset (if the dataset manager is configured to allow so). Returns 0 on success, -1 on failure ; Reimplemented from TDataSetManager.; Definition at line 1598 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [1/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Removes the indicated dataset. ; Definition at line 1544 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [2/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; uri). overridevirtual . Removes the indicated dataset. ; Reimplemented from TDataSetManager.; Definition at line 1930 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [1/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsNam",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:32027,Modifiability,config,configured,32027,". ; See TDataSetManager::ParseInitOpts for the available base options. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). overridevirtual . Register a dataset, perfoming quota checkings and verification, if required. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in which case the old dataset is overwritten, or contains 'U', in which case 'newDataSet' is added to the existing dataset (duplications are ignored, if any). If 'opts' contains 'V' the dataset files are also verified (if the dataset manager is configured to allow so). By default the dataset is not verified. If 'opts' contains 'T' the in the dataset object (status bits, meta,...) is trusted, i.e. not reset (if the dataset manager is configured to allow so). Returns 0 on success, -1 on failure ; Reimplemented from TDataSetManager.; Definition at line 1598 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [1/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Removes the indicated dataset. ; Definition at line 1544 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [2/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; uri). overridevirtual . Removes the indicated dataset. ; Reimplemented from TDataSetManager.; Definition at line 1930 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [1/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = kReopen | kDebug . ). protected . See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ; Definition at line 1783 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [2/2]. Int",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:714,Performance,cache,cached,714,". ROOT: TDataSetManagerFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDataSetManagerFile Class Reference. . Definition at line 30 of file TDataSetManagerFile.h. Public Member Functions;  TDataSetManagerFile ();  ;  TDataSetManagerFile (const char *group, const char *user, const char *ins);  Main constructor. ;  ;  TDataSetManagerFile (const char *ins);  Main constructor. ;  ;  ~TDataSetManagerFile () override;  ; Int_t ClearCache (const char *uri=0) override;  Clear cached information matching uri. ;  ; Bool_t ExistsDataSet (const char *uri) override;  Checks if the indicated dataset exits. ;  ; TFileCollection * GetDataSet (const char *group, const char *user, const char *dsName, UInt_t option=0, TMD5 **checksum=0);  Returns the dataset <dsName> of user <user> in group <group>. ;  ; TFileCollection * GetDataSet (const char *uri, const char *srv=0) override;  Utility function used in various methods for user dataset upload. ;  ; TMap * GetDataSets (const char *group, const char *user, const char *dsName=0, UInt_t option=0);  General purpose call to go through the existing datasets. ;  ; TMap * GetDataSets (const char *uri, UInt_t option=TDataSetManager::kExport) override;  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; Long_t GetModTime (const char *uri);  Gets last dataset modification time. ;  ; const char * GetMSSUrl () const;  ; const char * GetStageOpts () const;  ; TClass * IsA () const override;  ; Int_t NotifyUpdate (const char *group, const char *user, const char *dspath, Long_t mtime, const char *checksum=0) override;  Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ;  ; void ParseInitOpts (const char *opts) override;  Parse the inpu",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:2618,Performance,cache,cached,2618,"SSUrl () const;  ; const char * GetStageOpts () const;  ; TClass * IsA () const override;  ; Int_t NotifyUpdate (const char *group, const char *user, const char *dspath, Long_t mtime, const char *checksum=0) override;  Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ;  ; void ParseInitOpts (const char *opts) override;  Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ;  ; Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt) override;  Register a dataset, perfoming quota checkings and verification, if required. ;  ; Bool_t RemoveDataSet (const char *uri) override;  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, UInt_t option=kReopen|kDebug) override;  Scans the dataset indicated by <uri> and returns the number of missing files. ;  ; Int_t ShowCache (const char *uri=0) override;  Show cached information matching uri. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteDataSet (const char *group, const char *user, const char *dsName, TFileCollection *dataset, UInt_t option=0, TMD5 *checksum=0);  Writes indicated dataset. ;  ;  Public Member Functions inherited from TDataSetManager;  TDataSetManager (const char *group=0, const char *user=0, const char *options=0);  Main constructor. ;  ;  ~TDataSetManager () override;  Destructor. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; virtual",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:17444,Performance,cache,cache,17444,"tected Member Functions inherited from TDataSetManager; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 )); , kTrustInfo = (1ULL << ( 18 )); , ;   kIsSandbox = (1ULL << ( 19 )); , kUseCache = (1ULL << ( 20 )); , kDoNotUseCache = (1ULL << ( 21 )). };  ; enum  EDataSetWorkOpts { ;   kDebug = 0x1; , kShowDefault = 0x2; , kPrint = 0x4; , kExport = 0x8; , ;   kQuotaUpdate = 0x10; , kSet",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:17652,Performance,cache,cache,17652,"es () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 )); , kTrustInfo = (1ULL << ( 18 )); , ;   kIsSandbox = (1ULL << ( 19 )); , kUseCache = (1ULL << ( 20 )); , kDoNotUseCache = (1ULL << ( 21 )). };  ; enum  EDataSetWorkOpts { ;   kDebug = 0x1; , kShowDefault = 0x2; , kPrint = 0x4; , kExport = 0x8; , ;   kQuotaUpdate = 0x10; , kSetDefaultTree = 0x20; , kForceScan = 0x40; , kNoHeaderPrint = 0x80; , ;   kReopen = 0x100; , kTouch = 0x200; , kMaxFiles = 0x400; , kReadShort = 0x800; , ;   kFileMustExist = 0x1000; , kNoAc",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:22315,Performance,cache,cache,22315,"::BrowseDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option, . TObject * ; target . ). protected . Adds the dataset in the folder of group, user to the list in target. ; If dsName is defined, only the information about the specified dataset is processed.; The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming kList get a list of dataset names; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. ; Definition at line 577 of file TDataSetManagerFile.cxx. ◆ CheckLocalCache(). Int_t TDataSetManagerFile::CheckLocalCache ; (; const char * ; group, . const char * ; user, . const char * ; dsName = ""ls"", . UInt_t ; option = 0 . ). private . Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetMan",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:23461,Performance,cache,cached,23461,"ure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetManagerFile::ClearCache ; (; const char * ; uri = 0). overridevirtual . Clear cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1253 of file TDataSetManagerFile.cxx. ◆ CreateLsFile(). Int_t TDataSetManagerFile::CreateLsFile ; (; const char * ; group, . const char * ; user, . Long_t & ; mtime, . TString & ; checksum . ). protected . Create or recreate the dataset lists for 'uri'. ; The list are saved in text form in 'uri'/ls.txt for fast browsing and in 'uri'/ls.root in form of TMacro for optimized and portable transfer. Return 0 on success, 1 if the file was empty, -1 on error ; Definition at line 474 of file TDataSetManagerFile.cxx. ◆ DeclFileName(). static const char * TDataSetManagerFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ExistsDataSet() [1/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Checks if the indicated dataset exits. ; D",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:23917,Performance,optimiz,optimized,23917,"agerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetManagerFile::ClearCache ; (; const char * ; uri = 0). overridevirtual . Clear cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1253 of file TDataSetManagerFile.cxx. ◆ CreateLsFile(). Int_t TDataSetManagerFile::CreateLsFile ; (; const char * ; group, . const char * ; user, . Long_t & ; mtime, . TString & ; checksum . ). protected . Create or recreate the dataset lists for 'uri'. ; The list are saved in text form in 'uri'/ls.txt for fast browsing and in 'uri'/ls.root in form of TMacro for optimized and portable transfer. Return 0 on success, 1 if the file was empty, -1 on error ; Definition at line 474 of file TDataSetManagerFile.cxx. ◆ DeclFileName(). static const char * TDataSetManagerFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ExistsDataSet() [1/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Checks if the indicated dataset exits. ; Definition at line 1576 of file TDataSetManagerFile.cxx. ◆ ExistsDataSet() [2/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; uri). overridevirtual . Checks if the indicated dataset exits. ; Reimplemented from TDataSetManager.; Definition at line 1947 of file TDataSetManagerFile.cxx. ◆ FillLsDataSet(). Int_t TDataSetManagerFile::FillLsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsname, . TList *",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:26652,Performance,cache,cache,26652,"ct is read, that does not contain the list of files. This is much faster. ; Definition at line 1015 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [2/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; uri, . const char * ; srv = 0 . ). overridevirtual . Utility function used in various methods for user dataset upload. ; Reimplemented from TDataSetManager.; Definition at line 1874 of file TDataSetManagerFile.cxx. ◆ GetDataSetPath() [1/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . ◆ GetDataSetPath() [2/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TString & ; md5path, . Bool_t ; local = kFALSE . ). protected . Returns path of the indicated dataset. ; The extension is '.root' for all files except for 'dsName==ls' which have extension '.txt'. If 'local' is kTRUE the local cache path is returned instead in the form <cachedir>/<group>.<user>.<dsName>.<ext>. NB: contains a static TString for result, so copy result before using twice. ; Definition at line 351 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [1/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName = 0, . UInt_t ; option = 0 . ). General purpose call to go through the existing datasets. ; If <user> is 0 or ""*"", act on all datasets for the given <group>. If <group> is 0 or ""*"", act on all datasets. If <dsName> is defined, only the information about the specified dataset is processed. Action depends on option; available options:; kExport Return a TMap object containing all the information about datasets in the form: { <group>, <map of users> } | { <map of datasets>, <dataset>} (<dataset> are TFileCollection objects) kShowDefault as kExport with in addition a default selection including the datasets from the current user, the ones from the group an",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:26696,Performance,cache,cachedir,26696,"ct is read, that does not contain the list of files. This is much faster. ; Definition at line 1015 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [2/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; uri, . const char * ; srv = 0 . ). overridevirtual . Utility function used in various methods for user dataset upload. ; Reimplemented from TDataSetManager.; Definition at line 1874 of file TDataSetManagerFile.cxx. ◆ GetDataSetPath() [1/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . ◆ GetDataSetPath() [2/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TString & ; md5path, . Bool_t ; local = kFALSE . ). protected . Returns path of the indicated dataset. ; The extension is '.root' for all files except for 'dsName==ls' which have extension '.txt'. If 'local' is kTRUE the local cache path is returned instead in the form <cachedir>/<group>.<user>.<dsName>.<ext>. NB: contains a static TString for result, so copy result before using twice. ; Definition at line 351 of file TDataSetManagerFile.cxx. ◆ GetDataSets() [1/2]. TMap * TDataSetManagerFile::GetDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName = 0, . UInt_t ; option = 0 . ). General purpose call to go through the existing datasets. ; If <user> is 0 or ""*"", act on all datasets for the given <group>. If <group> is 0 or ""*"", act on all datasets. If <dsName> is defined, only the information about the specified dataset is processed. Action depends on option; available options:; kExport Return a TMap object containing all the information about datasets in the form: { <group>, <map of users> } | { <map of datasets>, <dataset>} (<dataset> are TFileCollection objects) kShowDefault as kExport with in addition a default selection including the datasets from the current user, the ones from the group an",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:29946,Performance,cache,cache,29946,"g; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. ; Reimplemented from TDataSetManager.; Definition at line 1859 of file TDataSetManagerFile.cxx. ◆ GetModTime(). Long_t TDataSetManagerFile::GetModTime ; (; const char * ; uri). Gets last dataset modification time. ; Returns -1 on error, or number of seconds since epoch on success ; Definition at line 1973 of file TDataSetManagerFile.cxx. ◆ GetMSSUrl(). const char * TDataSetManagerFile::GetMSSUrl ; (; ); const. inline . Definition at line 94 of file TDataSetManagerFile.h. ◆ GetStageOpts(). const char * TDataSetManagerFile::GetStageOpts ; (; ); const. inline . Definition at line 95 of file TDataSetManagerFile.h. ◆ Init(). void TDataSetManagerFile::Init ; (; ). protected . Do the real inititialization. ; Definition at line 93 of file TDataSetManagerFile.cxx. ◆ InitLocalCache(). void TDataSetManagerFile::InitLocalCache ; (; ). private . Init the local cache if required. ; Definition at line 234 of file TDataSetManagerFile.cxx. ◆ IsA(). TClass * TDataSetManagerFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDataSetManager.; Definition at line 100 of file TDataSetManagerFile.h. ◆ NotifyUpdate(). Int_t TDataSetManagerFile::NotifyUpdate ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . Long_t ; mtime, . const char * ; checksum = 0 . ). overridevirtual . Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ; For still existing datasets, fill the modification date in seconds anf the checksum. Returns 0 on success, -1 on error ; Reimplemented from TDataSetManager.; Definition at line 382 of file TDataSetManagerFile.cxx. ◆ ParseInitOpts(). void TDataSetManagerFile::ParseInitOpts ; (; const char * ; ins). overridevirtual . Parse the input string and set the init bits accordingly Format is dir:<datas",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:33567,Performance,cache,cached,33567,"plemented from TDataSetManager.; Definition at line 1930 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [1/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = kReopen | kDebug . ). protected . See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ; Definition at line 1783 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [2/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; uri, . UInt_t ; opt = kReopen | kDebug . ). overridevirtual . Scans the dataset indicated by <uri> and returns the number of missing files. ; Returns -1 if any failure occurs, >= 0 on success. For more details, see documentation of ScanDataSet(TFileCollection *dataset, const char *option) ; Reimplemented from TDataSetManager.; Definition at line 1730 of file TDataSetManagerFile.cxx. ◆ ShowCache(). Int_t TDataSetManagerFile::ShowCache ; (; const char * ; uri = 0). overridevirtual . Show cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1319 of file TDataSetManagerFile.cxx. ◆ Streamer(). void TDataSetManagerFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDataSetManager. ◆ StreamerNVirtual(). void TDataSetManagerFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TDataSetManagerFile.h. ◆ UpdateUsedSpace(). void TDataSetManagerFile::UpdateUsedSpace ; (; ). overrideprotectedvirtual . updates the used space maps ; Reimplemented from TDataSetManager.; Definition at line 1959 of file TDataSetManagerFile.cxx. ◆ WriteDataSet(). Int_t TDataSetManagerFile::WriteDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TFileCollection * ; dataset, . UInt_t ; option = 0, . TMD5 * ; checksum = 0 . ). Writes indicated dataset. ; If option has the bit kFileMustExist set, the file must still exist, otherwise ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:957,Security,checksum,checksum,957,". ROOT: TDataSetManagerFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDataSetManagerFile Class Reference. . Definition at line 30 of file TDataSetManagerFile.h. Public Member Functions;  TDataSetManagerFile ();  ;  TDataSetManagerFile (const char *group, const char *user, const char *ins);  Main constructor. ;  ;  TDataSetManagerFile (const char *ins);  Main constructor. ;  ;  ~TDataSetManagerFile () override;  ; Int_t ClearCache (const char *uri=0) override;  Clear cached information matching uri. ;  ; Bool_t ExistsDataSet (const char *uri) override;  Checks if the indicated dataset exits. ;  ; TFileCollection * GetDataSet (const char *group, const char *user, const char *dsName, UInt_t option=0, TMD5 **checksum=0);  Returns the dataset <dsName> of user <user> in group <group>. ;  ; TFileCollection * GetDataSet (const char *uri, const char *srv=0) override;  Utility function used in various methods for user dataset upload. ;  ; TMap * GetDataSets (const char *group, const char *user, const char *dsName=0, UInt_t option=0);  General purpose call to go through the existing datasets. ;  ; TMap * GetDataSets (const char *uri, UInt_t option=TDataSetManager::kExport) override;  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; Long_t GetModTime (const char *uri);  Gets last dataset modification time. ;  ; const char * GetMSSUrl () const;  ; const char * GetStageOpts () const;  ; TClass * IsA () const override;  ; Int_t NotifyUpdate (const char *group, const char *user, const char *dspath, Long_t mtime, const char *checksum=0) override;  Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ;  ; void ParseInitOpts (const char *opts) override;  Parse the inpu",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:1801,Security,checksum,checksum,1801,"t ExistsDataSet (const char *uri) override;  Checks if the indicated dataset exits. ;  ; TFileCollection * GetDataSet (const char *group, const char *user, const char *dsName, UInt_t option=0, TMD5 **checksum=0);  Returns the dataset <dsName> of user <user> in group <group>. ;  ; TFileCollection * GetDataSet (const char *uri, const char *srv=0) override;  Utility function used in various methods for user dataset upload. ;  ; TMap * GetDataSets (const char *group, const char *user, const char *dsName=0, UInt_t option=0);  General purpose call to go through the existing datasets. ;  ; TMap * GetDataSets (const char *uri, UInt_t option=TDataSetManager::kExport) override;  Returns all datasets for the <group> and <user> specified by <uri>. ;  ; Long_t GetModTime (const char *uri);  Gets last dataset modification time. ;  ; const char * GetMSSUrl () const;  ; const char * GetStageOpts () const;  ; TClass * IsA () const override;  ; Int_t NotifyUpdate (const char *group, const char *user, const char *dspath, Long_t mtime, const char *checksum=0) override;  Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ;  ; void ParseInitOpts (const char *opts) override;  Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ;  ; Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt) override;  Register a dataset, perfoming quota checkings and verification, if required. ;  ; Bool_t RemoveDataSet (const char *uri) override;  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, UInt_t option=kReopen|kDebug) override;  Scans the dataset indicated by <uri> and returns the number of missing files. ;  ; Int_t ShowCache (const char *uri=0) override;  Show cached information matching uri. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (T",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:2924,Security,checksum,checksum,2924,"tdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ;  ; void ParseInitOpts (const char *opts) override;  Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ;  ; Int_t RegisterDataSet (const char *uri, TFileCollection *dataSet, const char *opt) override;  Register a dataset, perfoming quota checkings and verification, if required. ;  ; Bool_t RemoveDataSet (const char *uri) override;  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *uri, UInt_t option=kReopen|kDebug) override;  Scans the dataset indicated by <uri> and returns the number of missing files. ;  ; Int_t ShowCache (const char *uri=0) override;  Show cached information matching uri. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteDataSet (const char *group, const char *user, const char *dsName, TFileCollection *dataset, UInt_t option=0, TMD5 *checksum=0);  Writes indicated dataset. ;  ;  Public Member Functions inherited from TDataSetManager;  TDataSetManager (const char *group=0, const char *user=0, const char *options=0);  Main constructor. ;  ;  ~TDataSetManager () override;  Destructor. ;  ; virtual Long64_t GetAvgFileSize () const;  ; virtual Long64_t GetGroupQuota (const char *group);  returns the quota a group is allowed to have ;  ; virtual TMap * GetGroupQuotaMap ();  ; virtual Long64_t GetGroupUsed (const char *group);  Returns the used space of that group. ;  ; virtual TMap * GetSubDataSets (const char *uri, const char *excludeservers);  Partition dataset 'ds' accordingly to the servers. ;  ; virtual void MonitorUsedSpace (TVirtualMonitoringWriter *monitoring);  Log info to the monitoring server. ;  ; Bool_t ParseUri (const char *uri, TString *dsGroup=0, TString *dsUser=0, TString *dsName=0, TString *dsTree=0, Bool_t onlyCurrent=kFALSE",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:7694,Security,hash,hash,7694," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:13772,Security,validat,validate,13772," Bool_t &touched, Bool_t &disappeared);  Check stage status of the file described by ""fileInfo"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TString CreateUri (const char *dsGroup=0, const char *dsUser=0, const char *dsName=0, const char *dsTree=0);  Creates URI for the dataset manger in the form '[[/dsGroup/]dsUser/]dsName[#dsObjPath]', The optional dsObjPath can be in the form [subdir/]objname]'. ;  ; static const char * DeclFileName ();  ; static Int_t FillMetaData (TFileInfo *fi, TDirectory *d, const char *rdir=""/"");  Navigate the directory 'd' (and its subdirectories) looking for TTree objects. ;  ; static TList * GetDataSetSrvMaps ();  Static getter for server mapping list. ;  ; static TList * ParseDataSetSrvMaps (const TString &srvmaps);  Create a server mapping list from the content of 'srvmaps' Return the list (owned by the caller) or 0 if no valid info could be found) ;  ; static void ProcessFile (TFileInfo *fileInfo, Int_t sopt, Bool_t checkstg, Bool_t doall, TFileStager *stager, Bool_t createStager, const char *stageopts, Bool_t dbg, Bool_t &changed, Bool_t &opened);  Locate, stage, or fully validate file ""fileInfo"". ;  ; static Int_t ScanDataSet (TFileCollection *dataset, Int_t fopt, Int_t sopt=0, Int_t ropt=0, Bool_t dbg=kFALSE, Int_t *touched=0, Int_t *opened=0, Int_t *disappeared=0, TList *flist=0, Long64_t avgsz=-1, const char *mss=0, Int_t maxfiles=-1, const char *stageopts=0);  Go through the files in the specified dataset, selecting files according to 'fopt' and doing on these files the actions described by 'sopt'. ;  ; static Int_t ScanFile (TFileInfo *fileinfo, Bool_t notify);  Open the file described by 'fileinfo' to extract the relevant meta-information. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:15168,Security,checksum,checksum,15168,"ons described by 'sopt'. ;  ; static Int_t ScanFile (TFileInfo *fileinfo, Bool_t notify);  Open the file described by 'fileinfo' to extract the relevant meta-information. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BrowseDataSets (const char *group, const char *user, const char *dsName, UInt_t option, TObject *target);  Adds the dataset in the folder of group, user to the list in target. ;  ; Int_t ChecksumDataSet (const char *path, const char *md5path, TString &checksum);  Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ;  ; Int_t CreateLsFile (const char *group, const char *user, Long_t &mtime, TString &checksum);  Create or recreate the dataset lists for 'uri'. ;  ; Bool_t ExistsDataSet (const char *group, const char *user, const char *dsName);  Checks if the indicated dataset exits. ;  ; Int_t FillLsDataSet (const char *group, const char *user, const char *dsName, TList *out, UInt_t option);  Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ;  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName);  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName, TString &md5path, Bool_t local=kFALSE);  Returns path of the indicated dataset. ;  ; void Init ();  Do the real inititialization. ;  ; Bool_t RemoveDataSet (const char *group, const char *user, const char *dsName);  Removes the indicated dataset. ; ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:15194,Security,checksum,checksum,15194,"ons described by 'sopt'. ;  ; static Int_t ScanFile (TFileInfo *fileinfo, Bool_t notify);  Open the file described by 'fileinfo' to extract the relevant meta-information. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BrowseDataSets (const char *group, const char *user, const char *dsName, UInt_t option, TObject *target);  Adds the dataset in the folder of group, user to the list in target. ;  ; Int_t ChecksumDataSet (const char *path, const char *md5path, TString &checksum);  Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ;  ; Int_t CreateLsFile (const char *group, const char *user, Long_t &mtime, TString &checksum);  Create or recreate the dataset lists for 'uri'. ;  ; Bool_t ExistsDataSet (const char *group, const char *user, const char *dsName);  Checks if the indicated dataset exits. ;  ; Int_t FillLsDataSet (const char *group, const char *user, const char *dsName, TList *out, UInt_t option);  Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ;  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName);  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName, TString &md5path, Bool_t local=kFALSE);  Returns path of the indicated dataset. ;  ; void Init ();  Do the real inititialization. ;  ; Bool_t RemoveDataSet (const char *group, const char *user, const char *dsName);  Removes the indicated dataset. ; ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:15371,Security,checksum,checksum,15371," ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BrowseDataSets (const char *group, const char *user, const char *dsName, UInt_t option, TObject *target);  Adds the dataset in the folder of group, user to the list in target. ;  ; Int_t ChecksumDataSet (const char *path, const char *md5path, TString &checksum);  Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ;  ; Int_t CreateLsFile (const char *group, const char *user, Long_t &mtime, TString &checksum);  Create or recreate the dataset lists for 'uri'. ;  ; Bool_t ExistsDataSet (const char *group, const char *user, const char *dsName);  Checks if the indicated dataset exits. ;  ; Int_t FillLsDataSet (const char *group, const char *user, const char *dsName, TList *out, UInt_t option);  Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ;  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName);  ; const char * GetDataSetPath (const char *group, const char *user, const char *dsName, TString &md5path, Bool_t local=kFALSE);  Returns path of the indicated dataset. ;  ; void Init ();  Do the real inititialization. ;  ; Bool_t RemoveDataSet (const char *group, const char *user, const char *dsName);  Removes the indicated dataset. ;  ; Int_t ScanDataSet (const char *group, const char *user, const char *dsName, UInt_t option=kReopen|kDebug);  See documentation of ScanDataSet(TFileCollection *dataset,",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:22667,Security,checksum,checksum,22667,"ied dataset is processed.; The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming kList get a list of dataset names; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. ; Definition at line 577 of file TDataSetManagerFile.cxx. ◆ CheckLocalCache(). Int_t TDataSetManagerFile::CheckLocalCache ; (; const char * ; group, . const char * ; user, . const char * ; dsName = ""ls"", . UInt_t ; option = 0 . ). private . Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetManagerFile::ClearCache ; (; const char * ; uri = 0). overridevirtual . Clear cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1253 of file TDataSetManagerFile.cxx. ◆ CreateLsFile(). Int_t TDataSetManagerFile::CreateLsFile ; (; const char * ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:22707,Security,checksum,checksum,22707," and BrowseDataSet. Available options (to be .or.ed): kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming kList get a list of dataset names; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. ; Definition at line 577 of file TDataSetManagerFile.cxx. ◆ CheckLocalCache(). Int_t TDataSetManagerFile::CheckLocalCache ; (; const char * ; group, . const char * ; user, . const char * ; dsName = ""ls"", . UInt_t ; option = 0 . ). private . Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetManagerFile::ClearCache ; (; const char * ; uri = 0). overridevirtual . Clear cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1253 of file TDataSetManagerFile.cxx. ◆ CreateLsFile(). Int_t TDataSetManagerFile::CreateLsFile ; (; const char * ; group, . const char * ; user, . Long_t & ; mtime, . TString & ; checksum . ).",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:23732,Security,checksum,checksum,23732,"ed dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetManagerFile::ClearCache ; (; const char * ; uri = 0). overridevirtual . Clear cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1253 of file TDataSetManagerFile.cxx. ◆ CreateLsFile(). Int_t TDataSetManagerFile::CreateLsFile ; (; const char * ; group, . const char * ; user, . Long_t & ; mtime, . TString & ; checksum . ). protected . Create or recreate the dataset lists for 'uri'. ; The list are saved in text form in 'uri'/ls.txt for fast browsing and in 'uri'/ls.root in form of TMacro for optimized and portable transfer. Return 0 on success, 1 if the file was empty, -1 on error ; Definition at line 474 of file TDataSetManagerFile.cxx. ◆ DeclFileName(). static const char * TDataSetManagerFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ExistsDataSet() [1/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Checks if the indicated dataset exits. ; Definition at line 1576 of file TDataSetManagerFile.cxx. ◆ ExistsDataSet() [2/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; uri). overridevirtual . Checks if the indicated dataset exits. ; Reimplemented from TDataSetManager.; Definition a",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:25399,Security,checksum,checksum,25399,"har * ; dsName . ). protected . Checks if the indicated dataset exits. ; Definition at line 1576 of file TDataSetManagerFile.cxx. ◆ ExistsDataSet() [2/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; uri). overridevirtual . Checks if the indicated dataset exits. ; Reimplemented from TDataSetManager.; Definition at line 1947 of file TDataSetManagerFile.cxx. ◆ FillLsDataSet(). Int_t TDataSetManagerFile::FillLsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsname, . TList * ; out, . UInt_t ; option . ). protected . Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ; If 'dsname' is defined, open the file and extract the relevant line. Return 0 on success, -1 on failure ; Definition at line 943 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [1/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = 0, . TMD5 ** ; checksum = 0 . ). Returns the dataset <dsName> of user <user> in group <group>. ; If checksum is non-zero, it will contain the pointer to a TMD5 sum object with the checksum of the file, has to be deleted by the user. If option has the bi kReadShort set, the shortobject is read, that does not contain the list of files. This is much faster. ; Definition at line 1015 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [2/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; uri, . const char * ; srv = 0 . ). overridevirtual . Utility function used in various methods for user dataset upload. ; Reimplemented from TDataSetManager.; Definition at line 1874 of file TDataSetManagerFile.cxx. ◆ GetDataSetPath() [1/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . ◆ GetDataSetPath() [2/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . c",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:25484,Security,checksum,checksum,25484," [2/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; uri). overridevirtual . Checks if the indicated dataset exits. ; Reimplemented from TDataSetManager.; Definition at line 1947 of file TDataSetManagerFile.cxx. ◆ FillLsDataSet(). Int_t TDataSetManagerFile::FillLsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsname, . TList * ; out, . UInt_t ; option . ). protected . Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ; If 'dsname' is defined, open the file and extract the relevant line. Return 0 on success, -1 on failure ; Definition at line 943 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [1/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = 0, . TMD5 ** ; checksum = 0 . ). Returns the dataset <dsName> of user <user> in group <group>. ; If checksum is non-zero, it will contain the pointer to a TMD5 sum object with the checksum of the file, has to be deleted by the user. If option has the bi kReadShort set, the shortobject is read, that does not contain the list of files. This is much faster. ; Definition at line 1015 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [2/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; uri, . const char * ; srv = 0 . ). overridevirtual . Utility function used in various methods for user dataset upload. ; Reimplemented from TDataSetManager.; Definition at line 1874 of file TDataSetManagerFile.cxx. ◆ GetDataSetPath() [1/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . ◆ GetDataSetPath() [2/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TString & ; md5path, . Bool_t ; local = kFALSE . ). protected . Returns path of the indicated dataset. ; The extension is ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:25564,Security,checksum,checksum,25564," [2/2]. Bool_t TDataSetManagerFile::ExistsDataSet ; (; const char * ; uri). overridevirtual . Checks if the indicated dataset exits. ; Reimplemented from TDataSetManager.; Definition at line 1947 of file TDataSetManagerFile.cxx. ◆ FillLsDataSet(). Int_t TDataSetManagerFile::FillLsDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsname, . TList * ; out, . UInt_t ; option . ). protected . Check for the 'ls.txt' for 'group' and 'user' and fill the path for the ls file in 'out'. ; If 'dsname' is defined, open the file and extract the relevant line. Return 0 on success, -1 on failure ; Definition at line 943 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [1/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = 0, . TMD5 ** ; checksum = 0 . ). Returns the dataset <dsName> of user <user> in group <group>. ; If checksum is non-zero, it will contain the pointer to a TMD5 sum object with the checksum of the file, has to be deleted by the user. If option has the bi kReadShort set, the shortobject is read, that does not contain the list of files. This is much faster. ; Definition at line 1015 of file TDataSetManagerFile.cxx. ◆ GetDataSet() [2/2]. TFileCollection * TDataSetManagerFile::GetDataSet ; (; const char * ; uri, . const char * ; srv = 0 . ). overridevirtual . Utility function used in various methods for user dataset upload. ; Reimplemented from TDataSetManager.; Definition at line 1874 of file TDataSetManagerFile.cxx. ◆ GetDataSetPath() [1/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . ◆ GetDataSetPath() [2/2]. const char * TDataSetManagerFile::GetDataSetPath ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TString & ; md5path, . Bool_t ; local = kFALSE . ). protected . Returns path of the indicated dataset. ; The extension is ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:30406,Security,checksum,checksum,30406,"aSetManagerFile.cxx. ◆ GetMSSUrl(). const char * TDataSetManagerFile::GetMSSUrl ; (; ); const. inline . Definition at line 94 of file TDataSetManagerFile.h. ◆ GetStageOpts(). const char * TDataSetManagerFile::GetStageOpts ; (; ); const. inline . Definition at line 95 of file TDataSetManagerFile.h. ◆ Init(). void TDataSetManagerFile::Init ; (; ). protected . Do the real inititialization. ; Definition at line 93 of file TDataSetManagerFile.cxx. ◆ InitLocalCache(). void TDataSetManagerFile::InitLocalCache ; (; ). private . Init the local cache if required. ; Definition at line 234 of file TDataSetManagerFile.cxx. ◆ IsA(). TClass * TDataSetManagerFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDataSetManager.; Definition at line 100 of file TDataSetManagerFile.h. ◆ NotifyUpdate(). Int_t TDataSetManagerFile::NotifyUpdate ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . Long_t ; mtime, . const char * ; checksum = 0 . ). overridevirtual . Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ; For still existing datasets, fill the modification date in seconds anf the checksum. Returns 0 on success, -1 on error ; Reimplemented from TDataSetManager.; Definition at line 382 of file TDataSetManagerFile.cxx. ◆ ParseInitOpts(). void TDataSetManagerFile::ParseInitOpts ; (; const char * ; ins). overridevirtual . Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ; See TDataSetManager::ParseInitOpts for the available base options. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). over",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:30628,Security,checksum,checksum,30628,"TDataSetManagerFile::GetStageOpts ; (; ); const. inline . Definition at line 95 of file TDataSetManagerFile.h. ◆ Init(). void TDataSetManagerFile::Init ; (; ). protected . Do the real inititialization. ; Definition at line 93 of file TDataSetManagerFile.cxx. ◆ InitLocalCache(). void TDataSetManagerFile::InitLocalCache ; (; ). private . Init the local cache if required. ; Definition at line 234 of file TDataSetManagerFile.cxx. ◆ IsA(). TClass * TDataSetManagerFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDataSetManager.; Definition at line 100 of file TDataSetManagerFile.h. ◆ NotifyUpdate(). Int_t TDataSetManagerFile::NotifyUpdate ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . Long_t ; mtime, . const char * ; checksum = 0 . ). overridevirtual . Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated or created or modified dataset. ; For still existing datasets, fill the modification date in seconds anf the checksum. Returns 0 on success, -1 on error ; Reimplemented from TDataSetManager.; Definition at line 382 of file TDataSetManagerFile.cxx. ◆ ParseInitOpts(). void TDataSetManagerFile::ParseInitOpts ; (; const char * ; ins). overridevirtual . Parse the input string and set the init bits accordingly Format is dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>] The <datasetdir> is mandatory. ; See TDataSetManager::ParseInitOpts for the available base options. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). overridevirtual . Register a dataset, perfoming quota checkings and verification, if required. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in w",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:34455,Security,checksum,checksum,34455,"cxx. ◆ ShowCache(). Int_t TDataSetManagerFile::ShowCache ; (; const char * ; uri = 0). overridevirtual . Show cached information matching uri. ; Reimplemented from TDataSetManager.; Definition at line 1319 of file TDataSetManagerFile.cxx. ◆ Streamer(). void TDataSetManagerFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDataSetManager. ◆ StreamerNVirtual(). void TDataSetManagerFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TDataSetManagerFile.h. ◆ UpdateUsedSpace(). void TDataSetManagerFile::UpdateUsedSpace ; (; ). overrideprotectedvirtual . updates the used space maps ; Reimplemented from TDataSetManager.; Definition at line 1959 of file TDataSetManagerFile.cxx. ◆ WriteDataSet(). Int_t TDataSetManagerFile::WriteDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TFileCollection * ; dataset, . UInt_t ; option = 0, . TMD5 * ; checksum = 0 . ). Writes indicated dataset. ; If option has the bit kFileMustExist set, the file must still exist, otherwise the new dataset is not written (returns 3 in this case). If checksum is non-zero the files current checksum is checked against it, if it does not match the file is not written (the function returns 2 in this case, if the file has disappeared it is also not written (i.e. checksum implies the bit kFileMustExist set in option). Returns != 0 for success, 0 for error ; Definition at line 1394 of file TDataSetManagerFile.cxx. Member Data Documentation. ◆ fCacheUpdatePeriod. Int_t TDataSetManagerFile::fCacheUpdatePeriod. private . Definition at line 42 of file TDataSetManagerFile.h. ◆ fDataSetDir. TString TDataSetManagerFile::fDataSetDir. private . Definition at line 33 of file TDataSetManagerFile.h. ◆ fDataSetLockFile. TString TDataSetManagerFile::fDataSetLockFile. private . Definition at line 36 of file TDataSetManagerFile.h. ◆ fIsRemote. Bool_t TDataSetManagerFile::fIs",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:34640,Security,checksum,checksum,34640,"er ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDataSetManager. ◆ StreamerNVirtual(). void TDataSetManagerFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TDataSetManagerFile.h. ◆ UpdateUsedSpace(). void TDataSetManagerFile::UpdateUsedSpace ; (; ). overrideprotectedvirtual . updates the used space maps ; Reimplemented from TDataSetManager.; Definition at line 1959 of file TDataSetManagerFile.cxx. ◆ WriteDataSet(). Int_t TDataSetManagerFile::WriteDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TFileCollection * ; dataset, . UInt_t ; option = 0, . TMD5 * ; checksum = 0 . ). Writes indicated dataset. ; If option has the bit kFileMustExist set, the file must still exist, otherwise the new dataset is not written (returns 3 in this case). If checksum is non-zero the files current checksum is checked against it, if it does not match the file is not written (the function returns 2 in this case, if the file has disappeared it is also not written (i.e. checksum implies the bit kFileMustExist set in option). Returns != 0 for success, 0 for error ; Definition at line 1394 of file TDataSetManagerFile.cxx. Member Data Documentation. ◆ fCacheUpdatePeriod. Int_t TDataSetManagerFile::fCacheUpdatePeriod. private . Definition at line 42 of file TDataSetManagerFile.h. ◆ fDataSetDir. TString TDataSetManagerFile::fDataSetDir. private . Definition at line 33 of file TDataSetManagerFile.h. ◆ fDataSetLockFile. TString TDataSetManagerFile::fDataSetLockFile. private . Definition at line 36 of file TDataSetManagerFile.h. ◆ fIsRemote. Bool_t TDataSetManagerFile::fIsRemote. private . Definition at line 39 of file TDataSetManagerFile.h. ◆ fListFile. TString TDataSetManagerFile::fListFile. private . Definition at line 38 of file TDataSetManagerFile.h. ◆ fLocalCacheDir. TString TDataSetManagerFile::fLocalCacheDir. private . Definition at line 41 of ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:34679,Security,checksum,checksum,34679,"er ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDataSetManager. ◆ StreamerNVirtual(). void TDataSetManagerFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TDataSetManagerFile.h. ◆ UpdateUsedSpace(). void TDataSetManagerFile::UpdateUsedSpace ; (; ). overrideprotectedvirtual . updates the used space maps ; Reimplemented from TDataSetManager.; Definition at line 1959 of file TDataSetManagerFile.cxx. ◆ WriteDataSet(). Int_t TDataSetManagerFile::WriteDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TFileCollection * ; dataset, . UInt_t ; option = 0, . TMD5 * ; checksum = 0 . ). Writes indicated dataset. ; If option has the bit kFileMustExist set, the file must still exist, otherwise the new dataset is not written (returns 3 in this case). If checksum is non-zero the files current checksum is checked against it, if it does not match the file is not written (the function returns 2 in this case, if the file has disappeared it is also not written (i.e. checksum implies the bit kFileMustExist set in option). Returns != 0 for success, 0 for error ; Definition at line 1394 of file TDataSetManagerFile.cxx. Member Data Documentation. ◆ fCacheUpdatePeriod. Int_t TDataSetManagerFile::fCacheUpdatePeriod. private . Definition at line 42 of file TDataSetManagerFile.h. ◆ fDataSetDir. TString TDataSetManagerFile::fDataSetDir. private . Definition at line 33 of file TDataSetManagerFile.h. ◆ fDataSetLockFile. TString TDataSetManagerFile::fDataSetLockFile. private . Definition at line 36 of file TDataSetManagerFile.h. ◆ fIsRemote. Bool_t TDataSetManagerFile::fIsRemote. private . Definition at line 39 of file TDataSetManagerFile.h. ◆ fListFile. TString TDataSetManagerFile::fListFile. private . Definition at line 38 of file TDataSetManagerFile.h. ◆ fLocalCacheDir. TString TDataSetManagerFile::fLocalCacheDir. private . Definition at line 41 of ",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataSetManagerFile.html:34851,Security,checksum,checksum,34851,"(). void TDataSetManagerFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TDataSetManagerFile.h. ◆ UpdateUsedSpace(). void TDataSetManagerFile::UpdateUsedSpace ; (; ). overrideprotectedvirtual . updates the used space maps ; Reimplemented from TDataSetManager.; Definition at line 1959 of file TDataSetManagerFile.cxx. ◆ WriteDataSet(). Int_t TDataSetManagerFile::WriteDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . TFileCollection * ; dataset, . UInt_t ; option = 0, . TMD5 * ; checksum = 0 . ). Writes indicated dataset. ; If option has the bit kFileMustExist set, the file must still exist, otherwise the new dataset is not written (returns 3 in this case). If checksum is non-zero the files current checksum is checked against it, if it does not match the file is not written (the function returns 2 in this case, if the file has disappeared it is also not written (i.e. checksum implies the bit kFileMustExist set in option). Returns != 0 for success, 0 for error ; Definition at line 1394 of file TDataSetManagerFile.cxx. Member Data Documentation. ◆ fCacheUpdatePeriod. Int_t TDataSetManagerFile::fCacheUpdatePeriod. private . Definition at line 42 of file TDataSetManagerFile.h. ◆ fDataSetDir. TString TDataSetManagerFile::fDataSetDir. private . Definition at line 33 of file TDataSetManagerFile.h. ◆ fDataSetLockFile. TString TDataSetManagerFile::fDataSetLockFile. private . Definition at line 36 of file TDataSetManagerFile.h. ◆ fIsRemote. Bool_t TDataSetManagerFile::fIsRemote. private . Definition at line 39 of file TDataSetManagerFile.h. ◆ fListFile. TString TDataSetManagerFile::fListFile. private . Definition at line 38 of file TDataSetManagerFile.h. ◆ fLocalCacheDir. TString TDataSetManagerFile::fLocalCacheDir. private . Definition at line 41 of file TDataSetManagerFile.h. ◆ fLockFileTimeLimit. Int_t TDataSetManagerFile::fLockFileTimeLimit. private . Definition at line 37 of file",MatchSource.WIKI,doc/master/classTDataSetManagerFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html
https://root.cern/doc/master/classTDataType.html:5374,Availability,error,error,5374,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:5463,Availability,error,error,5463,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:5618,Availability,error,error,5618,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:5915,Availability,error,error,5915,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:9999,Availability,error,error,9999,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddBuiltins (TCollection *types);  Create the TDataType objects for builtins. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDataType * GetDataType (EDataType type);  Giv",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:12793,Deployability,update,updated,12793,"emberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataType (const TDataType &);  copy constructor ;  ; TDataType & operator= (const TDataType &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void CheckInfo ();  Refresh the underlying information. ;  ; void SetType (const char *name);  Set type id depending on name. ;  . Private Attributes; TypedefInfo_t * fInfo;  ; Long_t fProperty;  ; Int_t fSize;  pointer to CINT typedef info ;  ; TString fTrueName;  ; EDataType fType;  ; Int_t fTypeNameIdx;  ; Int_t fTypeNameLen;  . Static Private Attributes; static TDataType * fgBuiltins [kNumDataTypes] = {nullptr};  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:5380,Integrability,message,message,5380,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:5921,Integrability,message,message,5921,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:6911,Integrability,message,message,6911,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:10005,Integrability,message,message,10005,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddBuiltins (TCollection *types);  Create the TDataType objects for builtins. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDataType * GetDataType (EDataType type);  Giv",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:10378,Integrability,message,message,10378," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddBuiltins (TCollection *types);  Create the TDataType objects for builtins. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDataType * GetDataType (EDataType type);  Given a EDataType type, get the TDataType* that represents it. ;  ; static EDataType GetType (const std::type_info &typeinfo);  Set type id depending on name. ;  ; static const char * GetTypeName (EDataType type);  Return the name of the type. ;  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; st",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:11132,Integrability,depend,depending,11132,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddBuiltins (TCollection *types);  Create the TDataType objects for builtins. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDataType * GetDataType (EDataType type);  Given a EDataType type, get the TDataType* that represents it. ;  ; static EDataType GetType (const std::type_info &typeinfo);  Set type id depending on name. ;  ; static const char * GetTypeName (EDataType type);  Return the name of the type. ;  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ()",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:13161,Integrability,depend,depending,13161,"ion ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataType (const TDataType &);  copy constructor ;  ; TDataType & operator= (const TDataType &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void CheckInfo ();  Refresh the underlying information. ;  ; void SetType (const char *name);  Set type id depending on name. ;  . Private Attributes; TypedefInfo_t * fInfo;  ; Long_t fProperty;  ; Int_t fSize;  pointer to CINT typedef info ;  ; TString fTrueName;  ; EDataType fType;  ; Int_t fTypeNameIdx;  ; Int_t fTypeNameLen;  . Static Private Attributes; static TDataType * fgBuiltins [kNumDataTypes] = {nullptr};  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunordered",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:17755,Integrability,depend,depending,17755,"ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataType::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 79 of file TDataType.h. ◆ DeclFileName(). static const char * TDataType::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 79 of file TDataType.h. ◆ GetDataType(). TDataType * TDataType::GetDataType ; (; EDataType ; type). static . Given a EDataType type, get the TDataType* that represents it. ; Definition at line 451 of file TDataType.cxx. ◆ GetFullTypeName(). const char * TDataType::GetFullTypeName ; (; ); const. Get full type description of typedef, e,g.: ""class TDirectory*"". ; Definition at line 175 of file TDataType.cxx. ◆ GetType() [1/2]. Int_t TDataType::GetType ; (; ); const. inline . Definition at line 68 of file TDataType.h. ◆ GetType() [2/2]. EDataType TDataType::GetType ; (; const std::type_info & ; typeinfo). static . Set type id depending on name. ; Definition at line 189 of file TDataType.cxx. ◆ GetTypeName() [1/2]. TString TDataType::GetTypeName ; (; ). Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"". ; Result needs to be used or copied immediately. ; Definition at line 149 of file TDataType.cxx. ◆ GetTypeName() [2/2]. const char * TDataType::GetTypeName ; (; EDataType ; type). static . Return the name of the type. ; Definition at line 113 of file TDataType.cxx. ◆ IsA(). TClass * TDataType::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 79 of file TDataType.h. ◆ operator=(). TDataType & TDataType::operator= ; (; const TDataType & ; dt). protected . assignment operator ; Definition at line 86 of file TDataType.cxx. ◆ Property(). Long_t TDataType::Property ; (; ); const. overridevirtual . Get property description word. For meaning of bits see EProperty. ; Implements TDictionary.; Definition at line 291 of fi",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:18862,Integrability,depend,depending,18862,"GetTypeName ; (; ). Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"". ; Result needs to be used or copied immediately. ; Definition at line 149 of file TDataType.cxx. ◆ GetTypeName() [2/2]. const char * TDataType::GetTypeName ; (; EDataType ; type). static . Return the name of the type. ; Definition at line 113 of file TDataType.cxx. ◆ IsA(). TClass * TDataType::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 79 of file TDataType.h. ◆ operator=(). TDataType & TDataType::operator= ; (; const TDataType & ; dt). protected . assignment operator ; Definition at line 86 of file TDataType.cxx. ◆ Property(). Long_t TDataType::Property ; (; ); const. overridevirtual . Get property description word. For meaning of bits see EProperty. ; Implements TDictionary.; Definition at line 291 of file TDataType.cxx. ◆ SetType(). void TDataType::SetType ; (; const char * ; name). private . Set type id depending on name. ; Definition at line 300 of file TDataType.cxx. ◆ Size(). Int_t TDataType::Size ; (; ); const. Get size of basic typedef'ed type. ; Definition at line 375 of file TDataType.cxx. ◆ Streamer(). void TDataType::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDataType::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 79 of file TDataType.h. Member Data Documentation. ◆ fgBuiltins. TDataType * TDataType::fgBuiltins = {nullptr}. staticprivate . Definition at line 54 of file TDataType.h. ◆ fInfo. TypedefInfo_t* TDataType::fInfo. private . Definition at line 47 of file TDataType.h. ◆ fProperty. Long_t TDataType::fProperty. private . Definition at line 50 of file TDataType.h. ◆ fSize. Int_t TDataType::fSize. private . pointer to CINT typedef info ; Definition at line 48 of file TDataType.h. ◆ fTrueName. TString TDataType::fTrueName. private .",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:1685,Modifiability,inherit,inherited,1685,"ult TDataType ctor. ;  ; virtual ~TDataType ();  TDataType dtor deletes adopted CINT TypedefInfo object. ;  ; const char * AsString (void *buf) const;  Return string containing value in buffer formatted according to the basic data type. ;  ; const char * GetFullTypeName () const;  Get full type description of typedef, e,g.: ""class TDirectory*"". ;  ; Int_t GetType () const;  ; TString GetTypeName ();  Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"". ;  ; TClass * IsA () const override;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; Int_t Size () const;  Get size of basic typedef'ed type. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNam",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:2177,Modifiability,inherit,inherited,2177,"ype () const;  ; TString GetTypeName ();  Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"". ;  ; TClass * IsA () const override;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; Int_t Size () const;  Get size of basic typedef'ed type. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:3917,Modifiability,inherit,inherited,3917,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:5010,Modifiability,inherit,inheritance,5010,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:7009,Modifiability,inherit,inherits,7009,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:7126,Modifiability,inherit,inherits,7126,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:11273,Modifiability,inherit,inherited,11273,"ite (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AddBuiltins (TCollection *types);  Create the TDataType objects for builtins. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDataType * GetDataType (EDataType type);  Given a EDataType type, get the TDataType* that represents it. ;  ; static EDataType GetType (const std::type_info &typeinfo);  Set type id depending on name. ;  ; static const char * GetTypeName (EDataType type);  Return the name of the type. ;  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:11806,Modifiability,inherit,inherited,11806," * DeclFileName ();  ; static TDataType * GetDataType (EDataType type);  Given a EDataType type, get the TDataType* that represents it. ;  ; static EDataType GetType (const std::type_info &typeinfo);  Set type id depending on name. ;  ; static const char * GetTypeName (EDataType type);  Return the name of the type. ;  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataType (const TDataType &);  copy constructor ;  ; TDataType & operator= (const TDataType &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *locati",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:12016,Modifiability,inherit,inherited,12016," * DeclFileName ();  ; static TDataType * GetDataType (EDataType type);  Given a EDataType type, get the TDataType* that represents it. ;  ; static EDataType GetType (const std::type_info &typeinfo);  Set type id depending on name. ;  ; static const char * GetTypeName (EDataType type);  Return the name of the type. ;  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataType (const TDataType &);  copy constructor ;  ; TDataType & operator= (const TDataType &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *locati",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:12682,Modifiability,inherit,inherited,12682,"emberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataType (const TDataType &);  copy constructor ;  ; TDataType & operator= (const TDataType &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void CheckInfo ();  Refresh the underlying information. ;  ; void SetType (const char *name);  Set type id depending on name. ;  . Private Attributes; TypedefInfo_t * fInfo;  ; Long_t fProperty;  ; Int_t fSize;  pointer to CINT typedef info ;  ; TString fTrueName;  ; EDataType fType;  ; Int_t fTypeNameIdx;  ; Int_t fTypeNameLen;  . Static Private Attributes; static TDataType * fgBuiltins [kNumDataTypes] = {nullptr};  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:12845,Modifiability,inherit,inherited,12845,"emberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataType (const TDataType &);  copy constructor ;  ; TDataType & operator= (const TDataType &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void CheckInfo ();  Refresh the underlying information. ;  ; void SetType (const char *name);  Set type id depending on name. ;  . Private Attributes; TypedefInfo_t * fInfo;  ; Long_t fProperty;  ; Int_t fSize;  pointer to CINT typedef info ;  ; TString fTrueName;  ; EDataType fType;  ; Int_t fTypeNameIdx;  ; Int_t fTypeNameLen;  . Static Private Attributes; static TDataType * fgBuiltins [kNumDataTypes] = {nullptr};  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:13521,Modifiability,inherit,inherited,13521,"pe & operator= (const TDataType &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void CheckInfo ();  Refresh the underlying information. ;  ; void SetType (const char *name);  Set type id depending on name. ;  . Private Attributes; TypedefInfo_t * fInfo;  ; Long_t fProperty;  ; Int_t fSize;  pointer to CINT typedef info ;  ; TString fTrueName;  ; EDataType fType;  ; Int_t fTypeNameIdx;  ; Int_t fTypeNameLen;  . Static Private Attributes; static TDataType * fgBuiltins [kNumDataTypes] = {nullptr};  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:14255,Modifiability,inherit,inherited,14255,"pe fType;  ; Int_t fTypeNameIdx;  ; Int_t fTypeNameLen;  . Static Private Attributes; static TDataType * fgBuiltins [kNumDataTypes] = {nullptr};  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDataType.h>. Inheritance diagram for TDataType:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDataType() [1/3]. TDataType::TDataType ; (; const TDataType & ; dt). protected . c",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:14896,Modifiability,inherit,inherited,14896,"ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDataType.h>. Inheritance diagram for TDataType:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDataType() [1/3]. TDataType::TDataType ; (; const TDataType & ; dt). protected . copy constructor ; Definition at line 72 of file TDataType.cxx. ◆ TDataType() [2/3]. TDataType::TDataType ; (; TypedefInfo_t * ; info = nullptr). Default TDataType ctor. ; TDataTypes are constructed in TROOT via a call to TCling::UpdateListOfTypes(). ; Definition at line 36 of file TDataType.cxx. ◆ TDataType() [3/3]. TDataType::TDataType ; (; const char * ; typenam). Constructor for basic data types, like ""char"", ""unsigned char"", etc. ; Definition at line 59 of file TDataType.cxx. ◆ ~TDataType(). TDataType::~TDataType ; (; ). virtual . TDataType dtor deletes adopted CINT TypedefInfo object. ; Definition at line 105 of file ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:14989,Modifiability,inherit,inherited,14989,"ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDataType.h>. Inheritance diagram for TDataType:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDataType() [1/3]. TDataType::TDataType ; (; const TDataType & ; dt). protected . copy constructor ; Definition at line 72 of file TDataType.cxx. ◆ TDataType() [2/3]. TDataType::TDataType ; (; TypedefInfo_t * ; info = nullptr). Default TDataType ctor. ; TDataTypes are constructed in TROOT via a call to TCling::UpdateListOfTypes(). ; Definition at line 36 of file TDataType.cxx. ◆ TDataType() [3/3]. TDataType::TDataType ; (; const char * ; typenam). Constructor for basic data types, like ""char"", ""unsigned char"", etc. ; Definition at line 59 of file TDataType.cxx. ◆ ~TDataType(). TDataType::~TDataType ; (; ). virtual . TDataType dtor deletes adopted CINT TypedefInfo object. ; Definition at line 105 of file ",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:568,Security,access,accessible,568,". ROOT: TDataType Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TDataType Class Reference. ; Basic data type descriptor (datatype information is obtained from CINT). ; This class describes the attributes of type definitions (typedef's). The TROOT class contains a list of all currently defined types (accessible via TROOT::GetListOfTypes()). ; Definition at line 44 of file TDataType.h. Public Member Functions;  TDataType (const char *typenam);  Constructor for basic data types, like ""char"", ""unsigned char"", etc. ;  ;  TDataType (TypedefInfo_t *info=nullptr);  Default TDataType ctor. ;  ; virtual ~TDataType ();  TDataType dtor deletes adopted CINT TypedefInfo object. ;  ; const char * AsString (void *buf) const;  Return string containing value in buffer formatted according to the basic data type. ;  ; const char * GetFullTypeName () const;  Get full type description of typedef, e,g.: ""class TDirectory*"". ;  ; Int_t GetType () const;  ; TString GetTypeName ();  Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"". ;  ; TClass * IsA () const override;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; Int_t Size () const;  Get size of basic typedef'ed type. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &ot",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDataType.html:3045,Security,hash,hash,3045," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTDataType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDataType.html
https://root.cern/doc/master/classTDatime.html:10940,Availability,failure,failure,10940, and Sunday day 7. ; Definition at line 86 of file TDatime.cxx. ◆ GetGlobalDayFromDate(). Int_t TDatime::GetGlobalDayFromDate ; (; Int_t ; date). static . Static function that returns the global day number from date. ; The input is in TDatime format yyyymmdd (as obtained via TDatime::GetDate()). This algorithm is only accurate for dates later than October 1582 (earliest date on Gregorian calendar). ; Definition at line 449 of file TDatime.cxx. ◆ GetHour(). Int_t TDatime::GetHour ; (; ); const. inline . Definition at line 69 of file TDatime.h. ◆ GetLegalGlobalDayFromDate(). Int_t TDatime::GetLegalGlobalDayFromDate ; (; Int_t ; date). static . Static function that returns the global day number from date. ; The input is in TDatime format yyyymmdd (as obtained via TDatime::GetDate()). This algorithm is only accurate for dates later than October 1582 (earliest date on Gregorian calendar) and it is checked that the date is larger than 15821001 and conversion is correct. In case of conversion failure 0 is returned. No need to use when you know dates are larger than October 1582. ; Definition at line 492 of file TDatime.cxx. ◆ GetMinute(). Int_t TDatime::GetMinute ; (; ); const. inline . Definition at line 70 of file TDatime.h. ◆ GetMonth(). Int_t TDatime::GetMonth ; (; ); const. inline . Definition at line 66 of file TDatime.h. ◆ GetSecond(). Int_t TDatime::GetSecond ; (; ); const. inline . Definition at line 71 of file TDatime.h. ◆ GetTime(). Int_t TDatime::GetTime ; (; ); const. Return time in form of 123623 (i.e. 12:36:23) ; Definition at line 259 of file TDatime.cxx. ◆ GetYear(). Int_t TDatime::GetYear ; (; ); const. inline . Definition at line 65 of file TDatime.h. ◆ IsA(). virtual TClass * TDatime::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 95 of file TDatime.h. ◆ operator=(). TDatime & TDatime::operator= ; (; const TDatime & ; d). inline . Definition at line 99 of file TDatime.h. ◆ Print(). void TDatime::Print ; (;,MatchSource.WIKI,doc/master/classTDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDatime.html
https://root.cern/doc/master/classTDatime.html:6324,Energy Efficiency,allocate,allocated,6324,"ar, . Int_t ; month, . Int_t ; day, . Int_t ; hour, . Int_t ; min, . Int_t ; sec . ). Create a TDatime and set it to the specified year, month, day, time, hour, minute and second. ; See Set() about the format. ; Definition at line 68 of file TDatime.cxx. ◆ TDatime() [6/6]. TDatime::TDatime ; (; const char * ; sqlDateTime). Expects as input a string in SQL date/time compatible format, like: yyyy-mm-dd hh:mm:ss. ; Definition at line 78 of file TDatime.cxx. ◆ ~TDatime(). virtual TDatime::~TDatime ; (; ). inlinevirtual . Definition at line 53 of file TDatime.h. Member Function Documentation. ◆ AsSQLString(). const char * TDatime::AsSQLString ; (; ); const. Return the date & time in SQL compatible string format, like: 1997-01-15 20:16:28. ; The returned string buffer is static and will be reused. ; Definition at line 152 of file TDatime.cxx. ◆ AsString() [1/2]. const char * TDatime::AsString ; (; ); const. Return the date & time as a string (ctime() format). ; Copy result because it points to a statically allocated string. ; Definition at line 102 of file TDatime.cxx. ◆ AsString() [2/2]. const char * TDatime::AsString ; (; char * ; out); const. Return the date & time as a string (ctime() format). ; Result is copied into out (and out is returned). Make sure out can at least contain 26 characters. Thread safe. ; Definition at line 121 of file TDatime.cxx. ◆ Class(). static TClass * TDatime::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDatime::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDatime::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 95 of file TDatime.h. ◆ Convert(). UInt_t TDatime::Convert ; (; Bool_t ; toGMT = kFALSE); const. Convert fDatime from TDatime format to the standard time_t format. ; If toGMT is true, the time offset of the current local time zone is subtracted from the returned time_t. One use o",MatchSource.WIKI,doc/master/classTDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDatime.html
https://root.cern/doc/master/classTDatime.html:8043,Integrability,depend,dependent,8043,"Version of this class ; Definition at line 95 of file TDatime.h. ◆ Convert(). UInt_t TDatime::Convert ; (; Bool_t ; toGMT = kFALSE); const. Convert fDatime from TDatime format to the standard time_t format. ; If toGMT is true, the time offset of the current local time zone is subtracted from the returned time_t. One use of such a non-standard time_t value is to convert a TDatime object that contains local time to GMT, as in this example: TDatime now;; now.Set(now.Convert(kTRUE));; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; TDatimeThis class stores the date and time with a precision of one second in an unsigned 32 bit word (950130...Definition TDatime.h:37; TDatime::Setvoid Set()Set Date/Time to current time as reported by the system.Definition TDatime.cxx:289; TDatime::ConvertUInt_t Convert(Bool_t toGMT=kFALSE) constConvert fDatime from TDatime format to the standard time_t format.Definition TDatime.cxx:182; Caution: the time_t returned from Convert(kTRUE) is incompatible with regular Unix time - it contains an artificial, locale-dependent offset. ; Definition at line 182 of file TDatime.cxx. ◆ Copy(). void TDatime::Copy ; (; TDatime & ; datime); const. Copy this to datime. ; Definition at line 221 of file TDatime.cxx. ◆ DeclFileName(). static const char * TDatime::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 95 of file TDatime.h. ◆ FillBuffer(). void TDatime::FillBuffer ; (; char *& ; buffer). Encode Date/Time into buffer, used by I/O system. ; Definition at line 229 of file TDatime.cxx. ◆ Get(). UInt_t TDatime::Get ; (; ); const. Return raw date/time as encoded by TDatime. ; Note, this value cannot be used to e.g. calculate time differences, as it is an encoded value. To calculate time differences use the Convert() method to get a time in seconds and then subtract the values. ; Definition at line 240 of file TDatime.cxx. ◆ GetDate(). Int_t TDatime::GetDate ; (; ); const. Return date i",MatchSource.WIKI,doc/master/classTDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDatime.html
https://root.cern/doc/master/classTDatime.html:664,Modifiability,portab,portable,664,". ROOT: TDatime Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TDatime Class ReferenceCore ROOT classes » Base ROOT classes. ; This class stores the date and time with a precision of one second in an unsigned 32 bit word (950130 124559). ; The date is stored with the origin being the 1st January 1995.; This class has no support for time zones. The time is assumed to be in the local time of the machine where the object was created. As a result, TDatime objects are not portable between machines operating in different time zones and unsuitable for storing the date/time of data taking events and the like. If absolute time is required, use TTimeStamp. ; Definition at line 37 of file TDatime.h. Public Member Functions;  TDatime ();  Create a TDatime and set it to the current time. ;  ;  TDatime (const char *sqlDateTime);  Expects as input a string in SQL date/time compatible format, like: yyyy-mm-dd hh:mm:ss. ;  ;  TDatime (const TDatime &d);  ;  TDatime (Int_t date, Int_t time);  Create a TDatime and set it to the specified date and time. ;  ;  TDatime (Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec);  Create a TDatime and set it to the specified year, month, day, time, hour, minute and second. ;  ;  TDatime (UInt_t tloc, Bool_t dosDate=kFALSE);  ; virtual ~TDatime ();  ; const char * AsSQLString () const;  Return the date & time in SQL compatible string format, like: 1997-01-15 20:16:28. ;  ; const char * AsString () const;  Return the date & time as a string (ctime() format). ;  ; const char * AsString (char *out) const;  Return the date & time as a string (ctime() format). ;  ; UInt_t Convert (Bool_t toGMT=kFALSE) const;  Convert fDatime from TDatime format to the standard time_t format. ;  ; void Copy (TDatime &datime) const;  Copy this to datime. ;  ; void ",MatchSource.WIKI,doc/master/classTDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDatime.html
https://root.cern/doc/master/classTDatime.html:6627,Safety,safe,safe,6627,"eTime). Expects as input a string in SQL date/time compatible format, like: yyyy-mm-dd hh:mm:ss. ; Definition at line 78 of file TDatime.cxx. ◆ ~TDatime(). virtual TDatime::~TDatime ; (; ). inlinevirtual . Definition at line 53 of file TDatime.h. Member Function Documentation. ◆ AsSQLString(). const char * TDatime::AsSQLString ; (; ); const. Return the date & time in SQL compatible string format, like: 1997-01-15 20:16:28. ; The returned string buffer is static and will be reused. ; Definition at line 152 of file TDatime.cxx. ◆ AsString() [1/2]. const char * TDatime::AsString ; (; ); const. Return the date & time as a string (ctime() format). ; Copy result because it points to a statically allocated string. ; Definition at line 102 of file TDatime.cxx. ◆ AsString() [2/2]. const char * TDatime::AsString ; (; char * ; out); const. Return the date & time as a string (ctime() format). ; Result is copied into out (and out is returned). Make sure out can at least contain 26 characters. Thread safe. ; Definition at line 121 of file TDatime.cxx. ◆ Class(). static TClass * TDatime::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDatime::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDatime::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 95 of file TDatime.h. ◆ Convert(). UInt_t TDatime::Convert ; (; Bool_t ; toGMT = kFALSE); const. Convert fDatime from TDatime format to the standard time_t format. ; If toGMT is true, the time offset of the current local time zone is subtracted from the returned time_t. One use of such a non-standard time_t value is to convert a TDatime object that contains local time to GMT, as in this example: TDatime now;; now.Set(now.Convert(kTRUE));; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; TDatimeThis class stores the date and time with a precision of one second in an unsigned 32 bit word",MatchSource.WIKI,doc/master/classTDatime.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDatime.html
https://root.cern/doc/master/classTDavixFile.html:6415,Availability,recover,recover,6415,"file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void ResetErrno () const;  Method resetting the errno. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offse",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:19664,Availability,error,error,19664," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:19753,Availability,error,error,19753,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:19908,Availability,error,error,19908,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:20205,Availability,error,error,20205,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ; ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:23698,Availability,error,error,23698," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t C",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:45781,Availability,error,error,45781,"Long64_t TDavixFile::GetSize ; (; ); const. virtual . Returns the current file size. ; Returns -1 in case the file could not be stat'ed. ; Reimplemented from TFile.; Definition at line 868 of file TDavixFile.cxx. ◆ Init(). void TDavixFile::Init ; (; Bool_t ; create). privatevirtual . Initialize a TFile object. ; Parameters. [in]createCreate a new file. TFile implementations providing asynchronous open functionality need to override this method to run the appropriate checks before calling this standard initialization part. See TNetXNGFile::Init for an example. ; Reimplemented from TFile.; Definition at line 677 of file TDavixFile.cxx. ◆ IsA(). virtual TClass * TDavixFile::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 128 of file TDavixFile.h. ◆ ReadBuffer() [1/2]. Bool_t TDavixFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). virtual . Read specified byte range from remote file via HTTP. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 737 of file TDavixFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TDavixFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). virtual . Read a buffer from the file at the offset 'pos' in the file. ; Returns kTRUE in case of failure. Compared to ReadBuffer(char*, Int_t), this routine does not change the cursor on the physical file representation (fD) if the data is in this TFile's cache. ; Reimplemented from TFile.; Definition at line 756 of file TDavixFile.cxx. ◆ ReadBufferAsync(). Bool_t TDavixFile::ReadBufferAsync ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:46070,Availability,failure,failure,46070,"alize a TFile object. ; Parameters. [in]createCreate a new file. TFile implementations providing asynchronous open functionality need to override this method to run the appropriate checks before calling this standard initialization part. See TNetXNGFile::Init for an example. ; Reimplemented from TFile.; Definition at line 677 of file TDavixFile.cxx. ◆ IsA(). virtual TClass * TDavixFile::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 128 of file TDavixFile.h. ◆ ReadBuffer() [1/2]. Bool_t TDavixFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). virtual . Read specified byte range from remote file via HTTP. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 737 of file TDavixFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TDavixFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). virtual . Read a buffer from the file at the offset 'pos' in the file. ; Returns kTRUE in case of failure. Compared to ReadBuffer(char*, Int_t), this routine does not change the cursor on the physical file representation (fD) if the data is in this TFile's cache. ; Reimplemented from TFile.; Definition at line 756 of file TDavixFile.cxx. ◆ ReadBufferAsync(). Bool_t TDavixFile::ReadBufferAsync ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 790 of file TDavixFile.cxx. ◆ Seek(). void TDavixFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:46899,Availability,failure,failure,46899,"_t TDavixFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). virtual . Read a buffer from the file at the offset 'pos' in the file. ; Returns kTRUE in case of failure. Compared to ReadBuffer(char*, Int_t), this routine does not change the cursor on the physical file representation (fD) if the data is in this TFile's cache. ; Reimplemented from TFile.; Definition at line 756 of file TDavixFile.cxx. ◆ ReadBufferAsync(). Bool_t TDavixFile::ReadBufferAsync ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 790 of file TDavixFile.cxx. ◆ Seek(). void TDavixFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). virtual . Set position from where to start reading. ; Reimplemented from TFile.; Definition at line 710 of file TDavixFile.cxx. ◆ setCACheck(). void TDavixFile::setCACheck ; (; Bool_t ; check). Enable or disable certificate authority check. ; Definition at line 827 of file TDavixFile.cxx. ◆ Streamer(). virtual void TDavixFile::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDavixFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 128 of file TDavixFile.h. ◆ WriteBuffer(). Bool_t TDavixFile::WriteBuffer ; (; const char * ; buf, . Int_t ; len . ). virtual . Write a buffer to the file. ; This is the basic low level write operation. Returns kTRUE in case of failure. ; Reimplement",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:47868,Availability,failure,failure,47868," ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 790 of file TDavixFile.cxx. ◆ Seek(). void TDavixFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). virtual . Set position from where to start reading. ; Reimplemented from TFile.; Definition at line 710 of file TDavixFile.cxx. ◆ setCACheck(). void TDavixFile::setCACheck ; (; Bool_t ; check). Enable or disable certificate authority check. ; Definition at line 827 of file TDavixFile.cxx. ◆ Streamer(). virtual void TDavixFile::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDavixFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 128 of file TDavixFile.h. ◆ WriteBuffer(). Bool_t TDavixFile::WriteBuffer ; (; const char * ; buf, . Int_t ; len . ). virtual . Write a buffer to the file. ; This is the basic low level write operation. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 809 of file TDavixFile.cxx. Member Data Documentation. ◆ d_ptr. TDavixFileInternal* TDavixFile::d_ptr. private . Definition at line 72 of file TDavixFile.h. Libraries for TDavixFile:. [legend]; The documentation for this class was generated from the following files:; net/davix/inc/TDavixFile.h; net/davix/src/TDavixFile.cxx. TDavixFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:19670,Integrability,message,message,19670," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:20211,Integrability,message,message,20211,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ; ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:20959,Integrability,message,message,20959,"ct with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:23704,Integrability,message,message,23704," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t C",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:24077,Integrability,message,message,24077," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ; ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:26271,Integrability,protocol,protocol,26271,"const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:46122,Integrability,rout,routine,46122," asynchronous open functionality need to override this method to run the appropriate checks before calling this standard initialization part. See TNetXNGFile::Init for an example. ; Reimplemented from TFile.; Definition at line 677 of file TDavixFile.cxx. ◆ IsA(). virtual TClass * TDavixFile::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 128 of file TDavixFile.h. ◆ ReadBuffer() [1/2]. Bool_t TDavixFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). virtual . Read specified byte range from remote file via HTTP. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 737 of file TDavixFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TDavixFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). virtual . Read a buffer from the file at the offset 'pos' in the file. ; Returns kTRUE in case of failure. Compared to ReadBuffer(char*, Int_t), this routine does not change the cursor on the physical file representation (fD) if the data is in this TFile's cache. ; Reimplemented from TFile.; Definition at line 756 of file TDavixFile.cxx. ◆ ReadBufferAsync(). Bool_t TDavixFile::ReadBufferAsync ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 790 of file TDavixFile.cxx. ◆ Seek(). void TDavixFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). virtual . Set position from where to start reading. ; Reimplemented from TFile.; Defi",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:670,Modifiability,config,configure,670,". ROOT: TDavixFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDavixFile Class Reference. . Definition at line 70 of file TDavixFile.h. Public Member Functions;  TDavixFile (const char *url, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Open function for TDavixFile. ;  ;  ~TDavixFile ();  ; std::string DiscoverToken ();  ; void enableGridMode ();  Enable the grid mode The grid Mode configure automatically all grid-CA path, VOMS authentication and grid related extension for a grid analysis usage. ;  ; virtual TString GetNewUrl ();  ; virtual Long64_t GetSize () const;  Returns the current file size. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read specified byte range from remote file via HTTP. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; void setCACheck (Bool_t check);  Enable or disable certificate authority check. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteBuffer (const char *buffer, Int_t bufferLength);  Write a buffer to the file. ;  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompression",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:1832,Modifiability,inherit,inherited,1832,"ze () const;  Returns the current file size. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read specified byte range from remote file via HTTP. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; void setCACheck (Bool_t check);  Enable or disable certificate authority check. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteBuffer (const char *buffer, Int_t bufferLength);  Write a buffer to the file. ;  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Close (Option_t *option="""") override;  Close a file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; virtual TKey * CreateKey (TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  F",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:8759,Modifiability,inherit,inherited,8759,"fer &) override;  Stream a TFile object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) const override;  One can not save a const TDirectory object. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) override;  Write memory objects to this file. ;  ; virtual void WriteFree ();  Write FREE linked list on the file. ;  ; virtual void WriteHeader ();  Write File Header. ;  ; virtual UShort_t WriteProcessID (TProcessID *pid);  Check if the ProcessID pidd is already in the file, if not, add it and return the index number in the local file list. ;  ; virtual void WriteStreamerInfo ();  Write the list of TStreamerInfo as a single object in this file The class Streamer description for all classes written to this file is saved. ;  ;  Public Member Functions inherited from TDirectoryFile;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to this directory. ;  ; Int_t AppendKey (TKey *key) override;  Insert key in the linked list of keys of this directory. ;  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) override;  ; Bool_t cd () override;  Change current directory to ""this"" directory. ;  ; Bool_t cd (const char *path) override;  Change current directory the directory described by the path if given one. ;  ; TObject * CloneObject (const TObject *obj, Bool_t autoadd=kTRUE) override;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:14528,Modifiability,inherit,inherited,14528,"d in the dictionary of the parent class and store the corresponding exec number into fBits. ;  ; void SetWritable (Bool_t writable=kTRUE) override;  Set the new value of fWritable recursively. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteDirHeader () override;  Overwrite the Directory header record. ;  ; void WriteKeys () override;  Write Keys linked list on the file. ;  ; Int_t WriteObjectAny (const void *obj, const char *classname, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object from pointer of class classname in this directory. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object of class with dictionary cl in this directory. ;  ; Int_t WriteTObject (const TObject *obj, const char *name=nullptr, Option_t *option="""", Int_t bufsize=0) override;  Write object obj to this directory. ;  ;  Public Member Functions inherited from TDirectory;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; void Clear (Option_t *option="""") override;  Delete all objects from a Directory list. ;  ; virtual void DeleteAll (Option_t *option="""");  Delete all objects from memory. ;  ; TObject * FindObject (const char *name) const override;  Find object by name in the list of memory objects. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object in the list of memory objects. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; virtual TList * GetList () const;  ; TObject * GetMother () const;  ; TDirectory * GetMotherDir () const;  ; template<class T > ; void GetObject (const char *namecycle, T *&ptr);  Get an object with proper type checking. ;  ; virtual const char * G",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:16962,Modifiability,inherit,inherited,16962,"ecursively remove object from a Directory. ;  ; virtual TObject * Remove (TObject *);  Remove an object from the in-memory list. ;  ; virtual void SetMother (TObject *mother);  ; void SetName (const char *newname) override;  Set the name for directory If the directory name is changed after the directory was written once, ROOT currently would NOT change the name of correspondent key in the mother directory. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<typename T > ; std::enable_if_t<!std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; template<typename T > ; std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:18462,Modifiability,inherit,inherited,18462," *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:19300,Modifiability,inherit,inheritance,19300,"amer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:21057,Modifiability,inherit,inherits,21057,"Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:21174,Modifiability,inherit,inherits,21174,"nst char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:24310,Modifiability,inherit,inherited,24310,"t);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static cons",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:27543,Modifiability,inherit,inherited,27543,"l_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:27761,Modifiability,inherit,inherited,27761,"l_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:28594,Modifiability,inherit,inherited,28594,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; Long64_t DavixPReadBuffer (Davix_fd *fd, char *buf, Long64_t pos, Int_t len);  ; Long64_t DavixReadBuffer (Davix_fd *fd, char *buf, Int_t len);  ; Long64_t DavixReadBuffers (Davix_fd *fd, char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  ; Int_t DavixStat (struct stat *st) const;  ; Long64_t DavixWriteBuffer (Davix_fd *fd, const char *buf, Int_t len);  ; Double_t eventStart ();  ; void eventStop (Double_t t, Long64_t len, bool read=true);  set TFile state info ;  ; void Init (Bo",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:28804,Modifiability,inherit,inherited,28804,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; Long64_t DavixPReadBuffer (Davix_fd *fd, char *buf, Long64_t pos, Int_t len);  ; Long64_t DavixReadBuffer (Davix_fd *fd, char *buf, Int_t len);  ; Long64_t DavixReadBuffers (Davix_fd *fd, char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  ; Int_t DavixStat (struct stat *st) const;  ; Long64_t DavixWriteBuffer (Davix_fd *fd, const char *buf, Int_t len);  ; Double_t eventStart ();  ; void eventStop (Double_t t, Long64_t len, bool read=true);  set TFile state info ;  ; void Init (Bo",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:29941,Modifiability,inherit,inherited,29941,"rn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; Long64_t DavixPReadBuffer (Davix_fd *fd, char *buf, Long64_t pos, Int_t len);  ; Long64_t DavixReadBuffer (Davix_fd *fd, char *buf, Int_t len);  ; Long64_t DavixReadBuffers (Davix_fd *fd, char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  ; Int_t DavixStat (struct stat *st) const;  ; Long64_t DavixWriteBuffer (Davix_fd *fd, const char *buf, Int_t len);  ; Double_t eventStart ();  ; void eventStop (Double_t t, Long64_t len, bool read=true);  set TFile state info ;  ; void Init (Bool_t init);  Initialize a TFile object. ;  . Private Attributes; TDavixFileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kClos",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:30965,Modifiability,inherit,inherited,30965,"AOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirRe",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:31071,Modifiability,inherit,inherited,31071,"AOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirRe",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:31712,Modifiability,inherit,inherited,31712,"inaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:31903,Modifiability,inherit,inherited,31903,"ited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; virtual Int_t SysClose (Int_t fd);  Interface to system close. All arguments like in POSIX close(). ;  ; virtual Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode);  Interface to system open. All arguments like in POSIX open(). ;  ; virtual I",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:32002,Modifiability,inherit,inherited,32002,"ited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; virtual Int_t SysClose (Int_t fd);  Interface to system close. All arguments like in POSIX close(). ;  ; virtual Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode);  Interface to system open. All arguments like in POSIX open(). ;  ; virtual I",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:33773,Modifiability,inherit,inherited,33773,"virtual Int_t SysClose (Int_t fd);  Interface to system close. All arguments like in POSIX close(). ;  ; virtual Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode);  Interface to system open. All arguments like in POSIX open(). ;  ; virtual Int_t SysRead (Int_t fd, void *buf, Int_t len);  Interface to system read. All arguments like in POSIX read(). ;  ; virtual Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence);  Interface to system lseek. ;  ; virtual Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime);  Return file stat information. ;  ; virtual Int_t SysSync (Int_t fd);  Interface to system fsync. All arguments like in POSIX fsync(). ;  ; virtual Int_t SysWrite (Int_t fd, const void *buf, Int_t len);  Interface to system write. All arguments like in POSIX write(). ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr); ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:34163,Modifiability,inherit,inherited,34163," offset, Int_t whence);  Interface to system lseek. ;  ; virtual Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime);  Return file stat information. ;  ; virtual Int_t SysSync (Int_t fd);  Interface to system fsync. All arguments like in POSIX fsync(). ;  ; virtual Int_t SysWrite (Int_t fd, const void *buf, Int_t len);  Interface to system write. All arguments like in POSIX write(). ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ; ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:35052,Modifiability,inherit,inherited,35052,"ted data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:35270,Modifiability,inherit,inherited,35270,"ctory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr}",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:35608,Modifiability,inherit,inherited,35608,"y (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; b",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:38646,Modifiability,inherit,inherited,38646,;  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vect,MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:39482,Modifiability,inherit,inherited,39482,"Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; stat",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:39938,Modifiability,inherit,inherited,39938,"ctory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:40027,Modifiability,inherit,inherited,40027,"ctory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:41356,Modifiability,inherit,inherited,41356,"bjects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDavixFile.h>. Inheritance diagram for TDavixFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDavixFile(). TDavixFile::TDavixFile ; (; const char * ; url, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Open function for TDavixFile. ; TDavixFile supports several options :. GRID_MODE=yes : enable the grid authentication and CA support; CA_CHECK=no : remove all the certificate authority check, this option can create a security vulnerability; S3SECKEY=string : Amazon S3 secret token; S3ACCKEY=string : Amazon S3 access token; S3REGION=string : Amazon S3 region. Optional, if provided, davix will use v4 signature",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:44157,Modifiability,config,configure,44157,"e::DavixReadBuffer ; (; Davix_fd * ; fd, . char * ; buf, . Int_t ; len . ). private . Definition at line 911 of file TDavixFile.cxx. ◆ DavixReadBuffers(). Long64_t TDavixFile::DavixReadBuffers ; (; Davix_fd * ; fd, . char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). private . Definition at line 971 of file TDavixFile.cxx. ◆ DavixStat(). Int_t TDavixFile::DavixStat ; (; struct stat * ; st); const. private . ◆ DavixWriteBuffer(). Long64_t TDavixFile::DavixWriteBuffer ; (; Davix_fd * ; fd, . const char * ; buf, . Int_t ; len . ). private . Definition at line 931 of file TDavixFile.cxx. ◆ DeclFileName(). static const char * TDavixFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 128 of file TDavixFile.h. ◆ DiscoverToken(). std::string TDavixFile::DiscoverToken ; (; ). ◆ enableGridMode(). void TDavixFile::enableGridMode ; (; ). Enable the grid mode The grid Mode configure automatically all grid-CA path, VOMS authentication and grid related extension for a grid analysis usage. ; Definition at line 834 of file TDavixFile.cxx. ◆ eventStart(). Double_t TDavixFile::eventStart ; (; ). private . Definition at line 882 of file TDavixFile.cxx. ◆ eventStop(). void TDavixFile::eventStop ; (; Double_t ; t, . Long64_t ; len, . bool ; read = true . ). private . set TFile state info ; Definition at line 892 of file TDavixFile.cxx. ◆ GetNewUrl(). TString TDavixFile::GetNewUrl ; (; ). virtual . Reimplemented from TFile.; Definition at line 693 of file TDavixFile.cxx. ◆ GetSize(). Long64_t TDavixFile::GetSize ; (; ); const. virtual . Returns the current file size. ; Returns -1 in case the file could not be stat'ed. ; Reimplemented from TFile.; Definition at line 868 of file TDavixFile.cxx. ◆ Init(). void TDavixFile::Init ; (; Bool_t ; create). privatevirtual . Initialize a TFile object. ; Parameters. [in]createCreate a new file. TFile implementations providing asynchronous open functionality need to ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:3701,Performance,cache,cache,3701,"Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; virtual void DrawMap (const char *keys=""*"", Option_t *option="""");  Draw map of objects in this file. ;  ; void FillBuffer (char *&buffer) override;  Encode file output buffer. ;  ; virtual void Flush ();  Synchronize a file's in-memory and on-disk states. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () const;  Max number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen)",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:3794,Performance,cache,cache,3794,"cle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; virtual void DrawMap (const char *keys=""*"", Option_t *option="""");  Draw map of objects in this file. ;  ; void FillBuffer (char *&buffer) override;  Encode file output buffer. ;  ; virtual void Flush ();  Synchronize a file's in-memory and on-disk states. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () const;  Max number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:4890,Performance,cache,cached,4890,"ndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; TClass * IsA () const override;  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Match",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:6658,Performance,cache,cache,6658,"n the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void ResetErrno () const;  Method resetting the errno. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ; ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:6749,Performance,cache,cache,6749,"n the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void ResetErrno () const;  Method resetting the errno. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ; ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:6806,Performance,cache,cache,6806,"  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void ResetErrno () const;  Method resetting the errno. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void Streamer (TBuffer &) override",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:6842,Performance,cache,cache,6842,"  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void ResetErrno () const;  Method resetting the errno. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void Streamer (TBuffer &) override",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:11622,Performance,perform,performed,11622,"ject with name. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; TObject * Get (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Int_t GetBufferSize () const override;  Return the buffer size to create new TKeys. ;  ; const TDatime & GetCreationDate () const;  ; TDirectory * GetDirectory (const char *apath, Bool_t printError=false, const char *funcname=""GetDirectory"") override;  Find a directory named ""apath"". ;  ; TFile * GetFile () const override;  ; TKey * GetKey (const char *name, Short_t cycle=9999) const override;  Return pointer to key with name,cycle. ;  ; TList * GetListOfKeys () const override;  ; const TDatime & GetModificationDate () const;  ; Int_t GetNbytesKeys () const override;  ; Int_t GetNkeys () const override;  ; void * GetObjectChecked (const char *namecycle, const char *classname) override;  See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl) ;  ; void * GetObjectChecked (const char *namecycle, const TClass *cl) override;  Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ;  ; void * GetObjectUnchecked (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Long64_t GetSeekDir () const override;  ; Long64_t GetSeekKeys () const override;  ; Long64_t GetSeekParent () const override;  ; Bool_t IsModified () const override;  ; Bool_t IsWritable () const override;  ; TDirectory * mkdir (const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE) override;  Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."". ;  ; TFile * OpenFile (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t neto",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:25288,Performance,cache,cache,25288,"ar * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:26703,Performance,cache,cacheDir,26703,"nction returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public M",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:26821,Performance,cache,cache,26821,"nction returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public M",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:27479,Performance,cache,cache,27479,"=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecy",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:32256,Performance,cache,cache,32256,"ited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; virtual Int_t SysClose (Int_t fd);  Interface to system close. All arguments like in POSIX close(). ;  ; virtual Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode);  Interface to system open. All arguments like in POSIX open(). ;  ; virtual I",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:32810,Performance,cache,cache,32810,"_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; virtual Int_t SysClose (Int_t fd);  Interface to system close. All arguments like in POSIX close(). ;  ; virtual Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode);  Interface to system open. All arguments like in POSIX open(). ;  ; virtual Int_t SysRead (Int_t fd, void *buf, Int_t len);  Interface to system read. All arguments like in POSIX read(). ;  ; virtual Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence);  Interface to system lseek. ;  ; virtual Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime);  Return file stat information. ;  ; virtual Int_t SysSync (Int_t fd);  Interface to system fsync. All arguments like in POSIX fsync(). ;  ; virtual Int_t SysWrite (Int_t fd, const void *buf, Int_t len);  Interface to system write. All arguments like in POSIX write(). ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inhe",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:33733,Performance,cache,cache,33733,"C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; virtual Int_t SysClose (Int_t fd);  Interface to system close. All arguments like in POSIX close(). ;  ; virtual Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode);  Interface to system open. All arguments like in POSIX open(). ;  ; virtual Int_t SysRead (Int_t fd, void *buf, Int_t len);  Interface to system read. All arguments like in POSIX read(). ;  ; virtual Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence);  Interface to system lseek. ;  ; virtual Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime);  Return file stat information. ;  ; virtual Int_t SysSync (Int_t fd);  Interface to system fsync. All arguments like in POSIX fsync(). ;  ; virtual Int_t SysWrite (Int_t fd, const void *buf, Int_t len);  Interface to system write. All arguments like in POSIX write(). ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TCo",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:36313,Performance,cache,cache,36313,"Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:36387,Performance,cache,cache,36387,"Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:36471,Performance,cache,cache,36471,"Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:37695,Performance,cache,cache,37695,"; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes for StreamerInfo record. ;  ; Bool_t fNoAnchorInName {kFALSE};  !True if we don't want to force the anchor to be appended to the file name ;  ; Int_t fNProcessIDs {0};  Number of TProcessID written to this file. ;  ; Long64_t fOffset {0};  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to crea",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:37947,Performance,cache,cache,37947,"; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes for StreamerInfo record. ;  ; Bool_t fNoAnchorInName {kFALSE};  !True if we don't want to force the anchor to be appended to the file name ;  ; Int_t fNProcessIDs {0};  Number of TProcessID written to this file. ;  ; Long64_t fOffset {0};  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {n",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:40461,Performance,cache,cache,40461,"ectory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:40491,Performance,cache,cached,40491,"ectory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:46229,Performance,cache,cache,46229," asynchronous open functionality need to override this method to run the appropriate checks before calling this standard initialization part. See TNetXNGFile::Init for an example. ; Reimplemented from TFile.; Definition at line 677 of file TDavixFile.cxx. ◆ IsA(). virtual TClass * TDavixFile::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 128 of file TDavixFile.h. ◆ ReadBuffer() [1/2]. Bool_t TDavixFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). virtual . Read specified byte range from remote file via HTTP. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 737 of file TDavixFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TDavixFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). virtual . Read a buffer from the file at the offset 'pos' in the file. ; Returns kTRUE in case of failure. Compared to ReadBuffer(char*, Int_t), this routine does not change the cursor on the physical file representation (fD) if the data is in this TFile's cache. ; Reimplemented from TFile.; Definition at line 756 of file TDavixFile.cxx. ◆ ReadBufferAsync(). Bool_t TDavixFile::ReadBufferAsync ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 790 of file TDavixFile.cxx. ◆ Seek(). void TDavixFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). virtual . Set position from where to start reading. ; Reimplemented from TFile.; Defi",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:6415,Safety,recover,recover,6415,"file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void ResetErrno () const;  Method resetting the errno. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offse",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:25924,Safety,timeout,timeout,25924,"; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static v",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:27121,Safety,timeout,timeout,27121,"e opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; s",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:27142,Safety,timeout,timeout,27142,"e opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; s",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:27181,Safety,timeout,timeout,27181," Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:30482,Safety,timeout,timeout,30482," Int_t len);  ; Long64_t DavixReadBuffers (Davix_fd *fd, char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  ; Int_t DavixStat (struct stat *st) const;  ; Long64_t DavixWriteBuffer (Davix_fd *fd, const char *buf, Int_t len);  ; Double_t eventStart ();  ; void eventStop (Double_t t, Long64_t len, bool read=true);  set TFile state info ;  ; void Init (Bool_t init);  Initialize a TFile object. ;  . Private Attributes; TDavixFileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:717,Security,authenticat,authentication,717,". ROOT: TDavixFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDavixFile Class Reference. . Definition at line 70 of file TDavixFile.h. Public Member Functions;  TDavixFile (const char *url, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Open function for TDavixFile. ;  ;  ~TDavixFile ();  ; std::string DiscoverToken ();  ; void enableGridMode ();  Enable the grid mode The grid Mode configure automatically all grid-CA path, VOMS authentication and grid related extension for a grid analysis usage. ;  ; virtual TString GetNewUrl ();  ; virtual Long64_t GetSize () const;  Returns the current file size. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read specified byte range from remote file via HTTP. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; void setCACheck (Bool_t check);  Enable or disable certificate authority check. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteBuffer (const char *buffer, Int_t bufferLength);  Write a buffer to the file. ;  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompression",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:1529,Security,certificate,certificate,1529,"ault);  Open function for TDavixFile. ;  ;  ~TDavixFile ();  ; std::string DiscoverToken ();  ; void enableGridMode ();  Enable the grid mode The grid Mode configure automatically all grid-CA path, VOMS authentication and grid related extension for a grid analysis usage. ;  ; virtual TString GetNewUrl ();  ; virtual Long64_t GetSize () const;  Returns the current file size. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read specified byte range from remote file via HTTP. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; void setCACheck (Bool_t check);  Enable or disable certificate authority check. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteBuffer (const char *buffer, Int_t bufferLength);  Write a buffer to the file. ;  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Close (Option_t *option="""") override;  Close a file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:5655,Security,access,access,5655,"Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; TClass * IsA () const override;  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void ResetErrno () const;  Method resetting the er",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:6529,Security,access,access,6529,"ed bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void ResetErrno () const;  Method resetting the errno. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual voi",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:17749,Security,hash,hash,17749," std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:41284,Security,hash,hashes,41284,"bjects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDavixFile.h>. Inheritance diagram for TDavixFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDavixFile(). TDavixFile::TDavixFile ; (; const char * ; url, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Open function for TDavixFile. ; TDavixFile supports several options :. GRID_MODE=yes : enable the grid authentication and CA support; CA_CHECK=no : remove all the certificate authority check, this option can create a security vulnerability; S3SECKEY=string : Amazon S3 secret token; S3ACCKEY=string : Amazon S3 access token; S3REGION=string : Amazon S3 region. Optional, if provided, davix will use v4 signature",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:41976,Security,authenticat,authentication,41976,"l TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDavixFile.h>. Inheritance diagram for TDavixFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDavixFile(). TDavixFile::TDavixFile ; (; const char * ; url, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Open function for TDavixFile. ; TDavixFile supports several options :. GRID_MODE=yes : enable the grid authentication and CA support; CA_CHECK=no : remove all the certificate authority check, this option can create a security vulnerability; S3SECKEY=string : Amazon S3 secret token; S3ACCKEY=string : Amazon S3 access token; S3REGION=string : Amazon S3 region. Optional, if provided, davix will use v4 signatures.; S3TOKEN=string : Amazon STS temporary credentials token. Several parameters can be used if separated with whitespace ; Definition at line 658 of file TDavixFile.cxx. ◆ ~TDavixFile(). TDavixFile::~TDavixFile ; (; ). Definition at line 669 of file TDavixFile.cxx. Member Function Documentation. ◆ Class(). static TClass * TDavixFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDavixFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDavixFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 128 of file TDavixFile.h. ◆ DavixPReadBuffer(). Long64_t TDavixFile::DavixPReadBuffer ; (; Davix_fd * ; fd, . char * ; buf, . Long64_t ; pos, . Int_t",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:42036,Security,certificate,certificate,42036,"l TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDavixFile.h>. Inheritance diagram for TDavixFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDavixFile(). TDavixFile::TDavixFile ; (; const char * ; url, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Open function for TDavixFile. ; TDavixFile supports several options :. GRID_MODE=yes : enable the grid authentication and CA support; CA_CHECK=no : remove all the certificate authority check, this option can create a security vulnerability; S3SECKEY=string : Amazon S3 secret token; S3ACCKEY=string : Amazon S3 access token; S3REGION=string : Amazon S3 region. Optional, if provided, davix will use v4 signatures.; S3TOKEN=string : Amazon STS temporary credentials token. Several parameters can be used if separated with whitespace ; Definition at line 658 of file TDavixFile.cxx. ◆ ~TDavixFile(). TDavixFile::~TDavixFile ; (; ). Definition at line 669 of file TDavixFile.cxx. Member Function Documentation. ◆ Class(). static TClass * TDavixFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDavixFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDavixFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 128 of file TDavixFile.h. ◆ DavixPReadBuffer(). Long64_t TDavixFile::DavixPReadBuffer ; (; Davix_fd * ; fd, . char * ; buf, . Long64_t ; pos, . Int_t",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:42090,Security,secur,security,42090,"l TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDavixFile.h>. Inheritance diagram for TDavixFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDavixFile(). TDavixFile::TDavixFile ; (; const char * ; url, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Open function for TDavixFile. ; TDavixFile supports several options :. GRID_MODE=yes : enable the grid authentication and CA support; CA_CHECK=no : remove all the certificate authority check, this option can create a security vulnerability; S3SECKEY=string : Amazon S3 secret token; S3ACCKEY=string : Amazon S3 access token; S3REGION=string : Amazon S3 region. Optional, if provided, davix will use v4 signatures.; S3TOKEN=string : Amazon STS temporary credentials token. Several parameters can be used if separated with whitespace ; Definition at line 658 of file TDavixFile.cxx. ◆ ~TDavixFile(). TDavixFile::~TDavixFile ; (; ). Definition at line 669 of file TDavixFile.cxx. Member Function Documentation. ◆ Class(). static TClass * TDavixFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDavixFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDavixFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 128 of file TDavixFile.h. ◆ DavixPReadBuffer(). Long64_t TDavixFile::DavixPReadBuffer ; (; Davix_fd * ; fd, . char * ; buf, . Long64_t ; pos, . Int_t",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:42184,Security,access,access,42184,"l TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDavixFile.h>. Inheritance diagram for TDavixFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDavixFile(). TDavixFile::TDavixFile ; (; const char * ; url, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Open function for TDavixFile. ; TDavixFile supports several options :. GRID_MODE=yes : enable the grid authentication and CA support; CA_CHECK=no : remove all the certificate authority check, this option can create a security vulnerability; S3SECKEY=string : Amazon S3 secret token; S3ACCKEY=string : Amazon S3 access token; S3REGION=string : Amazon S3 region. Optional, if provided, davix will use v4 signatures.; S3TOKEN=string : Amazon STS temporary credentials token. Several parameters can be used if separated with whitespace ; Definition at line 658 of file TDavixFile.cxx. ◆ ~TDavixFile(). TDavixFile::~TDavixFile ; (; ). Definition at line 669 of file TDavixFile.cxx. Member Function Documentation. ◆ Class(). static TClass * TDavixFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDavixFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDavixFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 128 of file TDavixFile.h. ◆ DavixPReadBuffer(). Long64_t TDavixFile::DavixPReadBuffer ; (; Davix_fd * ; fd, . char * ; buf, . Long64_t ; pos, . Int_t",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:44204,Security,authenticat,authentication,44204,"e::DavixReadBuffer ; (; Davix_fd * ; fd, . char * ; buf, . Int_t ; len . ). private . Definition at line 911 of file TDavixFile.cxx. ◆ DavixReadBuffers(). Long64_t TDavixFile::DavixReadBuffers ; (; Davix_fd * ; fd, . char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). private . Definition at line 971 of file TDavixFile.cxx. ◆ DavixStat(). Int_t TDavixFile::DavixStat ; (; struct stat * ; st); const. private . ◆ DavixWriteBuffer(). Long64_t TDavixFile::DavixWriteBuffer ; (; Davix_fd * ; fd, . const char * ; buf, . Int_t ; len . ). private . Definition at line 931 of file TDavixFile.cxx. ◆ DeclFileName(). static const char * TDavixFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 128 of file TDavixFile.h. ◆ DiscoverToken(). std::string TDavixFile::DiscoverToken ; (; ). ◆ enableGridMode(). void TDavixFile::enableGridMode ; (; ). Enable the grid mode The grid Mode configure automatically all grid-CA path, VOMS authentication and grid related extension for a grid analysis usage. ; Definition at line 834 of file TDavixFile.cxx. ◆ eventStart(). Double_t TDavixFile::eventStart ; (; ). private . Definition at line 882 of file TDavixFile.cxx. ◆ eventStop(). void TDavixFile::eventStop ; (; Double_t ; t, . Long64_t ; len, . bool ; read = true . ). private . set TFile state info ; Definition at line 892 of file TDavixFile.cxx. ◆ GetNewUrl(). TString TDavixFile::GetNewUrl ; (; ). virtual . Reimplemented from TFile.; Definition at line 693 of file TDavixFile.cxx. ◆ GetSize(). Long64_t TDavixFile::GetSize ; (; ); const. virtual . Returns the current file size. ; Returns -1 in case the file could not be stat'ed. ; Reimplemented from TFile.; Definition at line 868 of file TDavixFile.cxx. ◆ Init(). void TDavixFile::Init ; (; Bool_t ; create). privatevirtual . Initialize a TFile object. ; Parameters. [in]createCreate a new file. TFile implementations providing asynchronous open functionality need to ",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:47284,Security,certificate,certificate,47284,"of file TDavixFile.cxx. ◆ ReadBufferAsync(). Bool_t TDavixFile::ReadBufferAsync ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 790 of file TDavixFile.cxx. ◆ Seek(). void TDavixFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). virtual . Set position from where to start reading. ; Reimplemented from TFile.; Definition at line 710 of file TDavixFile.cxx. ◆ setCACheck(). void TDavixFile::setCACheck ; (; Bool_t ; check). Enable or disable certificate authority check. ; Definition at line 827 of file TDavixFile.cxx. ◆ Streamer(). virtual void TDavixFile::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDavixFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 128 of file TDavixFile.h. ◆ WriteBuffer(). Bool_t TDavixFile::WriteBuffer ; (; const char * ; buf, . Int_t ; len . ). virtual . Write a buffer to the file. ; This is the basic low level write operation. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 809 of file TDavixFile.cxx. Member Data Documentation. ◆ d_ptr. TDavixFileInternal* TDavixFile::d_ptr. private . Definition at line 72 of file TDavixFile.h. Libraries for TDavixFile:. [legend]; The documentation for this class was generated from the following files:; net/davix/inc/TDavixFile.h; net/davix/src/TDavixFile.cxx. TDavixFile. ROOT master - Reference Gu",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixFile.html:4661,Testability,log,logical,4661,"ax number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; TClass * IsA () const override;  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeF",MatchSource.WIKI,doc/master/classTDavixFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixFile.html
https://root.cern/doc/master/classTDavixSystem.html:3559,Availability,error,error,3559,"ndler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t);  Add timer to list of system timers. ;  ; virtual int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1);  Announce TCP/IP service. ;  ; virtual int AnnounceUdpService (int port, int backlog);  Announce UDP service. ;  ; virtual int AnnounceUnixService (const char *sockpath, int backlog);  Announce unix domain service. ;  ; virtual int AnnounceUnixService (int port, int backlog);  Announce unix domain service. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory nam",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:6800,Availability,error,error,6800,"es whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute comman",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:7320,Availability,error,error,7320,"irtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virt",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:16289,Availability,error,error,16289," descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and lis",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:16664,Availability,mask,mask,16664,"clicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  Directives should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (const char *objExt);  Set o",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:19173,Availability,mask,mask,19173,"bed by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:19216,Availability,mask,mask,19216,"bed by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:22937,Availability,error,error,22937,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:23026,Availability,error,error,23026,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:23181,Availability,error,error,23181,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:23478,Availability,error,error,23478,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:27562,Availability,error,error,27562,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:28681,Availability,error,error,28681,"NVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:28761,Availability,error,error,28761," this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TDavixFileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31085,Availability,error,error,31085,"num  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TStrin",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31203,Availability,error,error,31203," ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr}",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:1584,Integrability,interface,interface,1584,"ncy of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void FreeDirectory (void *dirp);  Free a directory. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual Int_t GetPathInfo (const char *path, FileStat_t &buf);  Get info about a file. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual Int_t Locate (const char *path, TString &endurl);  ; virtual Int_t MakeDirectory (const char *dir);  Make a directory. ;  ; virtual void * OpenDirectory (const char *dir);  Open a directory. Returns 0 if directory does not exist. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Unlink (const char *path);  Unlink, i.e. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdEx",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:1636,Integrability,interface,interface,1636,"rp);  Free a directory. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual Int_t GetPathInfo (const char *path, FileStat_t &buf);  Get info about a file. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual Int_t Locate (const char *path, TString &endurl);  ; virtual Int_t MakeDirectory (const char *dir);  Make a directory. ;  ; virtual void * OpenDirectory (const char *dir);  Open a directory. Returns 0 if directory does not exist. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Unlink (const char *path);  Unlink, i.e. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void A",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:11843,Integrability,interface,interface,11843,"nfo_t structure. ;  ; virtual Int_t GetUid (const char *user=nullptr);  Returns the user's id. If user = 0, returns current user's id. ;  ; virtual UserGroup_t * GetUserInfo (const char *user=nullptr);  Returns all user info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetUserInfo (Int_t uid);  Returns all user info in the UserGroup_t structure. ;  ; virtual TList * GetVolumes (Option_t *) const;  ; virtual std::string GetWorkingDirectory () const;  Return working directory. ;  ; virtual const char * HomeDirectory (const char *userName=nullptr);  Return the user's home directory. ;  ; virtual const char * HostName ();  Return the system's host name. ;  ; virtual void IgnoreInterrupt (Bool_t ignore=kTRUE);  If ignore is true ignore the interrupt signal, else restore previous behaviour. ;  ; virtual void IgnoreSignal (ESignals sig, Bool_t ignore=kTRUE);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t InControl () const;  ; virtual Bool_t Init ();  Initialize the OS interface. ;  ; virtual void InnerLoop ();  Inner event loop. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsAbsoluteFileName (const char *dir);  Return true if dir is an absolute pathname. ;  ; virtual Bool_t IsFileInIncludePath (const char *name, char **fullpath=nullptr);  Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ;  ; virtual int Link (const char *from, const char *to);  Create a link from file1 to file2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:13272,Integrability,protocol,protocol,13272,"nk (const char *from, const char *to);  Create a link from file1 to file2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a connection to another host. ;  ; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to the specified file. ;  ; virtual TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler fr",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:14368,Integrability,interface,interface,14368,"; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to the specified file. ;  ; virtual TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (T",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:22943,Integrability,message,message,22943,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:23484,Integrability,message,message,23484,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:24474,Integrability,message,message,24474,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:27568,Integrability,message,message,27568,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:27941,Integrability,message,message,27941," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Clas",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31091,Integrability,message,message,31091,"num  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TStrin",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31209,Integrability,message,message,31209," ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr}",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31748,Integrability,protocol,protocol,31748,"aracters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signal",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:1468,Modifiability,inherit,inherited,1468,"ncy of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void FreeDirectory (void *dirp);  Free a directory. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual Int_t GetPathInfo (const char *path, FileStat_t &buf);  Get info about a file. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual Int_t Locate (const char *path, TString &endurl);  ; virtual Int_t MakeDirectory (const char *dir);  Make a directory. ;  ; virtual void * OpenDirectory (const char *dir);  Open a directory. Returns 0 if directory does not exist. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Unlink (const char *path);  Unlink, i.e. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdEx",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:7256,Modifiability,variab,variable,7256,"Str () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (In",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:15998,Modifiability,variab,variable,15998,"se restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' wi",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:16219,Modifiability,variab,variable,16219,"  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:18896,Modifiability,config,configured,18896,"pt (int sock, int kind, int val);  Set socket option. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, should be either .so, .sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNam",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:19479,Modifiability,variab,variable,19479,"void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:19852,Modifiability,inherit,inherited,19852,"d or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:21480,Modifiability,inherit,inherited,21480,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:22573,Modifiability,inherit,inheritance,22573,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:24572,Modifiability,inherit,inherits,24572,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:24689,Modifiability,inherit,inherits,24689,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:28442,Modifiability,inherit,inherited,28442,"NVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:28812,Modifiability,inherit,inherited,28812,"Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TDavixFileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:29022,Modifiability,inherit,inherited,29022,"Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TDavixFileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:29603,Modifiability,inherit,inherited,29603," resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TDavixFileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &f",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:29758,Modifiability,inherit,inherited,29758," resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TDavixFileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &f",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:30399,Modifiability,inherit,inherited,30399,"ileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:30498,Modifiability,inherit,inherited,30498,"ileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31422,Modifiability,inherit,inherited,31422," ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLev",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31640,Modifiability,inherit,inherited,31640,"aracters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signal",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31812,Modifiability,inherit,inherited,31812,"* GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:33306,Modifiability,inherit,inherited,33306,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDavixSystem.h>. Inheritance diagram for TDavixSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDavixSystem() [1/2]. TDavixSystem::TDavixSystem ; (; ). Definition at line 75 of file TDavixSystem.cxx. ◆ TDavixSystem() [2/2]. TDavixSystem::TDavixSystem ; (; const char * ; url). Definition at line 65 of file TDavixSystem.cxx. ◆ ~TDavixSystem(). TDavixSystem::~TDavixSystem ; (; ). virtual . Definition at line 85 of file TDavixSystem.cxx. Member Function Documentation. ◆ Class(). static TClass * TDavixSystem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDavixSystem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDavixSystem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 57 of file TDa",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:4156,Performance,load,loads,4156,"ar * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void DispatchOneEvent (Bool_t pendingOnly=kFALSE);  Dispatch a single event. ;  ; char * DynamicPathName (const char *lib, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry point in specified library. ;  ; virtual Int_t Exec (const char *shellcmd);  Execute a command. ;  ; virtual void Exit (int code, Bool_t mode=kTRUE);  Exit the application. ;  ; virtual void ExitLoop ();  Exit fr",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:5761,Performance,optimiz,optimized,5761,"b, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry point in specified library. ;  ; virtual Int_t Exec (const char *shellcmd);  Execute a command. ;  ; virtual void Exit (int code, Bool_t mode=kTRUE);  Exit the application. ;  ; virtual void ExitLoop ();  Exit from event loop. ;  ; virtual char * ExpandPathName (const char *path);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandPathName (TString &path);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual const char * FindDynamicLibrary (TString &lib, Bool_t quiet=kFALSE);  Find a dynamic library using the system search paths. ;  ; virtual const char * FindFile (const char *search, TString &file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:6549,Performance,load,load,6549,"(const char *search, TString &file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:6566,Performance,load,load,6566,"(const char *search, TString &file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:7507,Performance,optimiz,optimization,7507,"o (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virtual std::string GetHomeDirectory (const char *userName=nullptr) const;  Return the user's home directory. ;  ; virtual TInetAddress GetHostByName (const char *server);  Get Internet Proto",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:8732,Performance,load,loaded,8732,"nst char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virtual std::string GetHomeDirectory (const char *userName=nullptr) const;  Return the user's home directory. ;  ; virtual TInetAddress GetHostByName (const char *server);  Get Internet Protocol (IP) address of host. ;  ; virtual const char * GetIncludePath ();  Get the list of include path. ;  ; virtual const char * GetLibraries (const char *regexp="""", const char *option="""", Bool_t isRegexp=kTRUE);  Return a space separated list of loaded shared libraries. ;  ; virtual const char * GetLinkdefSuffix () const;  Return the linkdef suffix chosen by the user for ACLiC. ;  ; virtual const char * GetLinkedLibs () const;  Return the list of library linked to this executable. ;  ; virtual TSeqCollection * GetListOfFileHandlers () const;  ; virtual TSeqCollection * GetListOfSignalHandlers () const;  ; virtual TSeqCollection * GetListOfStdExceptionHandlers () const;  ; virtual TList * GetListOfTimers () const;  ; virtual const char * GetMakeExe () const;  Return the command line use to make an executable. ;  ; virtual const char * GetMakeSharedLib () const;  Return the command line use to make a shared library. ;  ; virtual int GetMemInfo (MemInfo_t *info) const;  Returns ram and swap memory usage info into the MemInfo_t structure. ;  ; virtual const char * GetObjExt () const;  Get the object file extension. ;  ; int GetPathInfo (const char *path, Long_t *id, Long6",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:12391,Performance,load,loaded,12391,");  Return the user's home directory. ;  ; virtual const char * HostName ();  Return the system's host name. ;  ; virtual void IgnoreInterrupt (Bool_t ignore=kTRUE);  If ignore is true ignore the interrupt signal, else restore previous behaviour. ;  ; virtual void IgnoreSignal (ESignals sig, Bool_t ignore=kTRUE);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t InControl () const;  ; virtual Bool_t Init ();  Initialize the OS interface. ;  ; virtual void InnerLoop ();  Inner event loop. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsAbsoluteFileName (const char *dir);  Return true if dir is an absolute pathname. ;  ; virtual Bool_t IsFileInIncludePath (const char *name, char **fullpath=nullptr);  Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ;  ; virtual int Link (const char *from, const char *to);  Create a link from file1 to file2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a connection to another host. ;  ; virtual void Openlog (const char *name,",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:15773,Performance,optimiz,optimized,15773,"mer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:16611,Performance,optimiz,optimized,16611,"t SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:17022,Performance,load,loaded,17022,"nly for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  Directives should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (const char *objExt);  Set object files extension, should be either .o, .obj, etc. ;  ; virtual void SetProgname (const char *name);  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; virtual int SetSockOpt (int sock, int kind, int val);  Set socket option. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, sh",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:31297,Performance,load,loaded,31297,"notPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt; ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:15233,Safety,timeout,timeout,15233,"handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void S",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:15349,Safety,timeout,timeout,15349," of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  Flags",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:35935,Safety,avoid,avoid,35935,"92 of file TDavixSystem.cxx. ◆ GetDirEntry(). const char * TDavixSystem::GetDirEntry ; (; void * ; dirp). virtual . Get a directory entry. Returns 0 if no more entries. ; Reimplemented from TSystem.; Definition at line 100 of file TDavixSystem.cxx. ◆ GetPathInfo(). Int_t TDavixSystem::GetPathInfo ; (; const char * ; path, . FileStat_t & ; buf . ). virtual . Get info about a file. ; Info is returned in the form of a FileStat_t structure (see TSystem.h). The function returns 0 in case of success and 1 if the file could not be stat'ed. ; Reimplemented from TSystem.; Definition at line 138 of file TDavixSystem.cxx. ◆ IsA(). virtual TClass * TDavixSystem::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 57 of file TDavixSystem.h. ◆ IsPathLocal(). Bool_t TDavixSystem::IsPathLocal ; (; const char * ; path). virtual . Returns TRUE if the url in 'path' points to the local file system. ; This is used to avoid going through the NIC card for local operations. ; Reimplemented from TSystem.; Definition at line 159 of file TDavixSystem.cxx. ◆ Locate(). Int_t TDavixSystem::Locate ; (; const char * ; path, . TString & ; endurl . ). virtual . Definition at line 167 of file TDavixSystem.cxx. ◆ MakeDirectory(). Int_t TDavixSystem::MakeDirectory ; (; const char * ; name). virtual . Make a directory. ; Returns 0 in case of success and -1 if the directory could not be created (either already exists or illegal path name). ; Reimplemented from TSystem.; Definition at line 194 of file TDavixSystem.cxx. ◆ OpenDirectory(). void * TDavixSystem::OpenDirectory ; (; const char * ; name). virtual . Open a directory. Returns 0 if directory does not exist. ; Reimplemented from TSystem.; Definition at line 115 of file TDavixSystem.cxx. ◆ Streamer(). virtual void TDavixSystem::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDavixSystem::Strea",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:1888,Security,access,access,1888,"TClass * IsA () const;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual Int_t Locate (const char *path, TString &endurl);  ; virtual Int_t MakeDirectory (const char *dir);  Make a directory. ;  ; virtual void * OpenDirectory (const char *dir);  Open a directory. Returns 0 if directory does not exist. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Unlink (const char *path);  Unlink, i.e. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t);  Add timer to list of system timers. ;  ; virtual int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1);  Announce TCP/IP service. ;  ; virtual int AnnounceUdpService (int port, int bac",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:1922,Security,access,access,1922,"TClass * IsA () const;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual Int_t Locate (const char *path, TString &endurl);  ; virtual Int_t MakeDirectory (const char *dir);  Make a directory. ;  ; virtual void * OpenDirectory (const char *dir);  Open a directory. Returns 0 if directory does not exist. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Unlink (const char *path);  Unlink, i.e. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t);  Add timer to list of system timers. ;  ; virtual int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1);  Announce TCP/IP service. ;  ; virtual int AnnounceUdpService (int port, int bac",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:19074,Security,secur,secure,19074,"sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:19597,Security,access,access,19597,"t of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char ",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:20720,Security,hash,hash,20720,"nd location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:30986,Security,access,access,30986,"  kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; I",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:3915,Testability,log,log,3915,"virtual int AnnounceUnixService (const char *sockpath, int backlog);  Announce unix domain service. ;  ; virtual int AnnounceUnixService (int port, int backlog);  Announce unix domain service. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void DispatchOneEvent (Bool_t pendingOnly=kFALSE);  Dispatch a single event. ;  ; char * DynamicPathName (const char *lib, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDavixSystem.html:13436,Testability,log,log,13436,"t the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a connection to another host. ;  ; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to the specified file. ;  ; virtual TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; vi",MatchSource.WIKI,doc/master/classTDavixSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html
https://root.cern/doc/master/classTDCacheFile.html:8505,Availability,recover,recover,8505,"g64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtua",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:21826,Availability,error,error,21826," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:21915,Availability,error,error,21915,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:22070,Availability,error,error,22070,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:22367,Availability,error,error,22367,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ; ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:25860,Availability,error,error,25860," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static Bool_t CheckFile (const char *path, const char *location=0);  CheckFile() returns kTRUE on success and kFALSE on failure. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetDcapPath (const char *path);  Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ;  ; static const char * GetDcapVersion ();  Return dCache version string. ;  ; stati",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:26405,Availability,failure,failure,26405,"ut, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static Bool_t CheckFile (const char *path, const char *location=0);  CheckFile() returns kTRUE on success and kFALSE on failure. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetDcapPath (const char *path);  Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ;  ; static const char * GetDcapVersion ();  Return dCache version string. ;  ; static void SetOnError (EOnErrorAction=kOnErrorDefault);  Set on error handler. ;  ; static void SetOpenTimeout (UInt_t secs);  Set file open timeout. ;  ; static void SetReplyHostName (const char *host_name);  Set reply host name. ;  ; static Bool_t Stage (const char *path, UInt_t secs, const char *location=0);  Stage() returns kTRUE on success and kFALSE on failure. ;  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:26916,Availability,error,error,26916,"YS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static Bool_t CheckFile (const char *path, const char *location=0);  CheckFile() returns kTRUE on success and kFALSE on failure. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetDcapPath (const char *path);  Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ;  ; static const char * GetDcapVersion ();  Return dCache version string. ;  ; static void SetOnError (EOnErrorAction=kOnErrorDefault);  Set on error handler. ;  ; static void SetOpenTimeout (UInt_t secs);  Set file open timeout. ;  ; static void SetReplyHostName (const char *host_name);  Set reply host name. ;  ; static Bool_t Stage (const char *path, UInt_t secs, const char *location=0);  Stage() returns kTRUE on success and kFALSE on failure. ;  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:27213,Availability,failure,failure,27213,"virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static Bool_t CheckFile (const char *path, const char *location=0);  CheckFile() returns kTRUE on success and kFALSE on failure. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetDcapPath (const char *path);  Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ;  ; static const char * GetDcapVersion ();  Return dCache version string. ;  ; static void SetOnError (EOnErrorAction=kOnErrorDefault);  Set on error handler. ;  ; static void SetOpenTimeout (UInt_t secs);  Set file open timeout. ;  ; static void SetReplyHostName (const char *host_name);  Set reply host name. ;  ; static Bool_t Stage (const char *path, UInt_t secs, const char *location=0);  Stage() returns kTRUE on success and kFALSE on failure. ;  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ; ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:44102,Availability,failure,failure,44102," ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Create a dCache file object. ; A dCache file is the same as a TFile except that it is being accessed via a dCache server. The url argument must be of the form: dcache:/pnfs/<path>/<file>.root or dcap://<nodename.org>/<path>/<file>.root. If the file specified in the URL does not exist, is not accessable or can not be created the kZombie bit will be set in the TDCacheFile object. Use IsZombie() to see if the file is accessable. For a description of the option and other arguments see the TFile ctor. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 71 of file TDCacheFile.cxx. ◆ ~TDCacheFile(). TDCacheFile::~TDCacheFile ; (; ). override . Close and cleanup dCache file. ; Definition at line 202 of file TDCacheFile.cxx. Member Function Documentation. ◆ CheckFile(). Bool_t TDCacheFile::CheckFile ; (; const char * ; path, . const char * ; location = 0 . ). static . CheckFile() returns kTRUE on success and kFALSE on failure. ; In case the file exists but is not cached, CheckFile() returns kFALSE and errno is set to EAGAIN. ; Definition at line 361 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file TDCacheFile.h. ◆ DeclFileName(). static const char * TDCacheFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file TDCacheFile.h. ◆ GetDcapPath(). TString TDCacheFile::GetDcapPath ; (; const char * ; path). static . Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ; Defi",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:45670,Availability,error,error,45670,"ame(). static const char * TDCacheFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file TDCacheFile.h. ◆ GetDcapPath(). TString TDCacheFile::GetDcapPath ; (; const char * ; path). static . Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ; Definition at line 588 of file TDCacheFile.cxx. ◆ GetDcapVersion(). const char * TDCacheFile::GetDcapVersion ; (; ). static . Return dCache version string. ; Definition at line 404 of file TDCacheFile.cxx. ◆ IsA(). TClass * TDCacheFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 75 of file TDCacheFile.h. ◆ ReadBuffer() [1/2]. Bool_t TDCacheFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 211 of file TDCacheFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TDCacheFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 227 of file TDCacheFile.cxx. ◆ ReadBuffers(). Bool_t TDCacheFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overridevirtual . Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. ; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 247 of file TDCacheFile.cxx. ◆ ResetErrno(). void TDCacheFile::ResetErrno ; (; ); const. overridevirtual . Method resetting the dc_errno ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:45970,Availability,error,error,45970,"th usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ; Definition at line 588 of file TDCacheFile.cxx. ◆ GetDcapVersion(). const char * TDCacheFile::GetDcapVersion ; (; ). static . Return dCache version string. ; Definition at line 404 of file TDCacheFile.cxx. ◆ IsA(). TClass * TDCacheFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 75 of file TDCacheFile.h. ◆ ReadBuffer() [1/2]. Bool_t TDCacheFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 211 of file TDCacheFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TDCacheFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 227 of file TDCacheFile.cxx. ◆ ReadBuffers(). Bool_t TDCacheFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overridevirtual . Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. ; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 247 of file TDCacheFile.cxx. ◆ ResetErrno(). void TDCacheFile::ResetErrno ; (; ); const. overridevirtual . Method resetting the dc_errno and errno. ; Reimplemented from TFile.; Definition at line 577 of file TDCacheFile.cxx. ◆ SetOnError(). void TDCacheFile::SetOnError ; (; EOnErrorAction ; a = kOnErrorDefault). static . Set on error handler. ; Definition at line 388 of file TDCacheFile.cxx. ◆ SetOpenTimeout(). void TDCacheFile::SetO",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:46465,Availability,failure,failure,46465," TDCacheFile.h. ◆ ReadBuffer() [1/2]. Bool_t TDCacheFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 211 of file TDCacheFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TDCacheFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 227 of file TDCacheFile.cxx. ◆ ReadBuffers(). Bool_t TDCacheFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overridevirtual . Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. ; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 247 of file TDCacheFile.cxx. ◆ ResetErrno(). void TDCacheFile::ResetErrno ; (; ); const. overridevirtual . Method resetting the dc_errno and errno. ; Reimplemented from TFile.; Definition at line 577 of file TDCacheFile.cxx. ◆ SetOnError(). void TDCacheFile::SetOnError ; (; EOnErrorAction ; a = kOnErrorDefault). static . Set on error handler. ; Definition at line 388 of file TDCacheFile.cxx. ◆ SetOpenTimeout(). void TDCacheFile::SetOpenTimeout ; (; UInt_t ; secs). static . Set file open timeout. ; Definition at line 380 of file TDCacheFile.cxx. ◆ SetReplyHostName(). void TDCacheFile::SetReplyHostName ; (; const char * ; host_name). static . Set reply host name. ; Definition at line 396 of file TDCacheFile.cxx. ◆ Stage(). Bool_t TDCacheFile::Stage ; (; const char * ; path, . UInt_t ; secs, . const char * ; location = 0 . ). static . Stage() returns kTRUE on success and kFALSE on failure. ; Definition at line 340 of file T",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:46852,Availability,error,error,46852,"en . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 227 of file TDCacheFile.cxx. ◆ ReadBuffers(). Bool_t TDCacheFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overridevirtual . Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. ; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 247 of file TDCacheFile.cxx. ◆ ResetErrno(). void TDCacheFile::ResetErrno ; (; ); const. overridevirtual . Method resetting the dc_errno and errno. ; Reimplemented from TFile.; Definition at line 577 of file TDCacheFile.cxx. ◆ SetOnError(). void TDCacheFile::SetOnError ; (; EOnErrorAction ; a = kOnErrorDefault). static . Set on error handler. ; Definition at line 388 of file TDCacheFile.cxx. ◆ SetOpenTimeout(). void TDCacheFile::SetOpenTimeout ; (; UInt_t ; secs). static . Set file open timeout. ; Definition at line 380 of file TDCacheFile.cxx. ◆ SetReplyHostName(). void TDCacheFile::SetReplyHostName ; (; const char * ; host_name). static . Set reply host name. ; Definition at line 396 of file TDCacheFile.cxx. ◆ Stage(). Bool_t TDCacheFile::Stage ; (; const char * ; path, . UInt_t ; secs, . const char * ; location = 0 . ). static . Stage() returns kTRUE on success and kFALSE on failure. ; Definition at line 340 of file TDCacheFile.cxx. ◆ Streamer(). void TDCacheFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDCacheFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 75 of file TDCacheFile.h. ◆ SysClose(). Int_t TDCacheFile::SysClose ; (; Int_t ; fd). overrideprivatevi",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:47413,Availability,failure,failure,47413,"tion is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 247 of file TDCacheFile.cxx. ◆ ResetErrno(). void TDCacheFile::ResetErrno ; (; ); const. overridevirtual . Method resetting the dc_errno and errno. ; Reimplemented from TFile.; Definition at line 577 of file TDCacheFile.cxx. ◆ SetOnError(). void TDCacheFile::SetOnError ; (; EOnErrorAction ; a = kOnErrorDefault). static . Set on error handler. ; Definition at line 388 of file TDCacheFile.cxx. ◆ SetOpenTimeout(). void TDCacheFile::SetOpenTimeout ; (; UInt_t ; secs). static . Set file open timeout. ; Definition at line 380 of file TDCacheFile.cxx. ◆ SetReplyHostName(). void TDCacheFile::SetReplyHostName ; (; const char * ; host_name). static . Set reply host name. ; Definition at line 396 of file TDCacheFile.cxx. ◆ Stage(). Bool_t TDCacheFile::Stage ; (; const char * ; path, . UInt_t ; secs, . const char * ; location = 0 . ). static . Stage() returns kTRUE on success and kFALSE on failure. ; Definition at line 340 of file TDCacheFile.cxx. ◆ Streamer(). void TDCacheFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDCacheFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 75 of file TDCacheFile.h. ◆ SysClose(). Int_t TDCacheFile::SysClose ; (; Int_t ; fd). overrideprivatevirtual . Interface to system close. All arguments like in POSIX close. ; Reimplemented from TFile.; Definition at line 436 of file TDCacheFile.cxx. ◆ SysOpen(). Int_t TDCacheFile::SysOpen ; (; const char * ; pathname, . Int_t ; flags, . UInt_t ; mode . ). overrideprivatevirtual . Interface to system open. All arguments like in POSIX open. ; Reimplemented from TFile.; Definition at line 412 of file TDCacheFile.cxx. ◆ SysRead(). Int_t TDCacheFile::SysRead ; (; Int_t ; fd, . void * ; buf, . Int_t ; len . ). overrideprivatevirtual . Inte",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:50211,Availability,error,error,50211,"time . ). overrideprivatevirtual . Get info about a file: id, size, flags, modification time. ; Parameters. [in]fdignored ; [in]id(statbuf.st_dev << 24) + statbuf.st_ino ; [in]sizeThe file size ; [in]flagsFile type: 0 is regular file, bit 0 set executable, bit 1 set directory, bit 2 set special file (socket, fifo, pipe, etc.) ; [in]modtimeModification time. The function returns 0 in case of success and 1 if the file could not be stat'ed. . Reimplemented from TFile.; Definition at line 531 of file TDCacheFile.cxx. ◆ SysSync(). Int_t TDCacheFile::SysSync ; (; Int_t ; fd). overrideprivatevirtual . Interface to system sync. ; All arguments like in POSIX fsync. dCache always keep it's files sync'ed, so there's no need to sync() them manually. ; Reimplemented from TFile.; Definition at line 506 of file TDCacheFile.cxx. ◆ SysWrite(). Int_t TDCacheFile::SysWrite ; (; Int_t ; fd, . const void * ; buf, . Int_t ; len . ). overrideprivatevirtual . Interface to system write. All arguments like in POSIX write. ; Reimplemented from TFile.; Definition at line 470 of file TDCacheFile.cxx. ◆ WriteBuffer(). Bool_t TDCacheFile::WriteBuffer ; (; const char * ; buf, . Int_t ; len . ). overridevirtual . Write specified byte range to remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 323 of file TDCacheFile.cxx. Member Data Documentation. ◆ fStatBuffer. struct stat64 TDCacheFile::fStatBuffer. private . ! (transient) Cached file status buffer (for performance) ; Definition at line 29 of file TDCacheFile.h. ◆ fStatCached. Bool_t TDCacheFile::fStatCached. private . ! (transient) is file status cached? ; Definition at line 28 of file TDCacheFile.h. Libraries for TDCacheFile:. [legend]; The documentation for this class was generated from the following files:; io/dcache/inc/TDCacheFile.h; io/dcache/src/TDCacheFile.cxx. TDCacheFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:21832,Integrability,message,message,21832," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:22373,Integrability,message,message,22373,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ; ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:23121,Integrability,message,message,23121,"ct with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:25866,Integrability,message,message,25866," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static Bool_t CheckFile (const char *path, const char *location=0);  CheckFile() returns kTRUE on success and kFALSE on failure. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetDcapPath (const char *path);  Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ;  ; static const char * GetDcapVersion ();  Return dCache version string. ;  ; stati",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:26239,Integrability,message,message,26239," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static Bool_t CheckFile (const char *path, const char *location=0);  CheckFile() returns kTRUE on success and kFALSE on failure. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetDcapPath (const char *path);  Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ;  ; static const char * GetDcapVersion ();  Return dCache version string. ;  ; static void SetOnError (EOnErrorAction=kOnErrorDefault);  Set on error handler. ;  ; static void SetOpenTimeout (UInt_t secs);  Set file open timeout. ;  ; static void SetReplyHostName (const char *host_name);  Set reply host name. ;  ; static Bool_t Stage (const char *path, UInt_t secs, const char *location=0);  Stage() returns kTRUE on success and kFALSE on failure. ;  ;  Sta",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:29220,Integrability,protocol,protocol,29220,"const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:43660,Integrability,interface,interface,43660,"OnErrorRetry ; kOnErrorFail ; kOnErrorDefault . Definition at line 61 of file TDCacheFile.h. Constructor & Destructor Documentation. ◆ TDCacheFile() [1/2]. TDCacheFile::TDCacheFile ; (; ). inlineprivate . Definition at line 31 of file TDCacheFile.h. ◆ TDCacheFile() [2/2]. TDCacheFile::TDCacheFile ; (; const char * ; path, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Create a dCache file object. ; A dCache file is the same as a TFile except that it is being accessed via a dCache server. The url argument must be of the form: dcache:/pnfs/<path>/<file>.root or dcap://<nodename.org>/<path>/<file>.root. If the file specified in the URL does not exist, is not accessable or can not be created the kZombie bit will be set in the TDCacheFile object. Use IsZombie() to see if the file is accessable. For a description of the option and other arguments see the TFile ctor. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 71 of file TDCacheFile.cxx. ◆ ~TDCacheFile(). TDCacheFile::~TDCacheFile ; (; ). override . Close and cleanup dCache file. ; Definition at line 202 of file TDCacheFile.cxx. Member Function Documentation. ◆ CheckFile(). Bool_t TDCacheFile::CheckFile ; (; const char * ; path, . const char * ; location = 0 . ). static . CheckFile() returns kTRUE on success and kFALSE on failure. ; In case the file exists but is not cached, CheckFile() returns kFALSE and errno is set to EAGAIN. ; Definition at line 361 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file TDCacheFile.h. ◆ DeclFileName(). static const",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:862,Modifiability,inherit,inherited,862,". ROOT: TDCacheFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDCacheFile Class ReferenceInput/Output Library. ; A TDCacheFile is like a normal TFile except that it may read and write its data via a dCache server (for more on the dCache daemon see http://www-dcache.desy.de/. ; Given a path which doesn't belong to the dCache managed filesystem, it falls back to the ordinary TFile behaviour. ; Definition at line 25 of file TDCacheFile.h. Public Types; enum  EOnErrorAction { kOnErrorRetry = 1; , kOnErrorFail = 0; , kOnErrorDefault = -1; };  Note: This must be kept in sync with values #defined in dcap.h. More...;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:1886,Modifiability,inherit,inherited,1886,"AOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDCacheFile (const char *path, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Create a dCache file object. ;  ;  ~TDCacheFile () override;  Close and cleanup dCache file. ;  ; TClass * IsA () const override;  ; Bool_t ReadBuffer (char *buf, Int_t len) override;  Read specified byte range from remote",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:1992,Modifiability,inherit,inherited,1992,"AOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDCacheFile (const char *path, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Create a dCache file object. ;  ;  ~TDCacheFile () override;  Close and cleanup dCache file. ;  ; TClass * IsA () const override;  ; Bool_t ReadBuffer (char *buf, Int_t len) override;  Read specified byte range from remote",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:3755,Modifiability,inherit,inherited,3755,":kUseCompiledDefault);  Create a dCache file object. ;  ;  ~TDCacheFile () override;  Close and cleanup dCache file. ;  ; TClass * IsA () const override;  ; Bool_t ReadBuffer (char *buf, Int_t len) override;  Read specified byte range from remote file via dCache daemon. ;  ; Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len) override;  Read specified byte range from remote file via dCache daemon. ;  ; Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf) override;  Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. ;  ; void ResetErrno () const override;  Method resetting the dc_errno and errno. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WriteBuffer (const char *buf, Int_t len) override;  Write specified byte range to remote file via dCache daemon. ;  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Close (Option_t *option="""") override;  Close a file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; virtual TKey * CreateKey (TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  F",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:10921,Modifiability,inherit,inherited,10921,"fer &) override;  Stream a TFile object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) const override;  One can not save a const TDirectory object. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) override;  Write memory objects to this file. ;  ; virtual void WriteFree ();  Write FREE linked list on the file. ;  ; virtual void WriteHeader ();  Write File Header. ;  ; virtual UShort_t WriteProcessID (TProcessID *pid);  Check if the ProcessID pidd is already in the file, if not, add it and return the index number in the local file list. ;  ; virtual void WriteStreamerInfo ();  Write the list of TStreamerInfo as a single object in this file The class Streamer description for all classes written to this file is saved. ;  ;  Public Member Functions inherited from TDirectoryFile;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to this directory. ;  ; Int_t AppendKey (TKey *key) override;  Insert key in the linked list of keys of this directory. ;  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) override;  ; Bool_t cd () override;  Change current directory to ""this"" directory. ;  ; Bool_t cd (const char *path) override;  Change current directory the directory described by the path if given one. ;  ; TObject * CloneObject (const TObject *obj, Bool_t autoadd=kTRUE) override;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:16690,Modifiability,inherit,inherited,16690,"d in the dictionary of the parent class and store the corresponding exec number into fBits. ;  ; void SetWritable (Bool_t writable=kTRUE) override;  Set the new value of fWritable recursively. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteDirHeader () override;  Overwrite the Directory header record. ;  ; void WriteKeys () override;  Write Keys linked list on the file. ;  ; Int_t WriteObjectAny (const void *obj, const char *classname, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object from pointer of class classname in this directory. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object of class with dictionary cl in this directory. ;  ; Int_t WriteTObject (const TObject *obj, const char *name=nullptr, Option_t *option="""", Int_t bufsize=0) override;  Write object obj to this directory. ;  ;  Public Member Functions inherited from TDirectory;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; void Clear (Option_t *option="""") override;  Delete all objects from a Directory list. ;  ; virtual void DeleteAll (Option_t *option="""");  Delete all objects from memory. ;  ; TObject * FindObject (const char *name) const override;  Find object by name in the list of memory objects. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object in the list of memory objects. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; virtual TList * GetList () const;  ; TObject * GetMother () const;  ; TDirectory * GetMotherDir () const;  ; template<class T > ; void GetObject (const char *namecycle, T *&ptr);  Get an object with proper type checking. ;  ; virtual const char * G",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:19124,Modifiability,inherit,inherited,19124,"ecursively remove object from a Directory. ;  ; virtual TObject * Remove (TObject *);  Remove an object from the in-memory list. ;  ; virtual void SetMother (TObject *mother);  ; void SetName (const char *newname) override;  Set the name for directory If the directory name is changed after the directory was written once, ROOT currently would NOT change the name of correspondent key in the mother directory. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<typename T > ; std::enable_if_t<!std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; template<typename T > ; std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:20624,Modifiability,inherit,inherited,20624," *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:21462,Modifiability,inherit,inheritance,21462,"amer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:23219,Modifiability,inherit,inherits,23219,"Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:23336,Modifiability,inherit,inherits,23336,"nst char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:27259,Modifiability,inherit,inherited,27259,") returns kTRUE on success and kFALSE on failure. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetDcapPath (const char *path);  Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ;  ; static const char * GetDcapVersion ();  Return dCache version string. ;  ; static void SetOnError (EOnErrorAction=kOnErrorDefault);  Set on error handler. ;  ; static void SetOpenTimeout (UInt_t secs);  Set file open timeout. ;  ; static void SetReplyHostName (const char *host_name);  Set reply host name. ;  ; static Bool_t Stage (const char *path, UInt_t secs, const char *location=0);  Stage() returns kTRUE on success and kFALSE on failure. ;  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchrono",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:30492,Modifiability,inherit,inherited,30492,"l_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:30710,Modifiability,inherit,inherited,30710,"l_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:31543,Modifiability,inherit,inherited,31543,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TDCacheFile ();  ; Int_t SysClose (Int_t fd) override;  Interface to system close. All arguments like in POSIX close. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Interface to system open. All arguments like in POSIX open. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Interface to system read. All arguments like in POSIX read. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Interface to system seek. All",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:31753,Modifiability,inherit,inherited,31753,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TDCacheFile ();  ; Int_t SysClose (Int_t fd) override;  Interface to system close. All arguments like in POSIX close. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Interface to system open. All arguments like in POSIX open. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Interface to system read. All arguments like in POSIX read. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Interface to system seek. All",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:33367,Modifiability,inherit,inherited,33367,"nt_t flags, UInt_t mode) override;  Interface to system open. All arguments like in POSIX open. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Interface to system read. All arguments like in POSIX read. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Interface to system seek. All arguments like in POSIX lseek. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Get info about a file: id, size, flags, modification time. ;  ; Int_t SysSync (Int_t fd) override;  Interface to system sync. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Interface to system write. All arguments like in POSIX write. ;  . Private Attributes; struct stat64 fStatBuffer;  ! (transient) Cached file status buffer (for performance) ;  ; Bool_t fStatCached;  ! (transient) is file status cached? ;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:33558,Modifiability,inherit,inherited,33558,"to system seek. All arguments like in POSIX lseek. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Get info about a file: id, size, flags, modification time. ;  ; Int_t SysSync (Int_t fd) override;  Interface to system sync. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Interface to system write. All arguments like in POSIX write. ;  . Private Attributes; struct stat64 fStatBuffer;  ! (transient) Cached file status buffer (for performance) ;  ; Bool_t fStatCached;  ! (transient) is file status cached? ;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFil",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:33657,Modifiability,inherit,inherited,33657,"to system seek. All arguments like in POSIX lseek. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Get info about a file: id, size, flags, modification time. ;  ; Int_t SysSync (Int_t fd) override;  Interface to system sync. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Interface to system write. All arguments like in POSIX write. ;  . Private Attributes; struct stat64 fStatBuffer;  ! (transient) Cached file status buffer (for performance) ;  ; Bool_t fStatCached;  ! (transient) is file status cached? ;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFil",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:34659,Modifiability,inherit,inherited,34659,"ry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr); ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:35049,Modifiability,inherit,inherited,35049,"l void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ; ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:35938,Modifiability,inherit,inherited,35938,"ted data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:36156,Modifiability,inherit,inherited,36156,"ctory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr}",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:36494,Modifiability,inherit,inherited,36494,"y (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; b",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:39532,Modifiability,inherit,inherited,39532,;  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vect,MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:40368,Modifiability,inherit,inherited,40368,"Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; stat",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:40824,Modifiability,inherit,inherited,40824,"ctory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:40913,Modifiability,inherit,inherited,40913,"ctory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:42242,Modifiability,inherit,inherited,42242,"bjects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EOnErrorAction. enum TDCacheFile::EOnErrorAction. Note: This must be kept in sync with values #defined in dcap.h. . EnumeratorkOnErrorRetry ; kOnErrorFail ; kOnErrorDefault . Definition at line 61 of file TDCacheFile.h. Constructor & Destructor Documentation. ◆ TDCacheFile() [1/2]. TDCacheFile::TDCacheFile ; (; ). inlineprivate . Definition at line 31 of file TDCacheFile.h. ◆ TDCacheFile() [2/2]. TDCacheFile::TDCacheFile ; (; const char * ; path, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Create a dCache file objec",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:5624,Performance,cache,cache,5624,"Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; virtual void DrawMap (const char *keys=""*"", Option_t *option="""");  Draw map of objects in this file. ;  ; void FillBuffer (char *&buffer) override;  Encode file output buffer. ;  ; virtual void Flush ();  Synchronize a file's in-memory and on-disk states. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () const;  Max number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbyt",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:5717,Performance,cache,cache,5717,"cle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; virtual void DrawMap (const char *keys=""*"", Option_t *option="""");  Draw map of objects in this file. ;  ; void FillBuffer (char *&buffer) override;  Encode file output buffer. ;  ; virtual void Flush ();  Synchronize a file's in-memory and on-disk states. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () const;  Max number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Lo",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:6918,Performance,cache,cached,6918," const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; virtual Long64_t GetSize () const;  Returns the current file size. ;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; TClass * IsA () const override;  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the co",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:8820,Performance,cache,cache,8820,"l_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ; ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:8911,Performance,cache,cache,8911,"l_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ; ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:8968,Performance,cache,cache,8968,"ush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void Streamer (TBuffer &) override",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:9004,Performance,cache,cache,9004,"ush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void Streamer (TBuffer &) override",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:13784,Performance,perform,performed,13784,"ject with name. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; TObject * Get (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Int_t GetBufferSize () const override;  Return the buffer size to create new TKeys. ;  ; const TDatime & GetCreationDate () const;  ; TDirectory * GetDirectory (const char *apath, Bool_t printError=false, const char *funcname=""GetDirectory"") override;  Find a directory named ""apath"". ;  ; TFile * GetFile () const override;  ; TKey * GetKey (const char *name, Short_t cycle=9999) const override;  Return pointer to key with name,cycle. ;  ; TList * GetListOfKeys () const override;  ; const TDatime & GetModificationDate () const;  ; Int_t GetNbytesKeys () const override;  ; Int_t GetNkeys () const override;  ; void * GetObjectChecked (const char *namecycle, const char *classname) override;  See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl) ;  ; void * GetObjectChecked (const char *namecycle, const TClass *cl) override;  Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ;  ; void * GetObjectUnchecked (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Long64_t GetSeekDir () const override;  ; Long64_t GetSeekKeys () const override;  ; Long64_t GetSeekParent () const override;  ; Bool_t IsModified () const override;  ; Bool_t IsWritable () const override;  ; TDirectory * mkdir (const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE) override;  Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."". ;  ; TFile * OpenFile (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t neto",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:28237,Performance,cache,cache,28237," kFALSE on failure. ;  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:29652,Performance,cache,cacheDir,29652,"nction returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public M",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:29770,Performance,cache,cache,29770,"nction returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public M",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:30428,Performance,cache,cache,30428,"=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecy",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:33239,Performance,perform,performance,33239,". ;  . Private Member Functions;  TDCacheFile ();  ; Int_t SysClose (Int_t fd) override;  Interface to system close. All arguments like in POSIX close. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Interface to system open. All arguments like in POSIX open. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Interface to system read. All arguments like in POSIX read. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Interface to system seek. All arguments like in POSIX lseek. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Get info about a file: id, size, flags, modification time. ;  ; Int_t SysSync (Int_t fd) override;  Interface to system sync. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Interface to system write. All arguments like in POSIX write. ;  . Private Attributes; struct stat64 fStatBuffer;  ! (transient) Cached file status buffer (for performance) ;  ; Bool_t fStatCached;  ! (transient) is file status cached? ;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, c",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:33307,Performance,cache,cached,33307,". ;  . Private Member Functions;  TDCacheFile ();  ; Int_t SysClose (Int_t fd) override;  Interface to system close. All arguments like in POSIX close. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Interface to system open. All arguments like in POSIX open. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Interface to system read. All arguments like in POSIX read. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Interface to system seek. All arguments like in POSIX lseek. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Get info about a file: id, size, flags, modification time. ;  ; Int_t SysSync (Int_t fd) override;  Interface to system sync. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Interface to system write. All arguments like in POSIX write. ;  . Private Attributes; struct stat64 fStatBuffer;  ! (transient) Cached file status buffer (for performance) ;  ; Bool_t fStatCached;  ! (transient) is file status cached? ;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, c",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:33911,Performance,cache,cache,33911,"to system seek. All arguments like in POSIX lseek. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Get info about a file: id, size, flags, modification time. ;  ; Int_t SysSync (Int_t fd) override;  Interface to system sync. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Interface to system write. All arguments like in POSIX write. ;  . Private Attributes; struct stat64 fStatBuffer;  ! (transient) Cached file status buffer (for performance) ;  ; Bool_t fStatCached;  ! (transient) is file status cached? ;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFil",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:34533,Performance,cache,cache,34533,"object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for direct",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:34619,Performance,cache,cache,34619,"enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TCo",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:37199,Performance,cache,cache,37199,"Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:37273,Performance,cache,cache,37273,"Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:37357,Performance,cache,cache,37357,"Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:38581,Performance,cache,cache,38581,"; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes for StreamerInfo record. ;  ; Bool_t fNoAnchorInName {kFALSE};  !True if we don't want to force the anchor to be appended to the file name ;  ; Int_t fNProcessIDs {0};  Number of TProcessID written to this file. ;  ; Long64_t fOffset {0};  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to crea",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:38833,Performance,cache,cache,38833,"; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes for StreamerInfo record. ;  ; Bool_t fNoAnchorInName {kFALSE};  !True if we don't want to force the anchor to be appended to the file name ;  ; Int_t fNProcessIDs {0};  Number of TProcessID written to this file. ;  ; Long64_t fOffset {0};  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {n",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:41347,Performance,cache,cache,41347,"ectory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:41377,Performance,cache,cached,41377,"ectory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:44148,Performance,cache,cached,44148,"file object. ; A dCache file is the same as a TFile except that it is being accessed via a dCache server. The url argument must be of the form: dcache:/pnfs/<path>/<file>.root or dcap://<nodename.org>/<path>/<file>.root. If the file specified in the URL does not exist, is not accessable or can not be created the kZombie bit will be set in the TDCacheFile object. Use IsZombie() to see if the file is accessable. For a description of the option and other arguments see the TFile ctor. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 71 of file TDCacheFile.cxx. ◆ ~TDCacheFile(). TDCacheFile::~TDCacheFile ; (; ). override . Close and cleanup dCache file. ; Definition at line 202 of file TDCacheFile.cxx. Member Function Documentation. ◆ CheckFile(). Bool_t TDCacheFile::CheckFile ; (; const char * ; path, . const char * ; location = 0 . ). static . CheckFile() returns kTRUE on success and kFALSE on failure. ; In case the file exists but is not cached, CheckFile() returns kFALSE and errno is set to EAGAIN. ; Definition at line 361 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file TDCacheFile.h. ◆ DeclFileName(). static const char * TDCacheFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file TDCacheFile.h. ◆ GetDcapPath(). TString TDCacheFile::GetDcapPath ; (; const char * ; path). static . Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ; Definition at line 588 of file TDCacheFile.cxx. ◆ GetDcapVersion(). const char * TDC",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:50432,Performance,perform,performance,50432,"time . ). overrideprivatevirtual . Get info about a file: id, size, flags, modification time. ; Parameters. [in]fdignored ; [in]id(statbuf.st_dev << 24) + statbuf.st_ino ; [in]sizeThe file size ; [in]flagsFile type: 0 is regular file, bit 0 set executable, bit 1 set directory, bit 2 set special file (socket, fifo, pipe, etc.) ; [in]modtimeModification time. The function returns 0 in case of success and 1 if the file could not be stat'ed. . Reimplemented from TFile.; Definition at line 531 of file TDCacheFile.cxx. ◆ SysSync(). Int_t TDCacheFile::SysSync ; (; Int_t ; fd). overrideprivatevirtual . Interface to system sync. ; All arguments like in POSIX fsync. dCache always keep it's files sync'ed, so there's no need to sync() them manually. ; Reimplemented from TFile.; Definition at line 506 of file TDCacheFile.cxx. ◆ SysWrite(). Int_t TDCacheFile::SysWrite ; (; Int_t ; fd, . const void * ; buf, . Int_t ; len . ). overrideprivatevirtual . Interface to system write. All arguments like in POSIX write. ; Reimplemented from TFile.; Definition at line 470 of file TDCacheFile.cxx. ◆ WriteBuffer(). Bool_t TDCacheFile::WriteBuffer ; (; const char * ; buf, . Int_t ; len . ). overridevirtual . Write specified byte range to remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 323 of file TDCacheFile.cxx. Member Data Documentation. ◆ fStatBuffer. struct stat64 TDCacheFile::fStatBuffer. private . ! (transient) Cached file status buffer (for performance) ; Definition at line 29 of file TDCacheFile.h. ◆ fStatCached. Bool_t TDCacheFile::fStatCached. private . ! (transient) is file status cached? ; Definition at line 28 of file TDCacheFile.h. Libraries for TDCacheFile:. [legend]; The documentation for this class was generated from the following files:; io/dcache/inc/TDCacheFile.h; io/dcache/src/TDCacheFile.cxx. TDCacheFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:50579,Performance,cache,cached,50579,"time . ). overrideprivatevirtual . Get info about a file: id, size, flags, modification time. ; Parameters. [in]fdignored ; [in]id(statbuf.st_dev << 24) + statbuf.st_ino ; [in]sizeThe file size ; [in]flagsFile type: 0 is regular file, bit 0 set executable, bit 1 set directory, bit 2 set special file (socket, fifo, pipe, etc.) ; [in]modtimeModification time. The function returns 0 in case of success and 1 if the file could not be stat'ed. . Reimplemented from TFile.; Definition at line 531 of file TDCacheFile.cxx. ◆ SysSync(). Int_t TDCacheFile::SysSync ; (; Int_t ; fd). overrideprivatevirtual . Interface to system sync. ; All arguments like in POSIX fsync. dCache always keep it's files sync'ed, so there's no need to sync() them manually. ; Reimplemented from TFile.; Definition at line 506 of file TDCacheFile.cxx. ◆ SysWrite(). Int_t TDCacheFile::SysWrite ; (; Int_t ; fd, . const void * ; buf, . Int_t ; len . ). overrideprivatevirtual . Interface to system write. All arguments like in POSIX write. ; Reimplemented from TFile.; Definition at line 470 of file TDCacheFile.cxx. ◆ WriteBuffer(). Bool_t TDCacheFile::WriteBuffer ; (; const char * ; buf, . Int_t ; len . ). overridevirtual . Write specified byte range to remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 323 of file TDCacheFile.cxx. Member Data Documentation. ◆ fStatBuffer. struct stat64 TDCacheFile::fStatBuffer. private . ! (transient) Cached file status buffer (for performance) ; Definition at line 29 of file TDCacheFile.h. ◆ fStatCached. Bool_t TDCacheFile::fStatCached. private . ! (transient) is file status cached? ; Definition at line 28 of file TDCacheFile.h. Libraries for TDCacheFile:. [legend]; The documentation for this class was generated from the following files:; io/dcache/inc/TDCacheFile.h; io/dcache/src/TDCacheFile.cxx. TDCacheFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:1403,Safety,timeout,timeout,1403,"mal TFile except that it may read and write its data via a dCache server (for more on the dCache daemon see http://www-dcache.desy.de/. ; Given a path which doesn't belong to the dCache managed filesystem, it falls back to the ordinary TFile behaviour. ; Definition at line 25 of file TDCacheFile.h. Public Types; enum  EOnErrorAction { kOnErrorRetry = 1; , kOnErrorFail = 0; , kOnErrorDefault = -1; };  Note: This must be kept in sync with values #defined in dcap.h. More...;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:8505,Safety,recover,recover,8505,"g64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtua",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:26993,Safety,timeout,timeout,26993,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static Bool_t CheckFile (const char *path, const char *location=0);  CheckFile() returns kTRUE on success and kFALSE on failure. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetDcapPath (const char *path);  Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ;  ; static const char * GetDcapVersion ();  Return dCache version string. ;  ; static void SetOnError (EOnErrorAction=kOnErrorDefault);  Set on error handler. ;  ; static void SetOpenTimeout (UInt_t secs);  Set file open timeout. ;  ; static void SetReplyHostName (const char *host_name);  Set reply host name. ;  ; static Bool_t Stage (const char *path, UInt_t secs, const char *location=0);  Stage() returns kTRUE on success and kFALSE on failure. ;  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get st",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:28873,Safety,timeout,timeout,28873,"; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static v",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:30070,Safety,timeout,timeout,30070,"e opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; s",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:30091,Safety,timeout,timeout,30091,"e opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; s",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:30130,Safety,timeout,timeout,30130," Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:47014,Safety,timeout,timeout,47014,"nition at line 227 of file TDCacheFile.cxx. ◆ ReadBuffers(). Bool_t TDCacheFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overridevirtual . Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. ; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 247 of file TDCacheFile.cxx. ◆ ResetErrno(). void TDCacheFile::ResetErrno ; (; ); const. overridevirtual . Method resetting the dc_errno and errno. ; Reimplemented from TFile.; Definition at line 577 of file TDCacheFile.cxx. ◆ SetOnError(). void TDCacheFile::SetOnError ; (; EOnErrorAction ; a = kOnErrorDefault). static . Set on error handler. ; Definition at line 388 of file TDCacheFile.cxx. ◆ SetOpenTimeout(). void TDCacheFile::SetOpenTimeout ; (; UInt_t ; secs). static . Set file open timeout. ; Definition at line 380 of file TDCacheFile.cxx. ◆ SetReplyHostName(). void TDCacheFile::SetReplyHostName ; (; const char * ; host_name). static . Set reply host name. ; Definition at line 396 of file TDCacheFile.cxx. ◆ Stage(). Bool_t TDCacheFile::Stage ; (; const char * ; path, . UInt_t ; secs, . const char * ; location = 0 . ). static . Stage() returns kTRUE on success and kFALSE on failure. ; Definition at line 340 of file TDCacheFile.cxx. ◆ Streamer(). void TDCacheFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDCacheFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 75 of file TDCacheFile.h. ◆ SysClose(). Int_t TDCacheFile::SysClose ; (; Int_t ; fd). overrideprivatevirtual . Interface to system close. All arguments like in POSIX close. ; Reimplemented from TFile.; Definition at line 436 of file TDCacheFile.cxx. ◆ SysOpen",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:7683,Security,access,access,7683,"eader starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; virtual Long64_t GetSize () const;  Returns the current file size. ;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; TClass * IsA () const override;  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:8619,Security,access,access,8619,"r *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeT",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:19911,Security,hash,hash,19911," std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you ",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:42170,Security,hash,hashes,42170,"bjects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EOnErrorAction. enum TDCacheFile::EOnErrorAction. Note: This must be kept in sync with values #defined in dcap.h. . EnumeratorkOnErrorRetry ; kOnErrorFail ; kOnErrorDefault . Definition at line 61 of file TDCacheFile.h. Constructor & Destructor Documentation. ◆ TDCacheFile() [1/2]. TDCacheFile::TDCacheFile ; (; ). inlineprivate . Definition at line 31 of file TDCacheFile.h. ◆ TDCacheFile() [2/2]. TDCacheFile::TDCacheFile ; (; const char * ; path, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Create a dCache file objec",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:43236,Security,access,accessed,43236,"ic Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EOnErrorAction. enum TDCacheFile::EOnErrorAction. Note: This must be kept in sync with values #defined in dcap.h. . EnumeratorkOnErrorRetry ; kOnErrorFail ; kOnErrorDefault . Definition at line 61 of file TDCacheFile.h. Constructor & Destructor Documentation. ◆ TDCacheFile() [1/2]. TDCacheFile::TDCacheFile ; (; ). inlineprivate . Definition at line 31 of file TDCacheFile.h. ◆ TDCacheFile() [2/2]. TDCacheFile::TDCacheFile ; (; const char * ; path, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Create a dCache file object. ; A dCache file is the same as a TFile except that it is being accessed via a dCache server. The url argument must be of the form: dcache:/pnfs/<path>/<file>.root or dcap://<nodename.org>/<path>/<file>.root. If the file specified in the URL does not exist, is not accessable or can not be created the kZombie bit will be set in the TDCacheFile object. Use IsZombie() to see if the file is accessable. For a description of the option and other arguments see the TFile ctor. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 71 of file TDCacheFile.cxx. ◆ ~TDCacheFile(). TDCacheFile::~TDCacheFile ; (; ). override . Close and cleanup dCache file. ; Definition at line 202 of file TDCacheFile.cxx. Member Function Documentation. ◆ CheckFile(). Bool_t TDCacheFile::CheckFile ; (; const char * ; path, . const char * ; location = 0 . ). static . CheckFile() returns kTRUE on success and kFALSE on failure. ; In case the file exists but is not cached, CheckFile() returns kFALSE and errno is set to EAGAIN. ; Defini",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:43437,Security,access,accessable,43437,"SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EOnErrorAction. enum TDCacheFile::EOnErrorAction. Note: This must be kept in sync with values #defined in dcap.h. . EnumeratorkOnErrorRetry ; kOnErrorFail ; kOnErrorDefault . Definition at line 61 of file TDCacheFile.h. Constructor & Destructor Documentation. ◆ TDCacheFile() [1/2]. TDCacheFile::TDCacheFile ; (; ). inlineprivate . Definition at line 31 of file TDCacheFile.h. ◆ TDCacheFile() [2/2]. TDCacheFile::TDCacheFile ; (; const char * ; path, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Create a dCache file object. ; A dCache file is the same as a TFile except that it is being accessed via a dCache server. The url argument must be of the form: dcache:/pnfs/<path>/<file>.root or dcap://<nodename.org>/<path>/<file>.root. If the file specified in the URL does not exist, is not accessable or can not be created the kZombie bit will be set in the TDCacheFile object. Use IsZombie() to see if the file is accessable. For a description of the option and other arguments see the TFile ctor. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 71 of file TDCacheFile.cxx. ◆ ~TDCacheFile(). TDCacheFile::~TDCacheFile ; (; ). override . Close and cleanup dCache file. ; Definition at line 202 of file TDCacheFile.cxx. Member Function Documentation. ◆ CheckFile(). Bool_t TDCacheFile::CheckFile ; (; const char * ; path, . const char * ; location = 0 . ). static . CheckFile() returns kTRUE on success and kFALSE on failure. ; In case the file exists but is not cached, CheckFile() returns kFALSE and errno is set to EAGAIN. ; Definition at line 361 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheFile::Class_Name ; (; ). static . ReturnsName o",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:43562,Security,access,accessable,43562," ◆ EOnErrorAction. enum TDCacheFile::EOnErrorAction. Note: This must be kept in sync with values #defined in dcap.h. . EnumeratorkOnErrorRetry ; kOnErrorFail ; kOnErrorDefault . Definition at line 61 of file TDCacheFile.h. Constructor & Destructor Documentation. ◆ TDCacheFile() [1/2]. TDCacheFile::TDCacheFile ; (; ). inlineprivate . Definition at line 31 of file TDCacheFile.h. ◆ TDCacheFile() [2/2]. TDCacheFile::TDCacheFile ; (; const char * ; path, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Create a dCache file object. ; A dCache file is the same as a TFile except that it is being accessed via a dCache server. The url argument must be of the form: dcache:/pnfs/<path>/<file>.root or dcap://<nodename.org>/<path>/<file>.root. If the file specified in the URL does not exist, is not accessable or can not be created the kZombie bit will be set in the TDCacheFile object. Use IsZombie() to see if the file is accessable. For a description of the option and other arguments see the TFile ctor. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 71 of file TDCacheFile.cxx. ◆ ~TDCacheFile(). TDCacheFile::~TDCacheFile ; (; ). override . Close and cleanup dCache file. ; Definition at line 202 of file TDCacheFile.cxx. Member Function Documentation. ◆ CheckFile(). Bool_t TDCacheFile::CheckFile ; (; const char * ; path, . const char * ; location = 0 . ). static . CheckFile() returns kTRUE on success and kFALSE on failure. ; In case the file exists but is not cached, CheckFile() returns kFALSE and errno is set to EAGAIN. ; Definition at line 361 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheFile::Class_Version ; (; ). i",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheFile.html:6617,Testability,log,logical,6617,"es to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; virtual Long64_t GetSize () const;  Returns the current file size. ;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; TClass * IsA () const override;  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; vo",MatchSource.WIKI,doc/master/classTDCacheFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html
https://root.cern/doc/master/classTDCacheSystem.html:3165,Availability,error,error,3165,"ndler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t);  Add timer to list of system timers. ;  ; virtual int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1);  Announce TCP/IP service. ;  ; virtual int AnnounceUdpService (int port, int backlog);  Announce UDP service. ;  ; virtual int AnnounceUnixService (const char *sockpath, int backlog);  Announce unix domain service. ;  ; virtual int AnnounceUnixService (int port, int backlog);  Announce unix domain service. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory nam",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:6406,Availability,error,error,6406,"es whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; v",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:6888,Availability,error,error,6888,"iler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virt",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:15977,Availability,error,error,15977," descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and lis",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:16352,Availability,mask,mask,16352,"clicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  Directives should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (const char *objExt);  Set o",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:18861,Availability,mask,mask,18861,"bed by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:18904,Availability,mask,mask,18904,"bed by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:22683,Availability,error,error,22683,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:22772,Availability,error,error,22772,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:22927,Availability,error,error,22927,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:23224,Availability,error,error,23224,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:27308,Availability,error,error,27308,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:28427,Availability,error,error,28427,"NVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:28507,Availability,error,error,28507," this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void * GetDirPtr () const override;  . Private Attributes; void * fDirp;  directory handler ;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDeb",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31059,Availability,error,error,31059," kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TStrin",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31177,Availability,error,error,31177,"tMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr}",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:1348,Integrability,interface,interface,1348,"tes |; List of all members ; TDCacheSystem Class Reference. . Definition at line 79 of file TDCacheFile.h. Public Member Functions;  TDCacheSystem ();  Create helper class that allows directory access via dCache. ;  ;  ~TDCacheSystem () override;  ; Bool_t AccessPathName (const char *path, EAccessMode mode) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void FreeDirectory (void *dirp) override;  Close a directory. ;  ; const char * GetDirEntry (void *dirp) override;  Get a directory entry. ;  ; Int_t GetPathInfo (const char *path, FileStat_t &buf) override;  Get info about a file. ;  ; TClass * IsA () const override;  ; Int_t MakeDirectory (const char *name) override;  Create a directory. ;  ; void * OpenDirectory (const char *name) override;  Open a directory. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t); ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:1400,Integrability,interface,interface,1400,"cheSystem ();  Create helper class that allows directory access via dCache. ;  ;  ~TDCacheSystem () override;  ; Bool_t AccessPathName (const char *path, EAccessMode mode) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void FreeDirectory (void *dirp) override;  Close a directory. ;  ; const char * GetDirEntry (void *dirp) override;  Get a directory entry. ;  ; Int_t GetPathInfo (const char *path, FileStat_t &buf) override;  Get info about a file. ;  ; TClass * IsA () const override;  ; Int_t MakeDirectory (const char *name) override;  Create a directory. ;  ; void * OpenDirectory (const char *name) override;  Open a directory. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t);  Add timer to list of system timers. ;  ; virtual int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1);  An",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:11411,Integrability,interface,interface,11411,"nfo_t structure. ;  ; virtual Int_t GetUid (const char *user=nullptr);  Returns the user's id. If user = 0, returns current user's id. ;  ; virtual UserGroup_t * GetUserInfo (const char *user=nullptr);  Returns all user info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetUserInfo (Int_t uid);  Returns all user info in the UserGroup_t structure. ;  ; virtual TList * GetVolumes (Option_t *) const;  ; virtual std::string GetWorkingDirectory () const;  Return working directory. ;  ; virtual const char * HomeDirectory (const char *userName=nullptr);  Return the user's home directory. ;  ; virtual const char * HostName ();  Return the system's host name. ;  ; virtual void IgnoreInterrupt (Bool_t ignore=kTRUE);  If ignore is true ignore the interrupt signal, else restore previous behaviour. ;  ; virtual void IgnoreSignal (ESignals sig, Bool_t ignore=kTRUE);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t InControl () const;  ; virtual Bool_t Init ();  Initialize the OS interface. ;  ; virtual void InnerLoop ();  Inner event loop. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsAbsoluteFileName (const char *dir);  Return true if dir is an absolute pathname. ;  ; virtual Bool_t IsFileInIncludePath (const char *name, char **fullpath=nullptr);  Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual int Link (const char *from, const char *to);  Create a link from file1 to file2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libr",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:12960,Integrability,protocol,protocol,12960,"nk (const char *from, const char *to);  Create a link from file1 to file2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a connection to another host. ;  ; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to the specified file. ;  ; virtual TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler fr",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:14056,Integrability,interface,interface,14056,"; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to the specified file. ;  ; virtual TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (T",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:22689,Integrability,message,message,22689,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:23230,Integrability,message,message,23230,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:24220,Integrability,message,message,24220,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:27314,Integrability,message,message,27314,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:27687,Integrability,message,message,27687," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Clas",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31065,Integrability,message,message,31065," kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TStrin",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31183,Integrability,message,message,31183,"tMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr}",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31722,Integrability,protocol,protocol,31722,"aracters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signal",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:1232,Modifiability,inherit,inherited,1232,"tes |; List of all members ; TDCacheSystem Class Reference. . Definition at line 79 of file TDCacheFile.h. Public Member Functions;  TDCacheSystem ();  Create helper class that allows directory access via dCache. ;  ;  ~TDCacheSystem () override;  ; Bool_t AccessPathName (const char *path, EAccessMode mode) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void FreeDirectory (void *dirp) override;  Close a directory. ;  ; const char * GetDirEntry (void *dirp) override;  Get a directory entry. ;  ; Int_t GetPathInfo (const char *path, FileStat_t &buf) override;  Get info about a file. ;  ; TClass * IsA () const override;  ; Int_t MakeDirectory (const char *name) override;  Create a directory. ;  ; void * OpenDirectory (const char *name) override;  Open a directory. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t); ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:6824,Modifiability,variab,variable,6824,"l const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (In",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:15686,Modifiability,variab,variable,15686,"se restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' wi",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:15907,Modifiability,variab,variable,15907,"  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:18584,Modifiability,config,configured,18584,"pt (int sock, int kind, int val);  Set socket option. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, should be either .so, .sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Me",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:19225,Modifiability,variab,variable,19225,"er (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:19598,Modifiability,inherit,inherited,19598," ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:21226,Modifiability,inherit,inherited,21226,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:22319,Modifiability,inherit,inheritance,22319,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:24318,Modifiability,inherit,inherits,24318,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:24435,Modifiability,inherit,inherits,24435,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:28188,Modifiability,inherit,inherited,28188,"NVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:28558,Modifiability,inherit,inherited,28558,"Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void * GetDirPtr () const override;  . Private Attributes; void * fDirp;  directory handler ;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSin",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:28768,Modifiability,inherit,inherited,28768,"Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void * GetDirPtr () const override;  . Private Attributes; void * fDirp;  directory handler ;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSin",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:29421,Modifiability,inherit,inherited,29421,"erited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void * GetDirPtr () const override;  . Private Attributes; void * fDirp;  directory handler ;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:29576,Modifiability,inherit,inherited,29576,"erited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void * GetDirPtr () const override;  . Private Attributes; void * fDirp;  directory handler ;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:30217,Modifiability,inherit,inherited,30217,"id * fDirp;  directory handler ;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterr",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:30316,Modifiability,inherit,inherited,30316,"id * fDirp;  directory handler ;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterr",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31396,Modifiability,inherit,inherited,31396,"y of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLev",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31614,Modifiability,inherit,inherited,31614,"aracters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signal",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31786,Modifiability,inherit,inherited,31786,"* GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:33280,Modifiability,inherit,inherited,33280,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDCacheSystem(). TDCacheSystem::TDCacheSystem ; (; ). Create helper class that allows directory access via dCache. ; Definition at line 610 of file TDCacheFile.cxx. ◆ ~TDCacheSystem(). TDCacheSystem::~TDCacheSystem ; (; ). inlineoverride . Definition at line 88 of file TDCacheFile.h. Member Function Documentation. ◆ AccessPathName(). Bool_t TDCacheSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode . ). overridevirtual . Returns FALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Reimplemented from TSystem.; Definition at line 695 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheSystem::Class ; (; ).",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:3762,Performance,load,loads,3762,"ar * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void DispatchOneEvent (Bool_t pendingOnly=kFALSE);  Dispatch a single event. ;  ; char * DynamicPathName (const char *lib, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry point in specified library. ;  ; virtual Int_t Exec (const char *shellcmd);  Execute a command. ;  ; virtual void Exit (int code, Bool_t mode=kTRUE);  Exit the application. ;  ; virtual void ExitLoop ();  Exit fr",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:5367,Performance,optimiz,optimized,5367,"b, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry point in specified library. ;  ; virtual Int_t Exec (const char *shellcmd);  Execute a command. ;  ; virtual void Exit (int code, Bool_t mode=kTRUE);  Exit the application. ;  ; virtual void ExitLoop ();  Exit from event loop. ;  ; virtual char * ExpandPathName (const char *path);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandPathName (TString &path);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual const char * FindDynamicLibrary (TString &lib, Bool_t quiet=kFALSE);  Find a dynamic library using the system search paths. ;  ; virtual const char * FindFile (const char *search, TString &file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:6155,Performance,load,load,6155,"(const char *search, TString &file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return t",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:6172,Performance,load,load,6172,"(const char *search, TString &file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return t",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:7075,Performance,optimiz,optimization,7075," node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virtual std::string GetHomeDirectory (const char *userName=nullptr) const;  Return the user's home directory. ;  ; virtual TInetAddress GetHostByName (const char *server);  Get Internet Proto",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:8300,Performance,load,loaded,8300,"nst char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virtual std::string GetHomeDirectory (const char *userName=nullptr) const;  Return the user's home directory. ;  ; virtual TInetAddress GetHostByName (const char *server);  Get Internet Protocol (IP) address of host. ;  ; virtual const char * GetIncludePath ();  Get the list of include path. ;  ; virtual const char * GetLibraries (const char *regexp="""", const char *option="""", Bool_t isRegexp=kTRUE);  Return a space separated list of loaded shared libraries. ;  ; virtual const char * GetLinkdefSuffix () const;  Return the linkdef suffix chosen by the user for ACLiC. ;  ; virtual const char * GetLinkedLibs () const;  Return the list of library linked to this executable. ;  ; virtual TSeqCollection * GetListOfFileHandlers () const;  ; virtual TSeqCollection * GetListOfSignalHandlers () const;  ; virtual TSeqCollection * GetListOfStdExceptionHandlers () const;  ; virtual TList * GetListOfTimers () const;  ; virtual const char * GetMakeExe () const;  Return the command line use to make an executable. ;  ; virtual const char * GetMakeSharedLib () const;  Return the command line use to make a shared library. ;  ; virtual int GetMemInfo (MemInfo_t *info) const;  Returns ram and swap memory usage info into the MemInfo_t structure. ;  ; virtual const char * GetObjExt () const;  Get the object file extension. ;  ; int GetPathInfo (const char *path, Long_t *id, Long6",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:12079,Performance,load,loaded,12079,"l void IgnoreInterrupt (Bool_t ignore=kTRUE);  If ignore is true ignore the interrupt signal, else restore previous behaviour. ;  ; virtual void IgnoreSignal (ESignals sig, Bool_t ignore=kTRUE);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t InControl () const;  ; virtual Bool_t Init ();  Initialize the OS interface. ;  ; virtual void InnerLoop ();  Inner event loop. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsAbsoluteFileName (const char *dir);  Return true if dir is an absolute pathname. ;  ; virtual Bool_t IsFileInIncludePath (const char *name, char **fullpath=nullptr);  Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual int Link (const char *from, const char *to);  Create a link from file1 to file2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a connection to another host. ;  ; virtual void Openlog (const char *name,",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:15461,Performance,optimiz,optimized,15461,"mer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:16299,Performance,optimiz,optimized,16299,"t SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:16710,Performance,load,loaded,16710,"nly for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  Directives should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (const char *objExt);  Set object files extension, should be either .o, .obj, etc. ;  ; virtual void SetProgname (const char *name);  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; virtual int SetSockOpt (int sock, int kind, int val);  Set socket option. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, sh",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:31271,Performance,load,loaded,31271,"OnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt; ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:14921,Safety,timeout,timeout,14921,"handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void S",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:15037,Safety,timeout,timeout,15037," of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  Flags",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:441,Security,access,access,441,". ROOT: TDCacheSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDCacheSystem Class Reference. . Definition at line 79 of file TDCacheFile.h. Public Member Functions;  TDCacheSystem ();  Create helper class that allows directory access via dCache. ;  ;  ~TDCacheSystem () override;  ; Bool_t AccessPathName (const char *path, EAccessMode mode) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void FreeDirectory (void *dirp) override;  Close a directory. ;  ; const char * GetDirEntry (void *dirp) override;  Get a directory entry. ;  ; Int_t GetPathInfo (const char *path, FileStat_t &buf) override;  Get info about a file. ;  ; TClass * IsA () const override;  ; Int_t MakeDirectory (const char *name) override;  Create a directory. ;  ; void * OpenDirectory (const char *name) override;  Open a directory. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSign",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:592,Security,access,access,592,". ROOT: TDCacheSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDCacheSystem Class Reference. . Definition at line 79 of file TDCacheFile.h. Public Member Functions;  TDCacheSystem ();  Create helper class that allows directory access via dCache. ;  ;  ~TDCacheSystem () override;  ; Bool_t AccessPathName (const char *path, EAccessMode mode) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void FreeDirectory (void *dirp) override;  Close a directory. ;  ; const char * GetDirEntry (void *dirp) override;  Get a directory entry. ;  ; Int_t GetPathInfo (const char *path, FileStat_t &buf) override;  Get info about a file. ;  ; TClass * IsA () const override;  ; Int_t MakeDirectory (const char *name) override;  Create a directory. ;  ; void * OpenDirectory (const char *name) override;  Open a directory. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSign",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:626,Security,access,access,626,". ROOT: TDCacheSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDCacheSystem Class Reference. . Definition at line 79 of file TDCacheFile.h. Public Member Functions;  TDCacheSystem ();  Create helper class that allows directory access via dCache. ;  ;  ~TDCacheSystem () override;  ; Bool_t AccessPathName (const char *path, EAccessMode mode) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void FreeDirectory (void *dirp) override;  Close a directory. ;  ; const char * GetDirEntry (void *dirp) override;  Get a directory entry. ;  ; Int_t GetPathInfo (const char *path, FileStat_t &buf) override;  Get info about a file. ;  ; TClass * IsA () const override;  ; Int_t MakeDirectory (const char *name) override;  Create a directory. ;  ; void * OpenDirectory (const char *name) override;  Open a directory. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSign",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:18762,Security,secur,secure,18762,"sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:19343,Security,access,access,19343,"lassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:20466,Security,hash,hash,20466,"nd location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:30960,Security,access,access,30960,"edStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; I",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:33640,Security,access,access,33640,"  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDCacheSystem(). TDCacheSystem::TDCacheSystem ; (; ). Create helper class that allows directory access via dCache. ; Definition at line 610 of file TDCacheFile.cxx. ◆ ~TDCacheSystem(). TDCacheSystem::~TDCacheSystem ; (; ). inlineoverride . Definition at line 88 of file TDCacheFile.h. Member Function Documentation. ◆ AccessPathName(). Bool_t TDCacheSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode . ). overridevirtual . Returns FALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Reimplemented from TSystem.; Definition at line 695 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheSystem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheSystem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheSystem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 97 of file TDCacheFi",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:34012,Security,access,access,34012,"n * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDCacheSystem(). TDCacheSystem::TDCacheSystem ; (; ). Create helper class that allows directory access via dCache. ; Definition at line 610 of file TDCacheFile.cxx. ◆ ~TDCacheSystem(). TDCacheSystem::~TDCacheSystem ; (; ). inlineoverride . Definition at line 88 of file TDCacheFile.h. Member Function Documentation. ◆ AccessPathName(). Bool_t TDCacheSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode . ). overridevirtual . Returns FALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Reimplemented from TSystem.; Definition at line 695 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheSystem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheSystem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheSystem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 97 of file TDCacheFile.h. ◆ DeclFileName(). static const char * TDCacheSystem::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 97 of file TDCacheFile.h. ◆ FreeDirectory(). void TDCacheSystem::FreeDirectory ; (; void * ; dirp). overridevirtual . Close a directory. ; Reimplemented from TSystem.; Definition at line 658 of file TDCacheFile.cxx. ◆ Get",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:34046,Security,access,access,34046,"n * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDCacheSystem(). TDCacheSystem::TDCacheSystem ; (; ). Create helper class that allows directory access via dCache. ; Definition at line 610 of file TDCacheFile.cxx. ◆ ~TDCacheSystem(). TDCacheSystem::~TDCacheSystem ; (; ). inlineoverride . Definition at line 88 of file TDCacheFile.h. Member Function Documentation. ◆ AccessPathName(). Bool_t TDCacheSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode . ). overridevirtual . Returns FALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Reimplemented from TSystem.; Definition at line 695 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheSystem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheSystem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheSystem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 97 of file TDCacheFile.h. ◆ DeclFileName(). static const char * TDCacheSystem::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 97 of file TDCacheFile.h. ◆ FreeDirectory(). void TDCacheSystem::FreeDirectory ; (; void * ; dirp). overridevirtual . Close a directory. ; Reimplemented from TSystem.; Definition at line 658 of file TDCacheFile.cxx. ◆ Get",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:34094,Security,access,access,34094,"};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDCacheSystem(). TDCacheSystem::TDCacheSystem ; (; ). Create helper class that allows directory access via dCache. ; Definition at line 610 of file TDCacheFile.cxx. ◆ ~TDCacheSystem(). TDCacheSystem::~TDCacheSystem ; (; ). inlineoverride . Definition at line 88 of file TDCacheFile.h. Member Function Documentation. ◆ AccessPathName(). Bool_t TDCacheSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode . ). overridevirtual . Returns FALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Reimplemented from TSystem.; Definition at line 695 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheSystem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheSystem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheSystem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 97 of file TDCacheFile.h. ◆ DeclFileName(). static const char * TDCacheSystem::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 97 of file TDCacheFile.h. ◆ FreeDirectory(). void TDCacheSystem::FreeDirectory ; (; void * ; dirp). overridevirtual . Close a directory. ; Reimplemented from TSystem.; Definition at line 658 of file TDCacheFile.cxx. ◆ GetDirEntry(). const char * TDCacheSystem::GetDirEntry ; (; void * ",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:3521,Testability,log,log,3521,"virtual int AnnounceUnixService (const char *sockpath, int backlog);  Announce unix domain service. ;  ; virtual int AnnounceUnixService (int port, int backlog);  Announce unix domain service. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void DispatchOneEvent (Bool_t pendingOnly=kFALSE);  Dispatch a single event. ;  ; char * DynamicPathName (const char *lib, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDCacheSystem.html:13124,Testability,log,log,13124,"t the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a connection to another host. ;  ; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to the specified file. ;  ; virtual TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; vi",MatchSource.WIKI,doc/master/classTDCacheSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html
https://root.cern/doc/master/classTDecayChannel.html:2766,Availability,error,error,2766,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:2855,Availability,error,error,2855,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:3010,Availability,error,error,3010,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:3307,Availability,error,error,3307,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:7871,Availability,error,error,7871," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:2772,Integrability,message,message,2772,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:3313,Integrability,message,message,3313,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:4515,Integrability,message,message,4515,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:7877,Integrability,message,message,7877," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:8250,Integrability,message,message,8250," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:1005,Modifiability,inherit,inherited,1005,". ROOT: TDecayChannel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TDecayChannel Class ReferenceMonte Carlo » EG. ; Description of the decay channel. ; Feb 16 2001 P.Murat ; Definition at line 24 of file TDecayChannel.h. Public Member Functions;  TDecayChannel ();  default constructor ;  ;  TDecayChannel (Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t *DaughterPdgCode);  constructor ;  ;  ~TDecayChannel () override;  destructor ;  ; Double_t BranchingRatio ();  ; Int_t DaughterPdgCode (Int_t i);  ; TClass * IsA () const override;  ; Int_t MatrixElementCode ();  ; Int_t NDaughters ();  ; Int_t Number ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare ",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:2402,Modifiability,inherit,inheritance,2402,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:4613,Modifiability,inherit,inherits,4613,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:4730,Modifiability,inherit,inherits,4730,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:8751,Modifiability,inherit,inherited,8751,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fBranchingRatio;  ; TArrayI fDaughters;  ; Int_t fMatrixElementCode;  ; Int_t fNumber;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum ",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:9402,Modifiability,inherit,inherited,9402,"bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fBranchingRatio;  ; TArrayI fDaughters;  ; Int_t fMatrixElementCode;  ; Int_t fNumber;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDecayChannel.h>. Inheritance diagram for TDecayChannel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:10043,Modifiability,inherit,inherited,10043,"tStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fBranchingRatio;  ; TArrayI fDaughters;  ; Int_t fMatrixElementCode;  ; Int_t fNumber;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDecayChannel.h>. Inheritance diagram for TDecayChannel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecayChannel() [1/2]. TDecayChannel::TDecayChannel ; (; ). default constructor ; Definition at line 27 of file TDecayChannel.cxx. ◆ TDecayChannel() [2/2]. TDecayChannel::TDecayChannel ; (; Int_t ; Number, . Int_t ; MatrixElementCode, . Double_t ; BranchingRatio, . Int_t ; NDaughters, . Int_t * ; DaughterPdgCode . ). constructor ; Definition at line 37 of file TDecayChannel.cxx. ◆ ~TDecayChannel(). TDecayChannel::~TDecayChannel ; (; ). override . destructor ; Definition at line 51 of file TDecayChannel.cxx. Member Function Documentation. ◆ BranchingRatio(). Double_t TDecayChannel::BranchingRatio ; (; ). inline . Definit",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:10142,Modifiability,inherit,inherited,10142,"tStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fBranchingRatio;  ; TArrayI fDaughters;  ; Int_t fMatrixElementCode;  ; Int_t fNumber;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDecayChannel.h>. Inheritance diagram for TDecayChannel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecayChannel() [1/2]. TDecayChannel::TDecayChannel ; (; ). default constructor ; Definition at line 27 of file TDecayChannel.cxx. ◆ TDecayChannel() [2/2]. TDecayChannel::TDecayChannel ; (; Int_t ; Number, . Int_t ; MatrixElementCode, . Double_t ; BranchingRatio, . Int_t ; NDaughters, . Int_t * ; DaughterPdgCode . ). constructor ; Definition at line 37 of file TDecayChannel.cxx. ◆ ~TDecayChannel(). TDecayChannel::~TDecayChannel ; (; ). override . destructor ; Definition at line 51 of file TDecayChannel.cxx. Member Function Documentation. ◆ BranchingRatio(). Double_t TDecayChannel::BranchingRatio ; (; ). inline . Definit",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecayChannel.html:4244,Security,hash,hash,4244," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDecayChannel.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html
https://root.cern/doc/master/classTDecompBase.html:721,Availability,avail,available,721,". ROOT: TDecompBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TDecompBase Class ReferenceabstractMath » Matrix Linear Algebra. ; Decomposition Base class. ; This class forms the base for all the decompositions methods in the linear algebra package . It or its derived classes have installed the methods to solve equations,invert matrices and calculate determinants while monitoring the accuracy.; Each derived class has always the following methods available:; Condition() :; In an iterative scheme the condition number for matrix inversion is calculated . This number is of interest for estimating the accuracy of x in the equation Ax=b For example: A is a (10x10) Hilbert matrix which looks deceivingly innocent and simple, A(i,j) = 1/(i+j+1) b(i) = Sum_j A(i,j), so a sum of a row in A; the solution is x(i) = 1. i=0,.,9; However, TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); b#define b(i)Definition RSha256.hxx:100; TMatrixT< Double_t >; TVectorT< Double_t >; mTMarker mDefinition textangle.C:8; gives,; {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}; Looking at the condition number, this is in line with expected the accuracy . The condition number is 3.957e+12 . As a simple rule of thumb, a condition number of 1.0e+n means that you lose up to n digits of accuracy in a solution . Since doubles are stored with 15 digits, we can expect the accuracy to be as small as 3 digits .; Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2) Expressing the determinant this way makes under/over-flow very unlikely .; Decompose(); Here the actually decomposition is performed . One can change the matrix A after the decomposition constructor has b",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:2624,Availability,toler,tolerance,2624,"expect the accuracy to be as small as 3 digits .; Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2) Expressing the determinant this way makes under/over-flow very unlikely .; Decompose(); Here the actually decomposition is performed . One can change the matrix A after the decomposition constructor has been called without effecting the decomposition result; Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with the solution .; TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced with the solution .; MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through the argument and replaced with the solution .; Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument the unit matrix . Note that for a matrix a(m,n) with m > n a pseudo-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, o",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:3003,Availability,toler,tolerance,3003,"decomposition is performed . One can change the matrix A after the decomposition constructor has been called without effecting the decomposition result; Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with the solution .; TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced with the solution .; MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through the argument and replaced with the solution .; Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument the unit matrix . Note that for a matrix a(m,n) with m > n a pseudo-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular mat",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:3061,Availability,toler,tolerance,3061,"ed with the solution .; TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced with the solution .; MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through the argument and replaced with the solution .; Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument the unit matrix . Note that for a matrix a(m,n) with m > n a pseudo-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular matrix . In this case the user will have to reduce the tolerance number by this factor . (For CPU time saving we decided not to make this an automatic procedure) .; Code for this could look as follows: const Double_t max_abs = Abs(a).Ma",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:3492,Availability,toler,tolerance,3492,"e just a call to MultiSolve with as input argument the unit matrix . Note that for a matrix a(m,n) with m > n a pseudo-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular matrix . In this case the user will have to reduce the tolerance number by this factor . (For CPU time saving we decided not to make this an automatic procedure) .; Code for this could look as follows: const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; a#define a(i)Definition RSha256.hxx:99; double; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; For usage examples see $ROOTSYS/test/stressLinear.cxx ; Definition at line 33 of f",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:3548,Availability,toler,tolerance,3548,"do-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular matrix . In this case the user will have to reduce the tolerance number by this factor . (For CPU time saving we decided not to make this an automatic procedure) .; Code for this could look as follows: const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; a#define a(i)Definition RSha256.hxx:99; double; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; For usage examples see $ROOTSYS/test/stressLinear.cxx ; Definition at line 33 of file TDecompBase.h. Public Member Functions;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBa",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:3956,Availability,toler,tolerance,3956,"e in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular matrix . In this case the user will have to reduce the tolerance number by this factor . (For CPU time saving we decided not to make this an automatic procedure) .; Code for this could look as follows: const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; a#define a(i)Definition RSha256.hxx:99; double; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; For usage examples see $ROOTSYS/test/stressLinear.cxx ; Definition at line 33 of file TDecompBase.h. Public Member Functions;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; virtual Bool_t Decompose ()=0;  ; virtual void Det (Double_t &d1, Double_t &d2);  Matrix determinant det = d1*TMath::Power(2.,d2) ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () ",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:7655,Availability,error,error,7655,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:7744,Availability,error,error,7744,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:7899,Availability,error,error,7899,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:8196,Availability,error,error,8196,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:12639,Availability,error,error,12639,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:553,Deployability,install,installed,553,". ROOT: TDecompBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TDecompBase Class ReferenceabstractMath » Matrix Linear Algebra. ; Decomposition Base class. ; This class forms the base for all the decompositions methods in the linear algebra package . It or its derived classes have installed the methods to solve equations,invert matrices and calculate determinants while monitoring the accuracy.; Each derived class has always the following methods available:; Condition() :; In an iterative scheme the condition number for matrix inversion is calculated . This number is of interest for estimating the accuracy of x in the equation Ax=b For example: A is a (10x10) Hilbert matrix which looks deceivingly innocent and simple, A(i,j) = 1/(i+j+1) b(i) = Sum_j A(i,j), so a sum of a row in A; the solution is x(i) = 1. i=0,.,9; However, TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); b#define b(i)Definition RSha256.hxx:100; TMatrixT< Double_t >; TVectorT< Double_t >; mTMarker mDefinition textangle.C:8; gives,; {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}; Looking at the condition number, this is in line with expected the accuracy . The condition number is 3.957e+12 . As a simple rule of thumb, a condition number of 1.0e+n means that you lose up to n digits of accuracy in a solution . Since doubles are stored with 15 digits, we can expect the accuracy to be as small as 3 digits .; Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2) Expressing the determinant this way makes under/over-flow very unlikely .; Decompose(); Here the actually decomposition is performed . One can change the matrix A after the decomposition constructor has b",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:643,Energy Efficiency,monitor,monitoring,643,". ROOT: TDecompBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TDecompBase Class ReferenceabstractMath » Matrix Linear Algebra. ; Decomposition Base class. ; This class forms the base for all the decompositions methods in the linear algebra package . It or its derived classes have installed the methods to solve equations,invert matrices and calculate determinants while monitoring the accuracy.; Each derived class has always the following methods available:; Condition() :; In an iterative scheme the condition number for matrix inversion is calculated . This number is of interest for estimating the accuracy of x in the equation Ax=b For example: A is a (10x10) Hilbert matrix which looks deceivingly innocent and simple, A(i,j) = 1/(i+j+1) b(i) = Sum_j A(i,j), so a sum of a row in A; the solution is x(i) = 1. i=0,.,9; However, TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); b#define b(i)Definition RSha256.hxx:100; TMatrixT< Double_t >; TVectorT< Double_t >; mTMarker mDefinition textangle.C:8; gives,; {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}; Looking at the condition number, this is in line with expected the accuracy . The condition number is 3.957e+12 . As a simple rule of thumb, a condition number of 1.0e+n means that you lose up to n digits of accuracy in a solution . Since doubles are stored with 15 digits, we can expect the accuracy to be as small as 3 digits .; Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2) Expressing the determinant this way makes under/over-flow very unlikely .; Decompose(); Here the actually decomposition is performed . One can change the matrix A after the decomposition constructor has b",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:2773,Energy Efficiency,power,powerful,2773,"decomposition is performed . One can change the matrix A after the decomposition constructor has been called without effecting the decomposition result; Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with the solution .; TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced with the solution .; MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through the argument and replaced with the solution .; Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument the unit matrix . Note that for a matrix a(m,n) with m > n a pseudo-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular mat",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:2790,Energy Efficiency,monitor,monitor,2790,"decomposition is performed . One can change the matrix A after the decomposition constructor has been called without effecting the decomposition result; Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with the solution .; TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced with the solution .; MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through the argument and replaced with the solution .; Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument the unit matrix . Note that for a matrix a(m,n) with m > n a pseudo-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular mat",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:3945,Energy Efficiency,reduce,reduce,3945,"e in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular matrix . In this case the user will have to reduce the tolerance number by this factor . (For CPU time saving we decided not to make this an automatic procedure) .; Code for this could look as follows: const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; a#define a(i)Definition RSha256.hxx:99; double; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; For usage examples see $ROOTSYS/test/stressLinear.cxx ; Definition at line 33 of file TDecompBase.h. Public Member Functions;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; virtual Bool_t Decompose ()=0;  ; virtual void Det (Double_t &d1, Double_t &d2);  Matrix determinant det = d1*TMath::Power(2.,d2) ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () ",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:7661,Integrability,message,message,7661,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:8202,Integrability,message,message,8202,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:9404,Integrability,message,message,9404,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:12645,Integrability,message,message,12645,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:13018,Integrability,message,message,13018," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:5894,Modifiability,inherit,inherited,5894,"rminant det = d1*TMath::Power(2.,d2) ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; virtual Int_t GetNcols () const =0;  ; virtual Int_t GetNrows () const =0;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; TClass * IsA () const override;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print class members. ;  ; Double_t SetTol (Double_t tol);  ; virtual TVectorD Solve (const TVectorD &b, Bool_t &ok)=0;  ; virtual Bool_t Solve (TMatrixDColumn &b)=0;  ; virtual Bool_t Solve (TVectorD &b)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual TVectorD TransSolve (const TVectorD &b, Bool_t &ok)=0;  ; virtual Bool_t TransSolve (TMatrixDColumn &b)=0;  ; virtual Bool_t TransSolve (TVectorD &b)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an obj",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:7291,Modifiability,inherit,inheritance,7291,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:9502,Modifiability,inherit,inherits,9502,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:9619,Modifiability,inherit,inherits,9619,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:13519,Modifiability,inherit,inherited,13519,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual const TMatrixDBase & GetDecompMatrix () const =0;  ; In",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:14368,Modifiability,inherit,inherited,14368," ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual const TMatrixDBase & GetDecompMatrix () const =0;  ; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( ",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:14626,Modifiability,inherit,inherited,14626," static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual const TMatrixDBase & GetDecompMatrix () const =0;  ; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:15116,Modifiability,inherit,inherited,15116,"MatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual const TMatrixDBase & GetDecompMatrix () const =0;  ; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <TDecompBase.h>. Inheritance diagram for TDecompBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . EnumeratorkWorkMax . Definition at line 60 of file TDecompBase.h. ◆ EMatrixDecompStat. enum TDecompBase::EMatrixDecompStat. protected . EnumeratorkInit ; kPatternSet ; kValuesSet ; kMatrixSet ; kDeco",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:1920,Performance,perform,performed,1920,"tion Ax=b For example: A is a (10x10) Hilbert matrix which looks deceivingly innocent and simple, A(i,j) = 1/(i+j+1) b(i) = Sum_j A(i,j), so a sum of a row in A; the solution is x(i) = 1. i=0,.,9; However, TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); b#define b(i)Definition RSha256.hxx:100; TMatrixT< Double_t >; TVectorT< Double_t >; mTMarker mDefinition textangle.C:8; gives,; {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}; Looking at the condition number, this is in line with expected the accuracy . The condition number is 3.957e+12 . As a simple rule of thumb, a condition number of 1.0e+n means that you lose up to n digits of accuracy in a solution . Since doubles are stored with 15 digits, we can expect the accuracy to be as small as 3 digits .; Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2) Expressing the determinant this way makes under/over-flow very unlikely .; Decompose(); Here the actually decomposition is performed . One can change the matrix A after the decomposition constructor has been called without effecting the decomposition result; Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with the solution .; TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced with the solution .; MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through the argument and replaced with the solution .; Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument the unit matrix . Note that for a matrix a(m,n) with m > n a pseudo-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to ",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:3883,Safety,detect,detect,3883,"ue is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular matrix . In this case the user will have to reduce the tolerance number by this factor . (For CPU time saving we decided not to make this an automatic procedure) .; Code for this could look as follows: const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; a#define a(i)Definition RSha256.hxx:99; double; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; For usage examples see $ROOTSYS/test/stressLinear.cxx ; Definition at line 33 of file TDecompBase.h. Public Member Functions;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; virtual Bool_t Decompose ()=0;  ; virtual void Det (Double_t &d1, Double_t &d2);  Matrix determinant det = d1*TMath::Power(2.,d2) ;  ; Int_",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:9133,Security,hash,hash,9133," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:4403,Testability,test,test,4403,". Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular matrix . In this case the user will have to reduce the tolerance number by this factor . (For CPU time saving we decided not to make this an automatic procedure) .; Code for this could look as follows: const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; a#define a(i)Definition RSha256.hxx:99; double; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; For usage examples see $ROOTSYS/test/stressLinear.cxx ; Definition at line 33 of file TDecompBase.h. Public Member Functions;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; virtual Bool_t Decompose ()=0;  ; virtual void Det (Double_t &d1, Double_t &d2);  Matrix determinant det = d1*TMath::Power(2.,d2) ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; virtual Int_t GetNcols () const =0;  ; virtual Int_t GetNrows () const =0;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; TClass * IsA () const override;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print class members. ;  ; Double_t SetTo",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:990,Usability,simpl,simple,990,". ROOT: TDecompBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TDecompBase Class ReferenceabstractMath » Matrix Linear Algebra. ; Decomposition Base class. ; This class forms the base for all the decompositions methods in the linear algebra package . It or its derived classes have installed the methods to solve equations,invert matrices and calculate determinants while monitoring the accuracy.; Each derived class has always the following methods available:; Condition() :; In an iterative scheme the condition number for matrix inversion is calculated . This number is of interest for estimating the accuracy of x in the equation Ax=b For example: A is a (10x10) Hilbert matrix which looks deceivingly innocent and simple, A(i,j) = 1/(i+j+1) b(i) = Sum_j A(i,j), so a sum of a row in A; the solution is x(i) = 1. i=0,.,9; However, TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); b#define b(i)Definition RSha256.hxx:100; TMatrixT< Double_t >; TVectorT< Double_t >; mTMarker mDefinition textangle.C:8; gives,; {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}; Looking at the condition number, this is in line with expected the accuracy . The condition number is 3.957e+12 . As a simple rule of thumb, a condition number of 1.0e+n means that you lose up to n digits of accuracy in a solution . Since doubles are stored with 15 digits, we can expect the accuracy to be as small as 3 digits .; Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2) Expressing the determinant this way makes under/over-flow very unlikely .; Decompose(); Here the actually decomposition is performed . One can change the matrix A after the decomposition constructor has b",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:1511,Usability,simpl,simple,1511," derived classes have installed the methods to solve equations,invert matrices and calculate determinants while monitoring the accuracy.; Each derived class has always the following methods available:; Condition() :; In an iterative scheme the condition number for matrix inversion is calculated . This number is of interest for estimating the accuracy of x in the equation Ax=b For example: A is a (10x10) Hilbert matrix which looks deceivingly innocent and simple, A(i,j) = 1/(i+j+1) b(i) = Sum_j A(i,j), so a sum of a row in A; the solution is x(i) = 1. i=0,.,9; However, TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); b#define b(i)Definition RSha256.hxx:100; TMatrixT< Double_t >; TVectorT< Double_t >; mTMarker mDefinition textangle.C:8; gives,; {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}; Looking at the condition number, this is in line with expected the accuracy . The condition number is 3.957e+12 . As a simple rule of thumb, a condition number of 1.0e+n means that you lose up to n digits of accuracy in a solution . Since doubles are stored with 15 digits, we can expect the accuracy to be as small as 3 digits .; Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2) Expressing the determinant this way makes under/over-flow very unlikely .; Decompose(); Here the actually decomposition is performed . One can change the matrix A after the decomposition constructor has been called without effecting the decomposition result; Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with the solution .; TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced with the solution .; MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through the argument and replaced with the solution .; Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument the unit matrix . Note that",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBase.html:3579,Usability,clear,clear,3579,"do-inverse is calculated . Tolerances and Scaling; The tolerance parameter (which is a member of this base class) plays a crucial role in all operations of the decomposition classes . It gives the user a powerful tool to monitor and steer the operations Its default value is sqrt(epsilon) where 1+epsilon = 1; If you do not want to be bothered by the following considerations, like in most other linear algebra packages, just set the tolerance with SetTol to an arbitrary small number .; The tolerance number is used by each decomposition method to decide whether the matrix is near singular, except of course SVD which can handle singular matrices . For each decomposition this will be checked in a different way; in LU the matrix is considered singular when, at some point in the decomposition, a diagonal element < fTol . Therefore, we had to set in the example above of the (10x10) Hilbert, which is near singular, the tolerance on 10e-12 . (The fact that we have to set the tolerance < sqrt(epsilon) is a clear indication that we are losing precision .); If the matrix is flagged as being singular, operations with the decomposition will fail and will return matrices/vectors that are invalid .; The observant reader will notice that by scaling the complete matrix by some small number the decomposition will detect a singular matrix . In this case the user will have to reduce the tolerance number by this factor . (For CPU time saving we decided not to make this an automatic procedure) .; Code for this could look as follows: const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; a#define a(i)Definition RSha256.hxx:99; double; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; For usage examples see $ROOTSYS/test/stressLinear.cxx ; Definition at line 33 of file TDecompBase.h. Public Member Functions;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBa",MatchSource.WIKI,doc/master/classTDecompBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBase.html
https://root.cern/doc/master/classTDecompBK.html:6418,Availability,error,error,6418,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:6507,Availability,error,error,6507,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:6662,Availability,error,error,6662,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:6959,Availability,error,error,6959,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:11402,Availability,error,error,11402,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:6424,Integrability,message,message,6424,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:6965,Integrability,message,message,6965,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:8167,Integrability,message,message,8167,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:11408,Integrability,message,message,11408,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:11781,Integrability,message,message,11781," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat (",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:3943,Modifiability,inherit,inherited,3943,"), its inverse A_inv(m,m) is returned . ;  ; Bool_t Invert (TMatrixDSym &inv);  For a symmetric matrix A(m,m), its inverse A_inv(m,m) is returned . ;  ; TClass * IsA () const override;  ; TDecompBK & operator= (const TDecompBK &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print the class members. ;  ; virtual void SetMatrix (const TMatrixDSym &a);  Set the matrix to be decomposed, decomposition status is reset. ;  ; TVectorD Solve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t Solve (TMatrixDColumn &b) override;  Solve Ax=b assuming the BK form of A is stored in fU . Solution returned in b. ;  ; Bool_t Solve (TVectorD &b) override;  Solve Ax=b assuming the BK form of A is stored in fU . Solution returned in b. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  ; Bool_t TransSolve (TVectorD &b) override;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:4657,Modifiability,inherit,inherited,4657,"Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  ; Bool_t TransSolve (TVectorD &b) override;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:6054,Modifiability,inherit,inheritance,6054,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:8265,Modifiability,inherit,inherits,8265,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:8382,Modifiability,inherit,inherits,8382,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:12282,Modifiability,inherit,inherited,12282,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:12497,Modifiability,inherit,inherited,12497,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:13098,Modifiability,inherit,inherited,13098,"ersion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fIpiv;  ; Int_t fNIpiv;  ; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID =",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:13224,Modifiability,inherit,inherited,13224,"ersion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fIpiv;  ; Int_t fNIpiv;  ; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID =",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:13502,Modifiability,inherit,inherited,13502,"ic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fIpiv;  ; Int_t fNIpiv;  ; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet =",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:13690,Modifiability,inherit,inherited,13690,"ool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fIpiv;  ; Int_t fNIpiv;  ; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = ",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:14331,Modifiability,inherit,inherited,14331,"ributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . #include <TDecompBK.h>. Inheritance diagram for TDecompBK:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompBK() [1/5]. TDecompBK::TDecompBK ; (; ). Default constructor. ; Definition at line 64 of file TDecompBK.cxx. ◆ TDecompBK() [2/5]. TDecompBK::TDecompBK ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) symmetric matrix. ; Definition at line 73 of file TDecompBK.cxx. ◆ TDecompBK() [3/5]. TDecompBK::TDecompBK ; (; Int_t ; row_lwb, . Int_t ; row_up",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:14705,Modifiability,inherit,inherited,14705,"kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . #include <TDecompBK.h>. Inheritance diagram for TDecompBK:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompBK() [1/5]. TDecompBK::TDecompBK ; (; ). Default constructor. ; Definition at line 64 of file TDecompBK.cxx. ◆ TDecompBK() [2/5]. TDecompBK::TDecompBK ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) symmetric matrix. ; Definition at line 73 of file TDecompBK.cxx. ◆ TDecompBK() [3/5]. TDecompBK::TDecompBK ; (; Int_t ; row_lwb, . Int_t ; row_upb . ). Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) symmetric matrix. ; Definition at line 84 of file TDecompBK.cxx. ◆ TDecompBK() [4/5]. TDecompBK::TDecompBK ; (; const TMatrixDSym & ; m, . Double_t ; tol = 0.0 . ). Constructor for symmetric matrix A. ; Definition at line 97 of file TDecompBK.cxx",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:14811,Modifiability,inherit,inherited,14811,"kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . #include <TDecompBK.h>. Inheritance diagram for TDecompBK:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompBK() [1/5]. TDecompBK::TDecompBK ; (; ). Default constructor. ; Definition at line 64 of file TDecompBK.cxx. ◆ TDecompBK() [2/5]. TDecompBK::TDecompBK ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) symmetric matrix. ; Definition at line 73 of file TDecompBK.cxx. ◆ TDecompBK() [3/5]. TDecompBK::TDecompBK ; (; Int_t ; row_lwb, . Int_t ; row_upb . ). Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) symmetric matrix. ; Definition at line 84 of file TDecompBK.cxx. ◆ TDecompBK() [4/5]. TDecompBK::TDecompBK ; (; const TMatrixDSym & ; m, . Double_t ; tol = 0.0 . ). Constructor for symmetric matrix A. ; Definition at line 97 of file TDecompBK.cxx",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompBK.html:7896,Security,hash,hash,7896," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDecompBK.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompBK.html
https://root.cern/doc/master/classTDecompChol.html:5445,Availability,error,error,5445,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:5534,Availability,error,error,5534,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:5689,Availability,error,error,5689,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:5986,Availability,error,error,5986,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:10429,Availability,error,error,10429,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:5451,Integrability,message,message,5451,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:5992,Integrability,message,message,5992,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:7194,Integrability,message,message,7194,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:10435,Integrability,message,message,10435,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:10808,Integrability,message,message,10808," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat (",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:2970,Modifiability,inherit,inherited,2970,";  For a symmetric matrix A(m,m), its inverse A_inv(m,m) is returned . ;  ; Bool_t Invert (TMatrixDSym &inv);  For a symmetric matrix A(m,m), its inverse A_inv(m,m) is returned . ;  ; TClass * IsA () const override;  ; TDecompChol & operator= (const TDecompChol &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print class members . ;  ; virtual void SetMatrix (const TMatrixDSym &a);  Set the matrix to be decomposed, decomposition status is reset. ;  ; TVectorD Solve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t Solve (TMatrixDColumn &b) override;  Solve equations Ax=b assuming A has been factored by Cholesky. ;  ; Bool_t Solve (TVectorD &b) override;  Solve equations Ax=b assuming A has been factored by Cholesky. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  ; Bool_t TransSolve (TVectorD &b) override;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:3684,Modifiability,inherit,inherited,3684,"Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  ; Bool_t TransSolve (TVectorD &b) override;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:5081,Modifiability,inherit,inheritance,5081,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:7292,Modifiability,inherit,inherits,7292,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:7409,Modifiability,inherit,inherits,7409,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:11309,Modifiability,inherit,inherited,11309,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:11524,Modifiability,inherit,inherited,11524,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:12125,Modifiability,inherit,inherited,12125,"ersion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:12251,Modifiability,inherit,inherited,12251,"ersion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:12494,Modifiability,inherit,inherited,12494,"rom TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 ))",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:12682,Modifiability,inherit,inherited,12682,"destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = ",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:13323,Modifiability,inherit,inherited,13323,"ributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . #include <TDecompChol.h>. Inheritance diagram for TDecompChol:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompChol() [1/6]. TDecompChol::TDecompChol ; (; ). inline . Definition at line 34 of file TDecompChol.h. ◆ TDecompChol() [2/6]. TDecompChol::TDecompChol ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) matrix. ; Definition at line 35 of file TDecompChol.cxx. ◆ TDecompChol() [3/6]. TDecompChol::TDecompChol ; (; Int_t ; row_lwb, . Int_t ; row_up",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:13697,Modifiability,inherit,inherited,13697,"kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . #include <TDecompChol.h>. Inheritance diagram for TDecompChol:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompChol() [1/6]. TDecompChol::TDecompChol ; (; ). inline . Definition at line 34 of file TDecompChol.h. ◆ TDecompChol() [2/6]. TDecompChol::TDecompChol ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) matrix. ; Definition at line 35 of file TDecompChol.cxx. ◆ TDecompChol() [3/6]. TDecompChol::TDecompChol ; (; Int_t ; row_lwb, . Int_t ; row_upb . ). Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. ; Definition at line 43 of file TDecompChol.cxx. ◆ TDecompChol() [4/6]. TDecompChol::TDecompChol ; (; const TMatrixDSym & ; a, . Double_t ; tol = 0.0 . ). Constructor for symmetric matrix A . Matrix should be positive definite. ; Definiti",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:13803,Modifiability,inherit,inherited,13803,"kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . #include <TDecompChol.h>. Inheritance diagram for TDecompChol:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompChol() [1/6]. TDecompChol::TDecompChol ; (; ). inline . Definition at line 34 of file TDecompChol.h. ◆ TDecompChol() [2/6]. TDecompChol::TDecompChol ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) matrix. ; Definition at line 35 of file TDecompChol.cxx. ◆ TDecompChol() [3/6]. TDecompChol::TDecompChol ; (; Int_t ; row_lwb, . Int_t ; row_upb . ). Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. ; Definition at line 43 of file TDecompChol.cxx. ◆ TDecompChol() [4/6]. TDecompChol::TDecompChol ; (; const TMatrixDSym & ; a, . Double_t ; tol = 0.0 . ). Constructor for symmetric matrix A . Matrix should be positive definite. ; Definiti",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompChol.html:6923,Security,hash,hash,6923," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDecompChol.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompChol.html
https://root.cern/doc/master/classTDecompLU.html:6006,Availability,error,error,6006,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:6095,Availability,error,error,6095,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:6250,Availability,error,error,6250,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:6547,Availability,error,error,6547,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:10990,Availability,error,error,10990,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t InvertLU (TMatrixD &a, Double_t tol, Double_t *det=nullptr);  Calculate matrix inversion through in place forward/backward substitutio",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:6012,Integrability,message,message,6012,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:6553,Integrability,message,message,6553,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:7755,Integrability,message,message,7755,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:10996,Integrability,message,message,10996,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t InvertLU (TMatrixD &a, Double_t tol, Double_t *det=nullptr);  Calculate matrix inversion through in place forward/backward substitutio",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:11369,Integrability,message,message,11369," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t InvertLU (TMatrixD &a, Double_t tol, Double_t *det=nullptr);  Calculate matrix inversion through in place forward/backward substitution. ;  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Cl",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:3531,Modifiability,inherit,inherited,3531," internals of this object. ;  ; virtual void SetMatrix (const TMatrixD &a);  Set matrix to be decomposed. ;  ; TVectorD Solve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t Solve (TMatrixDColumn &b) override;  Solve Ax=b assuming the LU form of A is stored in fLU, but assume b has not been transformed. ;  ; Bool_t Solve (TVectorD &b) override;  Solve Ax=b assuming the LU form of A is stored in fLU, but assume b has not been transformed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  Solve A^T x=b assuming the LU form of A^T is stored in fLU, but assume b has not been transformed. ;  ; Bool_t TransSolve (TVectorD &b) override;  Solve A^T x=b assuming the LU form of A^T is stored in fLU, but assume b has not been transformed. ;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:4245,Modifiability,inherit,inherited,4245,"ol_t TransSolve (TMatrixDColumn &b) override;  Solve A^T x=b assuming the LU form of A^T is stored in fLU, but assume b has not been transformed. ;  ; Bool_t TransSolve (TVectorD &b) override;  Solve A^T x=b assuming the LU form of A^T is stored in fLU, but assume b has not been transformed. ;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:5642,Modifiability,inherit,inheritance,5642,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:7853,Modifiability,inherit,inherits,7853,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:7970,Modifiability,inherit,inherits,7970,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:12026,Modifiability,inherit,inherited,12026," or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t InvertLU (TMatrixD &a, Double_t tol, Double_t *det=nullptr);  Calculate matrix inversion through in place forward/backward substitution. ;  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t DecomposeLUCrout (TMatrixD &lu, Int",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:12241,Modifiability,inherit,inherited,12241," or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t InvertLU (TMatrixD &a, Double_t tol, Double_t *det=nullptr);  Calculate matrix inversion through in place forward/backward substitution. ;  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t DecomposeLUCrout (TMatrixD &lu, Int",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:12842,Modifiability,inherit,inherited,12842,"matrix inversion through in place forward/backward substitution. ;  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t DecomposeLUCrout (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  Crout/Doolittle algorithm of LU decomposing a square matrix, with implicit partial pivoting. ;  ; static Bool_t DecomposeLUGauss (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  LU decomposition using Gaussian Elimination with partial pivoting (See Golub & Van Loan, Matrix Computations, Algorithm 3.4.1) of a square matrix . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fImplicitPivot;  ; Int_t * fIndex;  ; TMatrixD fLU;  ; Int_t fNIndex;  ; Double_t fSign;  ",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:12968,Modifiability,inherit,inherited,12968,"matrix inversion through in place forward/backward substitution. ;  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t DecomposeLUCrout (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  Crout/Doolittle algorithm of LU decomposing a square matrix, with implicit partial pivoting. ;  ; static Bool_t DecomposeLUGauss (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  LU decomposition using Gaussian Elimination with partial pivoting (See Golub & Van Loan, Matrix Computations, Algorithm 3.4.1) of a square matrix . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fImplicitPivot;  ; Int_t * fIndex;  ; TMatrixD fLU;  ; Int_t fNIndex;  ; Double_t fSign;  ",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:13688,Modifiability,inherit,inherited,13688," Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t DecomposeLUCrout (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  Crout/Doolittle algorithm of LU decomposing a square matrix, with implicit partial pivoting. ;  ; static Bool_t DecomposeLUGauss (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  LU decomposition using Gaussian Elimination with partial pivoting (See Golub & Van Loan, Matrix Computations, Algorithm 3.4.1) of a square matrix . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fImplicitPivot;  ; Int_t * fIndex;  ; TMatrixD fLU;  ; Int_t fNIndex;  ; Double_t fSign;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvali",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:13948,Modifiability,inherit,inherited,13948,"ed Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t DecomposeLUCrout (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  Crout/Doolittle algorithm of LU decomposing a square matrix, with implicit partial pivoting. ;  ; static Bool_t DecomposeLUGauss (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  LU decomposition using Gaussian Elimination with partial pivoting (See Golub & Van Loan, Matrix Computations, Algorithm 3.4.1) of a square matrix . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fImplicitPivot;  ; Int_t * fIndex;  ; TMatrixD fLU;  ; Int_t fNIndex;  ; Double_t fSign;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL <<",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:14136,Modifiability,inherit,inherited,14136,"t DecomposeLUCrout (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  Crout/Doolittle algorithm of LU decomposing a square matrix, with implicit partial pivoting. ;  ; static Bool_t DecomposeLUGauss (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  LU decomposition using Gaussian Elimination with partial pivoting (See Golub & Van Loan, Matrix Computations, Algorithm 3.4.1) of a square matrix . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fImplicitPivot;  ; Int_t * fIndex;  ; TMatrixD fLU;  ; Int_t fNIndex;  ; Double_t fSign;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = ",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:14777,Modifiability,inherit,inherited,14777,"ributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompLU.h>. Inheritance diagram for TDecompLU:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompLU() [1/5]. TDecompLU::TDecompLU ; (; ). Default constructor. ; Definition at line 45 of file TDecompLU.cxx. ◆ TDecompLU() [2/5]. TDecompLU::TDecompLU ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) matrix. ; Definition at line 56 of file TDecompLU.cxx. ◆ TDecompLU() [3/5]. TDecompLU::TDecompLU ; (; Int_t ; row_lwb, . Int_t ; row_upb . ). Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. ; Definition at line 69 of file TDecompLU.cxx. ◆ TDecompLU() [4/5]. TDecompLU::TDecompLU ;",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:15151,Modifiability,inherit,inherited,15151,"sOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompLU.h>. Inheritance diagram for TDecompLU:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompLU() [1/5]. TDecompLU::TDecompLU ; (; ). Default constructor. ; Definition at line 45 of file TDecompLU.cxx. ◆ TDecompLU() [2/5]. TDecompLU::TDecompLU ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) matrix. ; Definition at line 56 of file TDecompLU.cxx. ◆ TDecompLU() [3/5]. TDecompLU::TDecompLU ; (; Int_t ; row_lwb, . Int_t ; row_upb . ). Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. ; Definition at line 69 of file TDecompLU.cxx. ◆ TDecompLU() [4/5]. TDecompLU::TDecompLU ; (; const TMatrixD & ; m, . Double_t ; tol = 0.0, . Int_t ; implicit = 1 . ). Constructor for matrix a. ; Definition at line 85 of file TDecompLU.cxx. ◆ TDecompLU() [5/5]. TDecompLU::TDecompLU ; (; const TDecompLU & ; another). Copy c",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompLU.html:7484,Security,hash,hash,7484," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDecompLU.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompLU.html
https://root.cern/doc/master/classTDecompQRH.html:7492,Availability,error,error,7492,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:7581,Availability,error,error,7581,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:7736,Availability,error,error,7736,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:8033,Availability,error,error,8033,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:12476,Availability,error,error,12476,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:2921,Integrability,rout,routine,2921,"precatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDecompQRH ();  ;  TDecompQRH (const TDecompQRH &another);  Copy constructor. ;  ;  TDecompQRH (const TMatrixD &m, Double_t tol=0.0);  Constructor for general matrix A . ;  ;  TDecompQRH (Int_t nrows, Int_t ncols);  Constructor for (nrows x ncols) matrix. ;  ;  TDecompQRH (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. ;  ;  ~TDecompQRH () override;  ; Bool_t Decompose () override;  QR decomposition of matrix a by Householder transformations, see Golub & Loan first edition p41 & Sec 6.2. ;  ; void Det (Double_t &d1, Double_t &d2) override;  This routine calculates the absolute (!) value of the determinant |det| = d1*TMath::Power(2.,d2) ;  ; Int_t GetNcols () const override;  ; Int_t GetNrows () const override;  ; TMatrixD GetOrthogonalMatrix () const;  For a matrix A(m,n), return the OtrhogonalMatrix Q such as A = Q * R. ;  ; virtual const TMatrixD & GetQ ();  ; virtual const TMatrixD & GetR ();  ; const TMatrixD & GetTriangularMatrix () const;  ; virtual const TVectorD & GetUp ();  ; virtual const TVectorD & GetW ();  ; TMatrixD Invert ();  ; TMatrixD Invert (Bool_t &status);  For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit (n x m) Ainv is returned . ;  ; Bool_t Invert (TMatrixD &inv);  For a matrix A(m,n), its inverse A_inv is defined as A * A_inv = A_inv * A = unit The user should always supply a matrix of size (m x m) ! If m > n , only the (n x m) part of the returned (pseudo inverse) matrix should be used . ;  ; TClass * IsA () const override;  ; TDecompQRH & operator= (const TDecompQRH &source);  Assi",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:7498,Integrability,message,message,7498,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:8039,Integrability,message,message,8039,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:9241,Integrability,message,message,9241,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:12482,Integrability,message,message,12482,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:12855,Integrability,message,message,12855," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat (",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:18016,Integrability,rout,routine,18016,"s class . ◆ Class_Version(). static constexpr Version_t TDecompQRH::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 83 of file TDecompQRH.h. ◆ DeclFileName(). static const char * TDecompQRH::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 83 of file TDecompQRH.h. ◆ Decompose(). Bool_t TDecompQRH::Decompose ; (; ). overridevirtual . QR decomposition of matrix a by Householder transformations, see Golub & Loan first edition p41 & Sec 6.2. ; First fR is returned in upper triang of fQ and diagR. fQ returned in 'u-form' in lower triang of fQ and fW, the latter containing the ""Householder betas"". If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular ; Implements TDecompBase.; Definition at line 150 of file TDecompQRH.cxx. ◆ Det(). void TDecompQRH::Det ; (; Double_t & ; d1, . Double_t & ; d2 . ). overridevirtual . This routine calculates the absolute (!) value of the determinant |det| = d1*TMath::Power(2.,d2) ; Reimplemented from TDecompBase.; Definition at line 493 of file TDecompQRH.cxx. ◆ GetDecompMatrix(). const TMatrixDBase & TDecompQRH::GetDecompMatrix ; (; ); const. inlineoverrideprotectedvirtual . Implements TDecompBase.; Definition at line 37 of file TDecompQRH.h. ◆ GetNcols(). Int_t TDecompQRH::GetNcols ; (; ); const. inlineoverridevirtual . Implements TDecompBase.; Definition at line 51 of file TDecompQRH.h. ◆ GetNrows(). Int_t TDecompQRH::GetNrows ; (; ); const. inlineoverridevirtual . Implements TDecompBase.; Definition at line 50 of file TDecompQRH.h. ◆ GetOrthogonalMatrix(). TMatrixD TDecompQRH::GetOrthogonalMatrix ; (; ); const. For a matrix A(m,n), return the OtrhogonalMatrix Q such as A = Q * R. ; Note that this Q is not th einternal fQ matrix obtained in the QRH decomposition, but can be computed from the fQ and the up and beta vector's defining the Householder transformation ; Definition at line 516 of file TDecompQRH.cx",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:1638,Modifiability,inherit,inherited,1638,"eta's; TDecompQRH::fQTMatrixD fQDefinition TDecompQRH.h:30; TDecompQRH::fWTVectorD fWDefinition TDecompQRH.h:33; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; mTMarker mDefinition textangle.C:8; If row/column index of A starts at (rowLwb,colLwb) then the decomposed matrices start from : fQ' : (rowLwb,0); fR : (0,colLwb); and the decomposed vectors start from :; fUp : (0); fW : (0); In order to get the QR dcomposition of A (i.e. A = QR ) The orthoginal matrix Q needs to be computed from the internal Q' and the up's and beta's vector defining the Householder transformation; The orthogonal Q matrix is returned to the user by calling the function TDecompQRH::GetOrthogonalMatrix(); Errors arise from formation of reflectors i.e. singularity . Note it attempts to handle the cases where the nRow <= nCol . ; Definition at line 25 of file TDecompQRH.h. Public Types; enum  { kWorkMax = 100; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDecompQRH ();  ;  TDecompQRH (const TDecompQRH &another);  Copy constructor. ;  ;  TDecompQRH (const TMatrixD &m, Double_t tol=0.0);  Constructor for general matrix A . ;  ;  TDecompQRH (Int_t nrows, Int_t ncols);  Constructor for (nrows x ncols) matrix. ;  ;  TDecompQRH (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. ;  ;",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:5017,Modifiability,inherit,inherited,5017,"virtual void SetMatrix (const TMatrixD &a);  Set matrix to be decomposed. ;  ; TVectorD Solve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t Solve (TMatrixDColumn &b) override;  Solve Ax=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ; Bool_t Solve (TVectorD &b) override;  Solve Ax=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ; Bool_t TransSolve (TVectorD &b) override;  Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:5731,Modifiability,inherit,inherited,5731,"e (TMatrixDColumn &b) override;  Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ; Bool_t TransSolve (TVectorD &b) override;  Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:7128,Modifiability,inherit,inheritance,7128,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:9339,Modifiability,inherit,inherits,9339,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:9456,Modifiability,inherit,inherits,9456,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:13356,Modifiability,inherit,inherited,13356,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:13571,Modifiability,inherit,inherited,13571,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:14172,Modifiability,inherit,inherited,14172,"ersion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t QRH (TMatrixD &q, TVectorD &diagR, TVectorD &up, TVectorD &w, Double_t tol);  Decomposition function . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixD fQ;  ; TMatrixD fR;  ; TVectorD fUp;  ; TVectorD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = ",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:14298,Modifiability,inherit,inherited,14298,"ersion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t QRH (TMatrixD &q, TVectorD &diagR, TVectorD &up, TVectorD &w, Double_t tol);  Decomposition function . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixD fQ;  ; TMatrixD fR;  ; TVectorD fUp;  ; TVectorD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = ",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:14673,Modifiability,inherit,inherited,14673,"tatic const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t QRH (TMatrixD &q, TVectorD &diagR, TVectorD &up, TVectorD &w, Double_t tol);  Decomposition function . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixD fQ;  ; TMatrixD fR;  ; TVectorD fUp;  ; TVectorD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompQRH.h>. Inheritance diagram for TDecompQRH:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeratio",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:14900,Modifiability,inherit,inherited,14900,"d *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t QRH (TMatrixD &q, TVectorD &diagR, TVectorD &up, TVectorD &w, Double_t tol);  Decomposition function . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixD fQ;  ; TMatrixD fR;  ; TVectorD fUp;  ; TVectorD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompQRH.h>. Inheritance diagram for TDecompQRH:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkWorkMax . Definition at line 41 of file TDecompQRH.h. Constructor & Destructor Documentation. ◆ TDecompQRH() [1/5]. TDecompQRH::TDecompQRH ; (; ",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:15091,Modifiability,inherit,inherited,15091,"  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t QRH (TMatrixD &q, TVectorD &diagR, TVectorD &up, TVectorD &w, Double_t tol);  Decomposition function . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixD fQ;  ; TMatrixD fR;  ; TVectorD fUp;  ; TVectorD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompQRH.h>. Inheritance diagram for TDecompQRH:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkWorkMax . Definition at line 41 of file TDecompQRH.h. Constructor & Destructor Documentation. ◆ TDecompQRH() [1/5]. TDecompQRH::TDecompQRH ; (; ). inline . Definition at line 43 of file TDecompQRH.h. ◆ TDecompQRH() [2/5]. TDecompQRH::TDecompQRH ; (; Int_t ; nrows, . Int_t ; ncols . ). Constructor for (nrows x ncols) matrix. ; Definition at line 55 of file TDecompQRH.cxx. ◆ TDecompQRH() [3/5]. TDecompQRH::TDecompQRH ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ;",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:15465,Modifiability,inherit,inherited,15465,"Protected Member Functions; static Bool_t QRH (TMatrixD &q, TVectorD &diagR, TVectorD &up, TVectorD &w, Double_t tol);  Decomposition function . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixD fQ;  ; TMatrixD fR;  ; TVectorD fUp;  ; TVectorD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompQRH.h>. Inheritance diagram for TDecompQRH:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkWorkMax . Definition at line 41 of file TDecompQRH.h. Constructor & Destructor Documentation. ◆ TDecompQRH() [1/5]. TDecompQRH::TDecompQRH ; (; ). inline . Definition at line 43 of file TDecompQRH.h. ◆ TDecompQRH() [2/5]. TDecompQRH::TDecompQRH ; (; Int_t ; nrows, . Int_t ; ncols . ). Constructor for (nrows x ncols) matrix. ; Definition at line 55 of file TDecompQRH.cxx. ◆ TDecompQRH() [3/5]. TDecompQRH::TDecompQRH ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb . ). Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. ; Definition at line 76 of file TDecompQRH.cxx. ◆ TDecompQRH() [4/5]. TDecompQRH::TDecompQRH ; (; const TMatrixD & ; m, . Double_t ; tol = 0.0 . ).",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompQRH.html:8970,Security,hash,hash,8970," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDecompQRH.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html
https://root.cern/doc/master/classTDecompSparse.html:4750,Availability,error,error,4750,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:4839,Availability,error,error,4839,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:4994,Availability,error,error,4994,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:5291,Availability,error,error,5291,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:9734,Availability,error,error,9734,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:19734,Energy Efficiency,allocate,allocate,19734," ; Definition at line 94 of file TDecompSparse.cxx. ◆ TDecompSparse() [5/5]. TDecompSparse::TDecompSparse ; (; const TDecompSparse & ; another). Copy constructor. ; Definition at line 107 of file TDecompSparse.cxx. ◆ ~TDecompSparse(). TDecompSparse::~TDecompSparse ; (; ). inlineoverride . Definition at line 148 of file TDecompSparse.h. Member Function Documentation. ◆ Class(). static TClass * TDecompSparse::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDecompSparse::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDecompSparse::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 176 of file TDecompSparse.h. ◆ CopyUpperTriang(). void TDecompSparse::CopyUpperTriang ; (; const TMatrixDSparse & ; a, . Double_t * ; b . ). staticprotected . Static function, copying the non-zero entries in the upper triangle to array b . ; User should allocate enough memory for array b . ; Definition at line 139 of file TDecompSparse.cxx. ◆ DeclFileName(). static const char * TDecompSparse::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 176 of file TDecompSparse.h. ◆ Decompose(). Bool_t TDecompSparse::Decompose ; (; ). overridevirtual . Decomposition engine . ; If the decomposition succeeds, bit kDecomposed is set . ; Implements TDecompBase.; Definition at line 234 of file TDecompSparse.cxx. ◆ Det(). void TDecompSparse::Det ; (; Double_t & ; d1, . Double_t & ; d2 . ). inlineoverridevirtual . Matrix determinant det = d1*TMath::Power(2.,d2) ; Reimplemented from TDecompBase.; Definition at line 169 of file TDecompSparse.h. ◆ ErrorFlag(). Int_t TDecompSparse::ErrorFlag ; (; ). inlineprotected . Definition at line 124 of file TDecompSparse.h. ◆ Factor(). void TDecompSparse::Factor ; (; const Int_t ; n, . const Int_t ; nz, . TArrayI & ; Airn, . TArrayI & ; Aicn, . TArrayD & ; Aa, . T",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:4756,Integrability,message,message,4756,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:5297,Integrability,message,message,5297,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:6499,Integrability,message,message,6499,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:9740,Integrability,message,message,9740,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:10113,Integrability,message,message,10113," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat (",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:12474,Integrability,rout,routine,12474,"DBase & GetDecompMatrix () const override;  ; Double_t GetThresholdPivoting ();  ; Double_t GetTreatAsZero ();  ; Int_t IError ();  ; void InitParam ();  initializing control parameters ;  ; Int_t MinIntWorkspace ();  ; Int_t MinRealWorkspace ();  ; void SetThresholdPivoting (Double_t piv);  ; void SetTreatAsZero (Double_t tol);  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void CopyUpperTriang (const TMatrixDSparse &a, Double_t *b);  Static function, copying the non-zero entries in the upper triangle to array b . ;  ; static void Factor (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayD &Aa, TArrayI &Aiw, TArrayI &Aikeep, const Int_t nsteps, Int_t &maxfrt, TArrayI &Aiw1, Int_t *icntl, Double_t *cntl, Int_t *info);  Factorization routine, the workhorse for the decomposition step. ;  ; static void Factor_sub1 (const Int_t n, const Int_t nz, Int_t &nz1, Double_t *a, const Int_t la, Int_t *irn, Int_t *icn, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *iw2, Int_t *icntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub2 (const Int_t n, const Int_t nz, Double_t *a, const Int_t la, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *nstk, const Int_t nsteps, Int_t &maxfrt, Int_t *nelim, Int_t *iw2, Int_t *icntl, Double_t *cntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub3 (Double_t *a, Int_t *iw, Int_t &j1, Int_t &j2, const Int_t itop, const Int_t ireal, Int_t &ncmpbr, Int_t &ncmpbi);  Help routine for factorization. ;  ; static Int_t IDiag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:12738,Integrability,rout,routine,12738,"ldPivoting (Double_t piv);  ; void SetTreatAsZero (Double_t tol);  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void CopyUpperTriang (const TMatrixDSparse &a, Double_t *b);  Static function, copying the non-zero entries in the upper triangle to array b . ;  ; static void Factor (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayD &Aa, TArrayI &Aiw, TArrayI &Aikeep, const Int_t nsteps, Int_t &maxfrt, TArrayI &Aiw1, Int_t *icntl, Double_t *cntl, Int_t *info);  Factorization routine, the workhorse for the decomposition step. ;  ; static void Factor_sub1 (const Int_t n, const Int_t nz, Int_t &nz1, Double_t *a, const Int_t la, Int_t *irn, Int_t *icn, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *iw2, Int_t *icntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub2 (const Int_t n, const Int_t nz, Double_t *a, const Int_t la, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *nstk, const Int_t nsteps, Int_t &maxfrt, Int_t *nelim, Int_t *iw2, Int_t *icntl, Double_t *cntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub3 (Double_t *a, Int_t *iw, Int_t &j1, Int_t &j2, const Int_t itop, const Int_t ireal, Int_t &ncmpbr, Int_t &ncmpbi);  Help routine for factorization. ;  ; static Int_t IDiag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI &Aikeep, TArrayI &Aiw1, Int_t &nsteps, const Int_t iflag, Int_t *icntl, Double_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq,",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:13020,Integrability,rout,routine,13020,"oError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void CopyUpperTriang (const TMatrixDSparse &a, Double_t *b);  Static function, copying the non-zero entries in the upper triangle to array b . ;  ; static void Factor (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayD &Aa, TArrayI &Aiw, TArrayI &Aikeep, const Int_t nsteps, Int_t &maxfrt, TArrayI &Aiw1, Int_t *icntl, Double_t *cntl, Int_t *info);  Factorization routine, the workhorse for the decomposition step. ;  ; static void Factor_sub1 (const Int_t n, const Int_t nz, Int_t &nz1, Double_t *a, const Int_t la, Int_t *irn, Int_t *icn, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *iw2, Int_t *icntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub2 (const Int_t n, const Int_t nz, Double_t *a, const Int_t la, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *nstk, const Int_t nsteps, Int_t &maxfrt, Int_t *nelim, Int_t *iw2, Int_t *icntl, Double_t *cntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub3 (Double_t *a, Int_t *iw, Int_t &j1, Int_t &j2, const Int_t itop, const Int_t ireal, Int_t &ncmpbr, Int_t &ncmpbi);  Help routine for factorization. ;  ; static Int_t IDiag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI &Aikeep, TArrayI &Aiw1, Int_t &nsteps, const Int_t iflag, Int_t *icntl, Double_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:13197,Integrability,rout,routine,13197," &a, Double_t *b);  Static function, copying the non-zero entries in the upper triangle to array b . ;  ; static void Factor (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayD &Aa, TArrayI &Aiw, TArrayI &Aikeep, const Int_t nsteps, Int_t &maxfrt, TArrayI &Aiw1, Int_t *icntl, Double_t *cntl, Int_t *info);  Factorization routine, the workhorse for the decomposition step. ;  ; static void Factor_sub1 (const Int_t n, const Int_t nz, Int_t &nz1, Double_t *a, const Int_t la, Int_t *irn, Int_t *icn, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *iw2, Int_t *icntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub2 (const Int_t n, const Int_t nz, Double_t *a, const Int_t la, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *nstk, const Int_t nsteps, Int_t &maxfrt, Int_t *nelim, Int_t *iw2, Int_t *icntl, Double_t *cntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub3 (Double_t *a, Int_t *iw, Int_t &j1, Int_t &j2, const Int_t itop, const Int_t ireal, Int_t &ncmpbr, Int_t &ncmpbi);  Help routine for factorization. ;  ; static Int_t IDiag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI &Aikeep, TArrayI &Aiw1, Int_t &nsteps, const Int_t iflag, Int_t *icntl, Double_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:13705,Integrability,rout,routine,13705,"Int_t *irn, Int_t *icn, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *iw2, Int_t *icntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub2 (const Int_t n, const Int_t nz, Double_t *a, const Int_t la, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *nstk, const Int_t nsteps, Int_t &maxfrt, Int_t *nelim, Int_t *iw2, Int_t *icntl, Double_t *cntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub3 (Double_t *a, Int_t *iw, Int_t &j1, Int_t &j2, const Int_t itop, const Int_t ireal, Int_t &ncmpbr, Int_t &ncmpbi);  Help routine for factorization. ;  ; static Int_t IDiag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI &Aikeep, TArrayI &Aiw1, Int_t &nsteps, const Int_t iflag, Int_t *icntl, Double_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub3 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub4 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, I",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:13957,Integrability,rout,routine,13957,"_t *iw, const Int_t liw, Int_t *perm, Int_t *nstk, const Int_t nsteps, Int_t &maxfrt, Int_t *nelim, Int_t *iw2, Int_t *icntl, Double_t *cntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub3 (Double_t *a, Int_t *iw, Int_t &j1, Int_t &j2, const Int_t itop, const Int_t ireal, Int_t &ncmpbr, Int_t &ncmpbi);  Help routine for factorization. ;  ; static Int_t IDiag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI &Aikeep, TArrayI &Aiw1, Int_t &nsteps, const Int_t iflag, Int_t *icntl, Double_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub3 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub4 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, Int_t *ips, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:14107,Integrability,rout,routine,14107,"void Factor_sub3 (Double_t *a, Int_t *iw, Int_t &j1, Int_t &j2, const Int_t itop, const Int_t ireal, Int_t &ncmpbr, Int_t &ncmpbi);  Help routine for factorization. ;  ; static Int_t IDiag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI &Aikeep, TArrayI &Aiw1, Int_t &nsteps, const Int_t iflag, Int_t *icntl, Double_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub3 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub4 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, Int_t *ips, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a)",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:14330,Integrability,rout,routine,14330,"ag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI &Aikeep, TArrayI &Aiw1, Int_t &nsteps, const Int_t iflag, Int_t *icntl, Double_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub3 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub4 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, Int_t *ips, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a);  Static function, returning the number of non-zero entries in the upper triangular matrix . ;  ; static void Solve (const Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t ma",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:14527,Integrability,rout,routine,14527,"le_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub3 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub4 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, Int_t *ips, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a);  Static function, returning the number of non-zero entries in the upper triangular matrix . ;  ; static void Solve (const Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:14712,Integrability,rout,routine,14712,"nt_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub3 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub4 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, Int_t *ips, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a);  Static function, returning the number of non-zero entries in the upper triangular matrix . ;  ; static void Solve (const Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, Int_t &latop, Int_t *icntl);  Help routine for solving. ;  ; static void Solve_sub2 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:14968,Integrability,rout,routine,14968," Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub3 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub4 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, Int_t *ips, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a);  Static function, returning the number of non-zero entries in the upper triangular matrix . ;  ; static void Solve (const Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, Int_t &latop, Int_t *icntl);  Help routine for solving. ;  ; static void Solve_sub2 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, const Int_t latop, Int_t *icntl);  Help routine for solving. ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:15334,Integrability,rout,routine,15334,"pe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub4 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, Int_t *ips, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a);  Static function, returning the number of non-zero entries in the upper triangular matrix . ;  ; static void Solve (const Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, Int_t &latop, Int_t *icntl);  Help routine for solving. ;  ; static void Solve_sub2 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, const Int_t latop, Int_t *icntl);  Help routine for solving. ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixDSparse fA;  ; Double_t fCntl [6];  ; TArrayI fColFact;  ; TArrayD fFact;  ; Int_t fIcntl [31];  ; TArrayI fIkeep;  ; Int_t fInfo [21];  ; Double_t fIPessimism;  ; TArrayI fIw;  ; TArrayI fIw1;  ; TArrayI fIw2;  ; Int_t fMaxfrt;  ; Int_t fNnonZeros;  ; Int_t fNrows;  ; Int_t fNsteps;  ; Double_t fPrecision;  ; TArrayI fRowFact;  ; Double_",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:15521,Integrability,rout,routine,15521," &iwfr, Int_t *ips, Int_t *ipv, Int_t *nv, Int_t *flag, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub5 (const Int_t n, Int_t *ipe, Int_t *nv, Int_t *ips, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a);  Static function, returning the number of non-zero entries in the upper triangular matrix . ;  ; static void Solve (const Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, Int_t &latop, Int_t *icntl);  Help routine for solving. ;  ; static void Solve_sub2 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, const Int_t latop, Int_t *icntl);  Help routine for solving. ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixDSparse fA;  ; Double_t fCntl [6];  ; TArrayI fColFact;  ; TArrayD fFact;  ; Int_t fIcntl [31];  ; TArrayI fIkeep;  ; Int_t fInfo [21];  ; Double_t fIPessimism;  ; TArrayI fIw;  ; TArrayI fIw1;  ; TArrayI fIw2;  ; Int_t fMaxfrt;  ; Int_t fNnonZeros;  ; Int_t fNrows;  ; Int_t fNsteps;  ; Double_t fPrecision;  ; TArrayI fRowFact;  ; Double_t fRPessimism;  ; Int_t fVerbose;  ; TArrayD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLw",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:15708,Integrability,rout,routine,15708,"ps, Int_t *ne, Int_t *na, Int_t *nd, Int_t &nsteps, const Int_t nemin);  Help routine for pivoting setup. ;  ; static void InitPivot_sub6 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a);  Static function, returning the number of non-zero entries in the upper triangular matrix . ;  ; static void Solve (const Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, Int_t &latop, Int_t *icntl);  Help routine for solving. ;  ; static void Solve_sub2 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, const Int_t latop, Int_t *icntl);  Help routine for solving. ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixDSparse fA;  ; Double_t fCntl [6];  ; TArrayI fColFact;  ; TArrayD fFact;  ; Int_t fIcntl [31];  ; TArrayI fIkeep;  ; Int_t fInfo [21];  ; Double_t fIPessimism;  ; TArrayI fIw;  ; TArrayI fIw1;  ; TArrayI fIw2;  ; Int_t fMaxfrt;  ; Int_t fNnonZeros;  ; Int_t fNrows;  ; Int_t fNsteps;  ; Double_t fPrecision;  ; TArrayI fRowFact;  ; Double_t fRPessimism;  ; Int_t fVerbose;  ; TArrayD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kIn",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:20941,Integrability,rout,routine,20941,"eclaration ; Definition at line 176 of file TDecompSparse.h. ◆ Decompose(). Bool_t TDecompSparse::Decompose ; (; ). overridevirtual . Decomposition engine . ; If the decomposition succeeds, bit kDecomposed is set . ; Implements TDecompBase.; Definition at line 234 of file TDecompSparse.cxx. ◆ Det(). void TDecompSparse::Det ; (; Double_t & ; d1, . Double_t & ; d2 . ). inlineoverridevirtual . Matrix determinant det = d1*TMath::Power(2.,d2) ; Reimplemented from TDecompBase.; Definition at line 169 of file TDecompSparse.h. ◆ ErrorFlag(). Int_t TDecompSparse::ErrorFlag ; (; ). inlineprotected . Definition at line 124 of file TDecompSparse.h. ◆ Factor(). void TDecompSparse::Factor ; (; const Int_t ; n, . const Int_t ; nz, . TArrayI & ; Airn, . TArrayI & ; Aicn, . TArrayD & ; Aa, . TArrayI & ; Aiw, . TArrayI & ; Aikeep, . const Int_t ; nsteps, . Int_t & ; maxfrt, . TArrayI & ; Aiw1, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info . ). staticprotected . Factorization routine, the workhorse for the decomposition step. ; Definition at line 581 of file TDecompSparse.cxx. ◆ Factor_sub1(). void TDecompSparse::Factor_sub1 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t & ; nz1, . Double_t * ; a, . const Int_t ; la, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; iw, . const Int_t ; liw, . Int_t * ; perm, . Int_t * ; iw2, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for factorization. ; Definition at line 1741 of file TDecompSparse.cxx. ◆ Factor_sub2(). void TDecompSparse::Factor_sub2 ; (; const Int_t ; n, . const Int_t ; nz, . Double_t * ; a, . const Int_t ; la, . Int_t * ; iw, . const Int_t ; liw, . Int_t * ; perm, . Int_t * ; nstk, . const Int_t ; nsteps, . Int_t & ; maxfrt, . Int_t * ; nelim, . Int_t * ; iw2, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info . ). staticprotected . Help routine for factorization. ; Definition at line 1883 of file TDecompSparse.cxx. ◆ Factor_sub3(). void TDecompSparse::Factor_sub3 ; (; Double_t * ; a, . ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:21360,Integrability,rout,routine,21360," det = d1*TMath::Power(2.,d2) ; Reimplemented from TDecompBase.; Definition at line 169 of file TDecompSparse.h. ◆ ErrorFlag(). Int_t TDecompSparse::ErrorFlag ; (; ). inlineprotected . Definition at line 124 of file TDecompSparse.h. ◆ Factor(). void TDecompSparse::Factor ; (; const Int_t ; n, . const Int_t ; nz, . TArrayI & ; Airn, . TArrayI & ; Aicn, . TArrayD & ; Aa, . TArrayI & ; Aiw, . TArrayI & ; Aikeep, . const Int_t ; nsteps, . Int_t & ; maxfrt, . TArrayI & ; Aiw1, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info . ). staticprotected . Factorization routine, the workhorse for the decomposition step. ; Definition at line 581 of file TDecompSparse.cxx. ◆ Factor_sub1(). void TDecompSparse::Factor_sub1 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t & ; nz1, . Double_t * ; a, . const Int_t ; la, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; iw, . const Int_t ; liw, . Int_t * ; perm, . Int_t * ; iw2, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for factorization. ; Definition at line 1741 of file TDecompSparse.cxx. ◆ Factor_sub2(). void TDecompSparse::Factor_sub2 ; (; const Int_t ; n, . const Int_t ; nz, . Double_t * ; a, . const Int_t ; la, . Int_t * ; iw, . const Int_t ; liw, . Int_t * ; perm, . Int_t * ; nstk, . const Int_t ; nsteps, . Int_t & ; maxfrt, . Int_t * ; nelim, . Int_t * ; iw2, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info . ). staticprotected . Help routine for factorization. ; Definition at line 1883 of file TDecompSparse.cxx. ◆ Factor_sub3(). void TDecompSparse::Factor_sub3 ; (; Double_t * ; a, . Int_t * ; iw, . Int_t & ; j1, . Int_t & ; j2, . const Int_t ; itop, . const Int_t ; ireal, . Int_t & ; ncmpbr, . Int_t & ; ncmpbi . ). staticprotected . Help routine for factorization. ; Definition at line 2389 of file TDecompSparse.cxx. ◆ GetDecompMatrix(). const TMatrixDBase & TDecompSparse::GetDecompMatrix ; (; ); const. inlineoverrideprotectedvirtual . Implements TDecompBase.; Definition at line 139 of f",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:21807,Integrability,rout,routine,21807,"; maxfrt, . TArrayI & ; Aiw1, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info . ). staticprotected . Factorization routine, the workhorse for the decomposition step. ; Definition at line 581 of file TDecompSparse.cxx. ◆ Factor_sub1(). void TDecompSparse::Factor_sub1 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t & ; nz1, . Double_t * ; a, . const Int_t ; la, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; iw, . const Int_t ; liw, . Int_t * ; perm, . Int_t * ; iw2, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for factorization. ; Definition at line 1741 of file TDecompSparse.cxx. ◆ Factor_sub2(). void TDecompSparse::Factor_sub2 ; (; const Int_t ; n, . const Int_t ; nz, . Double_t * ; a, . const Int_t ; la, . Int_t * ; iw, . const Int_t ; liw, . Int_t * ; perm, . Int_t * ; nstk, . const Int_t ; nsteps, . Int_t & ; maxfrt, . Int_t * ; nelim, . Int_t * ; iw2, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info . ). staticprotected . Help routine for factorization. ; Definition at line 1883 of file TDecompSparse.cxx. ◆ Factor_sub3(). void TDecompSparse::Factor_sub3 ; (; Double_t * ; a, . Int_t * ; iw, . Int_t & ; j1, . Int_t & ; j2, . const Int_t ; itop, . const Int_t ; ireal, . Int_t & ; ncmpbr, . Int_t & ; ncmpbi . ). staticprotected . Help routine for factorization. ; Definition at line 2389 of file TDecompSparse.cxx. ◆ GetDecompMatrix(). const TMatrixDBase & TDecompSparse::GetDecompMatrix ; (; ); const. inlineoverrideprotectedvirtual . Implements TDecompBase.; Definition at line 139 of file TDecompSparse.h. ◆ GetNcols(). Int_t TDecompSparse::GetNcols ; (; ); const. inlineoverridevirtual . Implements TDecompBase.; Definition at line 155 of file TDecompSparse.h. ◆ GetNrows(). Int_t TDecompSparse::GetNrows ; (; ); const. inlineoverridevirtual . Implements TDecompBase.; Definition at line 154 of file TDecompSparse.h. ◆ GetThresholdPivoting(). Double_t TDecompSparse::GetThresholdPivoting ; (; ). inlineprotected . Definition at lin",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:22117,Integrability,rout,routine,22117,"t ; nz, . Int_t & ; nz1, . Double_t * ; a, . const Int_t ; la, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; iw, . const Int_t ; liw, . Int_t * ; perm, . Int_t * ; iw2, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for factorization. ; Definition at line 1741 of file TDecompSparse.cxx. ◆ Factor_sub2(). void TDecompSparse::Factor_sub2 ; (; const Int_t ; n, . const Int_t ; nz, . Double_t * ; a, . const Int_t ; la, . Int_t * ; iw, . const Int_t ; liw, . Int_t * ; perm, . Int_t * ; nstk, . const Int_t ; nsteps, . Int_t & ; maxfrt, . Int_t * ; nelim, . Int_t * ; iw2, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info . ). staticprotected . Help routine for factorization. ; Definition at line 1883 of file TDecompSparse.cxx. ◆ Factor_sub3(). void TDecompSparse::Factor_sub3 ; (; Double_t * ; a, . Int_t * ; iw, . Int_t & ; j1, . Int_t & ; j2, . const Int_t ; itop, . const Int_t ; ireal, . Int_t & ; ncmpbr, . Int_t & ; ncmpbi . ). staticprotected . Help routine for factorization. ; Definition at line 2389 of file TDecompSparse.cxx. ◆ GetDecompMatrix(). const TMatrixDBase & TDecompSparse::GetDecompMatrix ; (; ); const. inlineoverrideprotectedvirtual . Implements TDecompBase.; Definition at line 139 of file TDecompSparse.h. ◆ GetNcols(). Int_t TDecompSparse::GetNcols ; (; ); const. inlineoverridevirtual . Implements TDecompBase.; Definition at line 155 of file TDecompSparse.h. ◆ GetNrows(). Int_t TDecompSparse::GetNrows ; (; ); const. inlineoverridevirtual . Implements TDecompBase.; Definition at line 154 of file TDecompSparse.h. ◆ GetThresholdPivoting(). Double_t TDecompSparse::GetThresholdPivoting ; (; ). inlineprotected . Definition at line 130 of file TDecompSparse.h. ◆ GetTreatAsZero(). Double_t TDecompSparse::GetTreatAsZero ; (; ). inlineprotected . Definition at line 131 of file TDecompSparse.h. ◆ IDiag(). static Int_t TDecompSparse::IDiag ; (; Int_t ; ix, . Int_t ; iy . ). inlinestaticprotected . Definition at line 119 of file TDecompSpar",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:24085,Integrability,rout,routine,24085," at line 119 of file TDecompSparse.h. ◆ IError(). Int_t TDecompSparse::IError ; (; ). inlineprotected . Definition at line 121 of file TDecompSparse.h. ◆ InitParam(). void TDecompSparse::InitParam ; (; ). protected . initializing control parameters ; Definition at line 413 of file TDecompSparse.cxx. ◆ InitPivot(). void TDecompSparse::InitPivot ; (; const Int_t ; n, . const Int_t ; nz, . TArrayI & ; Airn, . TArrayI & ; Aicn, . TArrayI & ; Aiw, . TArrayI & ; Aikeep, . TArrayI & ; Aiw1, . Int_t & ; nsteps, . const Int_t ; iflag, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info, . Double_t & ; ops . ). staticprotected . Setup Pivoting variables. ; Definition at line 470 of file TDecompSparse.cxx. ◆ InitPivot_sub1(). void TDecompSparse::InitPivot_sub1 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 836 of file TDecompSparse.cxx. ◆ InitPivot_sub2(). void TDecompSparse::InitPivot_sub2 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; nv, . Int_t * ; nxt, . Int_t * ; lst, . Int_t * ; ipd, . Int_t * ; flag, . const Int_t ; iovflo, . Int_t & ; ncmpa, . const Double_t ; fratio . ). staticprotected . Help routine for pivoting setup. ; Definition at line 975 of file TDecompSparse.cxx. ◆ InitPivot_sub2a(). void TDecompSparse::InitPivot_sub2a ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1305 of file TDecompSparse.cxx. ◆ InitPivot_sub3(). void TDecompSparse::InitPivot_sub3 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:24495,Integrability,rout,routine,24495,"TArrayI & ; Aicn, . TArrayI & ; Aiw, . TArrayI & ; Aikeep, . TArrayI & ; Aiw1, . Int_t & ; nsteps, . const Int_t ; iflag, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info, . Double_t & ; ops . ). staticprotected . Setup Pivoting variables. ; Definition at line 470 of file TDecompSparse.cxx. ◆ InitPivot_sub1(). void TDecompSparse::InitPivot_sub1 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 836 of file TDecompSparse.cxx. ◆ InitPivot_sub2(). void TDecompSparse::InitPivot_sub2 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; nv, . Int_t * ; nxt, . Int_t * ; lst, . Int_t * ; ipd, . Int_t * ; flag, . const Int_t ; iovflo, . Int_t & ; ncmpa, . const Double_t ; fratio . ). staticprotected . Help routine for pivoting setup. ; Definition at line 975 of file TDecompSparse.cxx. ◆ InitPivot_sub2a(). void TDecompSparse::InitPivot_sub2a ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1305 of file TDecompSparse.cxx. ◆ InitPivot_sub3(). void TDecompSparse::InitPivot_sub3 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1349 of file TDecompSparse.cxx. ◆ InitPivot_sub4(). void TDecompSparse::InitPivot_sub4 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; ips, . Int_t * ; ipv, . Int_t * ; nv, . Int_t * ; flag, . Int_t & ; ncmpa . ). staticprotected . Help routine for p",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:24771,Integrability,rout,routine,24771,"file TDecompSparse.cxx. ◆ InitPivot_sub1(). void TDecompSparse::InitPivot_sub1 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 836 of file TDecompSparse.cxx. ◆ InitPivot_sub2(). void TDecompSparse::InitPivot_sub2 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; nv, . Int_t * ; nxt, . Int_t * ; lst, . Int_t * ; ipd, . Int_t * ; flag, . const Int_t ; iovflo, . Int_t & ; ncmpa, . const Double_t ; fratio . ). staticprotected . Help routine for pivoting setup. ; Definition at line 975 of file TDecompSparse.cxx. ◆ InitPivot_sub2a(). void TDecompSparse::InitPivot_sub2a ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1305 of file TDecompSparse.cxx. ◆ InitPivot_sub3(). void TDecompSparse::InitPivot_sub3 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1349 of file TDecompSparse.cxx. ◆ InitPivot_sub4(). void TDecompSparse::InitPivot_sub4 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; ips, . Int_t * ; ipv, . Int_t * ; nv, . Int_t * ; flag, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1471 of file TDecompSparse.cxx. ◆ InitPivot_sub5(). void TDecompSparse::InitPivot_sub5 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; nv, . Int_t * ; ips, . Int_t * ; ne, . Int_t * ; na, . Int_t * ; nd, . Int_t & ; nsteps, . const Int_t",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:25150,Integrability,rout,routine,25150,"cxx. ◆ InitPivot_sub2(). void TDecompSparse::InitPivot_sub2 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; nv, . Int_t * ; nxt, . Int_t * ; lst, . Int_t * ; ipd, . Int_t * ; flag, . const Int_t ; iovflo, . Int_t & ; ncmpa, . const Double_t ; fratio . ). staticprotected . Help routine for pivoting setup. ; Definition at line 975 of file TDecompSparse.cxx. ◆ InitPivot_sub2a(). void TDecompSparse::InitPivot_sub2a ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1305 of file TDecompSparse.cxx. ◆ InitPivot_sub3(). void TDecompSparse::InitPivot_sub3 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1349 of file TDecompSparse.cxx. ◆ InitPivot_sub4(). void TDecompSparse::InitPivot_sub4 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; ips, . Int_t * ; ipv, . Int_t * ; nv, . Int_t * ; flag, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1471 of file TDecompSparse.cxx. ◆ InitPivot_sub5(). void TDecompSparse::InitPivot_sub5 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; nv, . Int_t * ; ips, . Int_t * ; ne, . Int_t * ; na, . Int_t * ; nd, . Int_t & ; nsteps, . const Int_t ; nemin . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1548 of file TDecompSparse.cxx. ◆ InitPivot_sub6(). void TDecompSparse::InitPivot_sub6 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; na, . Int_t * ; ne, . Int_t * ; nd, . const Int_t ; nsteps, . Int_t * ; lstki, . Int_t * ; lstkr, . ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:25493,Integrability,rout,routine,25493,"for pivoting setup. ; Definition at line 975 of file TDecompSparse.cxx. ◆ InitPivot_sub2a(). void TDecompSparse::InitPivot_sub2a ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1305 of file TDecompSparse.cxx. ◆ InitPivot_sub3(). void TDecompSparse::InitPivot_sub3 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1349 of file TDecompSparse.cxx. ◆ InitPivot_sub4(). void TDecompSparse::InitPivot_sub4 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; ips, . Int_t * ; ipv, . Int_t * ; nv, . Int_t * ; flag, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1471 of file TDecompSparse.cxx. ◆ InitPivot_sub5(). void TDecompSparse::InitPivot_sub5 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; nv, . Int_t * ; ips, . Int_t * ; ne, . Int_t * ; na, . Int_t * ; nd, . Int_t & ; nsteps, . const Int_t ; nemin . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1548 of file TDecompSparse.cxx. ◆ InitPivot_sub6(). void TDecompSparse::InitPivot_sub6 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; na, . Int_t * ; ne, . Int_t * ; nd, . const Int_t ; nsteps, . Int_t * ; lstki, . Int_t * ; lstkr, . Int_t * ; iw, . Int_t * ; info, . Double_t & ; ops . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1637 of file TDecompSparse.cxx. ◆ IsA(). TClass * TDecompSparse::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDecompBase.; Definition at line 176 of file T",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:25819,Integrability,rout,routine,25819,"ile TDecompSparse.cxx. ◆ InitPivot_sub3(). void TDecompSparse::InitPivot_sub3 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1349 of file TDecompSparse.cxx. ◆ InitPivot_sub4(). void TDecompSparse::InitPivot_sub4 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; ips, . Int_t * ; ipv, . Int_t * ; nv, . Int_t * ; flag, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1471 of file TDecompSparse.cxx. ◆ InitPivot_sub5(). void TDecompSparse::InitPivot_sub5 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; nv, . Int_t * ; ips, . Int_t * ; ne, . Int_t * ; na, . Int_t * ; nd, . Int_t & ; nsteps, . const Int_t ; nemin . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1548 of file TDecompSparse.cxx. ◆ InitPivot_sub6(). void TDecompSparse::InitPivot_sub6 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; na, . Int_t * ; ne, . Int_t * ; nd, . const Int_t ; nsteps, . Int_t * ; lstki, . Int_t * ; lstkr, . Int_t * ; iw, . Int_t * ; info, . Double_t & ; ops . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1637 of file TDecompSparse.cxx. ◆ IsA(). TClass * TDecompSparse::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDecompBase.; Definition at line 176 of file TDecompSparse.h. ◆ MinIntWorkspace(). Int_t TDecompSparse::MinIntWorkspace ; (; ). inlineprotected . Definition at line 123 of file TDecompSparse.h. ◆ MinRealWorkspace(). Int_t TDecompSparse::MinRealWorkspace ; (; ). inlineprotected . Definition at line 122 of file TDecompSparse.h. ◆ NonZerosUpperTriang(). Int_t TDecompSparse",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:26240,Integrability,rout,routine,26240," void TDecompSparse::InitPivot_sub4 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; ips, . Int_t * ; ipv, . Int_t * ; nv, . Int_t * ; flag, . Int_t & ; ncmpa . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1471 of file TDecompSparse.cxx. ◆ InitPivot_sub5(). void TDecompSparse::InitPivot_sub5 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; nv, . Int_t * ; ips, . Int_t * ; ne, . Int_t * ; na, . Int_t * ; nd, . Int_t & ; nsteps, . const Int_t ; nemin . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1548 of file TDecompSparse.cxx. ◆ InitPivot_sub6(). void TDecompSparse::InitPivot_sub6 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; perm, . Int_t * ; na, . Int_t * ; ne, . Int_t * ; nd, . const Int_t ; nsteps, . Int_t * ; lstki, . Int_t * ; lstkr, . Int_t * ; iw, . Int_t * ; info, . Double_t & ; ops . ). staticprotected . Help routine for pivoting setup. ; Definition at line 1637 of file TDecompSparse.cxx. ◆ IsA(). TClass * TDecompSparse::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDecompBase.; Definition at line 176 of file TDecompSparse.h. ◆ MinIntWorkspace(). Int_t TDecompSparse::MinIntWorkspace ; (; ). inlineprotected . Definition at line 123 of file TDecompSparse.h. ◆ MinRealWorkspace(). Int_t TDecompSparse::MinRealWorkspace ; (; ). inlineprotected . Definition at line 122 of file TDecompSparse.h. ◆ NonZerosUpperTriang(). Int_t TDecompSparse::NonZerosUpperTriang ; (; const TMatrixDSparse & ; a). staticprotected . Static function, returning the number of non-zero entries in the upper triangular matrix . ; Definition at line 115 of file TDecompSparse.cxx. ◆ operator=(). TDecompSparse & TDecompSparse::operator= ; (; const TDecompSparse & ; source). Assignment operator. ; Definition at line 2702 of file TDecompSparse.cxx. ◆ Print(). void TDecompSparse::Print",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:28273,Integrability,rout,routine,28273,"onst. overridevirtual . Print class members. ; Reimplemented from TDecompBase.; Definition at line 2686 of file TDecompSparse.cxx. ◆ SetMatrix(). void TDecompSparse::SetMatrix ; (; const TMatrixDSparse & ; a). virtual . Set matrix to be decomposed . ; Definition at line 161 of file TDecompSparse.cxx. ◆ SetThresholdPivoting(). void TDecompSparse::SetThresholdPivoting ; (; Double_t ; piv). inlineprotected . Definition at line 136 of file TDecompSparse.h. ◆ SetTreatAsZero(). void TDecompSparse::SetTreatAsZero ; (; Double_t ; tol). inlineprotected . Definition at line 137 of file TDecompSparse.h. ◆ SetVerbose(). void TDecompSparse::SetVerbose ; (; Int_t ; v). inline . Definition at line 150 of file TDecompSparse.h. ◆ Solve() [1/4]. void TDecompSparse::Solve ; (; const Int_t ; n, . TArrayD & ; Aa, . TArrayI & ; Aiw, . TArrayD & ; Aw, . const Int_t ; maxfrt, . TVectorD & ; b, . TArrayI & ; Aiw1, . const Int_t ; nsteps, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Main routine for solving Ax=b. ; Definition at line 738 of file TDecompSparse.cxx. ◆ Solve() [2/4]. TVectorD TDecompSparse::Solve ; (; const TVectorD & ; b, . Bool_t & ; ok . ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 161 of file TDecompSparse.h. ◆ Solve() [3/4]. Bool_t TDecompSparse::Solve ; (; TMatrixDColumn & ; ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 162 of file TDecompSparse.h. ◆ Solve() [4/4]. Bool_t TDecompSparse::Solve ; (; TVectorD & ; b). overridevirtual . Solve Ax=b . Solution returned in b. ; Implements TDecompBase.; Definition at line 341 of file TDecompSparse.cxx. ◆ Solve_sub1(). void TDecompSparse::Solve_sub1 ; (; const Int_t ; n, . Double_t * ; a, . Int_t * ; iw, . Double_t * ; w, . Double_t * ; rhs, . Int_t * ; iw2, . const Int_t ; nblk, . Int_t & ; latop, . Int_t * ; icntl . ). staticprotected . Help routine for solving. ; Definition at line 2423 of file TDecompSparse.cxx. ◆ Solve_sub2(). void TDecompSparse::Solve_sub2 ; (; c",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:29156,Integrability,rout,routine,29156,", . TArrayI & ; Aiw1, . const Int_t ; nsteps, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Main routine for solving Ax=b. ; Definition at line 738 of file TDecompSparse.cxx. ◆ Solve() [2/4]. TVectorD TDecompSparse::Solve ; (; const TVectorD & ; b, . Bool_t & ; ok . ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 161 of file TDecompSparse.h. ◆ Solve() [3/4]. Bool_t TDecompSparse::Solve ; (; TMatrixDColumn & ; ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 162 of file TDecompSparse.h. ◆ Solve() [4/4]. Bool_t TDecompSparse::Solve ; (; TVectorD & ; b). overridevirtual . Solve Ax=b . Solution returned in b. ; Implements TDecompBase.; Definition at line 341 of file TDecompSparse.cxx. ◆ Solve_sub1(). void TDecompSparse::Solve_sub1 ; (; const Int_t ; n, . Double_t * ; a, . Int_t * ; iw, . Double_t * ; w, . Double_t * ; rhs, . Int_t * ; iw2, . const Int_t ; nblk, . Int_t & ; latop, . Int_t * ; icntl . ). staticprotected . Help routine for solving. ; Definition at line 2423 of file TDecompSparse.cxx. ◆ Solve_sub2(). void TDecompSparse::Solve_sub2 ; (; const Int_t ; n, . Double_t * ; a, . Int_t * ; iw, . Double_t * ; w, . Double_t * ; rhs, . Int_t * ; iw2, . const Int_t ; nblk, . const Int_t ; latop, . Int_t * ; icntl . ). staticprotected . Help routine for solving. ; Definition at line 2553 of file TDecompSparse.cxx. ◆ Streamer(). void TDecompSparse::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDecompBase. ◆ StreamerNVirtual(). void TDecompSparse::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 176 of file TDecompSparse.h. ◆ TransSolve() [1/3]. TVectorD TDecompSparse::TransSolve ; (; const TVectorD & ; b, . Bool_t & ; ok . ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 165 of file TDecompSparse.h. ◆ TransSolve() [2/3]. Bool_t TDecompSparse::TransSolve ; (; TMatrixDColumn & ; ). inlineove",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:29479,Integrability,rout,routine,29479,"mpBase.; Definition at line 161 of file TDecompSparse.h. ◆ Solve() [3/4]. Bool_t TDecompSparse::Solve ; (; TMatrixDColumn & ; ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 162 of file TDecompSparse.h. ◆ Solve() [4/4]. Bool_t TDecompSparse::Solve ; (; TVectorD & ; b). overridevirtual . Solve Ax=b . Solution returned in b. ; Implements TDecompBase.; Definition at line 341 of file TDecompSparse.cxx. ◆ Solve_sub1(). void TDecompSparse::Solve_sub1 ; (; const Int_t ; n, . Double_t * ; a, . Int_t * ; iw, . Double_t * ; w, . Double_t * ; rhs, . Int_t * ; iw2, . const Int_t ; nblk, . Int_t & ; latop, . Int_t * ; icntl . ). staticprotected . Help routine for solving. ; Definition at line 2423 of file TDecompSparse.cxx. ◆ Solve_sub2(). void TDecompSparse::Solve_sub2 ; (; const Int_t ; n, . Double_t * ; a, . Int_t * ; iw, . Double_t * ; w, . Double_t * ; rhs, . Int_t * ; iw2, . const Int_t ; nblk, . const Int_t ; latop, . Int_t * ; icntl . ). staticprotected . Help routine for solving. ; Definition at line 2553 of file TDecompSparse.cxx. ◆ Streamer(). void TDecompSparse::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDecompBase. ◆ StreamerNVirtual(). void TDecompSparse::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 176 of file TDecompSparse.h. ◆ TransSolve() [1/3]. TVectorD TDecompSparse::TransSolve ; (; const TVectorD & ; b, . Bool_t & ; ok . ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 165 of file TDecompSparse.h. ◆ TransSolve() [2/3]. Bool_t TDecompSparse::TransSolve ; (; TMatrixDColumn & ; ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 166 of file TDecompSparse.h. ◆ TransSolve() [3/3]. Bool_t TDecompSparse::TransSolve ; (; TVectorD & ; b). inlineoverridevirtual . Implements TDecompBase.; Definition at line 164 of file TDecompSparse.h. Member Data Documentation. ◆ fA. TMatrixDSparse TDecompSparse",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:2275,Modifiability,inherit,inherited,2275,"ange . ;  ;  ~TDecompSparse () override;  ; Bool_t Decompose () override;  Decomposition engine . ;  ; void Det (Double_t &, Double_t &) override;  Matrix determinant det = d1*TMath::Power(2.,d2) ;  ; Int_t GetNcols () const override;  ; Int_t GetNrows () const override;  ; TClass * IsA () const override;  ; TDecompSparse & operator= (const TDecompSparse &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print class members. ;  ; virtual void SetMatrix (const TMatrixDSparse &a);  Set matrix to be decomposed . ;  ; void SetVerbose (Int_t v);  ; TVectorD Solve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t Solve (TMatrixDColumn &) override;  ; Bool_t Solve (TVectorD &b) override;  Solve Ax=b . Solution returned in b. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &) override;  ; Bool_t TransSolve (TVectorD &b) override;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:2989,Modifiability,inherit,inherited,2989," Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &) override;  ; Bool_t TransSolve (TVectorD &b) override;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:4386,Modifiability,inherit,inheritance,4386,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:6597,Modifiability,inherit,inherits,6597,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:6714,Modifiability,inherit,inherits,6714,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:10614,Modifiability,inherit,inherited,10614,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t ErrorFlag ();  ; const TMatrixDBase & GetDecompMatrix () const override;  ; Double_t GetThresholdPivoting ();  ; Double_t GetTreatAsZero ();  ; Int_t IError ();  ; void InitParam ();  initializing control parameters ;  ; Int_t MinIntWorkspace ();  ; Int_t MinRealWorkspace ();  ; void SetThresholdPivoting (Double_t piv);  ; void SetTreatAsZero (Double_t tol);  ;  Protected Member F",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:10829,Modifiability,inherit,inherited,10829,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t ErrorFlag ();  ; const TMatrixDBase & GetDecompMatrix () const override;  ; Double_t GetThresholdPivoting ();  ; Double_t GetTreatAsZero ();  ; Int_t IError ();  ; void InitParam ();  initializing control parameters ;  ; Int_t MinIntWorkspace ();  ; Int_t MinRealWorkspace ();  ; void SetThresholdPivoting (Double_t piv);  ; void SetTreatAsZero (Double_t tol);  ;  Protected Member F",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:11741,Modifiability,inherit,inherited,11741,"  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t ErrorFlag ();  ; const TMatrixDBase & GetDecompMatrix () const override;  ; Double_t GetThresholdPivoting ();  ; Double_t GetTreatAsZero ();  ; Int_t IError ();  ; void InitParam ();  initializing control parameters ;  ; Int_t MinIntWorkspace ();  ; Int_t MinRealWorkspace ();  ; void SetThresholdPivoting (Double_t piv);  ; void SetTreatAsZero (Double_t tol);  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void CopyUpperTriang (const TMatrixDSparse &a, Double_t *b);  Static function, copying the non-zero entries in the upper triangle to array b . ;  ; static void Factor (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayD &Aa, TArrayI &Aiw, TArrayI &Aikeep, const Int_t nsteps, Int_t &maxfrt, TArrayI &Aiw1, Int_t *icntl, Double_t *cntl, Int_t *info);  Factorization routine, the workhorse for the decomposition step. ;  ; static void Factor_sub1 (const Int_t n, const Int_t nz, Int_t &nz1, Double_t *a, const Int_t la, Int_t *irn, Int_t *icn, Int_t *iw, const ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:11867,Modifiability,inherit,inherited,11867,"  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t ErrorFlag ();  ; const TMatrixDBase & GetDecompMatrix () const override;  ; Double_t GetThresholdPivoting ();  ; Double_t GetTreatAsZero ();  ; Int_t IError ();  ; void InitParam ();  initializing control parameters ;  ; Int_t MinIntWorkspace ();  ; Int_t MinRealWorkspace ();  ; void SetThresholdPivoting (Double_t piv);  ; void SetTreatAsZero (Double_t tol);  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void CopyUpperTriang (const TMatrixDSparse &a, Double_t *b);  Static function, copying the non-zero entries in the upper triangle to array b . ;  ; static void Factor (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayD &Aa, TArrayI &Aiw, TArrayI &Aikeep, const Int_t nsteps, Int_t &maxfrt, TArrayI &Aiw1, Int_t *icntl, Double_t *cntl, Int_t *info);  Factorization routine, the workhorse for the decomposition step. ;  ; static void Factor_sub1 (const Int_t n, const Int_t nz, Int_t &nz1, Double_t *a, const Int_t la, Int_t *irn, Int_t *icn, Int_t *iw, const ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:13512,Modifiability,variab,variables,13512,"nt_t nsteps, Int_t &maxfrt, TArrayI &Aiw1, Int_t *icntl, Double_t *cntl, Int_t *info);  Factorization routine, the workhorse for the decomposition step. ;  ; static void Factor_sub1 (const Int_t n, const Int_t nz, Int_t &nz1, Double_t *a, const Int_t la, Int_t *irn, Int_t *icn, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *iw2, Int_t *icntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub2 (const Int_t n, const Int_t nz, Double_t *a, const Int_t la, Int_t *iw, const Int_t liw, Int_t *perm, Int_t *nstk, const Int_t nsteps, Int_t &maxfrt, Int_t *nelim, Int_t *iw2, Int_t *icntl, Double_t *cntl, Int_t *info);  Help routine for factorization. ;  ; static void Factor_sub3 (Double_t *a, Int_t *iw, Int_t &j1, Int_t &j2, const Int_t itop, const Int_t ireal, Int_t &ncmpbr, Int_t &ncmpbi);  Help routine for factorization. ;  ; static Int_t IDiag (Int_t ix, Int_t iy);  ; static void InitPivot (const Int_t n, const Int_t nz, TArrayI &Airn, TArrayI &Aicn, TArrayI &Aiw, TArrayI &Aikeep, TArrayI &Aiw1, Int_t &nsteps, const Int_t iflag, Int_t *icntl, Double_t *cntl, Int_t *info, Double_t &ops);  Setup Pivoting variables. ;  ; static void InitPivot_sub1 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2 (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t *nv, Int_t *nxt, Int_t *lst, Int_t *ipd, Int_t *flag, const Int_t iovflo, Int_t &ncmpa, const Double_t fratio);  Help routine for pivoting setup. ;  ; static void InitPivot_sub2a (const Int_t n, Int_t *ipe, Int_t *iw, const Int_t lw, Int_t &iwfr, Int_t &ncmpa);  Help routine for pivoting setup. ;  ; static void InitPivot_sub3 (const Int_t n, const Int_t nz, Int_t *irn, Int_t *icn, Int_t *perm, Int_t *iw, Int_t *ipe, Int_t *iq, Int_t *flag, Int_t &iwfr, Int_t *icntl, Int_t *info);  Help routine for pivoting setup. ;  ; static voi",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:15769,Modifiability,inherit,inherited,15769,"_t *irn, Int_t *icn, Int_t *perm, Int_t *na, Int_t *ne, Int_t *nd, const Int_t nsteps, Int_t *lstki, Int_t *lstkr, Int_t *iw, Int_t *info, Double_t &ops);  Help routine for pivoting setup. ;  ; static Int_t NonZerosUpperTriang (const TMatrixDSparse &a);  Static function, returning the number of non-zero entries in the upper triangular matrix . ;  ; static void Solve (const Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, Int_t &latop, Int_t *icntl);  Help routine for solving. ;  ; static void Solve_sub2 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, const Int_t latop, Int_t *icntl);  Help routine for solving. ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixDSparse fA;  ; Double_t fCntl [6];  ; TArrayI fColFact;  ; TArrayD fFact;  ; Int_t fIcntl [31];  ; TArrayI fIkeep;  ; Int_t fInfo [21];  ; Double_t fIPessimism;  ; TArrayI fIw;  ; TArrayI fIw1;  ; TArrayI fIw2;  ; Int_t fMaxfrt;  ; Int_t fNnonZeros;  ; Int_t fNrows;  ; Int_t fNsteps;  ; Double_t fPrecision;  ; TArrayI fRowFact;  ; Double_t fRPessimism;  ; Int_t fVerbose;  ; TArrayD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; en",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:16330,Modifiability,inherit,inherited,16330,"nst Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, Int_t &latop, Int_t *icntl);  Help routine for solving. ;  ; static void Solve_sub2 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, const Int_t latop, Int_t *icntl);  Help routine for solving. ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixDSparse fA;  ; Double_t fCntl [6];  ; TArrayI fColFact;  ; TArrayD fFact;  ; Int_t fIcntl [31];  ; TArrayI fIkeep;  ; Int_t fInfo [21];  ; Double_t fIPessimism;  ; TArrayI fIw;  ; TArrayI fIw1;  ; TArrayI fIw2;  ; Int_t fMaxfrt;  ; Int_t fNnonZeros;  ; Int_t fNrows;  ; Int_t fNsteps;  ; Double_t fPrecision;  ; TArrayI fRowFact;  ; Double_t fRPessimism;  ; Int_t fVerbose;  ; TArrayD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecom",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:16518,Modifiability,inherit,inherited,16518,"_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, const Int_t latop, Int_t *icntl);  Help routine for solving. ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixDSparse fA;  ; Double_t fCntl [6];  ; TArrayI fColFact;  ; TArrayD fFact;  ; Int_t fIcntl [31];  ; TArrayI fIkeep;  ; Int_t fInfo [21];  ; Double_t fIPessimism;  ; TArrayI fIw;  ; TArrayI fIw1;  ; TArrayI fIw2;  ; Int_t fMaxfrt;  ; Int_t fNnonZeros;  ; Int_t fNrows;  ; Int_t fNsteps;  ; Double_t fPrecision;  ; TArrayI fRowFact;  ; Double_t fRPessimism;  ; Int_t fVerbose;  ; TArrayD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:17159,Modifiability,inherit,inherited,17159,"ributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompSparse.h>. Inheritance diagram for TDecompSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompSparse() [1/5]. TDecompSparse::TDecompSparse ; (; ). Default constructor. ; Definition at line 30 of file TDecompSparse.cxx. ◆ TDecompSparse() [2/5]. TDecompSparse::TDecompSparse ; (; Int_t ; nRows, . Int_t ; nr_nonZeros, . Int_t ; verbose . ). Constructor for a matrix with nrows and unspecified number of columns . ; nr_nonZeros is the total number of non-zero entries in the matrix . ; Definition at line 41 of file TDecompSparse.cxx. ◆ TDecompSparse() [3/5]. TDecompSparse::TDecompSparse ; (; Int_t ; ",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:17533,Modifiability,inherit,inherited,17533,"sOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompSparse.h>. Inheritance diagram for TDecompSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompSparse() [1/5]. TDecompSparse::TDecompSparse ; (; ). Default constructor. ; Definition at line 30 of file TDecompSparse.cxx. ◆ TDecompSparse() [2/5]. TDecompSparse::TDecompSparse ; (; Int_t ; nRows, . Int_t ; nr_nonZeros, . Int_t ; verbose . ). Constructor for a matrix with nrows and unspecified number of columns . ; nr_nonZeros is the total number of non-zero entries in the matrix . ; Definition at line 41 of file TDecompSparse.cxx. ◆ TDecompSparse() [3/5]. TDecompSparse::TDecompSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; nr_nonZeros, . Int_t ; verbose . ). Constructor for a matrix with row range, [row_lwb..row_upb] and unspecified column range . ; nr_nonZeros is the total number of non-zero entries in the matrix .",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:23742,Modifiability,variab,variables,23742,"DecompSparse::GetThresholdPivoting ; (; ). inlineprotected . Definition at line 130 of file TDecompSparse.h. ◆ GetTreatAsZero(). Double_t TDecompSparse::GetTreatAsZero ; (; ). inlineprotected . Definition at line 131 of file TDecompSparse.h. ◆ IDiag(). static Int_t TDecompSparse::IDiag ; (; Int_t ; ix, . Int_t ; iy . ). inlinestaticprotected . Definition at line 119 of file TDecompSparse.h. ◆ IError(). Int_t TDecompSparse::IError ; (; ). inlineprotected . Definition at line 121 of file TDecompSparse.h. ◆ InitParam(). void TDecompSparse::InitParam ; (; ). protected . initializing control parameters ; Definition at line 413 of file TDecompSparse.cxx. ◆ InitPivot(). void TDecompSparse::InitPivot ; (; const Int_t ; n, . const Int_t ; nz, . TArrayI & ; Airn, . TArrayI & ; Aicn, . TArrayI & ; Aiw, . TArrayI & ; Aikeep, . TArrayI & ; Aiw1, . Int_t & ; nsteps, . const Int_t ; iflag, . Int_t * ; icntl, . Double_t * ; cntl, . Int_t * ; info, . Double_t & ; ops . ). staticprotected . Setup Pivoting variables. ; Definition at line 470 of file TDecompSparse.cxx. ◆ InitPivot_sub1(). void TDecompSparse::InitPivot_sub1 ; (; const Int_t ; n, . const Int_t ; nz, . Int_t * ; irn, . Int_t * ; icn, . Int_t * ; iw, . Int_t * ; ipe, . Int_t * ; iq, . Int_t * ; flag, . Int_t & ; iwfr, . Int_t * ; icntl, . Int_t * ; info . ). staticprotected . Help routine for pivoting setup. ; Definition at line 836 of file TDecompSparse.cxx. ◆ InitPivot_sub2(). void TDecompSparse::InitPivot_sub2 ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t * ; nv, . Int_t * ; nxt, . Int_t * ; lst, . Int_t * ; ipd, . Int_t * ; flag, . const Int_t ; iovflo, . Int_t & ; ncmpa, . const Double_t ; fratio . ). staticprotected . Help routine for pivoting setup. ; Definition at line 975 of file TDecompSparse.cxx. ◆ InitPivot_sub2a(). void TDecompSparse::InitPivot_sub2a ; (; const Int_t ; n, . Int_t * ; ipe, . Int_t * ; iw, . const Int_t ; lw, . Int_t & ; iwfr, . Int_t & ; nc",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSparse.html:6228,Security,hash,hash,6228," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDecompSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html
https://root.cern/doc/master/classTDecompSVD.html:7033,Availability,error,error,7033,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:7122,Availability,error,error,7122,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:7277,Availability,error,error,7277,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:7574,Availability,error,error,7574,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:12017,Availability,error,error,12017,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:7039,Integrability,message,message,7039,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:7580,Integrability,message,message,7580,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:8782,Integrability,message,message,8782,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:12023,Integrability,message,message,12023,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:12396,Integrability,message,message,12396," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat (",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:1524,Modifiability,inherit,inherited,1524,"hogonal matrix fV so that A = U*S*V'.; If the row/column index of A starts at (rowLwb,colLwb) then the decomposed matrices/vectors start at : fU : (rowLwb,colLwb); fV : (colLwb,colLwb); fSig : (colLwb); TDecompSVD::fSigTVectorD fSigDefinition TDecompSVD.h:30; TDecompSVD::fVTMatrixD fVDefinition TDecompSVD.h:29; TDecompSVD::fUTMatrixD fUDefinition TDecompSVD.h:28; The diagonal matrix fS is stored in the singular values vector fSig . The singular values, fSig[k] = S[k][k], are ordered so that fSig[0] >= fSig[1] >= ... >= fSig[n-1].; The singular value decomposition always exists, so the decomposition will (as long as m >=n) never fail. If m < n, the user should add sufficient zero rows to A , so that m == n; Here fTol is used to set the threshold on the minimum allowed value of the singular values: min_singular = fTol*max(fSig[i]) ; Definition at line 23 of file TDecompSVD.h. Public Types; enum  { kWorkMax = 100; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDecompSVD ();  ;  TDecompSVD (const TDecompSVD &another);  Copy constructor. ;  ;  TDecompSVD (const TMatrixD &m, Double_t tol=0.0);  Constructor for general matrix A . ;  ;  TDecompSVD (Int_t nrows, Int_t ncols);  Constructor for (nrows x ncols) matrix. ;  ;  TDecompSVD (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. ;  ;",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:4620,Modifiability,inherit,inherited,4620,"override;  ; TDecompSVD & operator= (const TDecompSVD &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print class members. ;  ; virtual void SetMatrix (const TMatrixD &a);  Set matrix to be decomposed. ;  ; TVectorD Solve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t Solve (TMatrixDColumn &b) override;  Solve Ax=b assuming the SVD form of A is stored . ;  ; Bool_t Solve (TVectorD &b) override;  Solve Ax=b assuming the SVD form of A is stored . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  Solve A^T x=b assuming the SVD form of A is stored . Solution returned in b. ;  ; Bool_t TransSolve (TVectorD &b) override;  Solve A^T x=b assuming the SVD form of A is stored . Solution returned in b. ;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option=""""); ",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:5272,Modifiability,inherit,inherited,5272,"ffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  Solve A^T x=b assuming the SVD form of A is stored . Solution returned in b. ;  ; Bool_t TransSolve (TVectorD &b) override;  Solve A^T x=b assuming the SVD form of A is stored . Solution returned in b. ;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:6669,Modifiability,inherit,inheritance,6669,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:8880,Modifiability,inherit,inherits,8880,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:8997,Modifiability,inherit,inherits,8997,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:12897,Modifiability,inherit,inherited,12897,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:13112,Modifiability,inherit,inherited,13112,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:13713,Modifiability,inherit,inherited,13713,"ersion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t Bidiagonalize (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag);  Bidiagonalize the (m x n) - matrix a (stored in v) through a series of Householder transformations applied to the left (Q^T) and to the right (H) of a , so that A = Q . ;  ; static void Diag_1 (TMatrixD &v, TVectorD &sDiag, TVectorD &oDiag, Int_t k);  Step 1 in the matrix diagonalization. ;  ; static void Diag_2 (TVectorD &sDiag, TVectorD &oDiag, Int_t k, Int_t l);  Step 2 in the matrix diagonalization. ;  ; static void Diag_3 (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag, Int_t k, Int_t l);  Step 3 in the matrix diagonalization. ;  ; static Bool_t Diagonalize (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag);  Dia",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:13839,Modifiability,inherit,inherited,13839,"ersion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDecompBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t Bidiagonalize (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag);  Bidiagonalize the (m x n) - matrix a (stored in v) through a series of Householder transformations applied to the left (Q^T) and to the right (H) of a , so that A = Q . ;  ; static void Diag_1 (TMatrixD &v, TVectorD &sDiag, TVectorD &oDiag, Int_t k);  Step 1 in the matrix diagonalization. ;  ; static void Diag_2 (TVectorD &sDiag, TVectorD &oDiag, Int_t k, Int_t l);  Step 2 in the matrix diagonalization. ;  ; static void Diag_3 (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag, Int_t k, Int_t l);  Step 3 in the matrix diagonalization. ;  ; static Bool_t Diagonalize (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag);  Dia",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:15120,Modifiability,inherit,inherited,15120,"ize the (m x n) - matrix a (stored in v) through a series of Householder transformations applied to the left (Q^T) and to the right (H) of a , so that A = Q . ;  ; static void Diag_1 (TMatrixD &v, TVectorD &sDiag, TVectorD &oDiag, Int_t k);  Step 1 in the matrix diagonalization. ;  ; static void Diag_2 (TVectorD &sDiag, TVectorD &oDiag, Int_t k, Int_t l);  Step 2 in the matrix diagonalization. ;  ; static void Diag_3 (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag, Int_t k, Int_t l);  Step 3 in the matrix diagonalization. ;  ; static Bool_t Diagonalize (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag);  Diagonalizes in an iterative fashion the bidiagonal matrix C as described through sDiag and oDiag, so that S' = U'^T . ;  ; static void SortSingular (TMatrixD &v, TMatrixD &u, TVectorD &sDiag);  Perform a permutation transformation on the diagonal matrix S', so that matrix S'' = U''^T . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TVectorD fSig;  ; TMatrixD fU;  ; TMatrixD fV;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompSVD.h>. Inheritance diagram for TDecompSVD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:15332,Modifiability,inherit,inherited,15332,"VectorD &sDiag, TVectorD &oDiag, Int_t k);  Step 1 in the matrix diagonalization. ;  ; static void Diag_2 (TVectorD &sDiag, TVectorD &oDiag, Int_t k, Int_t l);  Step 2 in the matrix diagonalization. ;  ; static void Diag_3 (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag, Int_t k, Int_t l);  Step 3 in the matrix diagonalization. ;  ; static Bool_t Diagonalize (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag);  Diagonalizes in an iterative fashion the bidiagonal matrix C as described through sDiag and oDiag, so that S' = U'^T . ;  ; static void SortSingular (TMatrixD &v, TMatrixD &u, TVectorD &sDiag);  Perform a permutation transformation on the diagonal matrix S', so that matrix S'' = U''^T . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TVectorD fSig;  ; TMatrixD fU;  ; TMatrixD fV;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompSVD.h>. Inheritance diagram for TDecompSVD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkWorkMax . Definition at line 43 of file TDecompSVD.h. Constructor & Destructor Documentation. ◆ TDecompSVD() [1/5]. TDecompSVD::TDecompSVD ; (; ). inli",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:15523,Modifiability,inherit,inherited,15523,"matrix diagonalization. ;  ; static Bool_t Diagonalize (TMatrixD &v, TMatrixD &u, TVectorD &sDiag, TVectorD &oDiag);  Diagonalizes in an iterative fashion the bidiagonal matrix C as described through sDiag and oDiag, so that S' = U'^T . ;  ; static void SortSingular (TMatrixD &v, TMatrixD &u, TVectorD &sDiag);  Perform a permutation transformation on the diagonal matrix S', so that matrix S'' = U''^T . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TVectorD fSig;  ; TMatrixD fU;  ; TMatrixD fV;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompSVD.h>. Inheritance diagram for TDecompSVD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkWorkMax . Definition at line 43 of file TDecompSVD.h. Constructor & Destructor Documentation. ◆ TDecompSVD() [1/5]. TDecompSVD::TDecompSVD ; (; ). inline . Definition at line 45 of file TDecompSVD.h. ◆ TDecompSVD() [2/5]. TDecompSVD::TDecompSVD ; (; Int_t ; nrows, . Int_t ; ncols . ). Constructor for (nrows x ncols) matrix. ; Definition at line 52 of file TDecompSVD.cxx. ◆ TDecompSVD() [3/5]. TDecompSVD::TDecompSVD ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ;",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:15897,Modifiability,inherit,inherited,15897,"ic void SortSingular (TMatrixD &v, TMatrixD &u, TVectorD &sDiag);  Perform a permutation transformation on the diagonal matrix S', so that matrix S'' = U''^T . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TVectorD fSig;  ; TMatrixD fU;  ; TMatrixD fV;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompSVD.h>. Inheritance diagram for TDecompSVD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkWorkMax . Definition at line 43 of file TDecompSVD.h. Constructor & Destructor Documentation. ◆ TDecompSVD() [1/5]. TDecompSVD::TDecompSVD ; (; ). inline . Definition at line 45 of file TDecompSVD.h. ◆ TDecompSVD() [2/5]. TDecompSVD::TDecompSVD ; (; Int_t ; nrows, . Int_t ; ncols . ). Constructor for (nrows x ncols) matrix. ; Definition at line 52 of file TDecompSVD.cxx. ◆ TDecompSVD() [3/5]. TDecompSVD::TDecompSVD ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb . ). Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. ; Definition at line 66 of file TDecompSVD.cxx. ◆ TDecompSVD() [4/5]. TDecompSVD::TDecompSVD ; (; const TMatrixD & ; m, . Double_t ; tol = 0.0 . ).",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDecompSVD.html:8511,Security,hash,hash,8511," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDecompSVD.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html
https://root.cern/doc/master/classTDelCharCom.html:2401,Availability,error,error,2401,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:2490,Availability,error,error,2490,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:2645,Availability,error,error,2645,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:2942,Availability,error,error,2942,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:7487,Availability,error,error,7487,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; char fChar;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteD",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:2407,Integrability,message,message,2407,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:2948,Integrability,message,message,2948,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:4150,Integrability,message,message,4150,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:7493,Integrability,message,message,7493,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; char fChar;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteD",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:7866,Integrability,message,message,7866,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; char fChar;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:504,Modifiability,inherit,inherited,504,". ROOT: TDelCharCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TDelCharCom Class Reference. . Definition at line 111 of file TGTextEdit.cxx. Public Member Functions;  TDelCharCom (TGTextEdit *te);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual v",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:640,Modifiability,inherit,inherited,640,". ROOT: TDelCharCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TDelCharCom Class Reference. . Definition at line 111 of file TGTextEdit.cxx. Public Member Functions;  TDelCharCom (TGTextEdit *te);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual v",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:2037,Modifiability,inherit,inheritance,2037,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:4248,Modifiability,inherit,inherits,4248,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:4365,Modifiability,inherit,inherits,4365,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:8227,Modifiability,inherit,inherited,8227,"&);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; char fChar;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:8883,Modifiability,inherit,inherited,8883,"he current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; char fChar;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelCharCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelCharCom(). TDelCharCom::TDelCharC",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:9386,Modifiability,inherit,inherited,9386," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelCharCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelCharCom(). TDelCharCom::TDelCharCom ; (; TGTextEdit * ; te). inline . Definition at line 117 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelCharCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load cont",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:9485,Modifiability,inherit,inherited,9485," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelCharCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelCharCom(). TDelCharCom::TDelCharCom ; (; TGTextEdit * ; te). inline . Definition at line 117 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelCharCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load cont",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:9690,Modifiability,inherit,inherited,9690," , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelCharCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelCharCom(). TDelCharCom::TDelCharCom ; (; TGTextEdit * ; te). inline . Definition at line 117 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelCharCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented from TObject.",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:10454,Performance,load,load,10454,";  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelCharCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelCharCom(). TDelCharCom::TDelCharCom ; (; TGTextEdit * ; te). inline . Definition at line 117 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelCharCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented from TObject.; Definition at line 122 of file TGTextEdit.cxx. Member Data Documentation. ◆ fChar. char TDelCharCom::fChar. private . Definition at line 114 of file TGTextEdit.cxx. gui/gui/src/TGTextEdit.cxx. TDelCharCom. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:10492,Performance,load,load,10492,";  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelCharCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelCharCom(). TDelCharCom::TDelCharCom ; (; TGTextEdit * ; te). inline . Definition at line 117 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelCharCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented from TObject.; Definition at line 122 of file TGTextEdit.cxx. Member Data Documentation. ◆ fChar. char TDelCharCom::fChar. private . Definition at line 114 of file TGTextEdit.cxx. gui/gui/src/TGTextEdit.cxx. TDelCharCom. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelCharCom.html:3879,Security,hash,hash,3879," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTDelCharCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html
https://root.cern/doc/master/classTDelTextCom.html:2613,Availability,error,error,2613,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:2702,Availability,error,error,2702,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:2857,Availability,error,error,2857,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:3154,Availability,error,error,3154,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:7699,Availability,error,error,7699,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; Bool_t fBreakLine;  ; TGLongPosition fEndPos;  ; TGText * fText;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:2619,Integrability,message,message,2619,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:3160,Integrability,message,message,3160,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:4362,Integrability,message,message,4362,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:7705,Integrability,message,message,7705,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; Bool_t fBreakLine;  ; TGLongPosition fEndPos;  ; TGText * fText;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:8078,Integrability,message,message,8078,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; Bool_t fBreakLine;  ; TGLongPosition fEndPos;  ; TGText * fText;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:716,Modifiability,inherit,inherited,716,". ROOT: TDelTextCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TDelTextCom Class Reference. . Definition at line 184 of file TGTextEdit.cxx. Public Member Functions;  TDelTextCom (const TDelTextCom &dtc);  ;  TDelTextCom (TGTextEdit *te, TGText *txt);  ;  ~TDelTextCom () override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; TDelTextCom & operator= (const TDelTextCom &dtc);  ; void SetBreakLine (Bool_t on);  ; void SetEndPos (TGLongPosition end);  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:852,Modifiability,inherit,inherited,852,". ROOT: TDelTextCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TDelTextCom Class Reference. . Definition at line 184 of file TGTextEdit.cxx. Public Member Functions;  TDelTextCom (const TDelTextCom &dtc);  ;  TDelTextCom (TGTextEdit *te, TGText *txt);  ;  ~TDelTextCom () override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; TDelTextCom & operator= (const TDelTextCom &dtc);  ; void SetBreakLine (Bool_t on);  ; void SetEndPos (TGLongPosition end);  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:2249,Modifiability,inherit,inheritance,2249,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:4460,Modifiability,inherit,inherits,4460,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:4577,Modifiability,inherit,inherits,4577,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:8492,Modifiability,inherit,inherited,8492,"eamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; Bool_t fBreakLine;  ; TGLongPosition fEndPos;  ; TGText * fText;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:9148,Modifiability,inherit,inherited,9148," char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; Bool_t fBreakLine;  ; TGLongPosition fEndPos;  ; TGText * fText;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelTextCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelTextCom() [1/2]. TDelTextCom::TDe",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:9651,Modifiability,inherit,inherited,9651," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelTextCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelTextCom() [1/2]. TDelTextCom::TDelTextCom ; (; TGTextEdit * ; te, . TGText * ; txt . ). inline . Definition at line 192 of file TGTextEdit.cxx. ◆ TDelTextCom() [2/2]. TDelTextCom::TDelTextCom ; (; const TDelTextCom & ; dtc). inline . Definition at line 196 of file TGTextEdit.cxx. ◆ ~TDelTextCom(). TDelTextCom::~TDelTextCom ; (; ). inlineoverride . Definition at line 200 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelTextCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object not",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:9750,Modifiability,inherit,inherited,9750," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelTextCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelTextCom() [1/2]. TDelTextCom::TDelTextCom ; (; TGTextEdit * ; te, . TGText * ; txt . ). inline . Definition at line 192 of file TGTextEdit.cxx. ◆ TDelTextCom() [2/2]. TDelTextCom::TDelTextCom ; (; const TDelTextCom & ; dtc). inline . Definition at line 196 of file TGTextEdit.cxx. ◆ ~TDelTextCom(). TDelTextCom::~TDelTextCom ; (; ). inlineoverride . Definition at line 200 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelTextCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object not",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:9955,Modifiability,inherit,inherited,9955," , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTextEditCommand; TGTextEdit * fEdit;  ; TGLongPosition fPos;  . Inheritance diagram for TDelTextCom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelTextCom() [1/2]. TDelTextCom::TDelTextCom ; (; TGTextEdit * ; te, . TGText * ; txt . ). inline . Definition at line 192 of file TGTextEdit.cxx. ◆ TDelTextCom() [2/2]. TDelTextCom::TDelTextCom ; (; const TDelTextCom & ; dtc). inline . Definition at line 196 of file TGTextEdit.cxx. ◆ ~TDelTextCom(). TDelTextCom::~TDelTextCom ; (; ). inlineoverride . Definition at line 200 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelTextCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; F",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:10999,Performance,load,load,10999," able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelTextCom() [1/2]. TDelTextCom::TDelTextCom ; (; TGTextEdit * ; te, . TGText * ; txt . ). inline . Definition at line 192 of file TGTextEdit.cxx. ◆ TDelTextCom() [2/2]. TDelTextCom::TDelTextCom ; (; const TDelTextCom & ; dtc). inline . Definition at line 196 of file TGTextEdit.cxx. ◆ ~TDelTextCom(). TDelTextCom::~TDelTextCom ; (; ). inlineoverride . Definition at line 200 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelTextCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented from TObject.; Definition at line 217 of file TGTextEdit.cxx. ◆ operator=(). TDelTextCom & TDelTextCom::operator= ; (; const TDelTextCom & ; dtc). inline . Definition at line 202 of file TGTextEdit.cxx. ◆ SetBreakLine(). void TDelTextCom::SetBreakLine ; (; Bool_t ; on). inline . Definition at line 215 of file TGTextEdit.cxx. ◆ SetEndPos(). void TDelTextCom::SetEndPos ; (; TGLongPosition ; end). inline . Definition at line 211 of file TGTextEdit.cxx. Member Data Documentation. ◆ fBreakLine. Bool_t TDelTextCom::fBreakLine. private . Definition at line 189 of file TGTextEdit.cxx. ◆ fEndPos. TGLongPosition TDelTextCom::fEndPos. private . Definition at line 188 of file TGTextEdit.cxx. ◆ fText. TGText* TDelTextCom::fText. private . Definition at line 187 of file TGTextEdit.cxx. gui/gui/src/TGTextEdit.cxx. TDelTextCom. ROOT master - Reference Guide Gen",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:11037,Performance,load,load,11037," able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDelTextCom() [1/2]. TDelTextCom::TDelTextCom ; (; TGTextEdit * ; te, . TGText * ; txt . ). inline . Definition at line 192 of file TGTextEdit.cxx. ◆ TDelTextCom() [2/2]. TDelTextCom::TDelTextCom ; (; const TDelTextCom & ; dtc). inline . Definition at line 196 of file TGTextEdit.cxx. ◆ ~TDelTextCom(). TDelTextCom::~TDelTextCom ; (; ). inlineoverride . Definition at line 200 of file TGTextEdit.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDelTextCom::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented from TObject.; Definition at line 217 of file TGTextEdit.cxx. ◆ operator=(). TDelTextCom & TDelTextCom::operator= ; (; const TDelTextCom & ; dtc). inline . Definition at line 202 of file TGTextEdit.cxx. ◆ SetBreakLine(). void TDelTextCom::SetBreakLine ; (; Bool_t ; on). inline . Definition at line 215 of file TGTextEdit.cxx. ◆ SetEndPos(). void TDelTextCom::SetEndPos ; (; TGLongPosition ; end). inline . Definition at line 211 of file TGTextEdit.cxx. Member Data Documentation. ◆ fBreakLine. Bool_t TDelTextCom::fBreakLine. private . Definition at line 189 of file TGTextEdit.cxx. ◆ fEndPos. TGLongPosition TDelTextCom::fEndPos. private . Definition at line 188 of file TGTextEdit.cxx. ◆ fText. TGText* TDelTextCom::fText. private . Definition at line 187 of file TGTextEdit.cxx. gui/gui/src/TGTextEdit.cxx. TDelTextCom. ROOT master - Reference Guide Gen",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDelTextCom.html:4091,Security,hash,hash,4091," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTDelTextCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html
https://root.cern/doc/master/classTDialogCanvas.html:33903,Availability,error,error,33903,"r *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsiste",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:33992,Availability,error,error,33992,"eave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setu",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:34147,Availability,error,error,34147,"whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t Inheri",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:34324,Availability,error,error,34324,"st;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:37453,Availability,error,error,37453,"r delete (void *ptr, void *vp);  Only called by placement new when throwing an exception. ;  ; void operator delete[] (void *ptr);  Operator delete []. ;  ; void operator delete[] (void *ptr, void *vp);  Only called by placement new[] when throwing an exception. ;  ; void * operator new (size_t sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:54258,Availability,down,down,54258,"anvas along X in CM. ;  ; Size_t fYsizeReal;  Current size of canvas along Y in CM. ;  ; Size_t fYsizeUser;  User specified size of canvas along Y in CM. ;  ;  Protected Attributes inherited from TPad; Bool_t fAbsCoord;  Use absolute coordinates. ;  ; Double_t fAbsHNDC;  Absolute Height of pad along Y in NDC. ;  ; Double_t fAbsPixeltoXk;  Conversion coefficient for absolute pixel to X World. ;  ; Double_t fAbsPixeltoYk;  Conversion coefficient for absolute pixel to Y World. ;  ; Double_t fAbsWNDC;  Absolute Width of pad along X in NDC. ;  ; Double_t fAbsXlowNDC;  Absolute X top left corner of pad in NDC [0,1]. ;  ; Double_t fAbsYlowNDC;  Absolute Y top left corner of pad in NDC [0,1]. ;  ; Double_t fAspectRatio;  ratio of w/h in case of fixed ratio ;  ; Short_t fBorderMode;  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize;  pad bordersize in pixels ;  ; TCanvas * fCanvas {nullptr};  ! Pointer to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t fCrosshair;  Crosshair type (0 if no crosshair requested) ;  ; Int_t fCrosshairPos;  Position of crosshair. ;  ; Bool_t fEditable;  True if canvas is editable. ;  ; Bool_t fEmbeddedGL;  ! ;  ; TList * fExecs {nullptr};  List of commands to be executed when a pad event occurs. ;  ; Bool_t fFixedAspectRatio;  True if fixed aspect ratio. ;  ; TFrame * fFrame {nullptr};  ! Pointer to 2-D frame (if one exists) ;  ; Int_t fGLDevice;  ! OpenGL off-screen pixmap identifier ;  ; Bool_t fGridx;  Set to true if grid along X. ;  ; Bool_t fGridy;  Set to true if grid along Y. ;  ; Double_t fHNDC;  Height of pad along Y in Normalized Coordinates (NDC) ;  ; Int_t fLogx;  (=0 if X linear scale, =1 if log scale) ;  ; Int_t fLogy;  (=0 if Y linear scale, =1 if log scale) ;  ; Int_t fLogz;  (=0 if Z linear s",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:4955,Deployability,update,update,4955,"get ();  Used by friend class TCanvasImp. ;  ; void Draw (Option_t *option="""") override;  Draw a canvas. ;  ; TObject * DrawClone (Option_t *option="""") const override;  Draw a clone of this canvas A new canvas is created that is a clone of this canvas. ;  ; virtual TObject * DrawClonePad ();  Draw a clone of this canvas into the current pad In an interactive session, select the destination/current pad with the middle mouse button, then point to the canvas area to select the canvas context menu item DrawClonePad. ;  ; virtual void EditorBar ();  Get editor bar. ;  ; void EmbedInto (Int_t winid, Int_t ww, Int_t wh);  Embedded a canvas into a TRootEmbeddedCanvas. ;  ; void EnterLeave (TPad *prevSelPad, TObject *prevSelObj);  Generate kMouseEnter and kMouseLeave events depending on the previously selected object and the currently selected object. ;  ; void FeedbackMode (Bool_t set);  Turn rubberband feedback mode on or off. ;  ; void Flush ();  Flush canvas buffers. ;  ; void ForceUpdate ();  Force canvas update. ;  ; Bool_t GetAutoExec () const;  ; Int_t GetCanvasID () const override;  ; TCanvasImp * GetCanvasImp () const override;  ; TVirtualPadPainter * GetCanvasPainter ();  Access and (probably) creation of pad painter. ;  ; virtual void GetCanvasPar (Int_t &wtopx, Int_t &wtopy, UInt_t &ww, UInt_t &wh);  ; TObject * GetClickSelected () const;  ; TVirtualPad * GetClickSelectedPad () const;  ; TContextMenu * GetContextMenu () const;  ; const char * GetDISPLAY () const;  ; Int_t GetDoubleBuffer () const;  ; Int_t GetEvent () const override;  ; Int_t GetEventX () const override;  ; Int_t GetEventY () const override;  ; Color_t GetHighLightColor () const override;  ; TVirtualPad * GetPadSave () const override;  ; TObject * GetSelected () const override;  ; Option_t * GetSelectedOpt () const;  ; TVirtualPad * GetSelectedPad () const override;  ; Int_t GetSelectedX () const;  ; Int_t GetSelectedY () const;  ; Bool_t GetShowEditor () const;  ; Bool_t GetShowEventStatus () c",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:10594,Deployability,update,update,10594,"etained (Bool_t retained=kTRUE);  ; void SetSelected (TObject *obj) override;  Set selected canvas. ;  ; void SetSelectedPad (TPad *pad);  ; void SetSupportGL (Bool_t support);  ; void SetTitle (const char *title="""") override;  Set canvas title. ;  ; void SetWindowPosition (Int_t x, Int_t y);  Set canvas window position. ;  ; void SetWindowSize (UInt_t ww, UInt_t wh);  Set canvas window size. ;  ; void Show ();  Show canvas. ;  ; virtual void Size (Float_t xsizeuser=0, Float_t ysizeuser=0);  Set the canvas scale in centimeters. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void ToggleAutoExec ();  Toggle pad auto execution of list of TExecs. ;  ; virtual void ToggleEditor ();  Toggle editor. ;  ; virtual void ToggleEventStatus ();  Toggle event statusbar. ;  ; virtual void ToggleToolBar ();  Toggle toolbar. ;  ; virtual void ToggleToolTips ();  Toggle tooltip display. ;  ; void Update () override;  Update canvas pad buffers. ;  ; void UpdateAsync () override;  Asynchronous pad update. ;  ; void UseCurrentStyle () override;  Force a copy of current style for all objects in canvas. ;  ; Bool_t UseGL () const;  ;  Public Member Functions inherited from TPad;  TPad ();  Pad default constructor. ;  ;  TPad (const char *name, const char *title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color=-1, Short_t bordersize=-1, Short_t bordermode=-2);  Pad constructor. ;  ;  ~TPad () override;  Pad destructor. ;  ; void AbsCoordinates (Bool_t set) override;  ; Double_t AbsPixeltoX (Int_t px) override;  ; virtual void AbsPixeltoXY (Int_t xpixel, Int_t ypixel, Double_t &x, Double_t &y);  Convert absolute pixel into X/Y coordinates. ;  ; Double_t AbsPixeltoY (Int_t py) override;  ; void Add (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object to list of primitives with speicified draw option When. ;  ; void AddExec (const char *name, const char *command) override;  Add a new TExec object to the list of ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:30123,Deployability,update,update,30123,"000) override;  Set tool tip text associated with this pad. ;  ; void SetVertical (Bool_t vert=kTRUE) override;  Set pad vertical (default) or horizontal. ;  ; void SetView (TView *view=nullptr) override;  Set the current TView. Delete previous view if view=0. ;  ; void SetViewer3D (TVirtualViewer3D *viewer3d) override;  ; void ShowGuidelines (TObject *object, const Int_t event, const char mode='i', const bool cling=true) override;  Shows lines to indicate if a TAttBBox2D object is aligned to the center or to another object, shows distance arrows if two objects on screen have the same distance to another object Call from primitive in Execute Event, in ButtonMotion after the new coordinates have been set, to 'stick' once when button is up to delete lines. ;  ; virtual void StartEditing ();  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update () override;  Update pad. ;  ; void UpdateAsync () override;  Asynchronous pad update. ;  ; void UseCurrentStyle () override;  Force a copy of current style for all objects in pad. ;  ; Int_t UtoAbsPixel (Double_t u) const override;  Convert X NDC to absolute pixel. ;  ; Int_t UtoPixel (Double_t u) const override;  Convert X NDC to pixel. ;  ; Int_t VtoAbsPixel (Double_t v) const override;  Convert Y NDC to absolute pixel. ;  ; Int_t VtoPixel (Double_t v) const override;  Convert Y NDC to pixel. ;  ; TObject * WaitPrimitive (const char *pname="""", const char *emode="""") override;  Loop and sleep until a primitive with name=pname is found in the pad. ;  ; Int_t XtoAbsPixel (Double_t x) const override;  Convert X coordinate to absolute pixel. ;  ; Double_t XtoPad (Double_t x) const override;  Convert x from X to pad. ;  ; Int_t XtoPixel (Double_t x) const override;  Convert X coordinate to pixel. ;  ; virtual void XYtoAbsPixel (Double_t x, Double_t y, Int_t &xpixel, Int_t &ypixel) const;  Convert X/Y into absolute pixel coordinates. ;  ; virtua",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:4714,Integrability,depend,depending,4714,"a new canvas at a random position. ;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; void DeleteCanvasPainter ();  assert on IsBatch() == false? ;  ; void Destructor ();  Actual canvas destructor. ;  ; void DisconnectWidget ();  Used by friend class TCanvasImp. ;  ; void Draw (Option_t *option="""") override;  Draw a canvas. ;  ; TObject * DrawClone (Option_t *option="""") const override;  Draw a clone of this canvas A new canvas is created that is a clone of this canvas. ;  ; virtual TObject * DrawClonePad ();  Draw a clone of this canvas into the current pad In an interactive session, select the destination/current pad with the middle mouse button, then point to the canvas area to select the canvas context menu item DrawClonePad. ;  ; virtual void EditorBar ();  Get editor bar. ;  ; void EmbedInto (Int_t winid, Int_t ww, Int_t wh);  Embedded a canvas into a TRootEmbeddedCanvas. ;  ; void EnterLeave (TPad *prevSelPad, TObject *prevSelObj);  Generate kMouseEnter and kMouseLeave events depending on the previously selected object and the currently selected object. ;  ; void FeedbackMode (Bool_t set);  Turn rubberband feedback mode on or off. ;  ; void Flush ();  Flush canvas buffers. ;  ; void ForceUpdate ();  Force canvas update. ;  ; Bool_t GetAutoExec () const;  ; Int_t GetCanvasID () const override;  ; TCanvasImp * GetCanvasImp () const override;  ; TVirtualPadPainter * GetCanvasPainter ();  Access and (probably) creation of pad painter. ;  ; virtual void GetCanvasPar (Int_t &wtopx, Int_t &wtopy, UInt_t &ww, UInt_t &wh);  ; TObject * GetClickSelected () const;  ; TVirtualPad * GetClickSelectedPad () const;  ; TContextMenu * GetContextMenu () const;  ; const char * GetDISPLAY () const;  ; Int_t GetDoubleBuffer () const;  ; Int_t GetEvent () const override;  ; Int_t GetEventX () const override;  ; Int_t GetEventY () const override;  ; Color_t GetHighLightColor () const override;  ; TVirtualPad * GetPadSave () const override;  ; TObject * GetSelected (",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:12366,Integrability,rout,routine,12366,"void Add (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object to list of primitives with speicified draw option When. ;  ; void AddExec (const char *name, const char *command) override;  Add a new TExec object to the list of Execs. ;  ; void AddFirst (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object as first in list of primitives with speicified draw option When. ;  ; virtual void AutoExec ();  Execute the list of Execs when a pad event occurs. ;  ; void Browse (TBrowser *b) override;  Browse pad. ;  ; TLegend * BuildLegend (Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") override;  Build a legend from the graphical objects in the pad. ;  ; TVirtualPad * cd (Int_t subpadnumber=0) override;  Set Current pad. ;  ; void Clear (Option_t *option="""") override;  Delete all pad primitives. ;  ; Int_t Clip (Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) override;  Clipping routine: Cohen Sutherland algorithm. ;  ; virtual Int_t Clip (Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt);  Clipping routine: Cohen Sutherland algorithm. ;  ; virtual Int_t ClippingCode (Double_t x, Double_t y, Double_t xcl1, Double_t ycl1, Double_t xcl2, Double_t ycl2);  Compute the endpoint codes for TPad::Clip. ;  ; virtual Int_t ClipPolygon (Int_t n, Double_t *x, Double_t *y, Int_t nn, Double_t *xc, Double_t *yc, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt);  Clip polygon using the Sutherland-Hodgman algorithm. ;  ; void Close (Option_t *option="""") override;  Delete all primitives in pad and pad itself. ;  ; void CloseToolTip (TObject *tip) override;  Hide tool tip. ;  ; void CopyPixmap () override;  Copy the pixmap of the pad to the canvas. ;  ; void CopyPixmaps () override;  Copy the sub-pixmaps of the pad to the canvas. ;  ; TObject * CreateToolTip (const TBox *b, c",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:12527,Integrability,rout,routine,12527,"(const char *name, const char *command) override;  Add a new TExec object to the list of Execs. ;  ; void AddFirst (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object as first in list of primitives with speicified draw option When. ;  ; virtual void AutoExec ();  Execute the list of Execs when a pad event occurs. ;  ; void Browse (TBrowser *b) override;  Browse pad. ;  ; TLegend * BuildLegend (Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") override;  Build a legend from the graphical objects in the pad. ;  ; TVirtualPad * cd (Int_t subpadnumber=0) override;  Set Current pad. ;  ; void Clear (Option_t *option="""") override;  Delete all pad primitives. ;  ; Int_t Clip (Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) override;  Clipping routine: Cohen Sutherland algorithm. ;  ; virtual Int_t Clip (Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt);  Clipping routine: Cohen Sutherland algorithm. ;  ; virtual Int_t ClippingCode (Double_t x, Double_t y, Double_t xcl1, Double_t ycl1, Double_t xcl2, Double_t ycl2);  Compute the endpoint codes for TPad::Clip. ;  ; virtual Int_t ClipPolygon (Int_t n, Double_t *x, Double_t *y, Int_t nn, Double_t *xc, Double_t *yc, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt);  Clip polygon using the Sutherland-Hodgman algorithm. ;  ; void Close (Option_t *option="""") override;  Delete all primitives in pad and pad itself. ;  ; void CloseToolTip (TObject *tip) override;  Hide tool tip. ;  ; void CopyPixmap () override;  Copy the pixmap of the pad to the canvas. ;  ; void CopyPixmaps () override;  Copy the sub-pixmaps of the pad to the canvas. ;  ; TObject * CreateToolTip (const TBox *b, const char *text, Long_t delayms) override;  Create a tool tip and return its pointer. ;  ; void DeleteExec (const char *name) override;  Remove TExec name from the l",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:21690,Integrability,rout,routine,21690,"to X. ;  ; Double_t PadtoY (Double_t y) const override;  Convert y from pad to Y. ;  ; void Paint (Option_t *option="""") override;  Paint all primitives in pad. ;  ; void PaintBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t *option="""") override;  Paint box in CurrentPad World coordinates. ;  ; void PaintFillArea (Int_t n, Double_t *x, Double_t *y, Option_t *option="""") override;  Paint fill area in CurrentPad World coordinates. ;  ; void PaintFillArea (Int_t n, Float_t *x, Float_t *y, Option_t *option="""") override;  ; void PaintFillAreaHatches (Int_t n, Double_t *x, Double_t *y, Int_t FillStyle);  This function paints hatched fill area according to the FillStyle value The convention for the Hatch is the following: ;  ; void PaintFillAreaNDC (Int_t n, Double_t *x, Double_t *y, Option_t *option="""") override;  Paint fill area in CurrentPad NDC coordinates. ;  ; void PaintHatches (Double_t dy, Double_t angle, Int_t nn, Double_t *xx, Double_t *yy);  This routine draw hatches inclined with the angle ""angle"" and spaced of ""dy"" in normalized device coordinates in the surface defined by n,xx,yy. ;  ; void PaintLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Paint line in CurrentPad World coordinates. ;  ; void PaintLine3D (Double_t *p1, Double_t *p2) override;  Paint 3-D line in the CurrentPad. ;  ; void PaintLine3D (Float_t *p1, Float_t *p2) override;  Paint 3-D line in the CurrentPad. ;  ; void PaintLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2) override;  Paint line in normalized coordinates. ;  ; void PaintModified () override;  Traverse pad hierarchy and (re)paint only modified pads. ;  ; void PaintPadFrame (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax) override;  Paint histogram/graph frame. ;  ; void PaintPolyLine (Int_t n, Double_t *x, Double_t *y, Option_t *option="""") override;  Paint polyline in CurrentPad World coordinates. ;  ; void PaintPolyLine (Int_t n, Float_t *x, Float_t *y, Option_t *option=""""",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:33909,Integrability,message,message,33909,"r *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsiste",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:34330,Integrability,message,message,34330,"st;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:35120,Integrability,message,message,35120,"method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual B",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:37459,Integrability,message,message,37459,"r delete (void *ptr, void *vp);  Only called by placement new when throwing an exception. ;  ; void operator delete[] (void *ptr);  Operator delete []. ;  ; void operator delete[] (void *ptr, void *vp);  Only called by placement new[] when throwing an exception. ;  ; void * operator new (size_t sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:37650,Integrability,message,message,37650,"id *vp);  Only called by placement new[] when throwing an exception. ;  ; void * operator new (size_t sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:62128,Integrability,depend,depending,62128,"precatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCanvas; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; void Init ();  Initialize the TCanvas members. Called by all constructors. ;  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:2283,Modifiability,inherit,inherited,2283,"1, Float_t ymargin=0.01, Int_t color=0) override;  ; TObject * GetRefObject () const;  ; TPad * GetRefPad () const;  ; TClass * IsA () const override;  ; void Range (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Set world coordinate system for the pad. ;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove object from a pad and its sub-pads. ;  ; void SetBorderMode (Short_t bordermode) override;  ; void SetGrid (Int_t valuex=1, Int_t valuey=1) override;  ; void SetLogx (Int_t value=1) override;  ; void SetLogy (Int_t value=1) override;  ; void SetName (const char *name) override;  Set canvas name. ;  ; virtual void SetRefObject (TObject *obj);  ; virtual void SetRefPad (TPad *pad);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void x3d (Option_t *option="""") override;  Deprecated: use TPad::GetViewer3D() instead. ;  ;  Public Member Functions inherited from TCanvas;  TCanvas (Bool_t build=kTRUE);  Canvas default constructor. ;  ;  TCanvas (const char *name, const char *title, Int_t wtopx, Int_t wtopy, Int_t ww, Int_t wh);  Create a new canvas. ;  ;  TCanvas (const char *name, const char *title, Int_t ww, Int_t wh);  Create a new canvas at a random position. ;  ;  TCanvas (const char *name, const char *title="""", Int_t form=1);  Create a new canvas with a predefined size form. ;  ;  TCanvas (const char *name, Int_t ww, Int_t wh, Int_t winid);  Create an embedded canvas, i.e. ;  ;  ~TCanvas () override;  Canvas destructor. ;  ; void Browse (TBrowser *b) override;  Browse. ;  ; TVirtualPad * cd (Int_t subpadnumber=0) override;  Set current canvas & pad. ;  ; void Clear (Option_t *option="""") override;  Remove all primitives from the canvas. ;  ; virtual void Cleared (TVirtualPad *pad);  Emit pad Cleared signal. ;  ; void ClearPadSave ();  ; void Close (Option_t *option="""") override;  Close canvas. ;  ; void Closed () override;  Emit Closed signal. ;  ; v",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:10755,Modifiability,inherit,inherited,10755," SetTitle (const char *title="""") override;  Set canvas title. ;  ; void SetWindowPosition (Int_t x, Int_t y);  Set canvas window position. ;  ; void SetWindowSize (UInt_t ww, UInt_t wh);  Set canvas window size. ;  ; void Show ();  Show canvas. ;  ; virtual void Size (Float_t xsizeuser=0, Float_t ysizeuser=0);  Set the canvas scale in centimeters. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void ToggleAutoExec ();  Toggle pad auto execution of list of TExecs. ;  ; virtual void ToggleEditor ();  Toggle editor. ;  ; virtual void ToggleEventStatus ();  Toggle event statusbar. ;  ; virtual void ToggleToolBar ();  Toggle toolbar. ;  ; virtual void ToggleToolTips ();  Toggle tooltip display. ;  ; void Update () override;  Update canvas pad buffers. ;  ; void UpdateAsync () override;  Asynchronous pad update. ;  ; void UseCurrentStyle () override;  Force a copy of current style for all objects in canvas. ;  ; Bool_t UseGL () const;  ;  Public Member Functions inherited from TPad;  TPad ();  Pad default constructor. ;  ;  TPad (const char *name, const char *title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color=-1, Short_t bordersize=-1, Short_t bordermode=-2);  Pad constructor. ;  ;  ~TPad () override;  Pad destructor. ;  ; void AbsCoordinates (Bool_t set) override;  ; Double_t AbsPixeltoX (Int_t px) override;  ; virtual void AbsPixeltoXY (Int_t xpixel, Int_t ypixel, Double_t &x, Double_t &y);  Convert absolute pixel into X/Y coordinates. ;  ; Double_t AbsPixeltoY (Int_t py) override;  ; void Add (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object to list of primitives with speicified draw option When. ;  ; void AddExec (const char *name, const char *command) override;  Add a new TExec object to the list of Execs. ;  ; void AddFirst (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object as first in list of primitives with speicified draw option When. ;  ; virtual",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:14052,Modifiability,inherit,inheritance,14052,"and pad itself. ;  ; void CloseToolTip (TObject *tip) override;  Hide tool tip. ;  ; void CopyPixmap () override;  Copy the pixmap of the pad to the canvas. ;  ; void CopyPixmaps () override;  Copy the sub-pixmaps of the pad to the canvas. ;  ; TObject * CreateToolTip (const TBox *b, const char *text, Long_t delayms) override;  Create a tool tip and return its pointer. ;  ; void DeleteExec (const char *name) override;  Remove TExec name from the list of Execs. ;  ; void DeleteToolTip (TObject *tip) override;  Delete tool tip object. ;  ; void Divide (Int_t nx=1, Int_t ny=1, Float_t xmargin=0.01, Float_t ymargin=0.01, Int_t color=0) override;  Automatic pad generation by division. ;  ; virtual void DivideSquare (Int_t n, Float_t xmargin=0.01, Float_t ymargin=0.01, Int_t color=0);  ""n"" is the total number of sub-pads. ;  ; void Draw (Option_t *option="""") override;  Draw Pad in Current pad (re-parent pad if necessary). ;  ; void DrawClassObject (const TObject *obj, Option_t *option="""") override;  Draw class inheritance tree of the class to which obj belongs. ;  ; void DrawCollideGrid ();  This method draws the collide grid on top of the canvas. ;  ; virtual void DrawCrosshair ();  Function called to draw a crosshair in the canvas. ;  ; TH1F * DrawFrame (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char *title="""") override;  Draw an empty pad frame with X and Y axis. ;  ; virtual void EventPave ();  ; void ExecuteEventAxis (Int_t event, Int_t px, Int_t py, TAxis *axis) override;  Execute action corresponding to one event for a TAxis object (called by TAxis::ExecuteEvent.) This member function is called when an axis is clicked with the locator. ;  ; TObject * FindObject (const char *name) const override;  Search if object named name is inside this pad or in pads inside this pad. ;  ; TObject * FindObject (const TObject *obj) const override;  Search if obj is in pad or in pads inside this pad. ;  ; Double_t GetAbsHNDC () const override;  ; Double_t Ge",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:31496,Modifiability,inherit,inherited,31496,"  Convert Y NDC to pixel. ;  ; TObject * WaitPrimitive (const char *pname="""", const char *emode="""") override;  Loop and sleep until a primitive with name=pname is found in the pad. ;  ; Int_t XtoAbsPixel (Double_t x) const override;  Convert X coordinate to absolute pixel. ;  ; Double_t XtoPad (Double_t x) const override;  Convert x from X to pad. ;  ; Int_t XtoPixel (Double_t x) const override;  Convert X coordinate to pixel. ;  ; virtual void XYtoAbsPixel (Double_t x, Double_t y, Int_t &xpixel, Int_t &ypixel) const;  Convert X/Y into absolute pixel coordinates. ;  ; virtual void XYtoPixel (Double_t x, Double_t y, Int_t &xpixel, Int_t &ypixel) const;  Convert X/Y into pixel coordinates. ;  ; Int_t YtoAbsPixel (Double_t y) const override;  Convert Y coordinate to absolute pixel. ;  ; Double_t YtoPad (Double_t y) const override;  Convert y from Y to pad. ;  ; Int_t YtoPixel (Double_t y) const override;  Convert Y coordinate to pixel. ;  ;  Public Member Functions inherited from TVirtualPad;  TVirtualPad ();  VirtualPad default constructor. ;  ;  TVirtualPad (const char *name, const char *title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color=19, Short_t bordersize=4, Short_t bordermode=1);  VirtualPad constructor. ;  ; virtual ~TVirtualPad ();  VirtualPad destructor. ;  ; TClass * IsA () const override;  ; Bool_t IsBeingResized () const;  ; virtual Bool_t PadInHighlightMode () const;  Should always return false, unless you can highlight selected object in pad. ;  ; virtual Bool_t PadInSelectionMode () const;  Should always return false unless you have non-standard picking. ;  ; virtual void PopTopLevelSelectable ();  Does nothing, unless you implement your own picking. ;  ; virtual void PushSelectableObject (TObject *obj);  Does nothing, unless you implement your own picking. ;  ; virtual void PushTopLevelSelectable (TObject *top);  Does nothing, unless you implement your own picking. ;  ; virtual void RangeAxisChanged ();  ; void Streamer (TB",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:32702,Modifiability,inherit,inherited,32702," xup, Double_t yup, Color_t color=19, Short_t bordersize=4, Short_t bordermode=1);  VirtualPad constructor. ;  ; virtual ~TVirtualPad ();  VirtualPad destructor. ;  ; TClass * IsA () const override;  ; Bool_t IsBeingResized () const;  ; virtual Bool_t PadInHighlightMode () const;  Should always return false, unless you can highlight selected object in pad. ;  ; virtual Bool_t PadInSelectionMode () const;  Should always return false unless you have non-standard picking. ;  ; virtual void PopTopLevelSelectable ();  Does nothing, unless you implement your own picking. ;  ; virtual void PushSelectableObject (TObject *obj);  Does nothing, unless you implement your own picking. ;  ; virtual void PushTopLevelSelectable (TObject *top);  Does nothing, unless you implement your own picking. ;  ; virtual void RangeAxisChanged ();  ; void Streamer (TBuffer &) override;  Stream an object of class TVirtualPad. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnZoomed ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void DrawClass ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:33691,Modifiability,inherit,inheritance,33691,"ctions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOptio",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:35218,Modifiability,inherit,inherits,35218,"ject with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notificat",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:35335,Modifiability,inherit,inherits,35335,"const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *re",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:37957,Modifiability,inherit,inherited,37957,"Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:39462,Modifiability,inherit,inherited,39462,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:40642,Modifiability,inherit,inherited,40642,"al ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttPad;  TAttPad ();  Constructor. ;  ; virtual ~TAttPad ();  Destructor. ;  ; virtual void Copy (TAttPad &attpad) const;  copy function ;  ; Float_t GetAfile () const;  ; Float_t GetAstat () const;  ; Float_t GetBottomMargin () const;  ; Int_t GetFrameBorderMode () const;  ; Width_t GetFrameBorderSize () const;  ; Color_t GetFrameFillColor () const;  ; Style_t GetFrameFillStyle () const;  ; Color_t GetFrameLineColor () const;  ; Style_t GetFrameLineStyle () const;  ; Width_t GetFrameLineWidth () const;  ; Float_t GetLeftMargin () const;  ; Float_t GetRightMargin () const;  ; Float_t GetTopMargin () const;  ; Float_t GetXfile () const;  ; Float_t GetXstat () const;  ; Float_t GetYfile () const;  ; Float_t GetYstat () const;  ; virtual void ResetAttPad (Option_t *option="""");  Reset pad attributes. ;  ; virtual void SetAfile (Float_t afile);  ; virtual void SetAstat (Float_t astat);  ; virtual void SetBottomMargin (Float_t bottommargin);  Set Pad bo",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:42658,Modifiability,inherit,inherited,42658,"irtual void SetBottomMargin (Float_t bottommargin);  Set Pad bottom margin in fraction of the pad height. ;  ; void SetFrameBorderMode (Int_t mode=1);  ; void SetFrameBorderSize (Width_t size=1);  ; void SetFrameFillColor (Color_t color=1);  ; void SetFrameFillStyle (Style_t styl=0);  ; void SetFrameLineColor (Color_t color=1);  ; void SetFrameLineStyle (Style_t styl=0);  ; void SetFrameLineWidth (Width_t width=1);  ; virtual void SetLeftMargin (Float_t leftmargin);  Set Pad left margin in fraction of the pad width. ;  ; virtual void SetMargin (Float_t left, Float_t right, Float_t bottom, Float_t top);  Set all margins. ;  ; virtual void SetRightMargin (Float_t rightmargin);  Set Pad right margin in fraction of the pad width. ;  ; virtual void SetTopMargin (Float_t topmargin);  Set Pad top margin in fraction of the pad height. ;  ; virtual void SetXfile (Float_t xfile);  ; virtual void SetXstat (Float_t xstat);  ; virtual void SetYfile (Float_t yfile);  ; virtual void SetYstat (Float_t ystat);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without a",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:44626,Modifiability,inherit,inherited,44626,"mplate<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attr",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:44770,Modifiability,inherit,inherited,44770,"mplate<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attr",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:46848,Modifiability,inherit,inherited,46848,"f=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCanvas; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TCanvas * MakeDefCanvas ();  Static function to build a default canvas. ;  ; static Bool_t SaveAll (const std::vector< TPad * > &={}, const char *filename="""", Option_t *option="""");  Save provided pads/canvases into the image file(s) Filename can include printf argument for image number - like ""image%03d.png"". ;  ; static void SetFolder (Bool_t isfolder=kTRUE);  If isfolder=kTRUE, the canvas can be browsed like a folder by default a canvas is not browsable. ;  ; static Bool_t SupportAlpha ();  Static function returning ""true"" if transparency is supported. ;  ;  Static Public Member Functions inherited from TPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:47632,Modifiability,inherit,inherited,47632,"xpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCanvas; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TCanvas * MakeDefCanvas ();  Static function to build a default canvas. ;  ; static Bool_t SaveAll (const std::vector< TPad * > &={}, const char *filename="""", Option_t *option="""");  Save provided pads/canvases into the image file(s) Filename can include printf argument for image number - like ""image%03d.png"". ;  ; static void SetFolder (Bool_t isfolder=kTRUE);  If isfolder=kTRUE, the canvas can be browsed like a folder by default a canvas is not browsable. ;  ; static Bool_t SupportAlpha ();  Static function returning ""true"" if transparency is supported. ;  ;  Static Public Member Functions inherited from TPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static con",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:48294,Modifiability,inherit,inherited,48294,"lder=kTRUE, the canvas can be browsed like a folder by default a canvas is not browsable. ;  ; static Bool_t SupportAlpha ();  Static function returning ""true"" if transparency is supported. ;  ;  Static Public Member Functions inherited from TPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Nam",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:48592,Modifiability,inherit,inherited,48592,t char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * D,MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:49110,Modifiability,inherit,inherited,49110,"FileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection betw",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:49322,Modifiability,inherit,inherited,49322,"FileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection betw",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:49534,Modifiability,inherit,inherited,49534,"FileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection betw",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:49745,Modifiability,inherit,inherited,49745,"FileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection betw",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:50920,Modifiability,inherit,inherited,50920," Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TObject * fRefObject {nullptr};  Pointer to object to set attributes. ;  ; TPad * fRefPad {nullptr};  Pad containing object. ;  ;  Protected Attributes inherited from TCanvas; Bool_t fBatch;  ! True when in batchmode ;  ; Int_t fCanvasID;  ! Canvas identifier ;  ; TCanvasImp * fCanvasImp;  ! Window system specific canvas implementation ;  ; TAttCanvas fCatt;  Canvas attributes. ;  ; UInt_t fCh;  Height of the canvas along Y (pixels) ;  ; TObject * fClickSelected;  ! Currently click-selected object ;  ; TPad * fClickSelectedPad;  ! Pad containing currently click-selected object ;  ; TContextMenu * fContextMenu;  ! Context menu pointer ;  ; UInt_t fCw;  Width of the canvas along X (pixels) ;  ; TString fDISPLAY;  Name of destination screen. ;  ; Int_t fD",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:51134,Modifiability,inherit,inherited,51134," Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TObject * fRefObject {nullptr};  Pointer to object to set attributes. ;  ; TPad * fRefPad {nullptr};  Pad containing object. ;  ;  Protected Attributes inherited from TCanvas; Bool_t fBatch;  ! True when in batchmode ;  ; Int_t fCanvasID;  ! Canvas identifier ;  ; TCanvasImp * fCanvasImp;  ! Window system specific canvas implementation ;  ; TAttCanvas fCatt;  Canvas attributes. ;  ; UInt_t fCh;  Height of the canvas along Y (pixels) ;  ; TObject * fClickSelected;  ! Currently click-selected object ;  ; TPad * fClickSelectedPad;  ! Pad containing currently click-selected object ;  ; TContextMenu * fContextMenu;  ! Context menu pointer ;  ; UInt_t fCw;  Width of the canvas along X (pixels) ;  ; TString fDISPLAY;  Name of destination screen. ;  ; Int_t fD",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:51488,Modifiability,inherit,inherited,51488,"har *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TObject * fRefObject {nullptr};  Pointer to object to set attributes. ;  ; TPad * fRefPad {nullptr};  Pad containing object. ;  ;  Protected Attributes inherited from TCanvas; Bool_t fBatch;  ! True when in batchmode ;  ; Int_t fCanvasID;  ! Canvas identifier ;  ; TCanvasImp * fCanvasImp;  ! Window system specific canvas implementation ;  ; TAttCanvas fCatt;  Canvas attributes. ;  ; UInt_t fCh;  Height of the canvas along Y (pixels) ;  ; TObject * fClickSelected;  ! Currently click-selected object ;  ; TPad * fClickSelectedPad;  ! Pad containing currently click-selected object ;  ; TContextMenu * fContextMenu;  ! Context menu pointer ;  ; UInt_t fCw;  Width of the canvas along X (pixels) ;  ; TString fDISPLAY;  Name of destination screen. ;  ; Int_t fDoubleBuffer;  Double buffer flag (0=off, 1=on) ;  ; Bool_t fDrawn;  ! Set to True when the Draw method is called ;  ; Int_t fEvent;  ! Type of current or last handled event ;  ; Int_t fEventX;  ! Last X mouse position in canvas ;  ; Int_t fEventY;  ! Last Y mouse position in canvas ;  ; Color_t fHighLightColor;  Highlight color of active pad. ;  ; TPad * fPadSave;  ! Pointer to saved pad in HandleInput ;  ; TVirtualPadPainter * fPainter;  ! Canvas (pad) painter. ;  ; Bool_t fRetained; ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:53638,Modifiability,inherit,inherited,53638,"ted object ;  ; TString fSelectedOpt;  ! Drawing option of selected object ;  ; TPad * fSelectedPad;  ! Pad containing currently selected object ;  ; Int_t fSelectedX;  ! X of selected object ;  ; Int_t fSelectedY;  ! Y of selected object ;  ; Bool_t fUpdated;  ! Set to True when Update method was called ;  ; Bool_t fUpdating;  ! True when Updating the canvas ;  ; Bool_t fUseGL;  ! True when rendering is with GL ;  ; UInt_t fWindowHeight;  Height of window (including menubar, borders, etc.) ;  ; Int_t fWindowTopX;  Top X position of window (in pixels) ;  ; Int_t fWindowTopY;  Top Y position of window (in pixels) ;  ; UInt_t fWindowWidth;  Width of window (including borders, etc.) ;  ; Size_t fXsizeReal;  Current size of canvas along X in CM. ;  ; Size_t fXsizeUser;  User specified size of canvas along X in CM. ;  ; Size_t fYsizeReal;  Current size of canvas along Y in CM. ;  ; Size_t fYsizeUser;  User specified size of canvas along Y in CM. ;  ;  Protected Attributes inherited from TPad; Bool_t fAbsCoord;  Use absolute coordinates. ;  ; Double_t fAbsHNDC;  Absolute Height of pad along Y in NDC. ;  ; Double_t fAbsPixeltoXk;  Conversion coefficient for absolute pixel to X World. ;  ; Double_t fAbsPixeltoYk;  Conversion coefficient for absolute pixel to Y World. ;  ; Double_t fAbsWNDC;  Absolute Width of pad along X in NDC. ;  ; Double_t fAbsXlowNDC;  Absolute X top left corner of pad in NDC [0,1]. ;  ; Double_t fAbsYlowNDC;  Absolute Y top left corner of pad in NDC [0,1]. ;  ; Double_t fAspectRatio;  ratio of w/h in case of fixed ratio ;  ; Short_t fBorderMode;  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize;  pad bordersize in pixels ;  ; TCanvas * fCanvas {nullptr};  ! Pointer to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:58294,Modifiability,inherit,inherited,58294,"le_t fVtoPixelk;  Conversion coefficient for V NDC to pixel. ;  ; Double_t fWNDC;  Width of pad along X in Normalized Coordinates (NDC) ;  ; Double_t fX1;  X of lower X coordinate. ;  ; Double_t fX2;  X of upper X coordinate. ;  ; Double_t fXlowNDC;  X bottom left corner of pad in NDC [0,1]. ;  ; Double_t fXtoAbsPixelk;  Conversion coefficient for X World to absolute pixel. ;  ; Double_t fXtoPixel;  xpixel = fXtoPixelk + fXtoPixel*xworld ;  ; Double_t fXtoPixelk;  Conversion coefficient for X World to pixel. ;  ; Double_t fXUpNDC;  ; Double_t fY1;  Y of lower Y coordinate. ;  ; Double_t fY2;  Y of upper Y coordinate. ;  ; Double_t fYlowNDC;  Y bottom left corner of pad in NDC [0,1]. ;  ; Double_t fYtoAbsPixelk;  Conversion coefficient for Y World to absolute pixel. ;  ; Double_t fYtoPixel;  ypixel = fYtoPixelk + fYtoPixel*yworld ;  ; Double_t fYtoPixelk;  Conversion coefficient for Y World to pixel. ;  ; Double_t fYUpNDC;  ;  Protected Attributes inherited from TVirtualPad; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:58365,Modifiability,inherit,inherited,58365,"le_t fVtoPixelk;  Conversion coefficient for V NDC to pixel. ;  ; Double_t fWNDC;  Width of pad along X in Normalized Coordinates (NDC) ;  ; Double_t fX1;  X of lower X coordinate. ;  ; Double_t fX2;  X of upper X coordinate. ;  ; Double_t fXlowNDC;  X bottom left corner of pad in NDC [0,1]. ;  ; Double_t fXtoAbsPixelk;  Conversion coefficient for X World to absolute pixel. ;  ; Double_t fXtoPixel;  xpixel = fXtoPixelk + fXtoPixel*xworld ;  ; Double_t fXtoPixelk;  Conversion coefficient for X World to pixel. ;  ; Double_t fXUpNDC;  ; Double_t fY1;  Y of lower Y coordinate. ;  ; Double_t fY2;  Y of upper Y coordinate. ;  ; Double_t fYlowNDC;  Y bottom left corner of pad in NDC [0,1]. ;  ; Double_t fYtoAbsPixelk;  Conversion coefficient for Y World to absolute pixel. ;  ; Double_t fYtoPixel;  ypixel = fYtoPixelk + fYtoPixel*yworld ;  ; Double_t fYtoPixelk;  Conversion coefficient for Y World to pixel. ;  ; Double_t fYUpNDC;  ;  Protected Attributes inherited from TVirtualPad; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:58526,Modifiability,inherit,inherited,58526,"r X coordinate. ;  ; Double_t fXlowNDC;  X bottom left corner of pad in NDC [0,1]. ;  ; Double_t fXtoAbsPixelk;  Conversion coefficient for X World to absolute pixel. ;  ; Double_t fXtoPixel;  xpixel = fXtoPixelk + fXtoPixel*xworld ;  ; Double_t fXtoPixelk;  Conversion coefficient for X World to pixel. ;  ; Double_t fXUpNDC;  ; Double_t fY1;  Y of lower Y coordinate. ;  ; Double_t fY2;  Y of upper Y coordinate. ;  ; Double_t fYlowNDC;  Y bottom left corner of pad in NDC [0,1]. ;  ; Double_t fYtoAbsPixelk;  Conversion coefficient for Y World to absolute pixel. ;  ; Double_t fYtoPixel;  ypixel = fYtoPixelk + fYtoPixel*yworld ;  ; Double_t fYtoPixelk;  Conversion coefficient for Y World to pixel. ;  ; Double_t fYUpNDC;  ;  Protected Attributes inherited from TVirtualPad; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:58659,Modifiability,inherit,inherited,58659,"for X World to absolute pixel. ;  ; Double_t fXtoPixel;  xpixel = fXtoPixelk + fXtoPixel*xworld ;  ; Double_t fXtoPixelk;  Conversion coefficient for X World to pixel. ;  ; Double_t fXUpNDC;  ; Double_t fY1;  Y of lower Y coordinate. ;  ; Double_t fY2;  Y of upper Y coordinate. ;  ; Double_t fYlowNDC;  Y bottom left corner of pad in NDC [0,1]. ;  ; Double_t fYtoAbsPixelk;  Conversion coefficient for Y World to absolute pixel. ;  ; Double_t fYtoPixel;  ypixel = fYtoPixelk + fYtoPixel*yworld ;  ; Double_t fYtoPixelk;  Conversion coefficient for Y World to pixel. ;  ; Double_t fYUpNDC;  ;  Protected Attributes inherited from TVirtualPad; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ; ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:59591,Modifiability,inherit,inherited,59591,"for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Private Member Functions;  TDialogCanvas (const TDialogCanvas &)=delete;  ; TDialogCanvas & operator= (const TDialogCanvas &)=delete;  . Additional Inherited Members;  Public Types inherited from TCanvas; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL <<",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:59797,Modifiability,inherit,inherited,59797,"for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Private Member Functions;  TDialogCanvas (const TDialogCanvas &)=delete;  ; TDialogCanvas & operator= (const TDialogCanvas &)=delete;  . Additional Inherited Members;  Public Types inherited from TCanvas; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL <<",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:60192,Modifiability,inherit,inherited,60192," where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Private Member Functions;  TDialogCanvas (const TDialogCanvas &)=delete;  ; TDialogCanvas & operator= (const TDialogCanvas &)=delete;  . Additional Inherited Members;  Public Types inherited from TCanvas; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1U",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:60566,Modifiability,inherit,inherited,60566,"s object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Private Member Functions;  TDialogCanvas (const TDialogCanvas &)=delete;  ; TDialogCanvas & operator= (const TDialogCanvas &)=delete;  . Additional Inherited Members;  Public Types inherited from TCanvas; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCanvas; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:60815,Modifiability,inherit,inherited,60815," angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Private Member Functions;  TDialogCanvas (const TDialogCanvas &)=delete;  ; TDialogCanvas & operator= (const TDialogCanvas &)=delete;  . Additional Inherited Members;  Public Types inherited from TCanvas; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCanvas; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; void Init ();  Initialize the TCanvas members. Called by all constructors. ;  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:61456,Modifiability,inherit,inherited,61456,"c Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCanvas; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; void Init ();  Initialize the TCanvas members. Called by all constructors. ;  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the opt",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:61555,Modifiability,inherit,inherited,61555,"c Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCanvas; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; void Init ();  Initialize the TCanvas members. Called by all constructors. ;  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the opt",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:61798,Modifiability,inherit,inherited,61798," = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCanvas; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; void Init ();  Initialize the TCanvas members. Called by all constructors. ;  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVir",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:62841,Modifiability,inherit,inherited,62841,"; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:62960,Modifiability,inherit,inherited,62960,"; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:63171,Modifiability,inherit,inherited,63171,"Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TCanvas; static Bool_t fgIsFolder = kFALSE;  Indicates if canvas can be browsed as a folder. ;  ;  Static Protected Attributes inherited from TPad; static ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:63284,Modifiability,inherit,inherited,63284,"Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TCanvas; static Bool_t fgIsFolder = kFALSE;  Indicates if canvas can be browsed as a folder. ;  ;  Static Protected Attributes inherited from TPad; static ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:64140,Modifiability,inherit,inherited,64140,"ited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TCanvas; static Bool_t fgIsFolder = kFALSE;  Indicates if canvas can be browsed as a folder. ;  ;  Static Protected Attributes inherited from TPad; static Int_t fgMaxPickDistance = 5;  Maximum Pick Distance. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TDialogCanvas.h>. Inheritance diagram for TDialogCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDialogCanvas() [1/4]. TDialogCanvas::TDialogCanvas ; (; const TDialogCanvas & ; ). privatedelete . ◆ TDialogCanvas() [2/4]. TDialogCanvas::TDialogCanvas ; (; ). DialogCanvas default constructor. ; Definition at line 34 of file TDialogCanvas.cxx. ◆ TDialogCanvas() [3/4]. TDialogCanvas::TDialogCanvas ; (; const char * ; name, . const char * ; title, . Int_t ; ww, . Int_t ; wh . ). DialogCanvas constructor. ; Definition at line 41 of file TDialogCanvas.cxx. ◆",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:64282,Modifiability,inherit,inherited,64282,"ect; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TCanvas; static Bool_t fgIsFolder = kFALSE;  Indicates if canvas can be browsed as a folder. ;  ;  Static Protected Attributes inherited from TPad; static Int_t fgMaxPickDistance = 5;  Maximum Pick Distance. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TDialogCanvas.h>. Inheritance diagram for TDialogCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDialogCanvas() [1/4]. TDialogCanvas::TDialogCanvas ; (; const TDialogCanvas & ; ). privatedelete . ◆ TDialogCanvas() [2/4]. TDialogCanvas::TDialogCanvas ; (; ). DialogCanvas default constructor. ; Definition at line 34 of file TDialogCanvas.cxx. ◆ TDialogCanvas() [3/4]. TDialogCanvas::TDialogCanvas ; (; const char * ; name, . const char * ; title, . Int_t ; ww, . Int_t ; wh . ). DialogCanvas constructor. ; Definition at line 41 of file TDialogCanvas.cxx. ◆ TDialogCanvas() [4/4]. TDialogCanvas::TDialogCanvas ; (; const char * ; name, . const char * ; title, . Int_t ; wtopx, . Int_t ;",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:64397,Modifiability,inherit,inherited,64397,"*slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TCanvas; static Bool_t fgIsFolder = kFALSE;  Indicates if canvas can be browsed as a folder. ;  ;  Static Protected Attributes inherited from TPad; static Int_t fgMaxPickDistance = 5;  Maximum Pick Distance. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TDialogCanvas.h>. Inheritance diagram for TDialogCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDialogCanvas() [1/4]. TDialogCanvas::TDialogCanvas ; (; const TDialogCanvas & ; ). privatedelete . ◆ TDialogCanvas() [2/4]. TDialogCanvas::TDialogCanvas ; (; ). DialogCanvas default constructor. ; Definition at line 34 of file TDialogCanvas.cxx. ◆ TDialogCanvas() [3/4]. TDialogCanvas::TDialogCanvas ; (; const char * ; name, . const char * ; title, . Int_t ; ww, . Int_t ; wh . ). DialogCanvas constructor. ; Definition at line 41 of file TDialogCanvas.cxx. ◆ TDialogCanvas() [4/4]. TDialogCanvas::TDialogCanvas ; (; const char * ; name, . const char * ; title, . Int_t ; wtopx, . Int_t ; wtopy, . UInt_t ; ww, . UInt_t ; wh . ). DialogCanvas constructor. ; Definition at line 50 of file TDialogCanvas.cxx. ◆ ~TDialogC",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:19341,Security,hash,hash,19341,";  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_t GetXlowNDC () const override;  ; Double_t GetY1 () const override;  ; Double_t GetY2 () const override;  ; Double_t GetYlowNDC () const override;  ; Bool_t HasCrosshair () const override;  Return kTRUE if the crosshair has been activated (via SetCrosshair). ;  ; Bool_t HasFixedAspectRatio () const override;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t HasViewer3D () const override;  ; void HighLight (Color_t col=kRed, Bool_t set=kTRUE) override;  Highlight pad. ;  ; Int_t IncrementPaletteColor (Int_t i, TString opt) override;  Increment (i==1) or set (i>1) the number of autocolor in the pad. ;  ; TClass * IsA () const override;  ; Bool_t IsBatch () const override;  Is pad in batch mode ? ;  ; Bool_t IsEditable () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsModified () const override;  ; Bool_t IsRetained () const override;  Is pad retained ? ;  ; Bool_t IsVertical () const override;  ; Bool_t IsWeb () const override;  Is web ? ;  ; void ls (Option_t *option="""") const override;  List all primitives in pad. ;  ; void Modified (Bool_t flag=true) override;  Mark pad modified Will be repainted when TCanvas::Update() will be called next time.",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:3833,Testability,assert,assert,3833,"nvas destructor. ;  ; void Browse (TBrowser *b) override;  Browse. ;  ; TVirtualPad * cd (Int_t subpadnumber=0) override;  Set current canvas & pad. ;  ; void Clear (Option_t *option="""") override;  Remove all primitives from the canvas. ;  ; virtual void Cleared (TVirtualPad *pad);  Emit pad Cleared signal. ;  ; void ClearPadSave ();  ; void Close (Option_t *option="""") override;  Close canvas. ;  ; void Closed () override;  Emit Closed signal. ;  ; void Constructor ();  Canvas default constructor. ;  ; void Constructor (const char *name, const char *title, Int_t form);  Create a new canvas with a predefined size form. ;  ; void Constructor (const char *name, const char *title, Int_t wtopx, Int_t wtopy, Int_t ww, Int_t wh);  Create a new canvas. ;  ; void Constructor (const char *name, const char *title, Int_t ww, Int_t wh);  Create a new canvas at a random position. ;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; void DeleteCanvasPainter ();  assert on IsBatch() == false? ;  ; void Destructor ();  Actual canvas destructor. ;  ; void DisconnectWidget ();  Used by friend class TCanvasImp. ;  ; void Draw (Option_t *option="""") override;  Draw a canvas. ;  ; TObject * DrawClone (Option_t *option="""") const override;  Draw a clone of this canvas A new canvas is created that is a clone of this canvas. ;  ; virtual TObject * DrawClonePad ();  Draw a clone of this canvas into the current pad In an interactive session, select the destination/current pad with the middle mouse button, then point to the canvas area to select the canvas context menu item DrawClonePad. ;  ; virtual void EditorBar ();  Get editor bar. ;  ; void EmbedInto (Int_t winid, Int_t ww, Int_t wh);  Embedded a canvas into a TRootEmbeddedCanvas. ;  ; void EnterLeave (TPad *prevSelPad, TObject *prevSelObj);  Generate kMouseEnter and kMouseLeave events depending on the previously selected object and the currently selected object. ;  ; void FeedbackMode (Bool_t set);  Turn rubberband feedback ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:17968,Testability,log,log,17968," ; TVirtualPad * GetPadSave () const override;  Get save pad. ;  ; TVirtualPadPainter * GetPainter () override;  Get pad painter from TCanvas. ;  ; Double_t GetPhi () const override;  ; Int_t GetPixmapID () const override;  ; TObject * GetPrimitive (const char *name) const override;  Get primitive. ;  ; void GetRange (Double_t &x1, Double_t &y1, Double_t &x2, Double_t &y2) override;  Return pad world coordinates range. ;  ; void GetRangeAxis (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) override;  Return pad axis coordinates range. ;  ; TObject * GetSelected () const override;  Get selected. ;  ; TVirtualPad * GetSelectedPad () const override;  Get selected pad. ;  ; Double_t GetTheta () const override;  ; Int_t GetTickx () const override;  ; Int_t GetTicky () const override;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Double_t GetUxmax () const override;  Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUxmin () const override;  Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymax () const override;  Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:18116,Testability,log,log,18116,"Double_t GetPhi () const override;  ; Int_t GetPixmapID () const override;  ; TObject * GetPrimitive (const char *name) const override;  Get primitive. ;  ; void GetRange (Double_t &x1, Double_t &y1, Double_t &x2, Double_t &y2) override;  Return pad world coordinates range. ;  ; void GetRangeAxis (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) override;  Return pad axis coordinates range. ;  ; TObject * GetSelected () const override;  Get selected. ;  ; TVirtualPad * GetSelectedPad () const override;  Get selected pad. ;  ; Double_t GetTheta () const override;  ; Int_t GetTickx () const override;  ; Int_t GetTicky () const override;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Double_t GetUxmax () const override;  Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUxmin () const override;  Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymax () const override;  Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_t GetXlowNDC () const override;  ; Double_t GetY1 () const override;  ; Double_t GetY2 () const override;  ; Double_t GetYlowNDC () const override; ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:18264,Testability,log,log,18264,"ve. ;  ; void GetRange (Double_t &x1, Double_t &y1, Double_t &x2, Double_t &y2) override;  Return pad world coordinates range. ;  ; void GetRangeAxis (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) override;  Return pad axis coordinates range. ;  ; TObject * GetSelected () const override;  Get selected. ;  ; TVirtualPad * GetSelectedPad () const override;  Get selected pad. ;  ; Double_t GetTheta () const override;  ; Int_t GetTickx () const override;  ; Int_t GetTicky () const override;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Double_t GetUxmax () const override;  Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUxmin () const override;  Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymax () const override;  Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_t GetXlowNDC () const override;  ; Double_t GetY1 () const override;  ; Double_t GetY2 () const override;  ; Double_t GetYlowNDC () const override;  ; Bool_t HasCrosshair () const override;  Return kTRUE if the crosshair has been activated (via SetCrosshair). ;  ; Bool_t HasFixedAspectRatio () c",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:18412,Testability,log,log,18412,"s (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) override;  Return pad axis coordinates range. ;  ; TObject * GetSelected () const override;  Get selected. ;  ; TVirtualPad * GetSelectedPad () const override;  Get selected pad. ;  ; Double_t GetTheta () const override;  ; Int_t GetTickx () const override;  ; Int_t GetTicky () const override;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Double_t GetUxmax () const override;  Returns the maximum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUxmin () const override;  Returns the minimum x-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymax () const override;  Returns the maximum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; Double_t GetUymin () const override;  Returns the minimum y-coordinate value visible on the pad. If log axis the returned value is in decades. ;  ; TView * GetView () const override;  ; TObject * GetView3D () const override;  ; TVirtualViewer3D * GetViewer3D (Option_t *type="""") override;  Create/obtain handle to 3D viewer. ;  ; TVirtualPad * GetVirtCanvas () const override;  Get virtual canvas. ;  ; UInt_t GetWh () const override;  Get Wh. ;  ; Double_t GetWNDC () const override;  Get width of pad along X in Normalized Coordinates (NDC) ;  ; UInt_t GetWw () const override;  Get Ww. ;  ; Double_t GetX1 () const override;  ; Double_t GetX2 () const override;  ; Double_t GetXlowNDC () const override;  ; Double_t GetY1 () const override;  ; Double_t GetY2 () const override;  ; Double_t GetYlowNDC () const override;  ; Bool_t HasCrosshair () const override;  Return kTRUE if the crosshair has been activated (via SetCrosshair). ;  ; Bool_t HasFixedAspectRatio () const override;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t HasViewer3D () const override;  ; void HighLight (",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:55352,Testability,log,log,55352,"to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t fCrosshair;  Crosshair type (0 if no crosshair requested) ;  ; Int_t fCrosshairPos;  Position of crosshair. ;  ; Bool_t fEditable;  True if canvas is editable. ;  ; Bool_t fEmbeddedGL;  ! ;  ; TList * fExecs {nullptr};  List of commands to be executed when a pad event occurs. ;  ; Bool_t fFixedAspectRatio;  True if fixed aspect ratio. ;  ; TFrame * fFrame {nullptr};  ! Pointer to 2-D frame (if one exists) ;  ; Int_t fGLDevice;  ! OpenGL off-screen pixmap identifier ;  ; Bool_t fGridx;  Set to true if grid along X. ;  ; Bool_t fGridy;  Set to true if grid along Y. ;  ; Double_t fHNDC;  Height of pad along Y in Normalized Coordinates (NDC) ;  ; Int_t fLogx;  (=0 if X linear scale, =1 if log scale) ;  ; Int_t fLogy;  (=0 if Y linear scale, =1 if log scale) ;  ; Int_t fLogz;  (=0 if Z linear scale, =1 if log scale) ;  ; Bool_t fModified;  Set to true when pad is modified. ;  ; TPad * fMother {nullptr};  ! pointer to mother of the list ;  ; TString fName;  Pad name. ;  ; Int_t fNextPaletteColor;  Next automatic color. ;  ; Int_t fNumber;  pad number identifier ;  ; Int_t fNumPaletteColor;  Number of objects with an automatic color. ;  ; Int_t fPadPaint;  Set to 1 while painting the pad. ;  ; TObject * fPadPointer {nullptr};  ! free pointer ;  ; TObject * fPadView3D {nullptr};  ! 3D View of this TPad ;  ; Double_t fPhi;  phi angle to view as lego/surface ;  ; Double_t fPixeltoX;  xworld = fPixeltoXk + fPixeltoX*xpixel ;  ; Double_t fPixeltoXk;  Conversion coefficient for pixel to X World. ;  ; Double_t fPixeltoY;  yworld = fPixeltoYk + fPixeltoY*ypixel ;  ; Double_t fPixeltoYk;  Conversion coefficient for pixel to Y World. ;  ; Int_t fPixmapID;  ! Off-screen pixmap identifier ;  ; TList * fPrimitives {",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:55411,Testability,log,log,55411,"to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t fCrosshair;  Crosshair type (0 if no crosshair requested) ;  ; Int_t fCrosshairPos;  Position of crosshair. ;  ; Bool_t fEditable;  True if canvas is editable. ;  ; Bool_t fEmbeddedGL;  ! ;  ; TList * fExecs {nullptr};  List of commands to be executed when a pad event occurs. ;  ; Bool_t fFixedAspectRatio;  True if fixed aspect ratio. ;  ; TFrame * fFrame {nullptr};  ! Pointer to 2-D frame (if one exists) ;  ; Int_t fGLDevice;  ! OpenGL off-screen pixmap identifier ;  ; Bool_t fGridx;  Set to true if grid along X. ;  ; Bool_t fGridy;  Set to true if grid along Y. ;  ; Double_t fHNDC;  Height of pad along Y in Normalized Coordinates (NDC) ;  ; Int_t fLogx;  (=0 if X linear scale, =1 if log scale) ;  ; Int_t fLogy;  (=0 if Y linear scale, =1 if log scale) ;  ; Int_t fLogz;  (=0 if Z linear scale, =1 if log scale) ;  ; Bool_t fModified;  Set to true when pad is modified. ;  ; TPad * fMother {nullptr};  ! pointer to mother of the list ;  ; TString fName;  Pad name. ;  ; Int_t fNextPaletteColor;  Next automatic color. ;  ; Int_t fNumber;  pad number identifier ;  ; Int_t fNumPaletteColor;  Number of objects with an automatic color. ;  ; Int_t fPadPaint;  Set to 1 while painting the pad. ;  ; TObject * fPadPointer {nullptr};  ! free pointer ;  ; TObject * fPadView3D {nullptr};  ! 3D View of this TPad ;  ; Double_t fPhi;  phi angle to view as lego/surface ;  ; Double_t fPixeltoX;  xworld = fPixeltoXk + fPixeltoX*xpixel ;  ; Double_t fPixeltoXk;  Conversion coefficient for pixel to X World. ;  ; Double_t fPixeltoY;  yworld = fPixeltoYk + fPixeltoY*ypixel ;  ; Double_t fPixeltoYk;  Conversion coefficient for pixel to Y World. ;  ; Int_t fPixmapID;  ! Off-screen pixmap identifier ;  ; TList * fPrimitives {",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:55470,Testability,log,log,55470,"to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t fCrosshair;  Crosshair type (0 if no crosshair requested) ;  ; Int_t fCrosshairPos;  Position of crosshair. ;  ; Bool_t fEditable;  True if canvas is editable. ;  ; Bool_t fEmbeddedGL;  ! ;  ; TList * fExecs {nullptr};  List of commands to be executed when a pad event occurs. ;  ; Bool_t fFixedAspectRatio;  True if fixed aspect ratio. ;  ; TFrame * fFrame {nullptr};  ! Pointer to 2-D frame (if one exists) ;  ; Int_t fGLDevice;  ! OpenGL off-screen pixmap identifier ;  ; Bool_t fGridx;  Set to true if grid along X. ;  ; Bool_t fGridy;  Set to true if grid along Y. ;  ; Double_t fHNDC;  Height of pad along Y in Normalized Coordinates (NDC) ;  ; Int_t fLogx;  (=0 if X linear scale, =1 if log scale) ;  ; Int_t fLogy;  (=0 if Y linear scale, =1 if log scale) ;  ; Int_t fLogz;  (=0 if Z linear scale, =1 if log scale) ;  ; Bool_t fModified;  Set to true when pad is modified. ;  ; TPad * fMother {nullptr};  ! pointer to mother of the list ;  ; TString fName;  Pad name. ;  ; Int_t fNextPaletteColor;  Next automatic color. ;  ; Int_t fNumber;  pad number identifier ;  ; Int_t fNumPaletteColor;  Number of objects with an automatic color. ;  ; Int_t fPadPaint;  Set to 1 while painting the pad. ;  ; TObject * fPadPointer {nullptr};  ! free pointer ;  ; TObject * fPadView3D {nullptr};  ! 3D View of this TPad ;  ; Double_t fPhi;  phi angle to view as lego/surface ;  ; Double_t fPixeltoX;  xworld = fPixeltoXk + fPixeltoX*xpixel ;  ; Double_t fPixeltoXk;  Conversion coefficient for pixel to X World. ;  ; Double_t fPixeltoY;  yworld = fPixeltoYk + fPixeltoY*ypixel ;  ; Double_t fPixeltoYk;  Conversion coefficient for pixel to Y World. ;  ; Int_t fPixmapID;  ! Off-screen pixmap identifier ;  ; TList * fPrimitives {",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:4847,Usability,feedback,feedback,4847,"  assert on IsBatch() == false? ;  ; void Destructor ();  Actual canvas destructor. ;  ; void DisconnectWidget ();  Used by friend class TCanvasImp. ;  ; void Draw (Option_t *option="""") override;  Draw a canvas. ;  ; TObject * DrawClone (Option_t *option="""") const override;  Draw a clone of this canvas A new canvas is created that is a clone of this canvas. ;  ; virtual TObject * DrawClonePad ();  Draw a clone of this canvas into the current pad In an interactive session, select the destination/current pad with the middle mouse button, then point to the canvas area to select the canvas context menu item DrawClonePad. ;  ; virtual void EditorBar ();  Get editor bar. ;  ; void EmbedInto (Int_t winid, Int_t ww, Int_t wh);  Embedded a canvas into a TRootEmbeddedCanvas. ;  ; void EnterLeave (TPad *prevSelPad, TObject *prevSelObj);  Generate kMouseEnter and kMouseLeave events depending on the previously selected object and the currently selected object. ;  ; void FeedbackMode (Bool_t set);  Turn rubberband feedback mode on or off. ;  ; void Flush ();  Flush canvas buffers. ;  ; void ForceUpdate ();  Force canvas update. ;  ; Bool_t GetAutoExec () const;  ; Int_t GetCanvasID () const override;  ; TCanvasImp * GetCanvasImp () const override;  ; TVirtualPadPainter * GetCanvasPainter ();  Access and (probably) creation of pad painter. ;  ; virtual void GetCanvasPar (Int_t &wtopx, Int_t &wtopy, UInt_t &ww, UInt_t &wh);  ; TObject * GetClickSelected () const;  ; TVirtualPad * GetClickSelectedPad () const;  ; TContextMenu * GetContextMenu () const;  ; const char * GetDISPLAY () const;  ; Int_t GetDoubleBuffer () const;  ; Int_t GetEvent () const override;  ; Int_t GetEventX () const override;  ; Int_t GetEventY () const override;  ; Color_t GetHighLightColor () const override;  ; TVirtualPad * GetPadSave () const override;  ; TObject * GetSelected () const override;  ; Option_t * GetSelectedOpt () const;  ; TVirtualPad * GetSelectedPad () const override;  ; Int_t GetSelectedX () ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDialogCanvas.html:6637,Usability,simpl,simplification,6637,"rtualPad * GetPadSave () const override;  ; TObject * GetSelected () const override;  ; Option_t * GetSelectedOpt () const;  ; TVirtualPad * GetSelectedPad () const override;  ; Int_t GetSelectedX () const;  ; Int_t GetSelectedY () const;  ; Bool_t GetShowEditor () const;  ; Bool_t GetShowEventStatus () const;  ; Bool_t GetShowToolBar () const;  ; Bool_t GetShowToolTips () const;  ; UInt_t GetWh () const override;  ; UInt_t GetWindowHeight () const;  ; Int_t GetWindowTopX ();  Returns current top x position of window on screen. ;  ; Int_t GetWindowTopY ();  Returns current top y position of window on screen. ;  ; UInt_t GetWindowWidth () const;  ; UInt_t GetWw () const override;  ; Size_t GetXsizeReal () const;  ; Size_t GetXsizeUser () const;  ; Size_t GetYsizeReal () const;  ; Size_t GetYsizeUser () const;  ; virtual void HandleInput (EEventType button, Int_t x, Int_t y);  Handle Input Events. ;  ; Bool_t HasMenuBar () const;  ; virtual void HighlightConnect (const char *slot);  This is ""simplification"" for function TCanvas::Connect with Highlighted signal for specific slot. ;  ; virtual void Highlighted (TVirtualPad *pad, TObject *obj, Int_t x, Int_t y);  Emit Highlighted() signal. ;  ; void Iconify ();  Iconify canvas. ;  ; Bool_t IsBatch () const override;  ; Bool_t IsDrawn () const;  ; Bool_t IsFolder () const override;  Is folder ? ;  ; Bool_t IsGrayscale ();  Check whether this canvas is to be drawn in grayscale mode. ;  ; Bool_t IsRetained () const override;  ; Bool_t IsUpdated () const;  ; Bool_t IsWeb () const override;  Is web canvas. ;  ; void ls (Option_t *option="""") const override;  List all pads. ;  ; void MoveOpaque (Int_t set=1);  Set option to move objects/pads in a canvas. ;  ; Bool_t OpaqueMoving () const override;  ; Bool_t OpaqueResizing () const override;  ; void Paint (Option_t *option="""") override;  Paint canvas. ;  ; virtual TPad * Pick (Int_t px, Int_t py, TObject *prevSelObj);  Prepare for pick, call TPad::Pick() and when selected object ",MatchSource.WIKI,doc/master/classTDialogCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html
https://root.cern/doc/master/classTDiamond.html:11279,Availability,error,error,11279,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () c",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:11368,Availability,error,error,11368,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique o",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:11523,Availability,error,error,11523,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:11700,Availability,error,error,11700,"Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *ms",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:15562,Availability,error,error,15562,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:8599,Integrability,depend,depending,8599,"le_t x2) override;  Set the X2 value. ;  ; virtual void SetX2NDC (Double_t x2);  ; void SetY1 (Double_t y1) override;  Set the Y1 value. ;  ; virtual void SetY1NDC (Double_t y1);  ; void SetY2 (Double_t y2) override;  Set the Y2 value. ;  ; virtual void SetY2NDC (Double_t y2);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBox;  TBox ();  Box default constructor. ;  ;  TBox (const TBox &box);  Box copy constructor. ;  ;  TBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Box standard constructor. ;  ;  ~TBox () override;  Box destructor. ;  ; virtual TBox * DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this box with new coordinates. ;  ; Rectangle_t GetBBox () override;  Return the ""bounding Box"" of the Box. ;  ; TPoint GetBBoxCenter () override;  Return the center of the Box as TPoint in pixels. ;  ; Double_t GetX1 () const;  ; Double_t GetX2 () const;  ; Double_t GetY1 () const;  ; Double_t GetY2 () const;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; Bool_t IsBeingResized () const;  ; TBox & operator= (const TBox &);  Assignment operator. ;  ; virtual void PaintBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t *option="""");  Draw this box with new coordinates. ;  ; void SetBBoxCenter (const TPoint &p) override;  Set center of the Box. ;  ; void SetBBoxCenterX (const Int_t x) override;  Set X coordinate of the center of the Box. ;  ; void SetBBoxCenterY (const Int_t y) override;  Set Y coordinate of the center of the Box. ;  ; void SetBBoxX1 (const Int_t x) override;  Set left hand side of BoundingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t x) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t y) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t y) o",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:11285,Integrability,message,message,11285,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () c",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:11706,Integrability,message,message,11706,"Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *ms",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:12725,Integrability,message,message,12725,"; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:15568,Integrability,message,message,15568,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:15759,Integrability,message,message,15759,";  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:2049,Modifiability,inherit,inherited,2049,"y1, Double_t x2, Double_t y2);  Diamond standard constructor. ;  ;  ~TDiamond () override;  Diamond destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a diamond. ;  ; void Draw (Option_t *option="""") override;  Draw this diamond with its current attributes. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; TClass * IsA () const override;  ; Int_t IsInside (Double_t x, Double_t y) const override;  Return 1 if the point (x,y) is inside the polygon defined by the diamond 0 otherwise. ;  ; void Paint (Option_t *option="""") override;  Paint this diamond with its current attributes. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TBox. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TPaveText;  TPaveText ();  pavetext default constructor. ;  ;  TPaveText (const TPaveText &pavetext);  pavetext copy constructor. ;  ;  TPaveText (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t *option=""br"");  PaveText normal constructor. ;  ;  ~TPaveText () override;  pavetext default destructor. ;  ; virtual TBox * AddBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Add a new graphics box to this pavetext. ;  ; virtual TLine * AddLine (Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0);  Add a new graphics line to this pavetext. ;  ; virtual TText * AddText (const char *label);  Add a new Text line to this pavetext. ;  ; virtual TText * AddText (Double_t x1, Double_t y1, const char *label);  Add a new Text line to this pavetext at given coordinates. ;  ; void Clear (Option_t *option="""") override;  Clear all lines in this pavetext. ;  ; virtual void DeleteText ();  Delete text at the mouse position. ;  ; void Draw (Option_t *",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:5315,Modifiability,inherit,inherited,5315,"nst override;  Dump this pavetext with its attributes. ;  ; virtual void ReadFile (const char *filename, Option_t *option="""", Int_t nlines=50, Int_t fromline=0);  Read lines of filename in this pavetext. ;  ; virtual void SaveLines (std::ostream &out, const char *name, Bool_t saved);  Save lines of this pavetext as C++ statements on output stream out. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetAllWith (const char *text, Option_t *option, Double_t value);  Set attribute option for all lines containing string text. ;  ; virtual void SetLabel (const char *label);  ; virtual void SetMargin (Float_t margin=0.05);  ; void Streamer (TBuffer &) override;  Stream an object of class TPaveText. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ;  Public Member Functions inherited from TPave;  TPave ();  Pave default constructor. ;  ;  TPave (const TPave &pave);  Pave copy constructor. ;  ;  TPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Pave normal constructor. ;  ;  ~TPave () override;  Pave default destructor. ;  ; virtual void ConvertNDCtoPad ();  Convert pave coordinates from NDC to Pad coordinates. ;  ; void Copy (TObject &pave) const override;  Copy this pave to pave. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a pave. ;  ; virtual TPave * DrawPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Int_t GetBorderSize () const;  ; Double_t GetCornerRadius () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Option_t * GetO",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:7897,Modifiability,inherit,inherited,7897,"Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; virtual void PaintPaveArc (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with rounded corners. ;  ; virtual void SetBorderSize (Int_t bordersize=4);  Sets the border size of the TPave box and shadow. ;  ; virtual void SetCornerRadius (Double_t rad=0.2);  ; virtual void SetName (const char *name="""");  ; virtual void SetOption (Option_t *option=""br"");  ; virtual void SetShadowColor (Int_t color);  ; void SetX1 (Double_t x1) override;  Set the X1 value. ;  ; virtual void SetX1NDC (Double_t x1);  ; void SetX2 (Double_t x2) override;  Set the X2 value. ;  ; virtual void SetX2NDC (Double_t x2);  ; void SetY1 (Double_t y1) override;  Set the Y1 value. ;  ; virtual void SetY1NDC (Double_t y1);  ; void SetY2 (Double_t y2) override;  Set the Y2 value. ;  ; virtual void SetY2NDC (Double_t y2);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBox;  TBox ();  Box default constructor. ;  ;  TBox (const TBox &box);  Box copy constructor. ;  ;  TBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Box standard constructor. ;  ;  ~TBox () override;  Box destructor. ;  ; virtual TBox * DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this box with new coordinates. ;  ; Rectangle_t GetBBox () override;  Return the ""bounding Box"" of the Box. ;  ; TPoint GetBBoxCenter () override;  Return the center of the Box as TPoint in pixels. ;  ; Double_t GetX1 () const;  ; Double_t GetX2 () const;  ; Double_t GetY1 () const;  ; Double_t GetY2 () const;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; Bool_t IsBeingResized () const;  ; TBox & operator= (const TBox &);  Assignment operator. ;  ; virtual void PaintBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t *option="""");  Draw this box with new coordina",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:9822,Modifiability,inherit,inherited,9822,"Option_t *option="""");  Draw this box with new coordinates. ;  ; void SetBBoxCenter (const TPoint &p) override;  Set center of the Box. ;  ; void SetBBoxCenterX (const Int_t x) override;  Set X coordinate of the center of the Box. ;  ; void SetBBoxCenterY (const Int_t y) override;  Set Y coordinate of the center of the Box. ;  ; void SetBBoxX1 (const Int_t x) override;  Set left hand side of BoundingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t x) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t y) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t y) override;  Set bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=1000);  Set tool tip text associated with this box. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; vi",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:10915,Modifiability,inherit,inheritance,10915,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:12823,Modifiability,inherit,inherits,12823,"in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:12940,Modifiability,inherit,inherits,12940,"sses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:16066,Modifiability,inherit,inherited,16066,"ject in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:17571,Modifiability,inherit,inherited,17571,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:18826,Modifiability,inherit,inherited,18826,"lor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attr",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:18970,Modifiability,inherit,inherited,18970,"lor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attr",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:21048,Modifiability,inherit,inherited,21048,"rtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPaveText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:21261,Modifiability,inherit,inherited,21261,"rtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPaveText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:21470,Modifiability,inherit,inherited,21470,"rtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPaveText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:21678,Modifiability,inherit,inherited,21678,"rtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPaveText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:22196,Modifiability,inherit,inherited,22196,"Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  ES",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:22408,Modifiability,inherit,inherited,22408,"Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  ES",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:22620,Modifiability,inherit,inherited,22620,"Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  ES",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:22834,Modifiability,inherit,inherited,22834,"Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  ES",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:23058,Modifiability,inherit,inherited,23058,"ed from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TPaveText; TString f",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:23142,Modifiability,inherit,inherited,23142,"ed from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TPaveText; TString f",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:23223,Modifiability,inherit,inherited,23223,"ed from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TPaveText; TString f",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:23864,Modifiability,inherit,inherited,23864,"ic const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TPaveText; TString fLabel;  Label written at the top of the pavetext. ;  ; TList * fLines {nullptr};  List of labels. ;  ; Int_t fLongest;  Length of the longest line. ;  ; Float_t fMargin;  Text margin. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:23963,Modifiability,inherit,inherited,23963,"ic const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TPaveText; TString fLabel;  Label written at the top of the pavetext. ;  ; TList * fLines {nullptr};  List of labels. ;  ; Int_t fLongest;  Length of the longest line. ;  ; Float_t fMargin;  Text margin. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:24168,Modifiability,inherit,inherited,24168," (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TPaveText; TString fLabel;  Label written at the top of the pavetext. ;  ; TList * fLines {nullptr};  List of labels. ;  ; Int_t fLongest;  Length of the longest line. ;  ; Float_t fMargin;  Text margin. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd poin",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:24414,Modifiability,inherit,inherited,24414,", kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TPaveText; TString fLabel;  Label written at the top of the pavetext. ;  ; TList * fLines {nullptr};  List of labels. ;  ; Int_t fLongest;  Length of the longest line. ;  ; Float_t fMargin;  Text margin. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill ",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:24973,Modifiability,inherit,inherited,24973," level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TPaveText; TString fLabel;  Label written at the top of the pavetext. ;  ; TList * fLines {nullptr};  List of labels. ;  ; Int_t fLongest;  Length of the longest line. ;  ; Float_t fMargin;  Text margin. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TDiamond.h>. Inheritance diagram for TDiamond:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDiamond() [1/3]. TDiamond::TDiamond ; (; ). Diamond default constructor. ; Definition at lin",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:25215,Modifiability,inherit,inherited,25215,"he top of the pavetext. ;  ; TList * fLines {nullptr};  List of labels. ;  ; Int_t fLongest;  Length of the longest line. ;  ; Float_t fMargin;  Text margin. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TDiamond.h>. Inheritance diagram for TDiamond:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDiamond() [1/3]. TDiamond::TDiamond ; (; ). Diamond default constructor. ; Definition at line 46 of file TDiamond.cxx. ◆ TDiamond() [2/3]. TDiamond::TDiamond ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). Diamond standard constructor. ; Definition at line 53 of file TDiamond.cxx. ◆",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:25376,Modifiability,inherit,inherited,25376,"Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TDiamond.h>. Inheritance diagram for TDiamond:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDiamond() [1/3]. TDiamond::TDiamond ; (; ). Diamond default constructor. ; Definition at line 46 of file TDiamond.cxx. ◆ TDiamond() [2/3]. TDiamond::TDiamond ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). Diamond standard constructor. ; Definition at line 53 of file TDiamond.cxx. ◆ TDiamond() [3/3]. TDiamond::TDiamond ; (; const TDiamond & ; diamond). Copy constructor. ; Definition at line 68 of file TDiamond.cxx. ◆ ~TDiamond(). TDiamond::~T",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:25509,Modifiability,inherit,inherited,25509,"radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TDiamond.h>. Inheritance diagram for TDiamond:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDiamond() [1/3]. TDiamond::TDiamond ; (; ). Diamond default constructor. ; Definition at line 46 of file TDiamond.cxx. ◆ TDiamond() [2/3]. TDiamond::TDiamond ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). Diamond standard constructor. ; Definition at line 53 of file TDiamond.cxx. ◆ TDiamond() [3/3]. TDiamond::TDiamond ; (; const TDiamond & ; diamond). Copy constructor. ; Definition at line 68 of file TDiamond.cxx. ◆ ~TDiamond(). TDiamond::~TDiamond ; (; ). override . Diamond destructor. ; Definition at line 61 of file TDiamond.cxx. Member Function Documentation. ◆ Class()",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDiamond.html:6555,Security,hash,hash,6555,"Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Pave normal constructor. ;  ;  ~TPave () override;  Pave default destructor. ;  ; virtual void ConvertNDCtoPad ();  Convert pave coordinates from NDC to Pad coordinates. ;  ; void Copy (TObject &pave) const override;  Copy this pave to pave. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a pave. ;  ; virtual TPave * DrawPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Int_t GetBorderSize () const;  ; Double_t GetCornerRadius () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Option_t * GetOption () const override;  ; Int_t GetShadowColor () const;  ; Double_t GetX1NDC () const;  ; Double_t GetX2NDC () const;  ; Double_t GetY1NDC () const;  ; Double_t GetY2NDC () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List this pave with its attributes. ;  ; TPave & operator= (const TPave &src);  Assignment operator. ;  ; virtual void PaintPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; virtual void PaintPaveArc (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with rounded corners. ;  ; virtual void SetBorderSize (Int_t bordersize=4);  Sets the border size of the TPave box and shadow. ;  ; virtual void SetCornerRadius (Double_t rad=0.2);  ; virtual void SetName (const char *name="""");  ; virtual void SetOption (Option_t *option=""br"");  ; virtual void SetShadowColor (Int_t color);  ; void SetX1 (Double_t x1) override;",MatchSource.WIKI,doc/master/classTDiamond.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDiamond.html
https://root.cern/doc/master/classTDictAttributeMap.html:3143,Availability,error,error,3143,"t;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:3232,Availability,error,error,3232,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:3387,Availability,error,error,3387,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:3684,Availability,error,error,3684,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:8248,Availability,error,error,8248," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:3149,Integrability,message,message,3149,"t;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:3690,Integrability,message,message,3690,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:4892,Integrability,message,message,4892,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:8254,Integrability,message,message,8254," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:8627,Integrability,message,message,8627," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:1421,Modifiability,inherit,inherited,1421,"Map maps the property keys of the object to their values. ; Definition at line 29 of file TDictAttributeMap.h. Public Member Functions;  TDictAttributeMap ();  Default constructor. ;  ; virtual ~TDictAttributeMap ();  Default destructor. ;  ; void AddProperty (const char *key, const char *value);  Add a property with a String value to the TDictAttributeMap. ;  ; void Clear (Option_t *option="""") override;  Deletes all the properties of the class. ;  ; const char * GetPropertyAsString (const char *key) const;  Access the value of a String property using the key. ;  ; Int_t GetPropertySize () const;  ; Bool_t HasKey (const char *key) const;  ; TClass * IsA () const override;  ; Bool_t RemoveProperty (const char *key);  ; TString RemovePropertyString (const char *key);  Remove a String property from the attribute map specified by the key. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; vi",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:2779,Modifiability,inherit,inheritance,2779,""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:4990,Modifiability,inherit,inherits,4990,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:5107,Modifiability,inherit,inherits,5107,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:9128,Modifiability,inherit,inherited,9128,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; THashTable fStringProperty;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1UL",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:9709,Modifiability,inherit,inherited,9709," virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; THashTable fStringProperty;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDictAttributeMap.h>. Inheritance diagram for TDictAttributeMap:. This browser is not able to show SVG: try Firefox, Chrome, Safar",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:10350,Modifiability,inherit,inherited,10350,"Only (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; THashTable fStringProperty;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDictAttributeMap.h>. Inheritance diagram for TDictAttributeMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDictAttributeMap(). TDictAttributeMap::TDictAttributeMap ; (; ). Default constructor. ; Definition at line 30 of file TDictAttributeMap.cxx. ◆ ~TDictAttributeMap(). TDictAttributeMap::~TDictAttributeMap ; (; ). virtual . Default destructor. ; Definition at line 38 of file TDictAttributeMap.cxx. Member Function Documentation. ◆ AddProperty(). void TDictAttributeMap::AddProperty ; (; const char * ; key, . const char * ; value . ). Add a property with a String value to the TDictAttributeMap. ; Parameters: key and char* value of the property. ; Definition at line 46 of file TDictAttributeMap.cxx. ◆ Class(). static ",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:10449,Modifiability,inherit,inherited,10449,"Only (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; THashTable fStringProperty;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDictAttributeMap.h>. Inheritance diagram for TDictAttributeMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDictAttributeMap(). TDictAttributeMap::TDictAttributeMap ; (; ). Default constructor. ; Definition at line 30 of file TDictAttributeMap.cxx. ◆ ~TDictAttributeMap(). TDictAttributeMap::~TDictAttributeMap ; (; ). virtual . Default destructor. ; Definition at line 38 of file TDictAttributeMap.cxx. Member Function Documentation. ◆ AddProperty(). void TDictAttributeMap::AddProperty ; (; const char * ; key, . const char * ; value . ). Add a property with a String value to the TDictAttributeMap. ; Parameters: key and char* value of the property. ; Definition at line 46 of file TDictAttributeMap.cxx. ◆ Class(). static ",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictAttributeMap.html:4621,Security,hash,hash,4621," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDictAttributeMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictAttributeMap.html
https://root.cern/doc/master/classTDictionary.html:6819,Availability,error,error,6819,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:6908,Availability,error,error,6908,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:7063,Availability,error,error,7063,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:7360,Availability,error,error,7360,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:11444,Availability,error,error,11444,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictiona",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:13449,Deployability,update,updated,13449,"static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TDictAttributeMap * fAttributeMap {nullptr};  ; ULong64_t fUpdatingTransactionCount {0};  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDictionary.h>. Inheritance diagram for TDictionary:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef const void* TDictionary::DeclId_t. Definition at line 224 of file TDictionary.h. Member Enumeration Documentation. ◆ EMemberSelection. enum class TDictionary::EMemberSelection. strong . Kinds of members to include in lists. . EnumeratorkNoUsingDecls ; kOnlyUsingDecls ; kAlsoUsingDecls . De",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:17899,Deployability,update,updated,17899,"nction, TFunctionTemplate, TGlobal, TMethod, and TMethodArg.; Definition at line 225 of file TDictionary.h. ◆ operator=(). TDictionary & TDictionary::operator= ; (; const TDictionary & ; other). Definition at line 63 of file TDictionary.cxx. ◆ Property(). virtual Long_t TDictionary::Property ; (; ); const. pure virtual . Implemented in TBaseClass, TClass, TDataMember, TDataType, TEnum, TFunction, TFunctionTemplate, TGlobal, TGlobalMappedFunction, and TMethodArg. ◆ Streamer(). void TDictionary::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TQClass, TEnum, TEnumConstant, TFunction, TFunctionTemplate, TGlobal, TMethod, and TMethodArg. ◆ StreamerNVirtual(). void TDictionary::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 225 of file TDictionary.h. ◆ UpdateInterpreterStateMarker(). Bool_t TDictionary::UpdateInterpreterStateMarker ; (; ). protected . the Cling ID of the transaction that last updated the object ; Definition at line 124 of file TDictionary.cxx. ◆ WantsRegularMembers(). static bool TDictionary::WantsRegularMembers ; (; EMemberSelection ; sel). inlinestatic . Definition at line 221 of file TDictionary.h. ◆ WantsUsingDecls(). static bool TDictionary::WantsUsingDecls ; (; EMemberSelection ; sel). inlinestatic . Definition at line 222 of file TDictionary.h. Member Data Documentation. ◆ fAttributeMap. TDictAttributeMap* TDictionary::fAttributeMap {nullptr}. private . Definition at line 171 of file TDictionary.h. ◆ fUpdatingTransactionCount. ULong64_t TDictionary::fUpdatingTransactionCount {0}. private . Definition at line 172 of file TDictionary.h. Libraries for TDictionary:. [legend]; The documentation for this class was generated from the following files:; core/meta/inc/TDictionary.h; core/meta/src/TDictionary.cxx. TDictionary. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:362,Integrability,interface,interface,362,". ROOT: TDictionary Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TDictionary Class Referenceabstract. ; This class defines an abstract interface that must be implemented by all classes that contain dictionary information. ; The dictionary is defined by the following classes: TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; All the above classes implement the TDictionary abstract interface. Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTL",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:1517,Integrability,interface,interface,1517,"ing classes: TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; All the above classes implement the TDictionary abstract interface. Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:1662,Integrability,interface,interface,1662,"se classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; All the above classes implement the TDictionary abstract interface. Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:6825,Integrability,message,message,6825,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:7366,Integrability,message,message,7366,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:8356,Integrability,message,message,8356,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:11450,Integrability,message,message,11450,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictiona",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:11823,Integrability,message,message,11823," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ()",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:552,Modifiability,variab,variables,552,". ROOT: TDictionary Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TDictionary Class Referenceabstract. ; This class defines an abstract interface that must be implemented by all classes that contain dictionary information. ; The dictionary is defined by the following classes: TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; All the above classes implement the TDictionary abstract interface. Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTL",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:1183,Modifiability,variab,variables,1183,"er Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TDictionary Class Referenceabstract. ; This class defines an abstract interface that must be implemented by all classes that contain dictionary information. ; The dictionary is defined by the following classes: TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; All the above classes implement the TDictionary abstract interface. Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultis",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:1207,Modifiability,variab,variables,1207,"er Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TDictionary Class Referenceabstract. ; This class defines an abstract interface that must be implemented by all classes that contain dictionary information. ; The dictionary is defined by the following classes: TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; All the above classes implement the TDictionary abstract interface. Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultis",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:1572,Modifiability,inherit,inheritance,1572,"iables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; All the above classes implement the TDictionary abstract interface. Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000;",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:2469,Modifiability,inherit,inherited,2469,"tation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; virtual Long_t Property () const =0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void Streame",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:3622,Modifiability,inherit,inherited,3622,"  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; virtual Long_t Property () const =0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:5362,Modifiability,inherit,inherited,5362,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:6455,Modifiability,inherit,inheritance,6455,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:8454,Modifiability,inherit,inherits,8454,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:8571,Modifiability,inherit,inherits,8571,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:12642,Modifiability,inherit,inherited,12642," (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TDictAttributeMap * fAttributeMap {nullptr};  ; ULon",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:12852,Modifiability,inherit,inherited,12852," (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TDictAttributeMap * fAttributeMap {nullptr};  ; ULon",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:13501,Modifiability,inherit,inherited,13501,"static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TDictAttributeMap * fAttributeMap {nullptr};  ; ULong64_t fUpdatingTransactionCount {0};  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDictionary.h>. Inheritance diagram for TDictionary:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef const void* TDictionary::DeclId_t. Definition at line 224 of file TDictionary.h. Member Enumeration Documentation. ◆ EMemberSelection. enum class TDictionary::EMemberSelection. strong . Kinds of members to include in lists. . EnumeratorkNoUsingDecls ; kOnlyUsingDecls ; kAlsoUsingDecls . De",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:13843,Modifiability,inherit,inherited,13843,"ss ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TDictAttributeMap * fAttributeMap {nullptr};  ; ULong64_t fUpdatingTransactionCount {0};  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDictionary.h>. Inheritance diagram for TDictionary:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef const void* TDictionary::DeclId_t. Definition at line 224 of file TDictionary.h. Member Enumeration Documentation. ◆ EMemberSelection. enum class TDictionary::EMemberSelection. strong . Kinds of members to include in lists. . EnumeratorkNoUsingDecls ; kOnlyUsingDecls ; kAlsoUsingDecls . Definition at line 216 of file TDictionary.h. ◆ ESTLType. enum TDictionary::ESTLType. EnumeratorkNone ; kVector ; kList ; kForwardlist ; kDeque ; kMap ; kMultimap ; kSet ; kMultiset ; kUnorderedSet ; kUnorderedMultiset ; kUnorderedMap ; kUnorderedMultimap ; kBitset . Definition at line 198 of file TDictionary.h. Constructor & Destructor Documentation. ◆ TDictionary() [1/3]. TDictionary::TDictionary",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:13936,Modifiability,inherit,inherited,13936,"ss ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TDictAttributeMap * fAttributeMap {nullptr};  ; ULong64_t fUpdatingTransactionCount {0};  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDictionary.h>. Inheritance diagram for TDictionary:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef const void* TDictionary::DeclId_t. Definition at line 224 of file TDictionary.h. Member Enumeration Documentation. ◆ EMemberSelection. enum class TDictionary::EMemberSelection. strong . Kinds of members to include in lists. . EnumeratorkNoUsingDecls ; kOnlyUsingDecls ; kAlsoUsingDecls . Definition at line 216 of file TDictionary.h. ◆ ESTLType. enum TDictionary::ESTLType. EnumeratorkNone ; kVector ; kList ; kForwardlist ; kDeque ; kMap ; kMultimap ; kSet ; kMultiset ; kUnorderedSet ; kUnorderedMultiset ; kUnorderedMap ; kUnorderedMultimap ; kBitset . Definition at line 198 of file TDictionary.h. Constructor & Destructor Documentation. ◆ TDictionary() [1/3]. TDictionary::TDictionary",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDictionary.html:4490,Security,hash,hash,4490," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTDictionary.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDictionary.html
https://root.cern/doc/master/classTDimensionInfo.html:2353,Availability,error,error,2353,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:2442,Availability,error,error,2442,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:2597,Availability,error,error,2597,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:2894,Availability,error,error,2894,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:7568,Availability,error,error,7568,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fCode;  ; TFormLeafInfoMultiVarDim * fMultiDim;  ; Int_t fOper;  ; Int_t fSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  ",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:2359,Integrability,message,message,2359,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:2900,Integrability,message,message,2900,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:4102,Integrability,message,message,4102,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:7574,Integrability,message,message,7574,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fCode;  ; TFormLeafInfoMultiVarDim * fMultiDim;  ; Int_t fOper;  ; Int_t fSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  ",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:7947,Integrability,message,message,7947,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fCode;  ; TFormLeafInfoMultiVarDim * fMultiDim;  ; Int_t fOper;  ; Int_t fSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextM",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:592,Modifiability,inherit,inherited,592,". ROOT: TDimensionInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TDimensionInfo Class Reference. ; A small helper class to help in keeping track of the array dimensions encountered in the analysis of the expression. ; Definition at line 111 of file TTreeFormula.cxx. Public Member Functions;  TDimensionInfo (Int_t code, Int_t oper, Int_t size, TFormLeafInfoMultiVarDim *multiDim);  ;  ~TDimensionInfo () override;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance ",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:1989,Modifiability,inherit,inheritance,1989,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:4200,Modifiability,inherit,inherits,4200,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:4317,Modifiability,inherit,inherits,4317,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:8381,Modifiability,inherit,inherited,8381,"er &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fCode;  ; TFormLeafInfoMultiVarDim * fMultiDim;  ; Int_t fOper;  ; Int_t fSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:9037,Modifiability,inherit,inherited,9037," Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Int_t fCode;  ; TFormLeafInfoMultiVarDim * fMultiDim;  ; Int_t fOper;  ; Int_t fSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TDimensionInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDimensionInfo(). TDimensionInfo::TDimensionInfo ; (; Int_t ; code, . Int_t ; oper, . Int_t ; size, . TFormLeafInfoMultiVarDim * ; multiD",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:9540,Modifiability,inherit,inherited,9540," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TDimensionInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDimensionInfo(). TDimensionInfo::TDimensionInfo ; (; Int_t ; code, . Int_t ; oper, . Int_t ; size, . TFormLeafInfoMultiVarDim * ; multiDim . ). inline . Definition at line 117 of file TTreeFormula.cxx. ◆ ~TDimensionInfo(). TDimensionInfo::~TDimensionInfo ; (; ). inlineoverride . Definition at line 119 of file TTreeFormula.cxx. Member Data Documentation. ◆ fCode. Int_t TDimensionInfo::fCode. Definition at line 113 of file TTreeFormula.cxx. ◆ fMultiDim. TFormLeafInfoMultiVarDim* TDimensionInfo::fMultiDim. Definition at line 116 of file TTreeFormula.cxx. ◆ fOper. Int_t TDimensionInfo::fOper. Definition at line 114 of file TTreeFormula.cxx. ◆ fSize.",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:9639,Modifiability,inherit,inherited,9639," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TDimensionInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDimensionInfo(). TDimensionInfo::TDimensionInfo ; (; Int_t ; code, . Int_t ; oper, . Int_t ; size, . TFormLeafInfoMultiVarDim * ; multiDim . ). inline . Definition at line 117 of file TTreeFormula.cxx. ◆ ~TDimensionInfo(). TDimensionInfo::~TDimensionInfo ; (; ). inlineoverride . Definition at line 119 of file TTreeFormula.cxx. Member Data Documentation. ◆ fCode. Int_t TDimensionInfo::fCode. Definition at line 113 of file TTreeFormula.cxx. ◆ fMultiDim. TFormLeafInfoMultiVarDim* TDimensionInfo::fMultiDim. Definition at line 116 of file TTreeFormula.cxx. ◆ fOper. Int_t TDimensionInfo::fOper. Definition at line 114 of file TTreeFormula.cxx. ◆ fSize.",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDimensionInfo.html:3831,Security,hash,hash,3831," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTDimensionInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html
https://root.cern/doc/master/classTDirectory-members.html:2355,Availability,error,error,2355,"n="""")TDirectoryvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirectoryvirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTDirectoryvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fContextTDirectoryprotected; fContextPegTDirectoryprotected; fgAddDirectoryTDirectoryprotectedstatic; fGDirectoriesTDirectoryprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FillFullPath(TString &buf) constTDirectoryprotected; FindKey(const char *) constTDirectoryinlinevirtual; FindKeyAny(const char *) constTDirectoryinlinevirtual; FindObject(const char *name) const overrideTDirectoryvirtual; FindObject(const TObject *obj) const overrideTDirectoryvirtual; FindObjectAny(const char *name) constTDirectoryvirtual; FindObjectAnyFile(const char *) constTDirectoryinlinevirtual; fListTDirectoryprotected; fMotherTDirectoryprotected; fNameTNamedprotected; fPathBufferTDirectorymutableprotected; fSpinLockTDirectorymutableprot",MatchSource.WIKI,doc/master/classTDirectory-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory-members.html
https://root.cern/doc/master/classTDirectory-members.html:2436,Availability,error,error,2436,"n="""")TDirectoryvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirectoryvirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTDirectoryvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fContextTDirectoryprotected; fContextPegTDirectoryprotected; fgAddDirectoryTDirectoryprotectedstatic; fGDirectoriesTDirectoryprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FillFullPath(TString &buf) constTDirectoryprotected; FindKey(const char *) constTDirectoryinlinevirtual; FindKeyAny(const char *) constTDirectoryinlinevirtual; FindObject(const char *name) const overrideTDirectoryvirtual; FindObject(const TObject *obj) const overrideTDirectoryvirtual; FindObjectAny(const char *name) constTDirectoryvirtual; FindObjectAnyFile(const char *) constTDirectoryinlinevirtual; fListTDirectoryprotected; fMotherTDirectoryprotected; fNameTNamedprotected; fPathBufferTDirectorymutableprotected; fSpinLockTDirectorymutableprot",MatchSource.WIKI,doc/master/classTDirectory-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory-members.html
https://root.cern/doc/master/classTDirectory-members.html:193,Modifiability,inherit,inherited,193,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectory Member List. This is the complete list of members for TDirectory, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE)TDirectoryinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE)TDirectoryvirtual; AppendKey(TKey *)TDirectoryinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTDirectoryvirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr)TDirectoryinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; cd()TDirectoryvirtual; cd(const char *path)TDirectoryvirtual; Cd(const char *path)TDirectorystatic; Cd1(const char *path)TDirectoryprotectedstatic; cd1(const char *path)TDirectoryprotected; CheckedHash()TObjectinline; Class()TDirectorystatic; Class_Name()TDirectorystatic; Class_Version()TDirectoryinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE)TDirectoryvirtual; Close(Option_t *option="""")TDirectoryvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirectoryvirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Opt",MatchSource.WIKI,doc/master/classTDirectory-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory-members.html
https://root.cern/doc/master/classTDirectory.html:825,Availability,down,down,825,". ROOT: TDirectory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Friends |; List of all members ; TDirectory Class ReferenceCore ROOT classes » Base ROOT classes. ; Describe directory structure in memory. . PyROOT; It is possible to retrieve the content of a TDirectory object just like getting items from a Python dictionary. Moreover, once a subdirectory or object is accessed for the first time, it is cached for later use. For example, assuming d is a TDirectory instance: # Access a subdirectory; d[""subdir""]; ; # We can go further down in the hierarchy of directories; d[""subdir""][""subsubdir""]; ; # Access an object (e.g. a histogram) in the directory; d[""obj""]; ; # ... or in a subdirectory; d[""subdir""][""obj""]; ; # Wrong key: raises KeyError; d[""wrongAttr""]; Furthermore, TDirectory implements a WriteObject Python method which relies on TDirectory::WriteObjectAny. This method is a no-op for TDirectory objects, but it is useful for objects of TDirectory subclasses such as TDirectoryFile and TFile, which inherit it. Please refer to the documentation of those classes for more information. . Definition at line 45 of file TDirectory.h. Classes; class  TContext;  TDirectory::TContext keeps track and restore the current directory. More...;  . Public Member Functions;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; virtual void Add (TObject *obj, Bool_t replace=kFALSE);  ; virtual void Append (TObject *obj, Bool_t replace=kFALSE);  Append object to this directory. ;  ; virtual Int_t AppendKey (TKey *);  ; void Browse (",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:11643,Availability,error,error,11643," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:11732,Availability,error,error,11732,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out.",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:11887,Availability,error,error,11887,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:12184,Availability,error,error,12184,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:15719,Availability,error,error,15719," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:35798,Availability,error,error,35798,"ryFile.; Definition at line 866 of file TDirectory.cxx. ◆ Get() [2/2]. template<class T > . T * TDirectory::Get ; (; const char * ; namecycle). inline . See documentation of TDirectoryFile::Get(const char *namecycle) ; Definition at line 205 of file TDirectory.h. ◆ GetBufferSize(). virtual Int_t TDirectory::GetBufferSize ; (; ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 219 of file TDirectory.h. ◆ GetDirectory(). TDirectory * TDirectory::GetDirectory ; (; const char * ; apath, . Bool_t ; printError = false, . const char * ; funcname = ""GetDirectory"" . ). virtual . Find a directory using apath. ; It apath is null or empty, returns ""this"" directory. Otherwise use apath to find a directory. The absolute path syntax is: file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory in the file. Relative syntax is relative to ""this"" directory. E.g: ../aa. Returns 0 in case path does not exist. If printError is true, use Error with 'funcname' to issue an error message. ; Reimplemented in TDirectoryFile.; Definition at line 448 of file TDirectory.cxx. ◆ GetFile(). virtual TFile * TDirectory::GetFile ; (; ); const. inlinevirtual . Reimplemented in TROOT, and TDirectoryFile.; Definition at line 220 of file TDirectory.h. ◆ GetKey(). virtual TKey * TDirectory::GetKey ; (; const char * ; , . Short_t ; = 9999 . ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 221 of file TDirectory.h. ◆ GetList(). virtual TList * TDirectory::GetList ; (; ); const. inlinevirtual . Definition at line 222 of file TDirectory.h. ◆ GetListOfKeys(). virtual TList * TDirectory::GetListOfKeys ; (; ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 223 of file TDirectory.h. ◆ GetMother(). TObject * TDirectory::GetMother ; (; ); const. inline . Definition at line 224 of file TDirectory.h. ◆ GetMotherDir(). TDirectory * TDirectory::GetMotherDir ; (; ); const. inline . Definition at line 225",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:42708,Availability,error,error,42708,"efinition at line 236 of file TDirectory.h. ◆ IsWritable(). virtual Bool_t TDirectory::IsWritable ; (; ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 237 of file TDirectory.h. ◆ ls(). void TDirectory::ls ; (; Option_t * ; option = """"); const. overridevirtual . List Directory contents. ; Indentation is used to identify the directory tree Subdirectories are listed first, then objects in memory.; The option can has the following format: [<regexp>]; The <regexp> will be used to match the name of the objects. By default memory and disk objects are listed. ; Reimplemented from TObject.; Reimplemented in TROOT, TDirectoryFile, and TFile.; Definition at line 1143 of file TDirectory.cxx. ◆ mkdir(). TDirectory * TDirectory::mkdir ; (; const char * ; name, . const char * ; title = """", . Bool_t ; returnExistingDirectory = kFALSE . ). virtual . Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."". ; Returns 0 in case of error or if a sub-directory (hierarchy) with the requested name already exists. returnExistingDirectory returns a pointer to an already existing sub-directory with the same name. Returns a pointer to the created sub-directory or to the top sub-directory of the hierarchy (in the above example, the returned TDirectory * always points to ""a""). In particular, the steps to create first a/b/c and then a/b/d without receiving errors are: TFile * file = new TFile(""afile"",""RECREATE"");; file->mkdir(""a"");; file->cd(""a"");; gDirectory->mkdir(""b/c"");; gDirectory->cd(""b"");; gDirectory->mkdir(""d"");; gDirectory#define gDirectoryDefinition TDirectory.h:384; TDirectoryFile::cdBool_t cd() overrideChange current directory to ""this"" directory.Definition TDirectoryFile.cxx:334; TDirectoryFile::mkdirTDirectory * mkdir(const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE) overrideCreate a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."".Definition TDirectoryFile.cxx:1249; TFileA ROOT file is an on-",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:43131,Availability,error,errors,43131,"rmat: [<regexp>]; The <regexp> will be used to match the name of the objects. By default memory and disk objects are listed. ; Reimplemented from TObject.; Reimplemented in TROOT, TDirectoryFile, and TFile.; Definition at line 1143 of file TDirectory.cxx. ◆ mkdir(). TDirectory * TDirectory::mkdir ; (; const char * ; name, . const char * ; title = """", . Bool_t ; returnExistingDirectory = kFALSE . ). virtual . Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."". ; Returns 0 in case of error or if a sub-directory (hierarchy) with the requested name already exists. returnExistingDirectory returns a pointer to an already existing sub-directory with the same name. Returns a pointer to the created sub-directory or to the top sub-directory of the hierarchy (in the above example, the returned TDirectory * always points to ""a""). In particular, the steps to create first a/b/c and then a/b/d without receiving errors are: TFile * file = new TFile(""afile"",""RECREATE"");; file->mkdir(""a"");; file->cd(""a"");; gDirectory->mkdir(""b/c"");; gDirectory->cd(""b"");; gDirectory->mkdir(""d"");; gDirectory#define gDirectoryDefinition TDirectory.h:384; TDirectoryFile::cdBool_t cd() overrideChange current directory to ""this"" directory.Definition TDirectoryFile.cxx:334; TDirectoryFile::mkdirTDirectory * mkdir(const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE) overrideCreate a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."".Definition TDirectoryFile.cxx:1249; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; or TFile * file = new TFile(""afile"",""RECREATE"");; file->mkdir(""a"");; file->cd(""a"");; gDirectory->mkdir(""b/c"");; gDirectory->mkdir(""b/d"", """", true);. Reimplemented in TDirectoryFile.; Definition at line 1102 of file TDirectory.cxx. ◆ OpenFile(). virtual TFile * TDirectory::OpenFile ; (; const char * ; , . Option_t * ; = """", . const char * ; = """", . Int_t ; ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:52301,Energy Efficiency,reduce,reduces,52301,"d buffer is created to hold the compressed buffer.; Reservation of the corresponding space in the file by looking in the TFree list of free blocks of the file.; The buffer is written to the file. Bufsize can be given to force a given buffer size to write this object. By default, the buffersize will be taken from the average buffer size of all objects written to the current file so far.; If a name is specified, it will be the name of the key. If name is not given, the name of the key will be the name as returned by GetName().; The option can be a combination of: kSingleKey, kOverwrite or kWriteDelete Using the kOverwrite option a previous key with the same name is overwritten. The previous key is deleted before writing the new object. Using the kWriteDelete option a previous key with the same name is deleted only after the new object has been written. This option is safer than kOverwrite but it is slower. NOTE: Neither kOverwrite nor kWriteDelete reduces the size of a TFile– the space is simply freed up to be overwritten; in the case of a TTree, it is more complicated. If one opens a TTree, appends some entries, then writes it out, the behaviour is effectively the same. If, however, one creates a new TTree and writes it out in this way, only the metadata is replaced, effectively making the old data invisible without deleting it. TTree::Delete() can be used to mark all disk space occupied by a TTree as free before overwriting its metadata this way. The kSingleKey option is only used by TCollection::Write() to write a container with a single key instead of each object in the container with its own key.; An object is read from the file into memory via TKey::Read() or via TObject::Read().; The function returns the total number of bytes written to the file. It returns 0 if the object cannot be written. ; Reimplemented from TObject.; Reimplemented in TSQLFile, TXMLFile, TFile, TParallelMergingFile, and TDirectoryFile.; Definition at line 265 of file TDirectory.h. ◆ Write() ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:11649,Integrability,message,message,11649," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:12190,Integrability,message,message,12190,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:12980,Integrability,message,message,12980,". ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:15725,Integrability,message,message,15725," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:16098,Integrability,message,message,16098," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; st",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:35804,Integrability,message,message,35804,"ryFile.; Definition at line 866 of file TDirectory.cxx. ◆ Get() [2/2]. template<class T > . T * TDirectory::Get ; (; const char * ; namecycle). inline . See documentation of TDirectoryFile::Get(const char *namecycle) ; Definition at line 205 of file TDirectory.h. ◆ GetBufferSize(). virtual Int_t TDirectory::GetBufferSize ; (; ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 219 of file TDirectory.h. ◆ GetDirectory(). TDirectory * TDirectory::GetDirectory ; (; const char * ; apath, . Bool_t ; printError = false, . const char * ; funcname = ""GetDirectory"" . ). virtual . Find a directory using apath. ; It apath is null or empty, returns ""this"" directory. Otherwise use apath to find a directory. The absolute path syntax is: file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory in the file. Relative syntax is relative to ""this"" directory. E.g: ../aa. Returns 0 in case path does not exist. If printError is true, use Error with 'funcname' to issue an error message. ; Reimplemented in TDirectoryFile.; Definition at line 448 of file TDirectory.cxx. ◆ GetFile(). virtual TFile * TDirectory::GetFile ; (; ); const. inlinevirtual . Reimplemented in TROOT, and TDirectoryFile.; Definition at line 220 of file TDirectory.h. ◆ GetKey(). virtual TKey * TDirectory::GetKey ; (; const char * ; , . Short_t ; = 9999 . ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 221 of file TDirectory.h. ◆ GetList(). virtual TList * TDirectory::GetList ; (; ); const. inlinevirtual . Definition at line 222 of file TDirectory.h. ◆ GetListOfKeys(). virtual TList * TDirectory::GetListOfKeys ; (; ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 223 of file TDirectory.h. ◆ GetMother(). TObject * TDirectory::GetMother ; (; ); const. inline . Definition at line 224 of file TDirectory.h. ◆ GetMotherDir(). TDirectory * TDirectory::GetMotherDir ; (; ); const. inline . Definition at line 225",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:47663,Integrability,message,message,47663,"oid TDirectory::rmdir ; (; const char * ; name). virtual . Removes subdirectory from the directory When directory is deleted, all keys in all subdirectories will be read first and deleted from file (if exists) Equivalent call is Delete(""name;*"");. ; Reimplemented in TDirectoryFile.; Definition at line 1227 of file TDirectory.cxx. ◆ Save(). virtual void TDirectory::Save ; (; ). inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 253 of file TDirectory.h. ◆ SaveObjectAs(). Int_t TDirectory::SaveObjectAs ; (; const TObject * ; obj, . const char * ; filename = """", . Option_t * ; option = """" . ); const. virtual . Save object in filename, if filename is nullptr or """", a file with ""<objectname>.root"" is created. ; The name of the key is the object name. By default new file will be created. Using option ""a"", one can append object to the existing ROOT file. If the operation is successful, it returns the number of bytes written to the file otherwise it returns 0. By default a message is printed. Use option ""q"" to not print the message. If filename contains "".json"" extension, JSON representation of the object will be created and saved in the text file. Such file can be used in JavaScript ROOT (https://root.cern/js/) to display object in web browser When creating JSON file, option string may contain compression level from 0 to 3 (default 0) ; Reimplemented in TDirectoryFile.; Definition at line 1250 of file TDirectory.cxx. ◆ SaveSelf(). virtual void TDirectory::SaveSelf ; (; Bool_t ; = kFALSE). inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 255 of file TDirectory.h. ◆ SetBufferSize(). virtual void TDirectory::SetBufferSize ; (; Int_t ; ). inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 256 of file TDirectory.h. ◆ SetModified(). virtual void TDirectory::SetModified ; (; ). inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 257 of file TDirectory.h. ◆ SetMother(). virtual void TDirectory::SetMother ; (; ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:47715,Integrability,message,message,47715," * ; name). virtual . Removes subdirectory from the directory When directory is deleted, all keys in all subdirectories will be read first and deleted from file (if exists) Equivalent call is Delete(""name;*"");. ; Reimplemented in TDirectoryFile.; Definition at line 1227 of file TDirectory.cxx. ◆ Save(). virtual void TDirectory::Save ; (; ). inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 253 of file TDirectory.h. ◆ SaveObjectAs(). Int_t TDirectory::SaveObjectAs ; (; const TObject * ; obj, . const char * ; filename = """", . Option_t * ; option = """" . ); const. virtual . Save object in filename, if filename is nullptr or """", a file with ""<objectname>.root"" is created. ; The name of the key is the object name. By default new file will be created. Using option ""a"", one can append object to the existing ROOT file. If the operation is successful, it returns the number of bytes written to the file otherwise it returns 0. By default a message is printed. Use option ""q"" to not print the message. If filename contains "".json"" extension, JSON representation of the object will be created and saved in the text file. Such file can be used in JavaScript ROOT (https://root.cern/js/) to display object in web browser When creating JSON file, option string may contain compression level from 0 to 3 (default 0) ; Reimplemented in TDirectoryFile.; Definition at line 1250 of file TDirectory.cxx. ◆ SaveSelf(). virtual void TDirectory::SaveSelf ; (; Bool_t ; = kFALSE). inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 255 of file TDirectory.h. ◆ SetBufferSize(). virtual void TDirectory::SetBufferSize ; (; Int_t ; ). inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 256 of file TDirectory.h. ◆ SetModified(). virtual void TDirectory::SetModified ; (; ). inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 257 of file TDirectory.h. ◆ SetMother(). virtual void TDirectory::SetMother ; (; TObject * ; mother). inlinevirtual . ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:1303,Modifiability,inherit,inherit,1303,"ted Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Friends |; List of all members ; TDirectory Class ReferenceCore ROOT classes » Base ROOT classes. ; Describe directory structure in memory. . PyROOT; It is possible to retrieve the content of a TDirectory object just like getting items from a Python dictionary. Moreover, once a subdirectory or object is accessed for the first time, it is cached for later use. For example, assuming d is a TDirectory instance: # Access a subdirectory; d[""subdir""]; ; # We can go further down in the hierarchy of directories; d[""subdir""][""subsubdir""]; ; # Access an object (e.g. a histogram) in the directory; d[""obj""]; ; # ... or in a subdirectory; d[""subdir""][""obj""]; ; # Wrong key: raises KeyError; d[""wrongAttr""]; Furthermore, TDirectory implements a WriteObject Python method which relies on TDirectory::WriteObjectAny. This method is a no-op for TDirectory objects, but it is useful for objects of TDirectory subclasses such as TDirectoryFile and TFile, which inherit it. Please refer to the documentation of those classes for more information. . Definition at line 45 of file TDirectory.h. Classes; class  TContext;  TDirectory::TContext keeps track and restore the current directory. More...;  . Public Member Functions;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; virtual void Add (TObject *obj, Bool_t replace=kFALSE);  ; virtual void Append (TObject *obj, Bool_t replace=kFALSE);  Append object to this directory. ;  ; virtual Int_t AppendKey (TKey *);  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; virtual void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr);  ; virtual Bool_t cd ();  Change current directory to ""this"" directory. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:8860,Modifiability,inherit,inherited,8860,"t=0) override;  Write this object to the current directory. ;  ; virtual void WriteDirHeader ();  ; virtual void WriteKeys ();  ; template<typename T > ; std::enable_if_t<!std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; template<typename T > ; std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; virtual Int_t WriteObjectAny (const void *, const char *, const char *, Option_t *="""", Int_t=0);  ; virtual Int_t WriteObjectAny (const void *, const TClass *, const char *, Option_t *="""", Int_t=0);  ; virtual Int_t WriteTObject (const TObject *obj, const char *name=nullptr, Option_t *="""", Int_t=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:10441,Modifiability,inherit,inherited,10441,"d) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:11279,Modifiability,inherit,inheritance,11279,"amer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:13078,Modifiability,inherit,inherits,13078," action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:13195,Modifiability,inherit,inherits,13195,"const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:16950,Modifiability,inherit,inherited,16950,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:17160,Modifiability,inherit,inherited,17160,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:17827,Modifiability,inherit,inherited,17827,"0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:18788,Modifiability,inherit,inherited,18788,"t; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . Protected Attributes; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Bool_t",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:19746,Modifiability,inherit,inherited,19746,". ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . Protected Attributes; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . Friends; struct ROOT::Internal::TDirectoryAtomicAdapter;  ; class TContext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <TDirectory.h>. Inheritance diagram for TDirectory:. This browser is not able",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:20044,Modifiability,inherit,inherited,20044,"ory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . Protected Attributes; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . Friends; struct ROOT::Internal::TDirectoryAtomicAdapter;  ; class TContext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <TDirectory.h>. Inheritance diagram for TDirectory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ SharedGDirectory_t. using TDirectory::SharedGDirectory_t = std::shared_ptr<std::atomic<TDirectory *> >. protected . Pointer to a list of TContext object pointing to this TDirectory. ; Definition at line 147 of file TDirectory.h. Constructor & Destru",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:34075,Modifiability,inherit,inherits,34075,"virtual . Reimplemented in TROOT, and TDirectoryFile.; Definition at line 202 of file TDirectory.h. ◆ Get() [1/2]. TObject * TDirectory::Get ; (; const char * ; namecycle). virtual . Return pointer to object identified by namecycle. ; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject. If not, the function TDirectory::GetObject should be called. However, this function will still work for a non-TObject, providing that the calling application cast the return type to the correct type (which is the actual type of the object).; NOTE:; The method GetObject offer better protection and avoid the need for any cast: MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }; VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>(). Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one can do: MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");; Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented in TDirectoryFile, and TDirectoryFile.; Definition at line 866 of file TDirectory.cxx. ◆ Get() [2/2]. template<class T > . T * TDirectory::Get ; (; const char * ; namecycle). inline . See documentation of TDirectoryFile::Get(const char *namecycle) ; Definition at line 205 of file TDirectory.h. ◆ GetBufferSize(). virtual Int_t TDire",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:34199,Modifiability,inherit,inheritance,34199,".h. ◆ Get() [1/2]. TObject * TDirectory::Get ; (; const char * ; namecycle). virtual . Return pointer to object identified by namecycle. ; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject. If not, the function TDirectory::GetObject should be called. However, this function will still work for a non-TObject, providing that the calling application cast the return type to the correct type (which is the actual type of the object).; NOTE:; The method GetObject offer better protection and avoid the need for any cast: MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }; VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>(). Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one can do: MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");; Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented in TDirectoryFile, and TDirectoryFile.; Definition at line 866 of file TDirectory.cxx. ◆ Get() [2/2]. template<class T > . T * TDirectory::Get ; (; const char * ; namecycle). inline . See documentation of TDirectoryFile::Get(const char *namecycle) ; Definition at line 205 of file TDirectory.h. ◆ GetBufferSize(). virtual Int_t TDirectory::GetBufferSize ; (; ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definitio",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:38584,Modifiability,inherit,inheriting,38584,"tory::GetObjectChecked ; (; const char * ; namecycle, . const char * ; classname . ). virtual . See documentation of TDirectory::GetObjectCheck(const char *namecycle, const TClass *cl) ; Reimplemented in TDirectoryFile.; Definition at line 929 of file TDirectory.cxx. ◆ GetObjectChecked() [2/2]. void * TDirectory::GetObjectChecked ; (; const char * ; namecycle, . const TClass * ; expectedClass . ). virtual . Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to the type described by the 2 arguments (i.e. cl): MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; Note: We recommend using the method TDirectory::GetObject: MyClass *obj = nullptr;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }; whatstatic const char * whatDefinition stlLoader.cc:5. Reimplemented in TDirectoryFile.; Definition at line 958 of file TDirectory.cxx. ◆ GetObjectUnchecked(). void * TDirectory::GetObjectUnchecked ; (; const char * ; namecycle). virtual . Return pointer to object identified by namecycle. ; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to the final type, e.g. MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. Reimplemented in TDirectoryFile.; Definition at line 921 of file TDirectory.cxx. ◆ GetPath(). const char * TDirectory::GetPath ; (; ); const. virtual . Returns the full",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:693,Performance,cache,cached,693,". ROOT: TDirectory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Friends |; List of all members ; TDirectory Class ReferenceCore ROOT classes » Base ROOT classes. ; Describe directory structure in memory. . PyROOT; It is possible to retrieve the content of a TDirectory object just like getting items from a Python dictionary. Moreover, once a subdirectory or object is accessed for the first time, it is cached for later use. For example, assuming d is a TDirectory instance: # Access a subdirectory; d[""subdir""]; ; # We can go further down in the hierarchy of directories; d[""subdir""][""subsubdir""]; ; # Access an object (e.g. a histogram) in the directory; d[""obj""]; ; # ... or in a subdirectory; d[""subdir""][""obj""]; ; # Wrong key: raises KeyError; d[""wrongAttr""]; Furthermore, TDirectory implements a WriteObject Python method which relies on TDirectory::WriteObjectAny. This method is a no-op for TDirectory objects, but it is useful for objects of TDirectory subclasses such as TDirectoryFile and TFile, which inherit it. Please refer to the documentation of those classes for more information. . Definition at line 45 of file TDirectory.h. Classes; class  TContext;  TDirectory::TContext keeps track and restore the current directory. More...;  . Public Member Functions;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; virtual void Add (TObject *obj, Bool_t replace=kFALSE);  ; virtual void Append (TObject *obj, Bool_t replace=kFALSE);  Append object to this directory. ;  ; virtual Int_t AppendKey (TKey *);  ; void Browse (",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:4843,Performance,perform,performed,4843,"mecycle. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; virtual Int_t GetBufferSize () const;  ; virtual TDirectory * GetDirectory (const char *namecycle, Bool_t printError=false, const char *funcname=""GetDirectory"");  Find a directory using apath. ;  ; virtual TFile * GetFile () const;  ; virtual TKey * GetKey (const char *, Short_t=9999) const;  ; virtual TList * GetList () const;  ; virtual TList * GetListOfKeys () const;  ; TObject * GetMother () const;  ; TDirectory * GetMotherDir () const;  ; virtual Int_t GetNbytesKeys () const;  ; virtual Int_t GetNkeys () const;  ; template<class T > ; void GetObject (const char *namecycle, T *&ptr);  Get an object with proper type checking. ;  ; virtual void * GetObjectChecked (const char *namecycle, const char *classname);  See documentation of TDirectory::GetObjectCheck(const char *namecycle, const TClass *cl) ;  ; virtual void * GetObjectChecked (const char *namecycle, const TClass *cl);  Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ;  ; virtual void * GetObjectUnchecked (const char *namecycle);  Return pointer to object identified by namecycle. ;  ; virtual const char * GetPath () const;  Returns the full path of the directory. ;  ; virtual const char * GetPathStatic () const;  Returns the full path of the directory. ;  ; virtual Long64_t GetSeekDir () const;  ; virtual Long64_t GetSeekKeys () const;  ; virtual Long64_t GetSeekParent () const;  ; TUUID GetUUID () const;  ; TClass * IsA () const override;  ; Bool_t IsBuilt () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; virtual Bool_t IsModified () const;  ; virtual Bool_t IsWritable () const;  ; void ls (Option_t *option="""") const over",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:27945,Performance,load,load,27945,"ss(). static TClass * TDirectory::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDirectory::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDirectory::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 308 of file TDirectory.h. ◆ CleanTargets(). void TDirectory::CleanTargets ; (; ). protected . Clean the pointers to this object (gDirectory, TContext, etc.). ; Definition at line 264 of file TDirectory.cxx. ◆ Clear(). void TDirectory::Clear ; (; Option_t * ; option = """"). overridevirtual . Delete all objects from a Directory list. ; Reimplemented from TObject.; Definition at line 634 of file TDirectory.cxx. ◆ CloneObject(). TObject * TDirectory::CloneObject ; (; const TObject * ; obj, . Bool_t ; autoadd = kTRUE . ). virtual . Clone an object. ; This function is called when the directory is not a TDirectoryFile. This version has to load the I/O package, hence via Cling.; If autoadd is true and if the object class has a DirectoryAutoAdd function, it will be called at the end of the function with the parameter gDirector. This usually means that the object will be appended to the current ROOT directory. ; Reimplemented in TDirectoryFile.; Definition at line 364 of file TDirectory.cxx. ◆ Close(). void TDirectory::Close ; (; Option_t * ; option = """"). virtual . Delete all objects from memory and directory structure itself. ; if option is ""slow"", iterate through the containers in a way to can handle 'external' modification (induced by recursions) if option is ""nodelete"", write the TDirectory but do not delete the contained objects. ; Reimplemented in TSQLFile, TXMLFile, TDirectoryFile, TFile, TNetFile, TParallelMergingFile, and TWebFile.; Definition at line 645 of file TDirectory.cxx. ◆ Copy(). void TDirectory::Copy ; (; TObject & ; object); const. inlineoverridevirtual . Copy this to obj. ; Reimplemented from TObject.; Reimple",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:38095,Performance,perform,performed,38095,"GetNkeys ; (; ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definition at line 227 of file TDirectory.h. ◆ GetObject(). template<class T > . void TDirectory::GetObject ; (; const char * ; namecycle, . T *& ; ptr . ). inline . Get an object with proper type checking. ; If the object doesn't exist in the file or if the type doesn't match, a nullptr is returned. Also see TDirectory::Get(). ; Definition at line 212 of file TDirectory.h. ◆ GetObjectChecked() [1/2]. void * TDirectory::GetObjectChecked ; (; const char * ; namecycle, . const char * ; classname . ). virtual . See documentation of TDirectory::GetObjectCheck(const char *namecycle, const TClass *cl) ; Reimplemented in TDirectoryFile.; Definition at line 929 of file TDirectory.cxx. ◆ GetObjectChecked() [2/2]. void * TDirectory::GetObjectChecked ; (; const char * ; namecycle, . const TClass * ; expectedClass . ). virtual . Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to the type described by the 2 arguments (i.e. cl): MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; Note: We recommend using the method TDirectory::GetObject: MyClass *obj = nullptr;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }; whatstatic const char * whatDefinition stlLoader.cc:5. Reimplemented in TDirectoryFile.; Definition at line 958 of file TDirectory.cxx. ◆ GetObjectUnchecked(). void * TDirectory::GetObjectUnchecked ; (; const char * ; namecycle). virtual . Return pointer to object identified by namecycle. ; The returned object may or may not derive fr",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:33953,Safety,avoid,avoid,33953,"dObjectAnyFile(). virtual TObject * TDirectory::FindObjectAnyFile ; (; const char * ; ); const. inlinevirtual . Reimplemented in TROOT, and TDirectoryFile.; Definition at line 202 of file TDirectory.h. ◆ Get() [1/2]. TObject * TDirectory::Get ; (; const char * ; namecycle). virtual . Return pointer to object identified by namecycle. ; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject. If not, the function TDirectory::GetObject should be called. However, this function will still work for a non-TObject, providing that the calling application cast the return type to the correct type (which is the actual type of the object).; NOTE:; The method GetObject offer better protection and avoid the need for any cast: MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }; VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>(). Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one can do: MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");; Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented in TDirectoryFile, and TDirectoryFile.; Definition at line 866 of file TDirectory.cxx. ◆ Get() [2/2]. template<class T > . T * TDirectory::Get ; (; const char * ; namecycle). inline . See documentation of TDirectoryFile::Get(const",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:52219,Safety,safe,safer,52219,"t.; The TBuffer object is filled via the class::Streamer function.; If the file is compressed (default) a second buffer is created to hold the compressed buffer.; Reservation of the corresponding space in the file by looking in the TFree list of free blocks of the file.; The buffer is written to the file. Bufsize can be given to force a given buffer size to write this object. By default, the buffersize will be taken from the average buffer size of all objects written to the current file so far.; If a name is specified, it will be the name of the key. If name is not given, the name of the key will be the name as returned by GetName().; The option can be a combination of: kSingleKey, kOverwrite or kWriteDelete Using the kOverwrite option a previous key with the same name is overwritten. The previous key is deleted before writing the new object. Using the kWriteDelete option a previous key with the same name is deleted only after the new object has been written. This option is safer than kOverwrite but it is slower. NOTE: Neither kOverwrite nor kWriteDelete reduces the size of a TFile– the space is simply freed up to be overwritten; in the case of a TTree, it is more complicated. If one opens a TTree, appends some entries, then writes it out, the behaviour is effectively the same. If, however, one creates a new TTree and writes it out in this way, only the metadata is replaced, effectively making the old data invisible without deleting it. TTree::Delete() can be used to mark all disk space occupied by a TTree as free before overwriting its metadata this way. The kSingleKey option is only used by TCollection::Write() to write a container with a single key instead of each object in the container with its own key.; An object is read from the file into memory via TKey::Read() or via TObject::Read().; The function returns the total number of bytes written to the file. It returns 0 if the object cannot be written. ; Reimplemented from TObject.; Reimplemented in TSQLFile, TXML",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:658,Security,access,accessed,658,". ROOT: TDirectory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Friends |; List of all members ; TDirectory Class ReferenceCore ROOT classes » Base ROOT classes. ; Describe directory structure in memory. . PyROOT; It is possible to retrieve the content of a TDirectory object just like getting items from a Python dictionary. Moreover, once a subdirectory or object is accessed for the first time, it is cached for later use. For example, assuming d is a TDirectory instance: # Access a subdirectory; d[""subdir""]; ; # We can go further down in the hierarchy of directories; d[""subdir""][""subsubdir""]; ; # Access an object (e.g. a histogram) in the directory; d[""obj""]; ; # ... or in a subdirectory; d[""subdir""][""obj""]; ; # Wrong key: raises KeyError; d[""wrongAttr""]; Furthermore, TDirectory implements a WriteObject Python method which relies on TDirectory::WriteObjectAny. This method is a no-op for TDirectory objects, but it is useful for objects of TDirectory subclasses such as TDirectoryFile and TFile, which inherit it. Please refer to the documentation of those classes for more information. . Definition at line 45 of file TDirectory.h. Classes; class  TContext;  TDirectory::TContext keeps track and restore the current directory. More...;  . Public Member Functions;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; virtual void Add (TObject *obj, Bool_t replace=kFALSE);  ; virtual void Append (TObject *obj, Bool_t replace=kFALSE);  Append object to this directory. ;  ; virtual Int_t AppendKey (TKey *);  ; void Browse (",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:9728,Security,hash,hash,9728,"st TObject *obj, const char *name=nullptr, Option_t *="""", Int_t=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectory.html:52343,Usability,simpl,simply,52343,"d buffer is created to hold the compressed buffer.; Reservation of the corresponding space in the file by looking in the TFree list of free blocks of the file.; The buffer is written to the file. Bufsize can be given to force a given buffer size to write this object. By default, the buffersize will be taken from the average buffer size of all objects written to the current file so far.; If a name is specified, it will be the name of the key. If name is not given, the name of the key will be the name as returned by GetName().; The option can be a combination of: kSingleKey, kOverwrite or kWriteDelete Using the kOverwrite option a previous key with the same name is overwritten. The previous key is deleted before writing the new object. Using the kWriteDelete option a previous key with the same name is deleted only after the new object has been written. This option is safer than kOverwrite but it is slower. NOTE: Neither kOverwrite nor kWriteDelete reduces the size of a TFile– the space is simply freed up to be overwritten; in the case of a TTree, it is more complicated. If one opens a TTree, appends some entries, then writes it out, the behaviour is effectively the same. If, however, one creates a new TTree and writes it out in this way, only the metadata is replaced, effectively making the old data invisible without deleting it. TTree::Delete() can be used to mark all disk space occupied by a TTree as free before overwriting its metadata this way. The kSingleKey option is only used by TCollection::Write() to write a container with a single key instead of each object in the container with its own key.; An object is read from the file into memory via TKey::Read() or via TObject::Read().; The function returns the total number of bytes written to the file. It returns 0 if the object cannot be written. ; Reimplemented from TObject.; Reimplemented in TSQLFile, TXMLFile, TFile, TParallelMergingFile, and TDirectoryFile.; Definition at line 265 of file TDirectory.h. ◆ Write() ",MatchSource.WIKI,doc/master/classTDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory.html
https://root.cern/doc/master/classTDirectoryFile-members.html:2588,Availability,error,error,2588,"virtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryFileinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryFileinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirectoryFilevirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTDirectoryvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTDirectoryFile; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBufferSizeTDirectoryFileprotected; fContextTDirectoryprotected; fContextPegTDirectoryprotected; fDatimeCTDirectoryFileprotected; fDatimeMTDirectoryFileprotected; fFileTDirectoryFileprotected; fgAddDirectoryTDirectoryprotectedstatic; fGDirectoriesTDirectoryprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer) overrideTDirectoryFilevirtual; FillFullPath(TString &buf) constTDirectoryprotected; FindKey(const char *keyname) const overrideTDirectoryFilevirtual; FindKeyAny(const char *keyname) const overrideTDirectoryFilevirtual; FindObject(const char *name) const overrideTDirectoryvirtual; FindObject(const TObject *obj) const overrideTDirectoryvirtual; FindObjectAny(const char *name) const overrideTDirectoryFilevirtual; FindObjectAnyF",MatchSource.WIKI,doc/master/classTDirectoryFile-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile-members.html
https://root.cern/doc/master/classTDirectoryFile-members.html:2669,Availability,error,error,2669,"virtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryFileinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryFileinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirectoryFilevirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTDirectoryvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTDirectoryFile; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBufferSizeTDirectoryFileprotected; fContextTDirectoryprotected; fContextPegTDirectoryprotected; fDatimeCTDirectoryFileprotected; fDatimeMTDirectoryFileprotected; fFileTDirectoryFileprotected; fgAddDirectoryTDirectoryprotectedstatic; fGDirectoriesTDirectoryprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer) overrideTDirectoryFilevirtual; FillFullPath(TString &buf) constTDirectoryprotected; FindKey(const char *keyname) const overrideTDirectoryFilevirtual; FindKeyAny(const char *keyname) const overrideTDirectoryFilevirtual; FindObject(const char *name) const overrideTDirectoryvirtual; FindObject(const TObject *obj) const overrideTDirectoryvirtual; FindObjectAny(const char *name) const overrideTDirectoryFilevirtual; FindObjectAnyF",MatchSource.WIKI,doc/master/classTDirectoryFile-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile-members.html
https://root.cern/doc/master/classTDirectoryFile-members.html:201,Modifiability,inherit,inherited,201,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectoryFile Member List. This is the complete list of members for TDirectoryFile, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFileinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFilevirtual; AppendKey(TKey *key) overrideTDirectoryFilevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTDirectoryFilevirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) overrideTDirectoryFileinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; BuildDirectoryFile(TFile *motherFile, TDirectory *motherDir)TDirectoryFileprotected; Cd(const char *path)TDirectorystatic; cd() overrideTDirectoryFilevirtual; cd(const char *path) overrideTDirectoryFilevirtual; cd1(const char *path)TDirectoryprotected; Cd1(const char *path)TDirectoryprotectedstatic; CheckedHash()TObjectinline; Class()TDirectoryFilestatic; Class_Name()TDirectoryFilestatic; Class_Version()TDirectoryFileinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryFileprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE) overrideTDirectoryFilevirtual; Close(Option_t *option="""") overrideTDirectoryFilevirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryFileinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryFileinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirector",MatchSource.WIKI,doc/master/classTDirectoryFile-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile-members.html
https://root.cern/doc/master/classTDirectoryFile.html:1202,Availability,down,down,1202,"mber Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TDirectoryFile Class ReferenceInput/Output Library. ; A ROOT file is structured in Directories (like a file system). ; Each Directory has a list of Keys (see TKeys) and a list of objects in memory. A Key is a small object that describes the type and location of a persistent object in a file. The persistent object may be a directory. The structure of a file is shown in TFile::TFile. PyROOT; In the same way as for TDirectory, it is possible to inspect the content of a TDirectoryFile object from Python as if the subdirectories and objects it contains were its attributes. For more information, please refer to the TDirectory documentation.; In addition to the attribute syntax, one can inspect a TDirectoryFile in Python via the Get method. In this case, the subdirectory/object name is specified as a string: # Access a subdirectory; d.Get('subdir'); ; # We can go further down in the hierarchy of directories; d.Get('subdir/subsubdir'); ; # Access an object (e.g. a histogram) in the directory; d.Get('obj'); ; # ... or in a subdirectory; d.Get('subdir/obj'); ; # Wrong attribute: returns null; x = d.Get('wrongAttr') # x points to null; Furthermore, TDirectoryFile inherits a WriteObject Python method from TDirectory. Such method allows to write an object into a TDirectoryFile with the following syntax: # Write object obj with identifier 'keyName'; d.WriteObject(obj, 'keyName'). Definition at line 32 of file TDirectoryFile.h. Public Types; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:14519,Availability,error,error,14519," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:14608,Availability,error,error,14608,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out.",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:14763,Availability,error,error,14763,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:15060,Availability,error,error,15060,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:18595,Availability,error,error,18595," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:36168,Availability,error,error,36168,"nst. overridevirtual . Return the buffer size to create new TKeys. ; If the stored fBufferSize is null, the value returned is the average buffer size of objects in the file so far. ; Reimplemented from TDirectory.; Definition at line 1124 of file TDirectoryFile.cxx. ◆ GetCreationDate(). const TDatime & TDirectoryFile::GetCreationDate ; (; ); const. inline . Definition at line 91 of file TDirectoryFile.h. ◆ GetDirectory(). TDirectory * TDirectoryFile::GetDirectory ; (; const char * ; apath, . Bool_t ; printError = false, . const char * ; funcname = ""GetDirectory"" . ). overridevirtual . Find a directory named ""apath"". ; It apath is null or empty, returns ""this"" directory. Otherwise use the name ""apath"" to find a directory. The absolute path syntax is: file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory in the file. Relative syntax is relative to ""this"" directory. E.g: ../aa. Returns 0 in case path does not exist. If printError is true, use Error with 'funcname' to issue an error message. ; Reimplemented from TDirectory.; Definition at line 471 of file TDirectoryFile.cxx. ◆ GetFile(). TFile * TDirectoryFile::GetFile ; (; ); const. inlineoverridevirtual . Reimplemented from TDirectory.; Definition at line 92 of file TDirectoryFile.h. ◆ GetKey(). TKey * TDirectoryFile::GetKey ; (; const char * ; name, . Short_t ; cycle = 9999 . ); const. overridevirtual . Return pointer to key with name,cycle. ; if cycle = 9999 returns highest cycle ; Reimplemented from TDirectory.; Definition at line 1136 of file TDirectoryFile.cxx. ◆ GetListOfKeys(). TList * TDirectoryFile::GetListOfKeys ; (; ); const. inlineoverridevirtual . Reimplemented from TDirectory.; Definition at line 94 of file TDirectoryFile.h. ◆ GetModificationDate(). const TDatime & TDirectoryFile::GetModificationDate ; (; ); const. inline . Definition at line 95 of file TDirectoryFile.h. ◆ GetNbytesKeys(). Int_t TDirectoryFile::GetNbytesKeys ; (; ); const. inlineoverridevirtual . Reimp",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:41695,Availability,error,error,41695,"lineoverridevirtual . Reimplemented from TDirectory.; Definition at line 102 of file TDirectoryFile.h. ◆ ls(). void TDirectoryFile::ls ; (; Option_t * ; option = """"); const. overridevirtual . List Directory contents. ; Indentation is used to identify the directory tree Subdirectories are listed first, then objects in memory, then objects on the file; The option can has the following format: [-d |-m][<regexp>] Options:; -d: only list objects in the file; -m: only list objects in memory The <regexp> will be used to match the name of the objects. By default memory and disk objects are listed. . Reimplemented from TDirectory.; Reimplemented in TFile.; Definition at line 1171 of file TDirectoryFile.cxx. ◆ mkdir(). TDirectory * TDirectoryFile::mkdir ; (; const char * ; name, . const char * ; title = """", . Bool_t ; returnExistingDirectory = kFALSE . ). overridevirtual . Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."". ; Returns 0 in case of error or if a sub-directory (hierarchy) with the requested name already exists. returnExistingDirectory returns a pointer to an already existing sub-directory instead of 0. Returns a pointer to the created sub-directory or to the top sub-directory of the hierarchy (in the above example, the returned TDirectory * always points to ""a""). ; Reimplemented from TDirectory.; Definition at line 1249 of file TDirectoryFile.cxx. ◆ OpenFile(). TFile * TDirectoryFile::OpenFile ; (; const char * ; name, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, . Int_t ; netopt = 0 . ). overridevirtual . Interface to TFile::Open. ; Reimplemented from TDirectory.; Definition at line 1233 of file TDirectoryFile.cxx. ◆ operator=(). void TDirectoryFile::operator= ; (; const TDirectoryFile & ; ). privatedelete . ◆ Purge(). void TDirectoryFile::Purge ; (; Short_t ; nkeep = 1). overridevirtual . Purge lowest key cycles in a directory. ; By default, only t",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:44220,Deployability,update,updates,44220,"y copy is deleted and the object is again read from the file. If opt==""dirs"", only subdirectories will be read If opt==""dirs*"" complete directory tree will be read ; Reimplemented from TDirectory.; Definition at line 1326 of file TDirectoryFile.cxx. ◆ ReadKeys(). Int_t TDirectoryFile::ReadKeys ; (; Bool_t ; forceRead = kTRUE). overridevirtual . Read the linked list of keys. ; Every directory has a linked list (fKeys). This linked list has been written on the file via WriteKeys as a single data record.; It is interesting to call this function in the following situation. Assume another process1 is connecting this directory in Update mode; Process1 is adding/updating objects in this directory; You want to see the latest status from process1. Example Process1: obj1.Write();; obj2.Write();; gDirectory->SaveSelf();; gDirectory#define gDirectoryDefinition TDirectory.h:384. Example Process2: gDirectory->ReadKeys();; obj1->Draw();; This is an efficient way (without opening/closing files) to view the latest updates of a file being modified by another process as it is typically the case in a data acquisition system. ; Reimplemented from TDirectory.; Definition at line 1379 of file TDirectoryFile.cxx. ◆ ReadTObject(). Int_t TDirectoryFile::ReadTObject ; (; TObject * ; obj, . const char * ; keyname . ). overridevirtual . Read object with keyname from the current directory. ; Read contents of object with specified name from the current directory. First the key with keyname is searched in the current directory, next the key buffer is deserialized into the object. The object must have been created before via the default constructor. See TObject::Write(). ; Reimplemented from TDirectory.; Definition at line 1465 of file TDirectoryFile.cxx. ◆ ResetAfterMerge(). void TDirectoryFile::ResetAfterMerge ; (; TFileMergeInfo * ; info). virtual . Reset the TDirectory after its content has been merged into another Directory. ; This returns the TDirectoryFile object back to its state before any",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:42857,Energy Efficiency,reduce,reduce,42857,"r to the created sub-directory or to the top sub-directory of the hierarchy (in the above example, the returned TDirectory * always points to ""a""). ; Reimplemented from TDirectory.; Definition at line 1249 of file TDirectoryFile.cxx. ◆ OpenFile(). TFile * TDirectoryFile::OpenFile ; (; const char * ; name, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, . Int_t ; netopt = 0 . ). overridevirtual . Interface to TFile::Open. ; Reimplemented from TDirectory.; Definition at line 1233 of file TDirectoryFile.cxx. ◆ operator=(). void TDirectoryFile::operator= ; (; const TDirectoryFile & ; ). privatedelete . ◆ Purge(). void TDirectoryFile::Purge ; (; Short_t ; nkeep = 1). overridevirtual . Purge lowest key cycles in a directory. ; By default, only the highest cycle of a key is kept. Keys for which the ""KEEP"" flag has been set are not removed. See TKey::Keep(). NOTE: This does not reduce the size of a TFile– the space is simply freed up to be overwritten. ; Reimplemented from TDirectory.; Definition at line 1290 of file TDirectoryFile.cxx. ◆ ReadAll(). void TDirectoryFile::ReadAll ; (; Option_t * ; opt = """"). overridevirtual . Read objects from a ROOT file directory into memory. ; If an object is already in memory, the memory copy is deleted and the object is again read from the file. If opt==""dirs"", only subdirectories will be read If opt==""dirs*"" complete directory tree will be read ; Reimplemented from TDirectory.; Definition at line 1326 of file TDirectoryFile.cxx. ◆ ReadKeys(). Int_t TDirectoryFile::ReadKeys ; (; Bool_t ; forceRead = kTRUE). overridevirtual . Read the linked list of keys. ; Every directory has a linked list (fKeys). This linked list has been written on the file via WriteKeys as a single data record.; It is interesting to call this function in the following situation. Assume another process1 is connecting this directory in Update mode; Process1 is adding/updating obje",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:44155,Energy Efficiency,efficient,efficient,44155,"y copy is deleted and the object is again read from the file. If opt==""dirs"", only subdirectories will be read If opt==""dirs*"" complete directory tree will be read ; Reimplemented from TDirectory.; Definition at line 1326 of file TDirectoryFile.cxx. ◆ ReadKeys(). Int_t TDirectoryFile::ReadKeys ; (; Bool_t ; forceRead = kTRUE). overridevirtual . Read the linked list of keys. ; Every directory has a linked list (fKeys). This linked list has been written on the file via WriteKeys as a single data record.; It is interesting to call this function in the following situation. Assume another process1 is connecting this directory in Update mode; Process1 is adding/updating objects in this directory; You want to see the latest status from process1. Example Process1: obj1.Write();; obj2.Write();; gDirectory->SaveSelf();; gDirectory#define gDirectoryDefinition TDirectory.h:384. Example Process2: gDirectory->ReadKeys();; obj1->Draw();; This is an efficient way (without opening/closing files) to view the latest updates of a file being modified by another process as it is typically the case in a data acquisition system. ; Reimplemented from TDirectory.; Definition at line 1379 of file TDirectoryFile.cxx. ◆ ReadTObject(). Int_t TDirectoryFile::ReadTObject ; (; TObject * ; obj, . const char * ; keyname . ). overridevirtual . Read object with keyname from the current directory. ; Read contents of object with specified name from the current directory. First the key with keyname is searched in the current directory, next the key buffer is deserialized into the object. The object must have been created before via the default constructor. See TObject::Write(). ; Reimplemented from TDirectory.; Definition at line 1465 of file TDirectoryFile.cxx. ◆ ResetAfterMerge(). void TDirectoryFile::ResetAfterMerge ; (; TFileMergeInfo * ; info). virtual . Reset the TDirectory after its content has been merged into another Directory. ; This returns the TDirectoryFile object back to its state before any",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:14525,Integrability,message,message,14525," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:15066,Integrability,message,message,15066,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:15856,Integrability,message,message,15856,". ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:18601,Integrability,message,message,18601," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:18974,Integrability,message,message,18974," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""a",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:36174,Integrability,message,message,36174,"nst. overridevirtual . Return the buffer size to create new TKeys. ; If the stored fBufferSize is null, the value returned is the average buffer size of objects in the file so far. ; Reimplemented from TDirectory.; Definition at line 1124 of file TDirectoryFile.cxx. ◆ GetCreationDate(). const TDatime & TDirectoryFile::GetCreationDate ; (; ); const. inline . Definition at line 91 of file TDirectoryFile.h. ◆ GetDirectory(). TDirectory * TDirectoryFile::GetDirectory ; (; const char * ; apath, . Bool_t ; printError = false, . const char * ; funcname = ""GetDirectory"" . ). overridevirtual . Find a directory named ""apath"". ; It apath is null or empty, returns ""this"" directory. Otherwise use the name ""apath"" to find a directory. The absolute path syntax is: file.root:/dir1/dir2; where file.root is the file and /dir1/dir2 the desired subdirectory in the file. Relative syntax is relative to ""this"" directory. E.g: ../aa. Returns 0 in case path does not exist. If printError is true, use Error with 'funcname' to issue an error message. ; Reimplemented from TDirectory.; Definition at line 471 of file TDirectoryFile.cxx. ◆ GetFile(). TFile * TDirectoryFile::GetFile ; (; ); const. inlineoverridevirtual . Reimplemented from TDirectory.; Definition at line 92 of file TDirectoryFile.h. ◆ GetKey(). TKey * TDirectoryFile::GetKey ; (; const char * ; name, . Short_t ; cycle = 9999 . ); const. overridevirtual . Return pointer to key with name,cycle. ; if cycle = 9999 returns highest cycle ; Reimplemented from TDirectory.; Definition at line 1136 of file TDirectoryFile.cxx. ◆ GetListOfKeys(). TList * TDirectoryFile::GetListOfKeys ; (; ); const. inlineoverridevirtual . Reimplemented from TDirectory.; Definition at line 94 of file TDirectoryFile.h. ◆ GetModificationDate(). const TDatime & TDirectoryFile::GetModificationDate ; (; ); const. inline . Definition at line 95 of file TDirectoryFile.h. ◆ GetNbytesKeys(). Int_t TDirectoryFile::GetNbytesKeys ; (; ); const. inlineoverridevirtual . Reimp",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:46487,Integrability,message,message,46487,"directory from the directory. ; When directory is deleted, all keys in all subdirectories will be read first and deleted from file (if exists) Equivalent call is Delete(""name;*""); ; Reimplemented from TDirectory.; Definition at line 1540 of file TDirectoryFile.cxx. ◆ Save(). void TDirectoryFile::Save ; (; ). overridevirtual . Save recursively all directory keys and headers. ; Reimplemented from TDirectory.; Definition at line 1552 of file TDirectoryFile.cxx. ◆ SaveObjectAs(). Int_t TDirectoryFile::SaveObjectAs ; (; const TObject * ; obj, . const char * ; filename = """", . Option_t * ; option = """" . ); const. overridevirtual . Save object in filename. ; If filename is nullptr or """", a file with ""<objectname>.root"" is created. The name of the key is the object name. By default new file will be created. Using option ""a"", one can append object to the existing ROOT file. If the operation is successful, it returns the number of bytes written to the file otherwise it returns 0. By default a message is printed. Use option ""q"" to not print the message. If filename contains "".json"" extension, JSON representation of the object will be created and saved in the text file. Such file can be used in JavaScript ROOT (https://root.cern/js/) to display object in web browser When creating JSON file, option string may contain compression level from 0 to 3 (default 0) ; Reimplemented from TDirectory.; Definition at line 1587 of file TDirectoryFile.cxx. ◆ SaveSelf(). void TDirectoryFile::SaveSelf ; (; Bool_t ; force = kFALSE). overridevirtual . Save Directory keys and header. ; If the directory has been modified (fModified set), write the keys and the directory header. This function assumes the cd is correctly set.; It is recommended to use this function in the following situation: Assume a process1 using a directory in Update mode; New objects or modified objects have been written to the directory.; You do not want to close the file.; You want your changes be visible from another process2 ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:46539,Integrability,message,message,46539,"directory is deleted, all keys in all subdirectories will be read first and deleted from file (if exists) Equivalent call is Delete(""name;*""); ; Reimplemented from TDirectory.; Definition at line 1540 of file TDirectoryFile.cxx. ◆ Save(). void TDirectoryFile::Save ; (; ). overridevirtual . Save recursively all directory keys and headers. ; Reimplemented from TDirectory.; Definition at line 1552 of file TDirectoryFile.cxx. ◆ SaveObjectAs(). Int_t TDirectoryFile::SaveObjectAs ; (; const TObject * ; obj, . const char * ; filename = """", . Option_t * ; option = """" . ); const. overridevirtual . Save object in filename. ; If filename is nullptr or """", a file with ""<objectname>.root"" is created. The name of the key is the object name. By default new file will be created. Using option ""a"", one can append object to the existing ROOT file. If the operation is successful, it returns the number of bytes written to the file otherwise it returns 0. By default a message is printed. Use option ""q"" to not print the message. If filename contains "".json"" extension, JSON representation of the object will be created and saved in the text file. Such file can be used in JavaScript ROOT (https://root.cern/js/) to display object in web browser When creating JSON file, option string may contain compression level from 0 to 3 (default 0) ; Reimplemented from TDirectory.; Definition at line 1587 of file TDirectoryFile.cxx. ◆ SaveSelf(). void TDirectoryFile::SaveSelf ; (; Bool_t ; force = kFALSE). overridevirtual . Save Directory keys and header. ; If the directory has been modified (fModified set), write the keys and the directory header. This function assumes the cd is correctly set.; It is recommended to use this function in the following situation: Assume a process1 using a directory in Update mode; New objects or modified objects have been written to the directory.; You do not want to close the file.; You want your changes be visible from another process2 already connected to this directory i",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:1496,Modifiability,inherit,inherits,1496,"and a list of objects in memory. A Key is a small object that describes the type and location of a persistent object in a file. The persistent object may be a directory. The structure of a file is shown in TFile::TFile. PyROOT; In the same way as for TDirectory, it is possible to inspect the content of a TDirectoryFile object from Python as if the subdirectories and objects it contains were its attributes. For more information, please refer to the TDirectory documentation.; In addition to the attribute syntax, one can inspect a TDirectoryFile in Python via the Get method. In this case, the subdirectory/object name is specified as a string: # Access a subdirectory; d.Get('subdir'); ; # We can go further down in the hierarchy of directories; d.Get('subdir/subsubdir'); ; # Access an object (e.g. a histogram) in the directory; d.Get('obj'); ; # ... or in a subdirectory; d.Get('subdir/obj'); ; # Wrong attribute: returns null; x = d.Get('wrongAttr') # x points to null; Furthermore, TDirectoryFile inherits a WriteObject Python method from TDirectory. Such method allows to write an object into a TDirectoryFile with the following syntax: # Write object obj with identifier 'keyName'; d.WriteObject(obj, 'keyName'). Definition at line 32 of file TDirectoryFile.h. Public Types; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member F",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:1851,Modifiability,inherit,inherited,1851,"ributes. For more information, please refer to the TDirectory documentation.; In addition to the attribute syntax, one can inspect a TDirectoryFile in Python via the Get method. In this case, the subdirectory/object name is specified as a string: # Access a subdirectory; d.Get('subdir'); ; # We can go further down in the hierarchy of directories; d.Get('subdir/subsubdir'); ; # Access an object (e.g. a histogram) in the directory; d.Get('obj'); ; # ... or in a subdirectory; d.Get('subdir/obj'); ; # Wrong attribute: returns null; x = d.Get('wrongAttr') # x points to null; Furthermore, TDirectoryFile inherits a WriteObject Python method from TDirectory. Such method allows to write an object into a TDirectoryFile with the following syntax: # Write object obj with identifier 'keyName'; d.WriteObject(obj, 'keyName'). Definition at line 32 of file TDirectoryFile.h. Public Types; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to t",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:9124,Modifiability,inherit,inherited,9124,");  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsize=0) const override;  One can not save a const TDirectory object. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsize=0) override;  Write all objects in memory to disk. ;  ; void WriteDirHeader () override;  Overwrite the Directory header record. ;  ; void WriteKeys () override;  Write Keys linked list on the file. ;  ; Int_t WriteObjectAny (const void *obj, const char *classname, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object from pointer of class classname in this directory. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object of class with dictionary cl in this directory. ;  ; Int_t WriteTObject (const TObject *obj, const char *name=nullptr, Option_t *option="""", Int_t bufsize=0) override;  Write object obj to this directory. ;  ;  Public Member Functions inherited from TDirectory;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; void Clear (Option_t *option="""") override;  Delete all objects from a Directory list. ;  ; virtual void DeleteAll (Option_t *option="""");  Delete all objects from memory. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; TObject * FindObject (const char *name) const override;  Find object by name in the list of memory objects. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object in the list of memory objects. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; virtual TList * GetList () const;  ; TObject * GetMother () const;  ; TDirectory * GetMotherDir () const;  ; template<class T > ; void GetObject (const char *namecyc",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:11817,Modifiability,inherit,inherited,11817,"ecursively remove object from a Directory. ;  ; virtual TObject * Remove (TObject *);  Remove an object from the in-memory list. ;  ; virtual void SetMother (TObject *mother);  ; void SetName (const char *newname) override;  Set the name for directory If the directory name is changed after the directory was written once, ROOT currently would NOT change the name of correspondent key in the mother directory. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<typename T > ; std::enable_if_t<!std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; template<typename T > ; std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:13317,Modifiability,inherit,inherited,13317," *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:14155,Modifiability,inherit,inheritance,14155,"amer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:15954,Modifiability,inherit,inherits,15954," action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:16071,Modifiability,inherit,inherits,16071,"const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:19207,Modifiability,inherit,inherited,19207,"t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; st",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:20040,Modifiability,inherit,inherited,20040,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDir",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:20250,Modifiability,inherit,inherited,20250,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDir",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:21123,Modifiability,inherit,inherited,21123," * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:22012,Modifiability,inherit,inherited,22012,"ted data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nu",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:23022,Modifiability,inherit,inherited,23022,"rror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TDirectoryFile (const TDirectoryFile &directory)=delete;  ; void operator= (const TDirectoryFile &)=delete;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:23478,Modifiability,inherit,inherited,23478," fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TDirectoryFile (const TDirectoryFile &directory)=delete;  ; void operator= (const TDirectoryFile &)=delete;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:23723,Modifiability,inherit,inherited,23723,"ctory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TDirectoryFile (const TDirectoryFile &directory)=delete;  ; void operator= (const TDirectoryFile &)=delete;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDirectoryFile.h>. Inheritance diagram for TDirectoryFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TDirectoryFile::EStatusBits. EnumeratorkCloseDirectory . Definition at line 58 of fil",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:23914,Modifiability,inherit,inherited,23914,"cted Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TDirectoryFile (const TDirectoryFile &directory)=delete;  ; void operator= (const TDirectoryFile &)=delete;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDirectoryFile.h>. Inheritance diagram for TDirectoryFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TDirectoryFile::EStatusBits. EnumeratorkCloseDirectory . Definition at line 58 of file TDirectoryFile.h. Constructor & Destructor Documentation. ◆ TDirectoryFile() [1/3]. TDirectoryFile::TDirectoryFile ; (; const TDirectoryFile & ; directory). privatedelete . ◆ TDirectoryFile() [2/3]. TDirectoryFile::TDirec",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:24020,Modifiability,inherit,inherited,24020,"cted Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TDirectoryFile (const TDirectoryFile &directory)=delete;  ; void operator= (const TDirectoryFile &)=delete;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDirectoryFile.h>. Inheritance diagram for TDirectoryFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TDirectoryFile::EStatusBits. EnumeratorkCloseDirectory . Definition at line 58 of file TDirectoryFile.h. Constructor & Destructor Documentation. ◆ TDirectoryFile() [1/3]. TDirectoryFile::TDirectoryFile ; (; const TDirectoryFile & ; directory). privatedelete . ◆ TDirectoryFile() [2/3]. TDirectoryFile::TDirec",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:24365,Modifiability,inherit,inherited,24365,"ectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TDirectoryFile (const TDirectoryFile &directory)=delete;  ; void operator= (const TDirectoryFile &)=delete;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TDirectoryFile.h>. Inheritance diagram for TDirectoryFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TDirectoryFile::EStatusBits. EnumeratorkCloseDirectory . Definition at line 58 of file TDirectoryFile.h. Constructor & Destructor Documentation. ◆ TDirectoryFile() [1/3]. TDirectoryFile::TDirectoryFile ; (; const TDirectoryFile & ; directory). privatedelete . ◆ TDirectoryFile() [2/3]. TDirectoryFile::TDirectoryFile ; (; ). Default TDirectoryFile constructor. ; Definition at line 60 of file TDirectoryFile.cxx. ◆ TDirectoryFile() [3/3]. TDirectoryFile::TDirectoryFile ; (; const char * ; name, . const char * ; title, . Option_t * ; classname = """", . TDirectory * ; initMotherDir = nullptr . ). Create a new TDirectoryFile. ; A new directory with a name and a title is created in the current directory",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:34365,Modifiability,inherit,inherits,34365,"ition at line 82 of file TDirectoryFile.h. ◆ Get() [2/2]. TObject * TDirectoryFile::Get ; (; const char * ; namecycle). overridevirtual . Return pointer to object identified by namecycle. ; Properties:; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. Examples: . Pattern Explanation . foo get object named foo in memory if object is not in memory, try with highest cycle from file . foo;1 get cycle 1 of foo on file . The retrieved object should in principle derive from TObject. If not, the function TDirectoryFile::Get<T> should be called. However, this function will still work for a non-TObject, provided that the calling application cast the return type to the correct type (which is the actual type of the object). The Get<T> Method; The method Get<T> offers better protection and avoids the need for any cast: auto objPtr = directory->Get<MyClass>(""some object"");; if (objPtr) { ... the object exist and inherits from MyClass ... }. Very important note about inheritance; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>().; Example 1 - Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can adopt a C style cast: auto objPtr = (MyClass*)directory->Get(""some object of MyClass"");; Example 2 - Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: auto objPtr = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented from TDirectory.; Definition at line 937 of file TDirectoryFile.cxx. ◆ GetBufferSize(). Int_t TDirectoryFile::GetBufferSize ; (; ); const. overridevirtual . Return the buffer size to create new TKeys. ; If the stored fBufferSize is null, the value returned is the average buffer size of objects in the file so far. ; Reimplemented from TDirectory.; Definit",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:34420,Modifiability,inherit,inheritance,34420,"; namecycle). overridevirtual . Return pointer to object identified by namecycle. ; Properties:; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. Examples: . Pattern Explanation . foo get object named foo in memory if object is not in memory, try with highest cycle from file . foo;1 get cycle 1 of foo on file . The retrieved object should in principle derive from TObject. If not, the function TDirectoryFile::Get<T> should be called. However, this function will still work for a non-TObject, provided that the calling application cast the return type to the correct type (which is the actual type of the object). The Get<T> Method; The method Get<T> offers better protection and avoids the need for any cast: auto objPtr = directory->Get<MyClass>(""some object"");; if (objPtr) { ... the object exist and inherits from MyClass ... }. Very important note about inheritance; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>().; Example 1 - Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can adopt a C style cast: auto objPtr = (MyClass*)directory->Get(""some object of MyClass"");; Example 2 - Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: auto objPtr = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented from TDirectory.; Definition at line 937 of file TDirectoryFile.cxx. ◆ GetBufferSize(). Int_t TDirectoryFile::GetBufferSize ; (; ); const. overridevirtual . Return the buffer size to create new TKeys. ; If the stored fBufferSize is null, the value returned is the average buffer size of objects in the file so far. ; Reimplemented from TDirectory.; Definition at line 1124 of file TDirectoryFile.cxx. ◆ GetCreationDate(). const TDatime & TDirectoryFile::GetCrea",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:34506,Modifiability,inherit,inheritance,34506,"; namecycle). overridevirtual . Return pointer to object identified by namecycle. ; Properties:; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. Examples: . Pattern Explanation . foo get object named foo in memory if object is not in memory, try with highest cycle from file . foo;1 get cycle 1 of foo on file . The retrieved object should in principle derive from TObject. If not, the function TDirectoryFile::Get<T> should be called. However, this function will still work for a non-TObject, provided that the calling application cast the return type to the correct type (which is the actual type of the object). The Get<T> Method; The method Get<T> offers better protection and avoids the need for any cast: auto objPtr = directory->Get<MyClass>(""some object"");; if (objPtr) { ... the object exist and inherits from MyClass ... }. Very important note about inheritance; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>().; Example 1 - Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can adopt a C style cast: auto objPtr = (MyClass*)directory->Get(""some object of MyClass"");; Example 2 - Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: auto objPtr = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented from TDirectory.; Definition at line 937 of file TDirectoryFile.cxx. ◆ GetBufferSize(). Int_t TDirectoryFile::GetBufferSize ; (; ); const. overridevirtual . Return the buffer size to create new TKeys. ; If the stored fBufferSize is null, the value returned is the average buffer size of objects in the file so far. ; Reimplemented from TDirectory.; Definition at line 1124 of file TDirectoryFile.cxx. ◆ GetCreationDate(). const TDatime & TDirectoryFile::GetCrea",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:38533,Modifiability,inherit,inheriting,38533," ; (; const char * ; namecycle, . const char * ; classname . ). overridevirtual . See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl) ; Reimplemented from TDirectory.; Definition at line 1018 of file TDirectoryFile.cxx. ◆ GetObjectChecked() [2/2]. void * TDirectoryFile::GetObjectChecked ; (; const char * ; namecycle, . const TClass * ; expectedClass . ). overridevirtual . Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. . namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. Very important note; The calling application must cast the returned pointer to the type described by the 2 arguments (i.e. cl):; auto objPtr = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; Note: We recommend using the method TDirectoryFile::Get<T>: auto objPtr = directory->Get<MyClass>(""some object inheriting from MyClass"");; if (objPtr) { ... we found what we are looking for ... }; whatstatic const char * whatDefinition stlLoader.cc:5. Reimplemented from TDirectory.; Definition at line 1045 of file TDirectoryFile.cxx. ◆ GetObjectUnchecked(). void * TDirectoryFile::GetObjectUnchecked ; (; const char * ; namecycle). overridevirtual . Return pointer to object identified by namecycle. ; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. Very important note; The calling application must cast the returned object to the final type, e.g.; auto objPtr = (MyClass*)directory->GetObject(""some object of MyClass""); ; Reimplemented from TDirectory.; Definition at line 1010 of file TDirectoryFile.cxx. ◆ GetSeekDir(). Long64_t TDirectoryFile::GetSeekDir ; (; ); const. inline",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:52033,Modifiability,inherit,inheritance,52033,"plemented from TDirectory.; Definition at line 2141 of file TDirectoryFile.cxx. ◆ WriteKeys(). void TDirectoryFile::WriteKeys ; (; ). overridevirtual . Write Keys linked list on the file. ; The linked list of keys (fKeys) is written as a single data record ; Reimplemented from TDirectory.; Definition at line 2170 of file TDirectoryFile.cxx. ◆ WriteObjectAny() [1/2]. Int_t TDirectoryFile::WriteObjectAny ; (; const void * ; obj, . const char * ; classname, . const char * ; name, . Option_t * ; option = """", . Int_t ; bufsize = 0 . ). overridevirtual . Write object from pointer of class classname in this directory. ; obj may not derive from TObject. See TDirectoryFile::WriteTObject for comments. Very important note; The value passed as 'obj' needs to be from a pointer to the type described by classname. For example: TopClass *top;; BottomClass *bottom;; top = bottom;; you can do: directory->WriteObjectAny(top,""top"",""name of object"");; directory->WriteObjectAny(bottom,""bottom"",""name of object"");; BUT YOU CAN NOT DO the following since it will fail with multiple inheritance: directory->WriteObjectAny(top,""bottom"",""name of object"");; We STRONGLY recommend to use TopClass *top = ....;; directory->WriteObject(top,""name of object""); See also remarks in TDirectoryFile::WriteTObject ; Reimplemented from TDirectory.; Definition at line 2022 of file TDirectoryFile.cxx. ◆ WriteObjectAny() [2/2]. Int_t TDirectoryFile::WriteObjectAny ; (; const void * ; obj, . const TClass * ; cl, . const char * ; name, . Option_t * ; option = """", . Int_t ; bufsize = 0 . ). overridevirtual . Write object of class with dictionary cl in this directory. ; obj may not derive from TObject To get the TClass* cl pointer, one can use TClass *cl = TClass::GetClass(""classname"");; An alternative is to call the function WriteObjectAny above. see TDirectoryFile::WriteTObject for comments ; Reimplemented from TDirectory.; Definition at line 2049 of file TDirectoryFile.cxx. ◆ WriteTObject(). Int_t TDirectoryFile::W",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:5696,Performance,perform,performed,5696,"ject with name. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; TObject * Get (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Int_t GetBufferSize () const override;  Return the buffer size to create new TKeys. ;  ; const TDatime & GetCreationDate () const;  ; TDirectory * GetDirectory (const char *apath, Bool_t printError=false, const char *funcname=""GetDirectory"") override;  Find a directory named ""apath"". ;  ; TFile * GetFile () const override;  ; TKey * GetKey (const char *name, Short_t cycle=9999) const override;  Return pointer to key with name,cycle. ;  ; TList * GetListOfKeys () const override;  ; const TDatime & GetModificationDate () const;  ; Int_t GetNbytesKeys () const override;  ; Int_t GetNkeys () const override;  ; void * GetObjectChecked (const char *namecycle, const char *classname) override;  See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl) ;  ; void * GetObjectChecked (const char *namecycle, const TClass *cl) override;  Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ;  ; void * GetObjectUnchecked (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Long64_t GetSeekDir () const override;  ; Long64_t GetSeekKeys () const override;  ; Long64_t GetSeekParent () const override;  ; TClass * IsA () const override;  ; Bool_t IsModified () const override;  ; Bool_t IsWritable () const override;  ; void ls (Option_t *option="""") const override;  List Directory contents. ;  ; TDirectory * mkdir (const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE) override;  Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."". ;  ; TFile * OpenFile (const char *name, Option_t *option",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:38052,Performance,perform,performed,38052,"ationDate ; (; ); const. inline . Definition at line 95 of file TDirectoryFile.h. ◆ GetNbytesKeys(). Int_t TDirectoryFile::GetNbytesKeys ; (; ); const. inlineoverridevirtual . Reimplemented from TDirectory.; Definition at line 96 of file TDirectoryFile.h. ◆ GetNkeys(). Int_t TDirectoryFile::GetNkeys ; (; ); const. inlineoverridevirtual . Reimplemented from TDirectory.; Definition at line 97 of file TDirectoryFile.h. ◆ GetObjectChecked() [1/2]. void * TDirectoryFile::GetObjectChecked ; (; const char * ; namecycle, . const char * ; classname . ). overridevirtual . See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl) ; Reimplemented from TDirectory.; Definition at line 1018 of file TDirectoryFile.cxx. ◆ GetObjectChecked() [2/2]. void * TDirectoryFile::GetObjectChecked ; (; const char * ; namecycle, . const TClass * ; expectedClass . ). overridevirtual . Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. . namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. Very important note; The calling application must cast the returned pointer to the type described by the 2 arguments (i.e. cl):; auto objPtr = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; Note: We recommend using the method TDirectoryFile::Get<T>: auto objPtr = directory->Get<MyClass>(""some object inheriting from MyClass"");; if (objPtr) { ... we found what we are looking for ... }; whatstatic const char * whatDefinition stlLoader.cc:5. Reimplemented from TDirectory.; Definition at line 1045 of file TDirectoryFile.cxx. ◆ GetObjectUnchecked(). void * TDirectoryFile::GetObjectUnchecked ; (; const char * ; namecycle). overridevirtual . Return pointer to object identified by namecycle. ; The returned object may or may not der",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:34241,Safety,avoid,avoids,34241,"al . See documentation of TDirectoryFile::Get(const char *namecycle) ; Reimplemented from TDirectory.; Definition at line 82 of file TDirectoryFile.h. ◆ Get() [2/2]. TObject * TDirectoryFile::Get ; (; const char * ; namecycle). overridevirtual . Return pointer to object identified by namecycle. ; Properties:; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. Examples: . Pattern Explanation . foo get object named foo in memory if object is not in memory, try with highest cycle from file . foo;1 get cycle 1 of foo on file . The retrieved object should in principle derive from TObject. If not, the function TDirectoryFile::Get<T> should be called. However, this function will still work for a non-TObject, provided that the calling application cast the return type to the correct type (which is the actual type of the object). The Get<T> Method; The method Get<T> offers better protection and avoids the need for any cast: auto objPtr = directory->Get<MyClass>(""some object"");; if (objPtr) { ... the object exist and inherits from MyClass ... }. Very important note about inheritance; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>().; Example 1 - Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can adopt a C style cast: auto objPtr = (MyClass*)directory->Get(""some object of MyClass"");; Example 2 - Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: auto objPtr = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented from TDirectory.; Definition at line 937 of file TDirectoryFile.cxx. ◆ GetBufferSize(). Int_t TDirectoryFile::GetBufferSize ; (; ); const. overridevirtual . Return the buffer size to create new TKeys. ; If the stored fBufferSize is null, the value ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:54444,Safety,safe,safer,54444,".; The TBuffer object is filled via the class::Streamer function.; If the file is compressed (default) a second buffer is created to hold the compressed buffer.; Reservation of the corresponding space in the file by looking in the TFree list of free blocks of the file.; The buffer is written to the file. By default, the buffersize will be taken from the average buffer size of all objects written to the current file so far. Use TDirectoryFile::SetBufferSize to force a given buffer size.; If a name is specified, it will be the name of the key. If name is not given, the name of the key will be the name as returned by obj->GetName().; The option can be a combination of:; ""SingleKey""; ""Overwrite""; ""WriteDelete"" Using the ""Overwrite"" option a previous key with the same name is overwritten. The previous key is deleted before writing the new object. Using the ""WriteDelete"" option a previous key with the same name is deleted only after the new object has been written. This option is safer than kOverwrite but it is slower. The ""SingleKey"" option is only used by TCollection::Write() to write a container with a single key instead of each object in the container with its own key. An object is read from this directory via TDirectoryFile::Get. The function returns the total number of bytes written to the directory. It returns 0 if the object cannot be written. WARNING: avoid special characters like '^','$','.' in the name as they are used by the regular expression parser (see TRegexp). ; Reimplemented from TDirectory.; Definition at line 1909 of file TDirectoryFile.cxx. Member Data Documentation. ◆ fBufferSize. Int_t TDirectoryFile::fBufferSize {0}. protected . Default buffer size to create new TKeys. ; Definition at line 41 of file TDirectoryFile.h. ◆ fDatimeC. TDatime TDirectoryFile::fDatimeC. protected . Date and time when directory is created. ; Definition at line 37 of file TDirectoryFile.h. ◆ fDatimeM. TDatime TDirectoryFile::fDatimeM. protected . Date and time of last modifi",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:54832,Safety,avoid,avoid,54832,"ritten to the current file so far. Use TDirectoryFile::SetBufferSize to force a given buffer size.; If a name is specified, it will be the name of the key. If name is not given, the name of the key will be the name as returned by obj->GetName().; The option can be a combination of:; ""SingleKey""; ""Overwrite""; ""WriteDelete"" Using the ""Overwrite"" option a previous key with the same name is overwritten. The previous key is deleted before writing the new object. Using the ""WriteDelete"" option a previous key with the same name is deleted only after the new object has been written. This option is safer than kOverwrite but it is slower. The ""SingleKey"" option is only used by TCollection::Write() to write a container with a single key instead of each object in the container with its own key. An object is read from this directory via TDirectoryFile::Get. The function returns the total number of bytes written to the directory. It returns 0 if the object cannot be written. WARNING: avoid special characters like '^','$','.' in the name as they are used by the regular expression parser (see TRegexp). ; Reimplemented from TDirectory.; Definition at line 1909 of file TDirectoryFile.cxx. Member Data Documentation. ◆ fBufferSize. Int_t TDirectoryFile::fBufferSize {0}. protected . Default buffer size to create new TKeys. ; Definition at line 41 of file TDirectoryFile.h. ◆ fDatimeC. TDatime TDirectoryFile::fDatimeC. protected . Date and time when directory is created. ; Definition at line 37 of file TDirectoryFile.h. ◆ fDatimeM. TDatime TDirectoryFile::fDatimeM. protected . Date and time of last modification. ; Definition at line 38 of file TDirectoryFile.h. ◆ fFile. TFile* TDirectoryFile::fFile {nullptr}. protected . Pointer to current file in memory. ; Definition at line 45 of file TDirectoryFile.h. ◆ fKeys. TList* TDirectoryFile::fKeys {nullptr}. protected . Pointer to keys list in memory. ; Definition at line 46 of file TDirectoryFile.h. ◆ fModified. Bool_t TDirectoryFile::fModifie",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:12604,Security,hash,hash,12604," std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you ",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectoryFile.html:42898,Usability,simpl,simply,42898,"r to the created sub-directory or to the top sub-directory of the hierarchy (in the above example, the returned TDirectory * always points to ""a""). ; Reimplemented from TDirectory.; Definition at line 1249 of file TDirectoryFile.cxx. ◆ OpenFile(). TFile * TDirectoryFile::OpenFile ; (; const char * ; name, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, . Int_t ; netopt = 0 . ). overridevirtual . Interface to TFile::Open. ; Reimplemented from TDirectory.; Definition at line 1233 of file TDirectoryFile.cxx. ◆ operator=(). void TDirectoryFile::operator= ; (; const TDirectoryFile & ; ). privatedelete . ◆ Purge(). void TDirectoryFile::Purge ; (; Short_t ; nkeep = 1). overridevirtual . Purge lowest key cycles in a directory. ; By default, only the highest cycle of a key is kept. Keys for which the ""KEEP"" flag has been set are not removed. See TKey::Keep(). NOTE: This does not reduce the size of a TFile– the space is simply freed up to be overwritten. ; Reimplemented from TDirectory.; Definition at line 1290 of file TDirectoryFile.cxx. ◆ ReadAll(). void TDirectoryFile::ReadAll ; (; Option_t * ; opt = """"). overridevirtual . Read objects from a ROOT file directory into memory. ; If an object is already in memory, the memory copy is deleted and the object is again read from the file. If opt==""dirs"", only subdirectories will be read If opt==""dirs*"" complete directory tree will be read ; Reimplemented from TDirectory.; Definition at line 1326 of file TDirectoryFile.cxx. ◆ ReadKeys(). Int_t TDirectoryFile::ReadKeys ; (; Bool_t ; forceRead = kTRUE). overridevirtual . Read the linked list of keys. ; Every directory has a linked list (fKeys). This linked list has been written on the file via WriteKeys as a single data record.; It is interesting to call this function in the following situation. Assume another process1 is connecting this directory in Update mode; Process1 is adding/updating obje",MatchSource.WIKI,doc/master/classTDirectoryFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html
https://root.cern/doc/master/classTDirectory_1_1TContext.html:4721,Modifiability,variab,variable,4721,"or Documentation. ◆ TContext() [1/4]. TDirectory::TContext::TContext ; (; TContext & ; ). privatedelete . Pointer to the next TContext in the implied list of context pointing to fPrevious. . ◆ TContext() [2/4]. TDirectory::TContext::TContext ; (; TDirectory * ; previous, . TDirectory * ; newCurrent . ). inline . Definition at line 108 of file TDirectory.h. ◆ TContext() [3/4]. TDirectory::TContext::TContext ; (; ). inline . Definition at line 120 of file TDirectory.h. ◆ TContext() [4/4]. TDirectory::TContext::TContext ; (; TDirectory * ; newCurrent). inline . Definition at line 126 of file TDirectory.h. ◆ ~TContext(). TDirectory::TContext::~TContext ; (; ). Destructor. ; Reset the current directory to its previous state. ; Definition at line 143 of file TDirectory.cxx. Member Function Documentation. ◆ CdNull(). void TDirectory::TContext::CdNull ; (; ). private . Set the current directory to null. ; This is called from the TContext destructor. Since the destructor is inline, we do not want to have it directly use a global variable. ; Definition at line 133 of file TDirectory.cxx. ◆ operator=(). TContext & TDirectory::TContext::operator= ; (; TContext & ; ). privatedelete . ◆ RegisterCurrentDirectory(). void TDirectory::TContext::RegisterCurrentDirectory ; (; ). private . Definition at line 1344 of file TDirectory.cxx. Friends And Related Symbol Documentation. ◆ TDirectory. friend class TDirectory. friend . Definition at line 101 of file TDirectory.h. Member Data Documentation. ◆ fActiveDestructor. std::atomic<bool> TDirectory::TContext::fActiveDestructor {false}. private . Pointer to the previous current directory. ; Definition at line 92 of file TDirectory.h. ◆ fDirectory. std::atomic<TDirectory*> TDirectory::TContext::fDirectory {nullptr}. private . Definition at line 91 of file TDirectory.h. ◆ fDirectoryWait. std::atomic<bool> TDirectory::TContext::fDirectoryWait {false}. private . Set to true during the destructor execution. ; Definition at line 93 of file TDirect",MatchSource.WIKI,doc/master/classTDirectory_1_1TContext.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory_1_1TContext.html
https://root.cern/doc/master/classTDirectory_1_1TContext.html:980,Safety,safe,safe,980,". ROOT: TDirectory::TContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TDirectory::TContext Class ReferenceCore ROOT classes » Base ROOT classes. ; TDirectory::TContext keeps track and restore the current directory. ; With this tool C++ exceptions will be guaranteed to properly restore the current directory pointer.; For example code like:; TDirectory *sav = gDirectory;; mydirectory->cd();; if (...) {; ....; sav->cd();; return;; } else if (...) {; ....; sav->cd();; return;; }; sav->cd;; return;; gDirectory#define gDirectoryDefinition TDirectory.h:384; TDirectoryDescribe directory structure in memory.Definition TDirectory.h:45; TDirectory::cdvirtual Bool_t cd()Change current directory to ""this"" directory.Definition TDirectory.cxx:538; can be replaced with the simpler and exception safe:; TDirectory::TContext context(gDirectory, mydirectory);; if (...) {; ....; return;; } else if (...) {; ....; return;; }; return;; TDirectory::TContextTDirectory::TContext keeps track and restore the current directory.Definition TDirectory.h:89. PyROOT; The functionality offered by TContext can be used in PyROOT with a context manager. Here are a few examples: import ROOT; from ROOT import TDirectory; ; with TDirectory.TContext():; # Open some file here; file = ROOT.TFile(...); # Retrieve contents from the file; histo = file.Get(""myhisto""); ; # After the 'with' statement, the current directory is restored to ROOT.gROOT; ; import ROOT; from ROOT import TDirectory; ; file1 = ROOT.TFile(""file1.root"", ""recreate""); #...; file2 = ROOT.TFile(""file2.root"", ""recreate""); #...; file3 = ROOT.TFile(""file3.root"", ""recreate""); ; # Before the 'with' statement, the current directory is file3 (the last file opened); with TDirectory.TContext(file1):; # Inside the statement, the current directory is file1; histo = ROOT.T",MatchSource.WIKI,doc/master/classTDirectory_1_1TContext.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory_1_1TContext.html
https://root.cern/doc/master/classTDirectory_1_1TContext.html:3583,Security,access,access,3583,"d inside the context (e.g. it does not automatically close the file). . Definition at line 89 of file TDirectory.h. Public Member Functions;  TContext ();  ;  TContext (TDirectory *newCurrent);  ;  TContext (TDirectory *previous, TDirectory *newCurrent);  ;  ~TContext ();  Destructor. ;  . Private Member Functions;  TContext (TContext &)=delete;  Pointer to the next TContext in the implied list of context pointing to fPrevious. ;  ; void CdNull ();  Set the current directory to null. ;  ; TContext & operator= (TContext &)=delete;  ; void RegisterCurrentDirectory ();  . Private Attributes; std::atomic< bool > fActiveDestructor {false};  Pointer to the previous current directory. ;  ; std::atomic< TDirectory * > fDirectory {nullptr};  ; std::atomic< bool > fDirectoryWait {false};  Set to true during the destructor execution. ;  ; TContext * fNext {nullptr};  Pointer to the next TContext in the implied list of context pointing to fPrevious. ;  ; TContext * fPrevious {nullptr};  Set to true if a TDirectory might still access this object. ;  . Friends; class TDirectory;  . #include <TDirectory.h>; Constructor & Destructor Documentation. ◆ TContext() [1/4]. TDirectory::TContext::TContext ; (; TContext & ; ). privatedelete . Pointer to the next TContext in the implied list of context pointing to fPrevious. . ◆ TContext() [2/4]. TDirectory::TContext::TContext ; (; TDirectory * ; previous, . TDirectory * ; newCurrent . ). inline . Definition at line 108 of file TDirectory.h. ◆ TContext() [3/4]. TDirectory::TContext::TContext ; (; ). inline . Definition at line 120 of file TDirectory.h. ◆ TContext() [4/4]. TDirectory::TContext::TContext ; (; TDirectory * ; newCurrent). inline . Definition at line 126 of file TDirectory.h. ◆ ~TContext(). TDirectory::TContext::~TContext ; (; ). Destructor. ; Reset the current directory to its previous state. ; Definition at line 143 of file TDirectory.cxx. Member Function Documentation. ◆ CdNull(). void TDirectory::TContext::CdNull ; (; ). priv",MatchSource.WIKI,doc/master/classTDirectory_1_1TContext.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory_1_1TContext.html
https://root.cern/doc/master/classTDirectory_1_1TContext.html:6005,Security,access,access,6005,"current directory to its previous state. ; Definition at line 143 of file TDirectory.cxx. Member Function Documentation. ◆ CdNull(). void TDirectory::TContext::CdNull ; (; ). private . Set the current directory to null. ; This is called from the TContext destructor. Since the destructor is inline, we do not want to have it directly use a global variable. ; Definition at line 133 of file TDirectory.cxx. ◆ operator=(). TContext & TDirectory::TContext::operator= ; (; TContext & ; ). privatedelete . ◆ RegisterCurrentDirectory(). void TDirectory::TContext::RegisterCurrentDirectory ; (; ). private . Definition at line 1344 of file TDirectory.cxx. Friends And Related Symbol Documentation. ◆ TDirectory. friend class TDirectory. friend . Definition at line 101 of file TDirectory.h. Member Data Documentation. ◆ fActiveDestructor. std::atomic<bool> TDirectory::TContext::fActiveDestructor {false}. private . Pointer to the previous current directory. ; Definition at line 92 of file TDirectory.h. ◆ fDirectory. std::atomic<TDirectory*> TDirectory::TContext::fDirectory {nullptr}. private . Definition at line 91 of file TDirectory.h. ◆ fDirectoryWait. std::atomic<bool> TDirectory::TContext::fDirectoryWait {false}. private . Set to true during the destructor execution. ; Definition at line 93 of file TDirectory.h. ◆ fNext. TContext* TDirectory::TContext::fNext {nullptr}. private . Pointer to the next TContext in the implied list of context pointing to fPrevious. ; Definition at line 95 of file TDirectory.h. ◆ fPrevious. TContext* TDirectory::TContext::fPrevious {nullptr}. private . Set to true if a TDirectory might still access this object. ; Definition at line 94 of file TDirectory.h. Libraries for TDirectory::TContext:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TDirectory.h; core/base/src/TDirectory.cxx. TDirectoryTContext. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTDirectory_1_1TContext.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory_1_1TContext.html
https://root.cern/doc/master/classTDirectory_1_1TContext.html:958,Usability,simpl,simpler,958,". ROOT: TDirectory::TContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TDirectory::TContext Class ReferenceCore ROOT classes » Base ROOT classes. ; TDirectory::TContext keeps track and restore the current directory. ; With this tool C++ exceptions will be guaranteed to properly restore the current directory pointer.; For example code like:; TDirectory *sav = gDirectory;; mydirectory->cd();; if (...) {; ....; sav->cd();; return;; } else if (...) {; ....; sav->cd();; return;; }; sav->cd;; return;; gDirectory#define gDirectoryDefinition TDirectory.h:384; TDirectoryDescribe directory structure in memory.Definition TDirectory.h:45; TDirectory::cdvirtual Bool_t cd()Change current directory to ""this"" directory.Definition TDirectory.cxx:538; can be replaced with the simpler and exception safe:; TDirectory::TContext context(gDirectory, mydirectory);; if (...) {; ....; return;; } else if (...) {; ....; return;; }; return;; TDirectory::TContextTDirectory::TContext keeps track and restore the current directory.Definition TDirectory.h:89. PyROOT; The functionality offered by TContext can be used in PyROOT with a context manager. Here are a few examples: import ROOT; from ROOT import TDirectory; ; with TDirectory.TContext():; # Open some file here; file = ROOT.TFile(...); # Retrieve contents from the file; histo = file.Get(""myhisto""); ; # After the 'with' statement, the current directory is restored to ROOT.gROOT; ; import ROOT; from ROOT import TDirectory; ; file1 = ROOT.TFile(""file1.root"", ""recreate""); #...; file2 = ROOT.TFile(""file2.root"", ""recreate""); #...; file3 = ROOT.TFile(""file3.root"", ""recreate""); ; # Before the 'with' statement, the current directory is file3 (the last file opened); with TDirectory.TContext(file1):; # Inside the statement, the current directory is file1; histo = ROOT.T",MatchSource.WIKI,doc/master/classTDirectory_1_1TContext.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDirectory_1_1TContext.html
https://root.cern/doc/master/classTDispatchTimer.html:4713,Availability,error,error,4713,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:4802,Availability,error,error,4802,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:4957,Availability,error,error,4957,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:5254,Availability,error,error,5254,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:9689,Availability,error,error,9689," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:4719,Integrability,message,message,4719,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:5260,Integrability,message,message,5260,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:6462,Integrability,message,message,6462,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:9695,Integrability,message,message,9695," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:10068,Integrability,message,message,10068," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:511,Modifiability,inherit,inherited,511,". ROOT: TDispatchTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TDispatchTimer Class Reference. . Definition at line 112 of file TProofPlayer.cxx. Public Member Functions;  TDispatchTimer (TProofPlayer *p);  ; Bool_t Notify () override;  Handle expiration of the timer associated with dispatching pending events while processing. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t ",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:2484,Modifiability,inherit,inherited,2484,"Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:2952,Modifiability,inherit,inherited,2952,"(TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer ",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:4349,Modifiability,inherit,inheritance,4349,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:6560,Modifiability,inherit,inherits,6560,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:6677,Modifiability,inherit,inherits,6677,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:10375,Modifiability,inherit,inherited,10375," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:12409,Modifiability,inherit,inherited,12409,"onst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofPlayer * fPlayer;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:13065,Modifiability,inherit,inherited,13065,"r of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofPlayer * fPlayer;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:13449,Modifiability,inherit,inherited,13449,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:13667,Modifiability,inherit,inherited,13667,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:14185,Modifiability,inherit,inherited,14185,"ar * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:15345,Modifiability,inherit,inherited,15345,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:15444,Modifiability,inherit,inherited,15444,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:15655,Modifiability,inherit,inherited,15655,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:15768,Modifiability,inherit,inherited,15768,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:16617,Modifiability,inherit,inherited,16617,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TDispatchTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDispatchTimer(). TDispatchTimer::TDispatchTimer ; (; TProofPlayer * ; p). inline . Definition at line 117 of file TProofPlayer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDispatchTimer::Notify ; (; ). overridevirtual . Handle expiration of the timer associated with dispatching pending events while processing. ; We must act as fast as possible here, so we just set a flag submitting a request for dispatching pending events ; Implements TSysEvtHandler.; Definition at line 126 of file TProofPlayer.cxx. Member Data Documentation.",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:16820,Modifiability,inherit,inherited,16820,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TDispatchTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDispatchTimer(). TDispatchTimer::TDispatchTimer ; (; TProofPlayer * ; p). inline . Definition at line 117 of file TProofPlayer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDispatchTimer::Notify ; (; ). overridevirtual . Handle expiration of the timer associated with dispatching pending events while processing. ; We must act as fast as possible here, so we just set a flag submitting a request for dispatching pending events ; Implements TSysEvtHandler.; Definition at line 126 of file TProofPlayer.cxx. Member Data Documentation.",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:17033,Modifiability,inherit,inherited,17033,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TDispatchTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDispatchTimer(). TDispatchTimer::TDispatchTimer ; (; TProofPlayer * ; p). inline . Definition at line 117 of file TProofPlayer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDispatchTimer::Notify ; (; ). overridevirtual . Handle expiration of the timer associated with dispatching pending events while processing. ; We must act as fast as possible here, so we just set a flag submitting a request for dispatching pending events ; Implements TSysEvtHandler.; Definition at line 126 of file TProofPlayer.cxx. Member Data Documentation.",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:2112,Safety,timeout,timeout,2112,"r * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (co",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDispatchTimer.html:6191,Security,hash,hash,6191," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDispatchTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html
https://root.cern/doc/master/classTDNDData.html:2498,Availability,error,error,2498,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:2587,Availability,error,error,2587,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:2742,Availability,error,error,2742,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:3039,Availability,error,error,3039,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:7603,Availability,error,error,7603," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:2504,Integrability,message,message,2504,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:3045,Integrability,message,message,3045,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:4247,Integrability,message,message,4247,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:7609,Integrability,message,message,7609," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:7982,Integrability,message,message,7982," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Publi",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:737,Modifiability,inherit,inherited,737,". ROOT: TDNDData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TDNDData Class ReferenceGUI » Low level GUI widgets. ; Drag and drop data container. ; Definition at line 64 of file TGDNDManager.h. Public Member Functions;  TDNDData (Atom_t dt=kNone, void *d=nullptr, Int_t len=0, Atom_t act=kNone);  ;  ~TDNDData () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:2134,Modifiability,inherit,inheritance,2134,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:4345,Modifiability,inherit,inherits,4345,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:4462,Modifiability,inherit,inherits,4462,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:8483,Modifiability,inherit,inherited,8483,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Atom_t fAction;  Action description. ;  ; void * fData;  Actual data. ;  ; Int_t fDataLength;  Length of data. ;  ; Atom_t fDataType;  Data type description. ;  . Private Member Functions;  TDNDData (const TDNDData &)=delete;  ; TDNDData & operator= (const TDNDData &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum ",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:9312,Modifiability,inherit,inherited,9312,"texpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Atom_t fAction;  Action description. ;  ; void * fData;  Actual data. ;  ; Int_t fDataLength;  Length of data. ;  ; Atom_t fDataType;  Data type description. ;  . Private Member Functions;  TDNDData (const TDNDData &)=delete;  ; TDNDData & operator= (const TDNDData &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGDNDManager.h>. Inheritance diagram for TDNDData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera in",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:9953,Modifiability,inherit,inherited,9953,"t fDataLength;  Length of data. ;  ; Atom_t fDataType;  Data type description. ;  . Private Member Functions;  TDNDData (const TDNDData &)=delete;  ; TDNDData & operator= (const TDNDData &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGDNDManager.h>. Inheritance diagram for TDNDData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDNDData() [1/2]. TDNDData::TDNDData ; (; const TDNDData & ; ). privatedelete . ◆ TDNDData() [2/2]. TDNDData::TDNDData ; (; Atom_t ; dt = kNone, . void * ; d = nullptr, . Int_t ; len = 0, . Atom_t ; act = kNone . ). inline . Definition at line 70 of file TGDNDManager.h. ◆ ~TDNDData(). TDNDData::~TDNDData ; (; ). inlineoverride . Definition at line 72 of file TGDNDManager.h. Member Function Documentation. ◆ Class(). static TClass * TDNDData::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDNDData::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:10052,Modifiability,inherit,inherited,10052,"t fDataLength;  Length of data. ;  ; Atom_t fDataType;  Data type description. ;  . Private Member Functions;  TDNDData (const TDNDData &)=delete;  ; TDNDData & operator= (const TDNDData &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGDNDManager.h>. Inheritance diagram for TDNDData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDNDData() [1/2]. TDNDData::TDNDData ; (; const TDNDData & ; ). privatedelete . ◆ TDNDData() [2/2]. TDNDData::TDNDData ; (; Atom_t ; dt = kNone, . void * ; d = nullptr, . Int_t ; len = 0, . Atom_t ; act = kNone . ). inline . Definition at line 70 of file TGDNDManager.h. ◆ ~TDNDData(). TDNDData::~TDNDData ; (; ). inlineoverride . Definition at line 72 of file TGDNDManager.h. Member Function Documentation. ◆ Class(). static TClass * TDNDData::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDNDData::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDNDData.html:3976,Security,hash,hash,3976," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTDNDData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDNDData.html
https://root.cern/doc/master/classTDocDirective.html:3990,Availability,error,error,3990,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:4079,Availability,error,error,4079,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:4234,Availability,error,error,4234,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:4531,Availability,error,error,4531,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:8615,Availability,error,error,8615,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:3996,Integrability,message,message,3996,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:4537,Integrability,message,message,4537,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:5527,Integrability,message,message,5527,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:8621,Integrability,message,message,8621,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:8994,Integrability,message,message,8994," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:793,Modifiability,inherit,inherited,793,". ROOT: TDocDirective Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TDocDirective Class Referenceabstract. . Definition at line 34 of file TDocDirective.h. Public Member Functions; virtual void AddLine (const TSubString &line)=0;  ; virtual void DeleteOutput () const;  ; virtual const char * GetEndTag () const =0;  ; virtual Bool_t GetResult (TString &result)=0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title.",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:2533,Modifiability,inherit,inherited,2533,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:3626,Modifiability,inherit,inheritance,3626,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:5625,Modifiability,inherit,inherits,5625,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:5742,Modifiability,inherit,inherits,5742,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:9495,Modifiability,inherit,inherited,9495,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDocDirective ();  ;  TDocDirective (const char *name);  ;  ~TDocDirective () override;  ; virtual void AddParameter (const TString &, const char *=0);  ; virtual void DeleteOutputFiles (const char *ext) const;  Delete all output generated by the directive beginning with Name() and ending with ext. ;  ; TDocOutput * GetDocOutput () const;  ; TDocParser * GetDocParser () const;  ; THtml * ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:9705,Modifiability,inherit,inherited,9705,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDocDirective ();  ;  TDocDirective (const char *name);  ;  ~TDocDirective () override;  ; virtual void AddParameter (const TString &, const char *=0);  ; virtual void DeleteOutputFiles (const char *ext) const;  Delete all output generated by the directive beginning with Name() and ending with ext. ;  ; TDocOutput * GetDocOutput () const;  ; TDocParser * GetDocParser () const;  ; THtml * ",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:11215,Modifiability,inherit,inherited,11215,"onst char *name);  ;  ~TDocDirective () override;  ; virtual void AddParameter (const TString &, const char *=0);  ; virtual void DeleteOutputFiles (const char *ext) const;  Delete all output generated by the directive beginning with Name() and ending with ext. ;  ; TDocOutput * GetDocOutput () const;  ; TDocParser * GetDocParser () const;  ; THtml * GetHtml () const;  ; const char * GetName () const override;  Returns name of object. ;  ; void GetName (TString &name) const;  Get the full name, based on fName, fTitle, fDocParser's tag. ;  ; const char * GetOutputDir () const;  Get the directory for documentation output. ;  ; void SetCounter (Int_t count);  ; void SetParameters (const char *params);  Given a string containing parameters in params, we call AddParameter() for each of them. ;  ; void SetParser (TDocParser *parser);  Set the parser, and fDocOutput, fHtml from that. ;  ; void SetTag (const char *tag);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCounter;  ; TDocOutput * fDocOutput;  ; TDocParser * fDocParser;  ; THtml * fHtml;  ; TString fParameters;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TDocParser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:11559,Modifiability,inherit,inherited,11559,"ng with ext. ;  ; TDocOutput * GetDocOutput () const;  ; TDocParser * GetDocParser () const;  ; THtml * GetHtml () const;  ; const char * GetName () const override;  Returns name of object. ;  ; void GetName (TString &name) const;  Get the full name, based on fName, fTitle, fDocParser's tag. ;  ; const char * GetOutputDir () const;  Get the directory for documentation output. ;  ; void SetCounter (Int_t count);  ; void SetParameters (const char *params);  Given a string containing parameters in params, we call AddParameter() for each of them. ;  ; void SetParser (TDocParser *parser);  Set the parser, and fDocOutput, fHtml from that. ;  ; void SetTag (const char *tag);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCounter;  ; TDocOutput * fDocOutput;  ; TDocParser * fDocParser;  ; THtml * fHtml;  ; TString fParameters;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TDocParser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDocDirective.h>. Inheritance diagram for TDocDirective:. This browser is not able to show SV",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:11693,Modifiability,inherit,inherited,11693,"e, based on fName, fTitle, fDocParser's tag. ;  ; const char * GetOutputDir () const;  Get the directory for documentation output. ;  ; void SetCounter (Int_t count);  ; void SetParameters (const char *params);  Given a string containing parameters in params, we call AddParameter() for each of them. ;  ; void SetParser (TDocParser *parser);  Set the parser, and fDocOutput, fHtml from that. ;  ; void SetTag (const char *tag);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCounter;  ; TDocOutput * fDocOutput;  ; TDocParser * fDocParser;  ; THtml * fHtml;  ; TString fParameters;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TDocParser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDocDirective.h>. Inheritance diagram for TDocDirective:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDocDirective() [1/2]. TDocDirective::TDocDirective ; (; ). inlineprotected . Definition at line 44 of file TDocDirective.h. ◆ TDocDirective() [2",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:12334,Modifiability,inherit,inherited,12334,"(protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCounter;  ; TDocOutput * fDocOutput;  ; TDocParser * fDocParser;  ; THtml * fHtml;  ; TString fParameters;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TDocParser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDocDirective.h>. Inheritance diagram for TDocDirective:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDocDirective() [1/2]. TDocDirective::TDocDirective ; (; ). inlineprotected . Definition at line 44 of file TDocDirective.h. ◆ TDocDirective() [2/2]. TDocDirective::TDocDirective ; (; const char * ; name). inlineprotected . Definition at line 45 of file TDocDirective.h. ◆ ~TDocDirective(). TDocDirective::~TDocDirective ; (; ). inlineoverrideprotected . Definition at line 47 of file TDocDirective.h. Member Function Documentation. ◆ AddLine(). virtual void TDocDirective::AddLine ; (; const TSubString & ; line). pure virtual . Implemented in TDocHtmlDirective, TDocMacroDirective, and TDocLatexDirective. ◆ AddParameter(). virtual void TDocDirective::AddParameter ; (; const TString & ; , . const char * ; = 0 . ). inlineprotectedvirtual . Rei",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocDirective.html:1661,Security,hash,hash,1661," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTDocDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocDirective.html
https://root.cern/doc/master/classTDocHtmlDirective.html:4213,Availability,error,error,4213,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocHtmlDirective.html
https://root.cern/doc/master/classTDocHtmlDirective.html:4302,Availability,error,error,4302,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocHtmlDirective.html
https://root.cern/doc/master/classTDocHtmlDirective.html:4457,Availability,error,error,4457,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocHtmlDirective.html
https://root.cern/doc/master/classTDocHtmlDirective.html:4754,Availability,error,error,4754,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocHtmlDirective.html
https://root.cern/doc/master/classTDocHtmlDirective.html:8838,Availability,error,error,8838,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDocDirective; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ve",MatchSource.WIKI,doc/master/classTDocHtmlDirective.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTDocHtmlDirective.html
