quality_attribute,keyword,matched_word,sentence,source,filename,author,repo,version,wiki,url
Performance,multi-thread,multi-threading,"a will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void setDisplayed (bool b);  Set whether this Data should be displayed in GUIs. More...;  ; void setReadOnly (bool b);  Set whether this Data is read-only. More...;  ; void setPersistent (bool b);  Set whether this Data contains persistent information. More...;  ; void setAutoLink (bool b);  Set whether this data should be autolinked when using the src="""" syntax. More...;  ; void setRequired (bool b);  Set whether the Data has to be set by the user for the owner component to be valid. More...;  ; Optimized edition and retrieval API (for multi-threading performances); True if the value has been modified If this data is linked, the value of this data will be considered as modified (even if the parent's value has not been modified)s . bool isSet () const;  ; void unset ();  Reset the isSet flag to false, to indicate that the current value is the default for this Data. More...;  ; void forceSet ();  Reset the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html
Safety,detect,detect,"). std::string sofa::core::objectmodel::BaseData::decodeTypeName ; (; const std::type_info & ; t). static . Helper method to decode the type name to a more readable form if possible. . ◆ endEditVoidPtr(). void sofa::core::objectmodel::BaseData::endEditVoidPtr ; (; ). Must be called after beginEditVoidPtr(), after you are finished modifying this Data. ; End edit current value as a void pointer (use getValueTypeInfo to find how to access it) . ◆ forceSet(). void sofa::core::objectmodel::BaseData::forceSet ; (; ). inline . Reset the isSet flag to true, to indicate that the current value has been modified. . ◆ genericCopyValueFrom(). bool sofa::core::objectmodel::BaseData::genericCopyValueFrom ; (; const BaseData * ; parent). protected . Try to update this Data from the value of its parent in ""fast mode"";. ; Update this Data from the value of its parent. . ◆ getCounter(). int sofa::core::objectmodel::BaseData::getCounter ; (; ); const. inline . Return the number of changes since creation This can be used to efficiently detect changes . ◆ getData(). BaseData* sofa::core::objectmodel::BaseData::getData ; (; ); const. inline . This method is needed by DDGNode. . ◆ getDefaultValueString(). virtual std::string sofa::core::objectmodel::BaseData::getDefaultValueString ; (; ); const. pure virtual . Get a string representation of the default value held in this Data. ; Implemented in sofa::core::objectmodel::Data< T >, sofa::core::objectmodel::Data< sofa::type::BoundingBox >, sofa::core::objectmodel::Data< sofa::core::objectmodel::TagSet >, sofa::core::objectmodel::Data< SeqTetrahedra >, sofa::core::objectmodel::Data< sofa::type::Vec< 2, int > >, sofa::core::objectmodel::Data< sofa::type::RGBAColor >, sofa::core::objectmodel::Data< std::map< std::string, sofa::type::vector< double > > >, sofa::core::objectmodel::Data< sofa::type::vector< sofa::type::fixed_array< int, 3 > > >, sofa::core::objectmodel::Data< long >, sofa::core::objectmodel::Data< sofa::type::vector< sofa::type::vect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html
Security,access,access,"  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; virtual bool read (const std::string &value)=0;  ; virtual void printValue (std::ostream &) const =0;  Print the value of this Data to a stream. More...;  ; virtual std::string getValueString () const =0;  Get a string representation of the value held in this Data. More...;  ; virtual std::string getDefaultValueString () const =0;  Get a string representation of the default value held in this Data. More...;  ; virtual std::string getValueTypeString () const =0;  Get the name of the type of the value held in this Data. More...;  ; virtual const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const =0;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseData::BaseInitData Member List . This is the complete list of members for sofa::core::objectmodel::BaseData::BaseInitData, including all inherited members. BaseInitData()sofa::core::objectmodel::BaseData::BaseInitDatainline; datasofa::core::objectmodel::BaseData::BaseInitData; dataFlagssofa::core::objectmodel::BaseData::BaseInitData; groupsofa::core::objectmodel::BaseData::BaseInitData; helpMsgsofa::core::objectmodel::BaseData::BaseInitData; namesofa::core::objectmodel::BaseData::BaseInitData; ownersofa::core::objectmodel::BaseData::BaseInitData; widgetsofa::core::objectmodel::BaseData::BaseInitData. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data_1_1_base_init_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data_1_1_base_init_data-members.html
Deployability,update,updateCounter,"aseLinkinline; getSize() const =0sofa::core::objectmodel::BaseLinkpure virtual; getValueString() constsofa::core::objectmodel::BaseLinkvirtual; getValueTypeString() constsofa::core::objectmodel::BaseLinkvirtual; isDoubleLink() constsofa::core::objectmodel::BaseLinkinline; isDuplicate() constsofa::core::objectmodel::BaseLinkinline; isMultiLink() constsofa::core::objectmodel::BaseLinkinline; isPersistent() constsofa::core::objectmodel::BaseLinkinline; isReadOnly() constsofa::core::objectmodel::BaseLinkinline; isStrongLink() constsofa::core::objectmodel::BaseLinkinline; LinkFlags typedefsofa::core::objectmodel::BaseLink; LinkFlagsEnum enum namesofa::core::objectmodel::BaseLink; m_countersofa::core::objectmodel::BaseLinkprotected; m_flagssofa::core::objectmodel::BaseLinkprotected; m_helpsofa::core::objectmodel::BaseLinkprotected; m_namesofa::core::objectmodel::BaseLinkprotected; ParseString(const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr)sofa::core::objectmodel::BaseLinkstatic; parseString(const std::string &text, std::string *path, std::string *data=nullptr) constsofa::core::objectmodel::BaseLinkinline; printValue(std::ostream &) constsofa::core::objectmodel::BaseLinkvirtual; read(const std::string &str)sofa::core::objectmodel::BaseLink; set(Base *baseptr, size_t index=0)sofa::core::objectmodel::BaseLinkinline; setFlag(LinkFlagsEnum flag, bool b)sofa::core::objectmodel::BaseLinkinline; setHelp(const std::string &val)sofa::core::objectmodel::BaseLinkinline; setLinkedBase(Base *link)sofa::core::objectmodel::BaseLink; setName(const std::string &name)sofa::core::objectmodel::BaseLinkinline; setOwner(Base *owner)sofa::core::objectmodel::BaseLinkinline; setPersistent(bool b)sofa::core::objectmodel::BaseLinkinline; storePath() constsofa::core::objectmodel::BaseLinkinline; updateCounter()sofa::core::objectmodel::BaseLinkinlineprotected; updateLinks()sofa::core::objectmodel::BaseLink; ~BaseLink()sofa::core::objectmodel::BaseLinkvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseLink Member List . This is the complete list of members for sofa::core::objectmodel::BaseLink, including all inherited members. add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; clear()sofa::core::objectmodel::BaseLinkinline; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; FLAG_DOUBLELINK enum valuesofa::core::objectmodel::BaseLink; FLAG_DUPLICATE enum valuesofa::core::objectmodel::BaseLink; FLAG_MULTILINK enum valuesofa::core::objectmodel::BaseLink; FLAG_NONE enum valuesofa::core::objectmodel::BaseLink; FLAG_STOREPATH enum valuesofa::core::objectmodel::BaseLink; FLAG_STRONGLINK enum valuesofa::core::objectmodel::BaseLink; getCounter() constsofa::core::objectmodel::BaseLinkinline; getDestClass() const =0sofa::core::objectmodel::BaseLinkpure virtual; getFlag(LinkFlagsEnum flag) constsofa::core::objectmodel::BaseLinkinline; getHelp() constsofa::core::objectmodel::BaseLinkinline; getLinkedBase(std::size_t index=0) constsofa::core::objectmodel::BaseLinkinline; getLinkedPath(const std::size_t index=0) constsofa::core::objectmodel::BaseLink; getName() constsofa::core::objectmodel::BaseLinkinline; getOwner() constsofa::core::objectmodel::BaseLinkinline; getOwnerBase() const =0sofa::core::objectmodel::BaseLinkpu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html
Usability,clear,clear," add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; clear()sofa::core::objectmodel::BaseLinkinline; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; FLAG_DOUBLELINK enum valuesofa::core::objectmodel::BaseLink; FLAG_DUPLICATE enum valuesofa::core::objectmodel::BaseLink; FLAG_MULTILINK enum valuesofa::core::objectmodel::BaseLink; FLAG_NONE enum valuesofa::core::objectmodel::BaseLink; FLAG_STOREPATH enum valuesofa::core::objectmodel::BaseLink; FLAG_STRONGLINK enum valuesofa::core::objectmodel::BaseLink; getCounter() constsofa::core::objectmodel::BaseLinkinline; getDestClass() const =0sofa::core::objectmodel::BaseLinkpure virtual; getFlag(LinkFlagsEnum flag) constsofa::core::objectmodel::BaseLinkinline; getHelp() constsofa::core::objectmodel::BaseLinkinline; getLinkedBase(std::size_t index=0) constsofa::core::objectmodel::BaseLinkinline; getLinkedPath(const std::size_t index=0) constsofa::core::objectmodel::BaseLink; getName() constsofa::core::objectmodel::BaseLinkinline; getOwner() constsofa::core::objectmodel::BaseLinkinline; getOwnerBase() const =0sofa::core::objectmodel::BaseLinkpu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html
Availability,avail,available,"ink::isReadOnly ; (; ); const. inline . Alias to match BaseData API. . ◆ isStrongLink(). bool sofa::core::objectmodel::BaseLink::isStrongLink ; (; ); const. inline . ◆ parseString(). bool sofa::core::objectmodel::BaseLink::parseString ; (; const std::string & ; text, . std::string * ; path, . std::string * ; data = nullptr . ); const. inline . ◆ ParseString(). bool sofa::core::objectmodel::BaseLink::ParseString ; (; const std::string & ; text, . std::string * ; path, . std::string * ; data = nullptr, . Base * ; start = nullptr . ). static . ◆ printValue(). void sofa::core::objectmodel::BaseLink::printValue ; (; std::ostream & ; o); const. virtual . Print the value of the associated variable. . ◆ read(). bool sofa::core::objectmodel::BaseLink::read ; (; const std::string & ; str). Read the command line. ; Returns false if:; one or multiple string entries fails to be read. In this case the valid link address are initialized.; the owner is invalid Returns true if:; string is empty; all the linkpath are leading to a valid object or not available there. . ◆ set(). bool sofa::core::objectmodel::BaseLink::set ; (; Base * ; baseptr, . size_t ; index = 0 . ). inline . Change the link's target at the provided index. . ◆ setFlag(). void sofa::core::objectmodel::BaseLink::setFlag ; (; LinkFlagsEnum ; flag, . bool ; b . ). inline . Set one of the flags. . ◆ setHelp(). void sofa::core::objectmodel::BaseLink::setHelp ; (; const std::string & ; val). inline . Set help message. . ◆ setLinkedBase(). void sofa::core::objectmodel::BaseLink::setLinkedBase ; (; Base * ; link). ◆ setName(). void sofa::core::objectmodel::BaseLink::setName ; (; const std::string & ; name). inline . ◆ setOwner(). void sofa::core::objectmodel::BaseLink::setOwner ; (; Base * ; owner). inline . ◆ setPersistent(). void sofa::core::objectmodel::BaseLink::setPersistent ; (; bool ; b). inline . Alias to match BaseData API. . ◆ storePath(). bool sofa::core::objectmodel::BaseLink::storePath ; (; ); const. inline . ◆ ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html
Deployability,update,updateLinks,"(LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  . Serialization Helper API; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  ; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html
Energy Efficiency,efficient,efficiently,". inline . ◆ CreateString() [1/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; Base * ; object, . Base * ; from . ). static . ◆ CreateString() [2/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; Base * ; object, . BaseData * ; data, . Base * ; from . ). static . ◆ CreateString() [3/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; BaseData * ; data, . Base * ; from . ). static . ◆ CreateString() [4/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; const std::string & ; path, . const std::string & ; data = """" . ). static . ◆ CreateStringData(). std::string sofa::core::objectmodel::BaseLink::CreateStringData ; (; BaseData * ; data). static . ◆ CreateStringPath(). std::string sofa::core::objectmodel::BaseLink::CreateStringPath ; (; Base * ; object, . Base * ; from . ). static . ◆ getCounter(). int sofa::core::objectmodel::BaseLink::getCounter ; (; ); const. inline . Return the number of changes since creation This can be used to efficiently detect changes . ◆ getDestClass(). virtual const BaseClass* sofa::core::objectmodel::BaseLink::getDestClass ; (; ); const. pure virtual . Implemented in sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >, sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >, and sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >. ◆ getFlag(). bool sofa::core::objectmodel::BaseLink::getFlag ; (; LinkFlagsEnum ; flag); const. inline . Get one flag. . ◆ getHelp(). const std::string& sofa::core::objectmodel::BaseLink::getHelp ; (; ); const. inline . Get help message. . ◆ getLinkedBase(). Base* sofa::core::objectmodel::BaseLink::getLinkedBase ; (; std::size_t ; index = 0); const. inline . ◆ getLinkedPath(). std::string sofa::core::objectmodel::BaseLink::getLinkedPath ; (; const std::size_t ; index = 0); const. ◆ getName(). const std::string& sofa::core::objectmodel::BaseLink::getName ; (; )",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html
Integrability,message,message,"﻿. SOFA API: sofa::core::objectmodel::BaseLink Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseLink Class Referenceabstract . #include <BaseLink.h>; Abstract base class for all links in the scene grapn, independently of their type. ; More... Inheritance diagram for sofa::core::objectmodel::BaseLink:. [legend]; Detailed Description; Abstract base class for all links in the scene grapn, independently of their type. . Classes; class  BaseInitLink;  This internal class is used by the initLink() methods to store initialization parameters of a Data. More...;  ; class  InitLink;  This internal class is used by the initLink() methods to store initialization parameters of a Data. More...;  . Public Member Functions;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; virtual Base * getOwnerBase () const =0;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLink",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html
Modifiability,variab,variable,"(LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  . Serialization Helper API; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  ; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html
Safety,detect,detect,". inline . ◆ CreateString() [1/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; Base * ; object, . Base * ; from . ). static . ◆ CreateString() [2/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; Base * ; object, . BaseData * ; data, . Base * ; from . ). static . ◆ CreateString() [3/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; BaseData * ; data, . Base * ; from . ). static . ◆ CreateString() [4/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; const std::string & ; path, . const std::string & ; data = """" . ). static . ◆ CreateStringData(). std::string sofa::core::objectmodel::BaseLink::CreateStringData ; (; BaseData * ; data). static . ◆ CreateStringPath(). std::string sofa::core::objectmodel::BaseLink::CreateStringPath ; (; Base * ; object, . Base * ; from . ). static . ◆ getCounter(). int sofa::core::objectmodel::BaseLink::getCounter ; (; ); const. inline . Return the number of changes since creation This can be used to efficiently detect changes . ◆ getDestClass(). virtual const BaseClass* sofa::core::objectmodel::BaseLink::getDestClass ; (; ); const. pure virtual . Implemented in sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >, sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >, and sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >. ◆ getFlag(). bool sofa::core::objectmodel::BaseLink::getFlag ; (; LinkFlagsEnum ; flag); const. inline . Get one flag. . ◆ getHelp(). const std::string& sofa::core::objectmodel::BaseLink::getHelp ; (; ); const. inline . Get help message. . ◆ getLinkedBase(). Base* sofa::core::objectmodel::BaseLink::getLinkedBase ; (; std::size_t ; index = 0); const. inline . ◆ getLinkedPath(). std::string sofa::core::objectmodel::BaseLink::getLinkedPath ; (; const std::size_t ; index = 0); const. ◆ getName(). const std::string& sofa::core::objectmodel::BaseLink::getName ; (; )",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html
Usability,clear,clear,";  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; virtual Base * getOwnerBase () const =0;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  . Serialization Helper API; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. Mo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseLink::BaseInitLink Member List . This is the complete list of members for sofa::core::objectmodel::BaseLink::BaseInitLink, including all inherited members. BaseInitLink(const std::string &name, const std::string &help)sofa::core::objectmodel::BaseLink::BaseInitLinkinline; helpsofa::core::objectmodel::BaseLink::BaseInitLink; namesofa::core::objectmodel::BaseLink::BaseInitLink. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link_1_1_base_init_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link_1_1_base_init_link-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseLink::InitLink< Owner > Member List . This is the complete list of members for sofa::core::objectmodel::BaseLink::InitLink< Owner >, including all inherited members. BaseInitLink(const std::string &name, const std::string &help)sofa::core::objectmodel::BaseLink::BaseInitLinkinline; helpsofa::core::objectmodel::BaseLink::BaseInitLink; InitLink(Owner *o, const std::string &n, const std::string &h)sofa::core::objectmodel::BaseLink::InitLink< Owner >inline; namesofa::core::objectmodel::BaseLink::BaseInitLink; ownersofa::core::objectmodel::BaseLink::InitLink< Owner >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link_1_1_init_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link_1_1_init_link-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::BaseLink::InitLink< Owner > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseLink::InitLink< Owner > Class Template Reference . #include <BaseLink.h>; This internal class is used by the initLink() methods to store initialization parameters of a Data. ; More... Inheritance diagram for sofa::core::objectmodel::BaseLink::InitLink< Owner >:. [legend]; Detailed Description; template<class Owner>; class sofa::core::objectmodel::BaseLink::InitLink< Owner >; This internal class is used by the initLink() methods to store initialization parameters of a Data. . Public Attributes; Owner * owner;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseLink::BaseInitLink; std::string name;  ; std::string help;  . Public Member Functions;  InitLink (Owner *o, const std::string &n, const std::string &h);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink::BaseInitLink;  BaseInitLink (const std::string &name, const std::string &help);  . Attribute details. ◆ owner. template<class Owner > . Owner* sofa::core::objectmodel::BaseLink::InitLink< Owner >::owner. Constructor details. ◆ InitLink(). template<class Owner > . sofa::core::objectmodel::BaseLink::InitLink< Owner >::InitLink ; (; Owner * ; o, . const std::string & ; n, . const std::string & ; h . ). inline . sofacoreobjectmodelBaseLinkInitLink; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link_1_1_init_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link_1_1_init_link.html
Deployability,update,updateLinks,"ctmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; Parents typedefsofa::core::objectmodel::BaseNode; parse(BaseObjectDescription *arg)sofa::core::objectmodel::Basevirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; removeChild(BaseNode::SPtr node)=0sofa::core::objectmodel::BaseNodepure virtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeObject(BaseObject::SPtr obj)=0sofa::core::objectmodel::BaseNodepure virtual; removeTag(Tag t)sofa::core::objectmodel::Base; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseNode, Base)sofa::core::objectmodel::BaseNode; SPtr typedefsofa::core::objectmodel::Base; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseNode() overridesofa::core::objectmodel::BaseNodeprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseNode Member List . This is the complete list of members for sofa::core::objectmodel::BaseNode, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addChild(BaseNode::SPtr node)=0sofa::core::objectmodel::BaseNodepure virtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addChild(BaseNode::SPtr node)=0sofa::core::objectmodel::BaseNodepure virtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html
Usability,clear,clearLoggedMessages,"a::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::BaseNodepure virtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html
Deployability,update,updateLinks,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html
Integrability,message,messages,"re...;  ; virtual const BaseContext * getContext () const =0;  Get this node context. More...;  ; virtual std::string getPathName () const override;  Return the full path name of this node. More...;  ; virtual std::string getRootPath () const;  Return the path from this node to the root node. More...;  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override=0;  . Solvers and main algorithms; virtual core::behavior::BaseAnimationLoop * getAnimationLoop () const;  ; virtual core::behavior::OdeSolver * getOdeSolver () const;  ; virtual core::collision::Pipeline * getCollisionPipeline () const;  ; virtual core::visual::VisualLoop * getVisualLoop () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html
Modifiability,inherit,inherited,"I;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::BaseNode Class Referenceabstract . #include <BaseNode.h>; Base class for simulation nodes. ; More... Inheritance diagram for sofa::core::objectmodel::BaseNode:. [legend]; Detailed Description; Base class for simulation nodes. ; A Node is a class defining the main scene data structure of a simulation. It defined hierarchical relations between elements. Each node can have parent and child nodes (potentially defining a tree), as well as attached objects (the leaves of the tree).; AuthorJeremie Allard . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseNode, Base);  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html
Deployability,update,updateInternal,"init()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseObject Member List . This is the complete list of members for sofa::core::objectmodel::BaseObject, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode classsofa::core::objectmodel::BaseObjectfriend; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html
Performance,load,loader,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode classsofa::core::objectmodel::BaseObjectfriend; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html
Usability,clear,clearLoggedMessages,"irtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode classsofa::core::objectmodel::BaseObjectfriend; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html
Availability,avail,available,"﻿. SOFA API: sofa::core::objectmodel::BaseObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::objectmodel::BaseObject Class Reference . #include <BaseObject.h>; Base class for simulation components. ; More... Inheritance diagram for sofa::core::objectmodel::BaseObject:. [legend]; Detailed Description; Base class for simulation components. ; An object defines a part of the functionality in the simulation (stores state data, specify topology, compute forces, etc). Each simulation object is related to a context, which gives access to all available external data. It is able to process events, if listening enabled (default is false). . Protected Attributes; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Deployability,update,updateLinks,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Integrability,depend,dependent,"It is able to process events, if listening enabled (default is false). . Protected Attributes; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; data access; Access to external data . SReal getTime () const;  Current time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> funct",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Modifiability,inherit,inherited,"sofa::core::objectmodel::BaseObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::objectmodel::BaseObject Class Reference . #include <BaseObject.h>; Base class for simulation components. ; More... Inheritance diagram for sofa::core::objectmodel::BaseObject:. [legend]; Detailed Description; Base class for simulation components. ; An object defines a part of the functionality in the simulation (stores state data, specify topology, compute forces, etc). Each simulation object is related to a context, which gives access to all available external data. It is able to process events, if listening enabled (default is false). . Protected Attributes; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Performance,load,loader,"ted Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; data access; Access to external data . SReal getTime () const;  Current time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Safety,detect,detection,"lisionModel< sofa::defaulttype::StdVectorTypes >, sofa::component::collision::geometry::LineCollisionModel< TDataTypes >, sofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >, sofa::component::collision::geometry::CubeCollisionModel, sofa::component::engine::select::BaseROI< DataTypes >, sofa::component::statecontainer::MechanicalObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< T >, sofa::component::statecontainer::MechanicalObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< T >, sofa::component::mass::UniformMass< DataTypes >, sofa::component::mass::UniformMass< DataTypes >, sofa::component::mass::UniformMass< DataTypes >, sofa::component::mass::UniformMass< DataTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >, sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >, sofa::core::CollisionModel, sofa::component::visual::BaseCamera, sofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >, sofa::component::haptics::LCPForceFeedback< TDataTypes >, sofa::component::engine::select::PairBoxROI< DataTypes >, sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >, sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >, sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >, sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase, sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >, and sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Security,access,access,"﻿. SOFA API: sofa::core::objectmodel::BaseObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::objectmodel::BaseObject Class Reference . #include <BaseObject.h>; Base class for simulation components. ; More... Inheritance diagram for sofa::core::objectmodel::BaseObject:. [legend]; Detailed Description; Base class for simulation components. ; An object defines a part of the functionality in the simulation (stores state data, specify topology, compute forces, etc). Each simulation object is related to a context, which gives access to all available external data. It is able to process events, if listening enabled (default is false). . Protected Attributes; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html
Availability,error,errorssofa,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseObjectDescription Member List . This is the complete list of members for sofa::core::objectmodel::BaseObjectDescription, including all inherited members. AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false)sofa::core::objectmodel::BaseObjectDescriptionvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T &container) constsofa::core::objectmodel::BaseObjectDescriptioninline; getAttributeMap() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; getBaseFile()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getObject()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getParent() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptionin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseObjectDescription Member List . This is the complete list of members for sofa::core::objectmodel::BaseObjectDescription, including all inherited members. AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false)sofa::core::objectmodel::BaseObjectDescriptionvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T &container) constsofa::core::objectmodel::BaseObjectDescriptioninline; getAttributeMap() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; getBaseFile()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getObject()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getParent() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptionin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html
Testability,log,logError,"ame=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false)sofa::core::objectmodel::BaseObjectDescriptionvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T &container) constsofa::core::objectmodel::BaseObjectDescriptioninline; getAttributeMap() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; getBaseFile()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getObject()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getParent() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; removeAttribute(const std::string &attr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setAttribute(const std::string &attr, const std::string &val)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setName(const std::string &name)sofa::core::objectmodel::BaseObjectDescriptionvirtual; ~BaseObjectDescription()sofa::core::objectmodel::BaseObjectDescriptionvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html
Usability,clear,clearErrors,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseObjectDescription Member List . This is the complete list of members for sofa::core::objectmodel::BaseObjectDescription, including all inherited members. AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false)sofa::core::objectmodel::BaseObjectDescriptionvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T &container) constsofa::core::objectmodel::BaseObjectDescriptioninline; getAttributeMap() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; getBaseFile()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getObject()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getParent() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptionin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html
Availability,error,errors,"﻿. SOFA API: sofa::core::objectmodel::BaseObjectDescription Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseObjectDescription Class Reference . #include <BaseObjectDescription.h>; Base Interface for classes containing the description of an object, used to construct it. ; More... Inheritance diagram for sofa::core::objectmodel::BaseObjectDescription:. [legend]; Detailed Description; Base Interface for classes containing the description of an object, used to construct it. ; This class defines what information are used as input (read from a file for instance) to create an object. This default implementation simply stores an attributes map and does not support any hierarchy. . Classes; class  Attribute;  . Protected Attributes; AttributeMap attributes;  ; std::vector< std::string > errors;  . Public Member Functions;  BaseObjectDescription (const char *name=nullptr, const char *type=nullptr);  ; virtual ~BaseObjectDescription ();  ; virtual Base * getObject ();  Get the associated object (or nullptr if it is not created yet) More...;  ; virtual std::string getName ();  Get the object instance name. More...;  ; virtual void setName (const std::string &name);  Set the object instance name. More...;  ; virtual BaseObjectDescription * getParent () const;  Get the parent node. More...;  ; virtual std::string getBaseFile ();  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual const AttributeMap & getAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual BaseObjectDescription * find (const char *nodeName, bool absolute=false);  Find an object description given its name (relative to this object) More...;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html
Integrability,message,message,"scription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ findObject(). Base * sofa::core::objectmodel::BaseObjectDescription::findObject ; (; const char * ; nodeName). virtual . Find an object given its name (relative to this object) ; Find an object given its name. . ◆ getAttribute(). const char * sofa::core::objectmodel::BaseObjectDescription::getAttribute ; (; const std::string & ; attr, . const char * ; defaultVal = nullptr . ). virtual . Get an attribute given its name (return defaultVal if not present) . ◆ getAttributeAsFloat(). float sofa::core::objectmodel::BaseObjectDescription::getAttributeAsFloat ; (; const std::string & ; attr, . const float ; defaultVal = 0.0 . ). virtual . Docs is in .h. ; Get an attribute converted to a float given its name. returns defaultVal if not present or in case the attribute cannot be parsed totally adds a message in the logError if the attribute cannot be totally parsed. . ◆ getAttributeAsInt(). int sofa::core::objectmodel::BaseObjectDescription::getAttributeAsInt ; (; const std::string & ; attr, . const int ; defaultVal = 0.0 . ). virtual . Docs is in .h. ; Get an attribute converted to a int given its name. returns defaultVal if not present or in case the attribute cannot be parsed totally adds a message in the logError if the attribute cannot be totally parsed. . ◆ getAttributeList(). template<class T > . void sofa::core::objectmodel::BaseObjectDescription::getAttributeList ; (; T & ; container); const. inline . ◆ getAttributeMap(). const BaseObjectDescription::AttributeMap & sofa::core::objectmodel::BaseObjectDescription::getAttributeMap ; (; ); const. virtual . ◆ getBaseFile(). std::string sofa::core::objectmodel::BaseObjectDescription::getBaseFile ; (; ). virtual . Get the file where this description was read from. Useful to resolve relative file paths. ; Reimplemente",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html
Testability,log,logError,"ase * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual bool removeAttribute (const std::string &attr);  Remove an attribute given its name. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Attribute details. ◆ attributes. AttributeMap sofa::core::objectmodel::BaseObjectDescription::attributes. protected . ◆ errors. std::vector< std::string > sofa::core::objectmodel::BaseObjectDescription::errors. protected . Constructor details. ◆ BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::BaseObjectDescription ; (; const char * ; name = nullptr, . const char * ; type = nullptr . ). ◆ ~BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::~BaseObjectDescription ; (; ). virtual . Function details. ◆ clearErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::clearErrors ; (; ). inlinevirtual . ◆ find(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reim",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html
Usability,simpl,simply,"﻿. SOFA API: sofa::core::objectmodel::BaseObjectDescription Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseObjectDescription Class Reference . #include <BaseObjectDescription.h>; Base Interface for classes containing the description of an object, used to construct it. ; More... Inheritance diagram for sofa::core::objectmodel::BaseObjectDescription:. [legend]; Detailed Description; Base Interface for classes containing the description of an object, used to construct it. ; This class defines what information are used as input (read from a file for instance) to create an object. This default implementation simply stores an attributes map and does not support any hierarchy. . Classes; class  Attribute;  . Protected Attributes; AttributeMap attributes;  ; std::vector< std::string > errors;  . Public Member Functions;  BaseObjectDescription (const char *name=nullptr, const char *type=nullptr);  ; virtual ~BaseObjectDescription ();  ; virtual Base * getObject ();  Get the associated object (or nullptr if it is not created yet) More...;  ; virtual std::string getName ();  Get the object instance name. More...;  ; virtual void setName (const std::string &name);  Set the object instance name. More...;  ; virtual BaseObjectDescription * getParent () const;  Get the parent node. More...;  ; virtual std::string getBaseFile ();  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual const AttributeMap & getAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual BaseObjectDescription * find (const char *nodeName, bool absolute=false);  Find an object description given its name (relative to this object) More...;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseObjectDescription::Attribute Member List . This is the complete list of members for sofa::core::objectmodel::BaseObjectDescription::Attribute, including all inherited members. accessedsofa::core::objectmodel::BaseObjectDescription::Attributemutableprotected; Attribute()sofa::core::objectmodel::BaseObjectDescription::Attributeinline; Attribute(const std::string &v)sofa::core::objectmodel::BaseObjectDescription::Attributeinline; c_str() constsofa::core::objectmodel::BaseObjectDescription::Attributeinline; isAccessed() constsofa::core::objectmodel::BaseObjectDescription::Attributeinline; operator std::string() constsofa::core::objectmodel::BaseObjectDescription::Attributeinline; operator=(const std::string &v)sofa::core::objectmodel::BaseObjectDescription::Attributeinline; operator=(const char *v)sofa::core::objectmodel::BaseObjectDescription::Attributeinline; setAccessed(bool v)sofa::core::objectmodel::BaseObjectDescription::Attributeinline; valuesofa::core::objectmodel::BaseObjectDescription::Attributeprotected. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description_1_1_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description_1_1_attribute-members.html
Security,access,accessedsofa,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseObjectDescription::Attribute Member List . This is the complete list of members for sofa::core::objectmodel::BaseObjectDescription::Attribute, including all inherited members. accessedsofa::core::objectmodel::BaseObjectDescription::Attributemutableprotected; Attribute()sofa::core::objectmodel::BaseObjectDescription::Attributeinline; Attribute(const std::string &v)sofa::core::objectmodel::BaseObjectDescription::Attributeinline; c_str() constsofa::core::objectmodel::BaseObjectDescription::Attributeinline; isAccessed() constsofa::core::objectmodel::BaseObjectDescription::Attributeinline; operator std::string() constsofa::core::objectmodel::BaseObjectDescription::Attributeinline; operator=(const std::string &v)sofa::core::objectmodel::BaseObjectDescription::Attributeinline; operator=(const char *v)sofa::core::objectmodel::BaseObjectDescription::Attributeinline; setAccessed(bool v)sofa::core::objectmodel::BaseObjectDescription::Attributeinline; valuesofa::core::objectmodel::BaseObjectDescription::Attributeprotected. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description_1_1_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description_1_1_attribute-members.html
Security,access,accessed,﻿. SOFA API: sofa::core::objectmodel::BaseObjectDescription::Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseObjectDescription::Attribute Class Reference . #include <BaseObjectDescription.h>. Protected Attributes; std::string value;  ; bool accessed;  . Public Member Functions;  Attribute ();  ;  Attribute (const std::string &v);  ; void operator= (const std::string &v);  ; void operator= (const char *v);  ;  operator std::string () const;  ; const char * c_str () const;  ; bool isAccessed () const;  ; void setAccessed (bool v);  . Attribute details. ◆ accessed. bool sofa::core::objectmodel::BaseObjectDescription::Attribute::accessed. mutableprotected . ◆ value. std::string sofa::core::objectmodel::BaseObjectDescription::Attribute::value. protected . Constructor details. ◆ Attribute() [1/2]. sofa::core::objectmodel::BaseObjectDescription::Attribute::Attribute ; (; ). inline . ◆ Attribute() [2/2]. sofa::core::objectmodel::BaseObjectDescription::Attribute::Attribute ; (; const std::string & ; v). inline . Function details. ◆ c_str(). const char* sofa::core::objectmodel::BaseObjectDescription::Attribute::c_str ; (; ); const. inline . ◆ isAccessed(). bool sofa::core::objectmodel::BaseObjectDescription::Attribute::isAccessed ; (; ); const. inline . ◆ operator std::string(). sofa::core::objectmodel::BaseObjectDescription::Attribute::operator std::string ; (; ); const. inline . ◆ operator=() [1/2]. void sofa::core::objectmodel::BaseObjectDescription::Attribute::operator= ; (; const char * ; v). inline . ◆ operator=() [2/2]. void sofa::core::objectmodel::BaseObjectDescription::Attribute::operator= ; (; const std::string & ; v). inline . ◆ setAccessed(). void sofa::core::objectmodel::BaseObjectDescription::Attribute::setAccessed ; (; bool ; v). inline . sofacoreobjectmodelBaseObjectDescriptionAttribute; Generated on Mon Nov,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description_1_1_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description_1_1_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::ClassInfo Member List . This is the complete list of members for sofa::core::objectmodel::ClassInfo, including all inherited members. classessofa::core::objectmodel::ClassInfoprotectedstatic; ClassInfo(const std::type_info *ti)sofa::core::objectmodel::ClassInfoprotected; dynamicCast(Base *obj) const =0sofa::core::objectmodel::ClassInfopure virtual; isInstance(Base *obj) constsofa::core::objectmodel::ClassInfoinlinevirtual; name() constsofa::core::objectmodel::ClassInfoinline; operator const std::type_info &() constsofa::core::objectmodel::ClassInfoinline; operator!=(const ClassInfo &t) constsofa::core::objectmodel::ClassInfoinline; operator<(const ClassInfo &t) constsofa::core::objectmodel::ClassInfoinline; operator==(const ClassInfo &t) constsofa::core::objectmodel::ClassInfoinline; ptsofa::core::objectmodel::ClassInfoprotected; type() constsofa::core::objectmodel::ClassInfoinline; ~ClassInfo()sofa::core::objectmodel::ClassInfoprotectedvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_class_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_class_info-members.html
Deployability,update,updateInternal,"ore::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::ConfigurationSetting Member List . This is the complete list of members for sofa::core::objectmodel::ConfigurationSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html
Availability,down,down,"﻿. SOFA API: sofa::core::objectmodel::ConfigurationSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::ConfigurationSetting Class Reference . #include <ConfigurationSetting.h>; Base class for all the configuration settings of SOFA. ; More... Inheritance diagram for sofa::core::objectmodel::ConfigurationSetting:. [legend]; Detailed Description; Base class for all the configuration settings of SOFA. . Public Member Functions;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void add",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html
Deployability,configurat,configuration,"﻿. SOFA API: sofa::core::objectmodel::ConfigurationSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::ConfigurationSetting Class Reference . #include <ConfigurationSetting.h>; Base class for all the configuration settings of SOFA. ; More... Inheritance diagram for sofa::core::objectmodel::ConfigurationSetting:. [legend]; Detailed Description; Base class for all the configuration settings of SOFA. . Public Member Functions;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void add",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html
Integrability,depend,dependent," sofa::core::objectmodel::ConfigurationSetting Class Reference . #include <ConfigurationSetting.h>; Base class for all the configuration settings of SOFA. ; More... Inheritance diagram for sofa::core::objectmodel::ConfigurationSetting:. [legend]; Detailed Description; Base class for all the configuration settings of SOFA. . Public Member Functions;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html
Modifiability,config,configuration,"﻿. SOFA API: sofa::core::objectmodel::ConfigurationSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::ConfigurationSetting Class Reference . #include <ConfigurationSetting.h>; Base class for all the configuration settings of SOFA. ; More... Inheritance diagram for sofa::core::objectmodel::ConfigurationSetting:. [legend]; Detailed Description; Base class for all the configuration settings of SOFA. . Public Member Functions;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void add",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html
Performance,load,loader,"r all the configuration settings of SOFA. . Public Member Functions;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html
Deployability,update,updateLinks,"a::core::objectmodel::Contextvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDisplayWorldGravity(bool val)sofa::core::objectmodel::Contextinlinevirtual; setDt(SReal dt) overridesofa::core::objectmodel::Contextvirtual; setGravity(const Vec3 &) overridesofa::core::objectmodel::Contextvirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMechanicalState(BaseObject *)sofa::core::objectmodel::BaseContextinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSleeping(bool val) overridesofa::core::objectmodel::Contextvirtual; setTime(SReal t)sofa::core::objectmodel::Contextvirtual; setTopology(BaseObject *)sofa::core::objectmodel::BaseContextinlinevirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(Context, BaseContext)sofa::core::objectmodel::Context; sofa::core::objectmodel::BaseContext::SOFA_CLASS(BaseContext, Base)sofa::core::objectmodel::BaseContext; SPtr typedefsofa::core::objectmodel::Base; time_sofa::core::objectmodel::Context; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::core::objectmodel::BaseContext; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; worldGravity_sofa::core::objectmodel::Context; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseContext() overridesofa::core::objectmodel::BaseContextprotected; ~Context() overridesofa::core::objectmodel::Contextinlineprotectedvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::Context Member List . This is the complete list of members for sofa::core::objectmodel::Context, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Context()sofa::core::objectmodel::Contextprotected; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_canChangeSleepingStatesofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Context()sofa::core::objectmodel::Contextprotected; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_canChangeSleepingStatesofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html
Usability,clear,clearLoggedMessages,"*attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Context()sofa::core::objectmodel::Contextprotected; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_componentStatesofa::core::objectmodel::Base; d_isSleepingsofa::core::objectmodel::Context; d_messageLogCountsofa::core::objectmodel::Basemutable; dt_sofa::core::objectmodel::Context; executeVisitor(simulation::Visitor *, bool precomputedOrder=false)sofa::core::objectmodel::BaseContextvirtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html
Availability,down,down,"const ClassInfo &class_info, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const std::string &path) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, SearchDirection dir=SearchUp) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html
Deployability,update,updateLinks,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html
Integrability,message,messages,"ontext, storing all shared parameters in Datas. ; More... Inheritance diagram for sofa::core::objectmodel::Context:. [legend]; Detailed Description; Implementation of BaseContext, storing all shared parameters in Datas. . Public Attributes; Data< bool > is_activated;  To Activate a node. More...;  ; Data< Vec3 > worldGravity_;  Gravity in the world coordinate system. More...;  ; Data< SReal > dt_;  Time step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sleeping, and thus ignored by visitors. More...;  ; Data< bool > d_canChangeSleepingState;  The node can change its sleeping state. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Context, BaseContext);  ; void copyContext (const Context &c);  Copy the context variables from the given instance. More...;  ; void copySimulationContext (const Context &c);  Copy the context variables of visualization from the given instance. More...;  ; Parameters; bool isActive () const override;  The Context is active. More...;  ; void setActive (bool val) override;  State of the context",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html
Modifiability,inherit,inherited,"|; Protected Member Functions |; List of all members . sofa::core::objectmodel::Context Class Reference . #include <Context.h>; Implementation of BaseContext, storing all shared parameters in Datas. ; More... Inheritance diagram for sofa::core::objectmodel::Context:. [legend]; Detailed Description; Implementation of BaseContext, storing all shared parameters in Datas. . Public Attributes; Data< bool > is_activated;  To Activate a node. More...;  ; Data< Vec3 > worldGravity_;  Gravity in the world coordinate system. More...;  ; Data< SReal > dt_;  Time step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sleeping, and thus ignored by visitors. More...;  ; Data< bool > d_canChangeSleepingState;  The node can change its sleeping state. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Context, BaseContext);  ; void copyContext (const Context &c);  Copy the context variables from the given instance. More...;  ; void copySimulationContext (const Context &c);  Copy the context variables of visualization from the given instance. ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html
Security,access,access,"const ClassInfo &class_info, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const std::string &path) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, SearchDirection dir=SearchUp) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html
Deployability,update,updateInternal,"ectvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ContextObject, BaseObject)sofa::core::objectmodel::ContextObject; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ContextObject() overridesofa::core::objectmodel::ContextObjectinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::ContextObject Member List . This is the complete list of members for sofa::core::objectmodel::ContextObject, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply()=0sofa::core::objectmodel::ContextObjectpure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html
Performance,load,loader,"nit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ContextObjectvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ContextObject, BaseObject)sofa::core::objectmodel::ContextObject; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply()=0sofa::core::objectmodel::ContextObjectpure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html
Usability,clear,clearLoggedMessages,"al; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply()=0sofa::core::objectmodel::ContextObjectpure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContextObject()sofa::core::objectmodel::ContextObjectinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html
Integrability,depend,dependent,"ect Class Referenceabstract . #include <ContextObject.h>; Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). ; More... Inheritance diagram for sofa::core::objectmodel::ContextObject:. [legend]; Detailed Description; Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (ContextObject, BaseObject);  ; virtual void apply ()=0;  modify the Context More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::ContextObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::ContextObject Class Referenceabstract . #include <ContextObject.h>; Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). ; More... Inheritance diagram for sofa::core::objectmodel::ContextObject:. [legend]; Detailed Description; Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (ContextObject, BaseObject);  ; virtual void apply ()=0;  modify the Context More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &nam",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html
Performance,load,loader,"e class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (ContextObject, BaseObject);  ; virtual void apply ()=0;  modify the Context More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html
Deployability,update,update,"td::istream &in)sofa::core::objectmodel::Data< T >protected; setAutoLink(bool b)sofa::core::objectmodel::BaseDatainline; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setDisplayed(bool b)sofa::core::objectmodel::BaseDatainline; setFlag(DataFlagsEnum flag, bool b)sofa::core::objectmodel::BaseDatainline; setGroup(const std::string &val)sofa::core::objectmodel::BaseDatainline; setHelp(const std::string &val)sofa::core::objectmodel::BaseDatainline; setName(const std::string &name)sofa::core::objectmodel::BaseDatainline; setOwner(Base *o)sofa::core::objectmodel::BaseDatainline; setParent(BaseData *parent, const std::string &path=std::string())sofa::core::objectmodel::BaseData; setParent(const std::string &path)sofa::core::objectmodel::BaseData; setPersistent(bool b)sofa::core::objectmodel::BaseDatainline; setReadOnly(bool b)sofa::core::objectmodel::BaseDatainline; setRequired(bool b)sofa::core::objectmodel::BaseDatainline; setValue(const T &value)sofa::core::objectmodel::Data< T >inline; setWidget(const char *val)sofa::core::objectmodel::BaseDatainline; SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME() static stdsofa::core::objectmodel::BaseDatainline; templateName()sofa::core::objectmodel::Data< T >inlinestatic; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::objectmodel::Data< T >; ValueType typedefsofa::core::objectmodel::Data< T >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< T >inline; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::Data< T > Member List . This is the complete list of members for sofa::core::objectmodel::Data< T >, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; BaseData(const BaseInitData &init)sofa::core::objectmodel::BaseDataexplicit; BaseData(const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; beginEdit()sofa::core::objectmodel::Data< T >inlinevirtual; beginEditVoidPtr()sofa::core::objectmodel::BaseData; beginWriteOnly()sofa::core::objectmodel::Data< T >inlinevirtual; canBeLinked() constsofa::core::objectmodel::BaseDatainlinevirtual; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; copyValueFrom(const Data< T > *data)sofa::core::objectmodel::Data< T >; sofa::core::objectmodel::BaseData::copyValueFrom(const BaseData *data)sofa::core::objectmodel::BaseData; Data(const BaseData::BaseInitData &init)sofa::core::objectmodel::Data< T >inlineexplicit; Data(const InitData &init)sofa::core::objectmodel::Data< T >inlineexplicit; Data(const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< T >inline; Data(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< T >inline; Data(const T &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< T >inline; Data(const T &value, const std::string &helpMsg, boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data-members.html
Deployability,update,update,"nkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to a parent data. The value of this data will automatically duplicate the value of the parent data. More...;  ; bool setParent (const std::string &path);  ; virtual bool validParent (const BaseData *parent);  Check if a given Data can be linked as a parent of this data. More...;  ; BaseData * getParent () const;  ; void update () override;  Update the value of this Data. More...;  ; bool copyValueFrom (const BaseData *data);  Update this Data from the value of its parent. More...;  ; bool updateValueFromLink (const BaseData *data);  ; template<class T > ;  SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME () static std;  ; void setFlag (DataFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (DataFlagsEnum flag) const;  Get one of the flags. More...;  ; bool isDisplayed () const;  Return whether this Data has to be displayed in GUIs. More...;  ; bool isReadOnly () const;  Return whether this Data will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html
Integrability,message,message,"has a boolean parameter bar, it does not simply declares it as bool m_bar, but rather like this:; Data<bool> d_bar;; sofa::core::objectmodel::Data< bool >template class SOFA_CORE_API Data< bool >Definition: Data.cpp:59; Then, this Data must be initialized to provide its name and default value. This is typically done in the initialization list of each constructor of the component, using the helper function Base::initData():; Foo::Foo(): d_bar(initData(&d_bar, true, ""bar"", ""Here is a little description of this Data."")) {; // ...; }; And this Data can be assigned a value in XML scene files like so: <Foo bar=""false""/>; . Classes; class  InitData;  This internal class is used by the initData() methods to store initialization parameters of a Data. More...;  . Public Attributes; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  . Protected Attributes; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::core::objectmodel::Data< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::Data< T > Class Template Reference . #include <Data.h>; Container that holds a variable for a component. ; More... Inheritance diagram for sofa::core::objectmodel::Data< T >:. [legend]; Detailed Description; template<class T = void*>; class sofa::core::objectmodel::Data< T >; Container that holds a variable for a component. ; This is a fundamental class template in Sofa. Data are used to encapsulated member variables of Sofa components (i.e. classes that somehow inherit from Base) in order to access them dynamically and generically: briefly, Data can be retrieved at run-time by their name, and they can be assigned a value from a string, or be printed as a string.; More concretely, from the perspective of XML scene files, each Data declared in a component corresponds to an attribute of this component.; Example ; If a component Foo has a boolean parameter bar, it does not simply declares it as bool m_bar, but rather like this:; Data<bool> d_bar;; sofa::core::objectmodel::Data< bool >template class SOFA_CORE_API Data< bool >Definition: Data.cpp:59; Then, this Data must be initialized to provide its name and default value. This is typically done in the initialization list of each constructor of the component, using the helper function Base::initData():; Foo::Foo(): d_bar(initData(&d_bar, true, ""bar"", ""Here is a little description of this Data."")) {; // ...; }; And this Data can be assigned a value in XML scene files like so: <Foo bar=""false""/>; . Classes; class  InitData;  This internal class is used by the initData() methods to store initialization parameters of a Data. More...;  . Public Attributes; int m_counter;  Number of changes ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html
Security,access,access,"﻿. SOFA API: sofa::core::objectmodel::Data< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::Data< T > Class Template Reference . #include <Data.h>; Container that holds a variable for a component. ; More... Inheritance diagram for sofa::core::objectmodel::Data< T >:. [legend]; Detailed Description; template<class T = void*>; class sofa::core::objectmodel::Data< T >; Container that holds a variable for a component. ; This is a fundamental class template in Sofa. Data are used to encapsulated member variables of Sofa components (i.e. classes that somehow inherit from Base) in order to access them dynamically and generically: briefly, Data can be retrieved at run-time by their name, and they can be assigned a value from a string, or be printed as a string.; More concretely, from the perspective of XML scene files, each Data declared in a component corresponds to an attribute of this component.; Example ; If a component Foo has a boolean parameter bar, it does not simply declares it as bool m_bar, but rather like this:; Data<bool> d_bar;; sofa::core::objectmodel::Data< bool >template class SOFA_CORE_API Data< bool >Definition: Data.cpp:59; Then, this Data must be initialized to provide its name and default value. This is typically done in the initialization list of each constructor of the component, using the helper function Base::initData():; Foo::Foo(): d_bar(initData(&d_bar, true, ""bar"", ""Here is a little description of this Data."")) {; // ...; }; And this Data can be assigned a value in XML scene files like so: <Foo bar=""false""/>; . Classes; class  InitData;  This internal class is used by the initData() methods to store initialization parameters of a Data. More...;  . Public Attributes; int m_counter;  Number of changes ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html
Usability,simpl,simply," Member Functions |; List of all members . sofa::core::objectmodel::Data< T > Class Template Reference . #include <Data.h>; Container that holds a variable for a component. ; More... Inheritance diagram for sofa::core::objectmodel::Data< T >:. [legend]; Detailed Description; template<class T = void*>; class sofa::core::objectmodel::Data< T >; Container that holds a variable for a component. ; This is a fundamental class template in Sofa. Data are used to encapsulated member variables of Sofa components (i.e. classes that somehow inherit from Base) in order to access them dynamically and generically: briefly, Data can be retrieved at run-time by their name, and they can be assigned a value from a string, or be printed as a string.; More concretely, from the perspective of XML scene files, each Data declared in a component corresponds to an attribute of this component.; Example ; If a component Foo has a boolean parameter bar, it does not simply declares it as bool m_bar, but rather like this:; Data<bool> d_bar;; sofa::core::objectmodel::Data< bool >template class SOFA_CORE_API Data< bool >Definition: Data.cpp:59; Then, this Data must be initialized to provide its name and default value. This is typically done in the initialization list of each constructor of the component, using the helper function Base::initData():; Foo::Foo(): d_bar(initData(&d_bar, true, ""bar"", ""Here is a little description of this Data."")) {; // ...; }; And this Data can be assigned a value in XML scene files like so: <Foo bar=""false""/>; . Classes; class  InitData;  This internal class is used by the initData() methods to store initialization parameters of a Data. More...;  . Public Attributes; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::Data< T >::InitData Member List . This is the complete list of members for sofa::core::objectmodel::Data< T >::InitData, including all inherited members. BaseInitData()sofa::core::objectmodel::BaseData::BaseInitDatainline; datasofa::core::objectmodel::BaseData::BaseInitData; dataFlagssofa::core::objectmodel::BaseData::BaseInitData; groupsofa::core::objectmodel::BaseData::BaseInitData; helpMsgsofa::core::objectmodel::BaseData::BaseInitData; InitData()sofa::core::objectmodel::Data< T >::InitDatainline; InitData(const T &v)sofa::core::objectmodel::Data< T >::InitDatainline; InitData(const BaseData::BaseInitData &i)sofa::core::objectmodel::Data< T >::InitDatainline; namesofa::core::objectmodel::BaseData::BaseInitData; ownersofa::core::objectmodel::BaseData::BaseInitData; valuesofa::core::objectmodel::Data< T >::InitData; widgetsofa::core::objectmodel::BaseData::BaseInitData. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_1_1_init_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_1_1_init_data-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::objectmodel::Data< T >::InitData Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::Data< T >::InitData Class Reference . #include <Data.h>; This internal class is used by the initData() methods to store initialization parameters of a Data. ; More... Inheritance diagram for sofa::core::objectmodel::Data< T >::InitData:. [legend]; Detailed Description; template<class T = void*>; class sofa::core::objectmodel::Data< T >::InitData; This internal class is used by the initData() methods to store initialization parameters of a Data. . Public Attributes; T value;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData::BaseInitData; BaseData * data;  ; std::string helpMsg;  ; DataFlags dataFlags;  ; Base * owner;  ; std::string name;  ; std::string group;  ; std::string widget;  . Public Member Functions;  InitData ();  ;  InitData (const T &v);  ;  InitData (const BaseData::BaseInitData &i);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData::BaseInitData;  BaseInitData ();  . Attribute details. ◆ value. template<class T = void*> . T sofa::core::objectmodel::Data< T >::InitData::value. Constructor details. ◆ InitData() [1/3]. template<class T = void*> . sofa::core::objectmodel::Data< T >::InitData::InitData ; (; ). inline . ◆ InitData() [2/3]. template<class T = void*> . sofa::core::objectmodel::Data< T >::InitData::InitData ; (; const T & ; v). inline . ◆ InitData() [3/3]. template<class T = void*> . sofa::core::objectmodel::Data< T >::InitData::InitData ; (; const BaseData::BaseInitData & ; i). inline . sofacoreobjectmodelDataInitData; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_1_1_init_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_1_1_init_data.html
Deployability,release,release,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DataContentValue< T, false > Member List . This is the complete list of members for sofa::core::objectmodel::DataContentValue< T, false >, including all inherited members. beginEdit()sofa::core::objectmodel::DataContentValue< T, false >inline; DataContentValue()sofa::core::objectmodel::DataContentValue< T, false >inline; DataContentValue(const T &value)sofa::core::objectmodel::DataContentValue< T, false >inlineexplicit; DataContentValue(const DataContentValue &dc)sofa::core::objectmodel::DataContentValue< T, false >inline; endEdit()sofa::core::objectmodel::DataContentValue< T, false >inline; getValue() constsofa::core::objectmodel::DataContentValue< T, false >inline; operator=(const DataContentValue &dc)sofa::core::objectmodel::DataContentValue< T, false >inline; release()sofa::core::objectmodel::DataContentValue< T, false >inline; setValue(const T &value)sofa::core::objectmodel::DataContentValue< T, false >inline. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DataContentValue< T, false > Member List . This is the complete list of members for sofa::core::objectmodel::DataContentValue< T, false >, including all inherited members. beginEdit()sofa::core::objectmodel::DataContentValue< T, false >inline; DataContentValue()sofa::core::objectmodel::DataContentValue< T, false >inline; DataContentValue(const T &value)sofa::core::objectmodel::DataContentValue< T, false >inlineexplicit; DataContentValue(const DataContentValue &dc)sofa::core::objectmodel::DataContentValue< T, false >inline; endEdit()sofa::core::objectmodel::DataContentValue< T, false >inline; getValue() constsofa::core::objectmodel::DataContentValue< T, false >inline; operator=(const DataContentValue &dc)sofa::core::objectmodel::DataContentValue< T, false >inline; release()sofa::core::objectmodel::DataContentValue< T, false >inline; setValue(const T &value)sofa::core::objectmodel::DataContentValue< T, false >inline. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4-members.html
Deployability,release,release,"﻿. SOFA API: sofa::core::objectmodel::DataContentValue< T, false > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::DataContentValue< T, false > Class Template Reference . #include <DataContentValue.h>. Public Member Functions;  DataContentValue ();  ;  DataContentValue (const T &value);  ;  DataContentValue (const DataContentValue &dc);  ; DataContentValue & operator= (const DataContentValue &dc);  ; T * beginEdit ();  ; void endEdit ();  ; const T & getValue () const;  ; void setValue (const T &value);  ; void release ();  . Constructor details. ◆ DataContentValue() [1/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, false >::DataContentValue ; (; ). inline . ◆ DataContentValue() [2/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, false >::DataContentValue ; (; const T & ; value). inlineexplicit . ◆ DataContentValue() [3/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, false >::DataContentValue ; (; const DataContentValue< T, false > & ; dc). inline . Function details. ◆ beginEdit(). template<class T > . T* sofa::core::objectmodel::DataContentValue< T, false >::beginEdit ; (; ). inline . ◆ endEdit(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, false >::endEdit ; (; ). inline . ◆ getValue(). template<class T > . const T& sofa::core::objectmodel::DataContentValue< T, false >::getValue ; (; ); const. inline . ◆ operator=(). template<class T > . DataContentValue& sofa::core::objectmodel::DataContentValue< T, false >::operator= ; (; const DataContentValue< T, false > & ; dc). inline . ◆ release(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, false >::release ; (; ). inline . ◆ setValue(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, false >::setValue ; (; const T & ; value). inline . sofacoreobjectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01false_01_4.html
Deployability,release,release,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DataContentValue< T, true > Member List . This is the complete list of members for sofa::core::objectmodel::DataContentValue< T, true >, including all inherited members. beginEdit()sofa::core::objectmodel::DataContentValue< T, true >inline; DataContentValue()sofa::core::objectmodel::DataContentValue< T, true >inline; DataContentValue(const T &value)sofa::core::objectmodel::DataContentValue< T, true >inlineexplicit; DataContentValue(const DataContentValue &dc)sofa::core::objectmodel::DataContentValue< T, true >inline; endEdit()sofa::core::objectmodel::DataContentValue< T, true >inline; getValue() constsofa::core::objectmodel::DataContentValue< T, true >inline; operator=(const DataContentValue &dc)sofa::core::objectmodel::DataContentValue< T, true >inline; release()sofa::core::objectmodel::DataContentValue< T, true >inline; setValue(const T &value)sofa::core::objectmodel::DataContentValue< T, true >inline; ~DataContentValue()sofa::core::objectmodel::DataContentValue< T, true >inline. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DataContentValue< T, true > Member List . This is the complete list of members for sofa::core::objectmodel::DataContentValue< T, true >, including all inherited members. beginEdit()sofa::core::objectmodel::DataContentValue< T, true >inline; DataContentValue()sofa::core::objectmodel::DataContentValue< T, true >inline; DataContentValue(const T &value)sofa::core::objectmodel::DataContentValue< T, true >inlineexplicit; DataContentValue(const DataContentValue &dc)sofa::core::objectmodel::DataContentValue< T, true >inline; endEdit()sofa::core::objectmodel::DataContentValue< T, true >inline; getValue() constsofa::core::objectmodel::DataContentValue< T, true >inline; operator=(const DataContentValue &dc)sofa::core::objectmodel::DataContentValue< T, true >inline; release()sofa::core::objectmodel::DataContentValue< T, true >inline; setValue(const T &value)sofa::core::objectmodel::DataContentValue< T, true >inline; ~DataContentValue()sofa::core::objectmodel::DataContentValue< T, true >inline. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4-members.html
Deployability,release,release,"﻿. SOFA API: sofa::core::objectmodel::DataContentValue< T, true > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::DataContentValue< T, true > Class Template Reference . #include <DataContentValue.h>. Public Member Functions;  DataContentValue ();  ;  DataContentValue (const T &value);  ;  DataContentValue (const DataContentValue &dc);  ;  ~DataContentValue ();  ; DataContentValue & operator= (const DataContentValue &dc);  ; T * beginEdit ();  ; void endEdit ();  ; const T & getValue () const;  ; void setValue (const T &value);  ; void release ();  . Constructor details. ◆ DataContentValue() [1/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, true >::DataContentValue ; (; ). inline . ◆ DataContentValue() [2/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, true >::DataContentValue ; (; const T & ; value). inlineexplicit . ◆ DataContentValue() [3/3]. template<class T > . sofa::core::objectmodel::DataContentValue< T, true >::DataContentValue ; (; const DataContentValue< T, true > & ; dc). inline . ◆ ~DataContentValue(). template<class T > . sofa::core::objectmodel::DataContentValue< T, true >::~DataContentValue ; (; ). inline . Function details. ◆ beginEdit(). template<class T > . T* sofa::core::objectmodel::DataContentValue< T, true >::beginEdit ; (; ). inline . ◆ endEdit(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, true >::endEdit ; (; ). inline . ◆ getValue(). template<class T > . const T& sofa::core::objectmodel::DataContentValue< T, true >::getValue ; (; ); const. inline . ◆ operator=(). template<class T > . DataContentValue& sofa::core::objectmodel::DataContentValue< T, true >::operator= ; (; const DataContentValue< T, true > & ; dc). inline . ◆ release(). template<class T > . void sofa::core::objectmodel::DataContentValue< T, true >::release ; (; ). inline . ◆ setValu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_content_value_3_01_t_00_01true_01_4.html
Deployability,update,update,":core::objectmodel::BaseDatainline; setFlag(DataFlagsEnum flag, bool b)sofa::core::objectmodel::BaseDatainline; setGroup(const std::string &val)sofa::core::objectmodel::BaseDatainline; setHelp(const std::string &val)sofa::core::objectmodel::BaseDatainline; setName(const std::string &name)sofa::core::objectmodel::BaseDatainline; setOwner(Base *o)sofa::core::objectmodel::BaseDatainline; setParent(BaseData *parent, const std::string &path=std::string())sofa::core::objectmodel::BaseData; setParent(const std::string &path)sofa::core::objectmodel::BaseData; setPathType(PathType pathType)sofa::core::objectmodel::DataFileName; setPersistent(bool b)sofa::core::objectmodel::BaseDatainline; setReadOnly(bool b)sofa::core::objectmodel::BaseDatainline; setRequired(bool b)sofa::core::objectmodel::BaseDatainline; setValue(const std::string &value)sofa::core::objectmodel::Data< std::string >inline; setWidget(const char *val)sofa::core::objectmodel::BaseDatainline; SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME() static stdsofa::core::objectmodel::BaseDatainline; templateName()sofa::core::objectmodel::Data< std::string >inlinestatic; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updatePath()sofa::core::objectmodel::DataFileNameprotected; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::objectmodel::Data< std::string >; ValueType typedefsofa::core::objectmodel::Data< std::string >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< std::string >inline; ~DataFileName() override=defaultsofa::core::objectmodel::DataFileName; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DataFileName Member List . This is the complete list of members for sofa::core::objectmodel::DataFileName, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; BaseData(const BaseInitData &init)sofa::core::objectmodel::BaseDataexplicit; BaseData(const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; beginEdit()sofa::core::objectmodel::Data< std::string >inlinevirtual; beginEditVoidPtr()sofa::core::objectmodel::BaseData; beginWriteOnly()sofa::core::objectmodel::Data< std::string >inlinevirtual; canBeLinked() constsofa::core::objectmodel::BaseDatainlinevirtual; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; copyValueFrom(const Data< std::string > *data)sofa::core::objectmodel::Data< std::string >; sofa::core::objectmodel::BaseData::copyValueFrom(const BaseData *data)sofa::core::objectmodel::BaseData; Data(const BaseData::BaseInitData &init)sofa::core::objectmodel::Data< std::string >inlineexplicit; Data(const InitData &init)sofa::core::objectmodel::Data< std::string >inlineexplicit; Data(const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< std::string >inline; Data(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< std::string >inline; Data(const std::string &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=fals",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name-members.html
Deployability,update,update,"nkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to a parent data. The value of this data will automatically duplicate the value of the parent data. More...;  ; bool setParent (const std::string &path);  ; virtual bool validParent (const BaseData *parent);  Check if a given Data can be linked as a parent of this data. More...;  ; BaseData * getParent () const;  ; void update () override;  Update the value of this Data. More...;  ; bool copyValueFrom (const BaseData *data);  Update this Data from the value of its parent. More...;  ; bool updateValueFromLink (const BaseData *data);  ; template<class T > ;  SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME () static std;  ; void setFlag (DataFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (DataFlagsEnum flag) const;  Get one of the flags. More...;  ; bool isDisplayed () const;  Return whether this Data has to be displayed in GUIs. More...;  ; bool isReadOnly () const;  Return whether this Data will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html
Integrability,message,message," bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::DataFileName Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::DataFileName Class Reference . #include <DataFileName.h>; Data specialized to store filenames, potentially relative to the current directory at the time it was specified. ; More... Inheritance diagram for sofa::core::objectmodel::DataFileName:. [legend]; Detailed Description; Data specialized to store filenames, potentially relative to the current directory at the time it was specified. . Protected Attributes; std::string m_fullpath;  ; std::string m_relativepath;  ; std::string m_extension;  ; PathType m_pathType;  used to determine how file dialogs should be opened More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< std::string >; std::string m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DataFileName (const std::string &helpMsg="""", bool isDisplayed=true, bool isReadOnly=false);  ;  DataFileName (const std::string &value, const std::string &helpMsg="""", bool isDisplayed=true, bool isReadOnly=false);  ;  DataFileName (const BaseData::BaseInitData &init);  ;  DataFileName (const Inherit::InitData &init);  ;  ~DataFileName () override=default;  ; void setPathType (PathType pathType);  ; PathType getPathType () const;  ; bool read (const std::string &s) override;  ; void endEdit () override;  ; virtual const std::string & getRelativePath () const;  ; virtual const std::string & getFullPath () const;  ; virtual const std::string & getAbsolutePath () const;  ; virtual const std::string & getExtension () const;  ; void doOnUpdate () override;  ;  DataFileName (const Inherit &d)=delete;  ; DataFileName & operator= (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html
Security,access,access,"nst InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html
Deployability,update,update,"Datainline; setName(const std::string &name)sofa::core::objectmodel::BaseDatainline; setOwner(Base *o)sofa::core::objectmodel::BaseDatainline; setParent(BaseData *parent, const std::string &path=std::string())sofa::core::objectmodel::BaseData; setParent(const std::string &path)sofa::core::objectmodel::BaseData; setPathType(PathType pathType)sofa::core::objectmodel::DataFileNameVector; setPersistent(bool b)sofa::core::objectmodel::BaseDatainline; setReadOnly(bool b)sofa::core::objectmodel::BaseDatainline; setRequired(bool b)sofa::core::objectmodel::BaseDatainline; setValue(const sofa::type::SVector< std::string > &value)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inline; setValueAsString(const std::string &v)sofa::core::objectmodel::DataFileNameVector; setWidget(const char *val)sofa::core::objectmodel::BaseDatainline; SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME() static stdsofa::core::objectmodel::BaseDatainline; templateName()sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlinestatic; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updatePath()sofa::core::objectmodel::DataFileNameVectorprotected; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; ValueType typedefsofa::core::objectmodel::Data< sofa::type::SVector< std::string > >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inline; ~DataFileNameVector() override=defaultsofa::core::objectmodel::DataFileNameVector; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DataFileNameVector Member List . This is the complete list of members for sofa::core::objectmodel::DataFileNameVector, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addPath(const std::string &v, bool clear=false)sofa::core::objectmodel::DataFileNameVector; BaseData(const BaseInitData &init)sofa::core::objectmodel::BaseDataexplicit; BaseData(const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; beginEdit()sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlinevirtual; beginEditVoidPtr()sofa::core::objectmodel::BaseData; beginWriteOnly()sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlinevirtual; canBeLinked() constsofa::core::objectmodel::BaseDatainlinevirtual; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; copyValueFrom(const Data< sofa::type::SVector< std::string > > *data)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; sofa::core::objectmodel::BaseData::copyValueFrom(const BaseData *data)sofa::core::objectmodel::BaseData; Data(const BaseData::BaseInitData &init)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlineexplicit; Data(const InitData &init)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlineexplicit; Data(const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< sofa::type::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html
Usability,clear,clear," addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addPath(const std::string &v, bool clear=false)sofa::core::objectmodel::DataFileNameVector; BaseData(const BaseInitData &init)sofa::core::objectmodel::BaseDataexplicit; BaseData(const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; beginEdit()sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlinevirtual; beginEditVoidPtr()sofa::core::objectmodel::BaseData; beginWriteOnly()sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlinevirtual; canBeLinked() constsofa::core::objectmodel::BaseDatainlinevirtual; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; copyValueFrom(const Data< sofa::type::SVector< std::string > > *data)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; sofa::core::objectmodel::BaseData::copyValueFrom(const BaseData *data)sofa::core::objectmodel::BaseData; Data(const BaseData::BaseInitData &init)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlineexplicit; Data(const InitData &init)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlineexplicit; Data(const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< sofa::type::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html
Deployability,update,update,"nkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to a parent data. The value of this data will automatically duplicate the value of the parent data. More...;  ; bool setParent (const std::string &path);  ; virtual bool validParent (const BaseData *parent);  Check if a given Data can be linked as a parent of this data. More...;  ; BaseData * getParent () const;  ; void update () override;  Update the value of this Data. More...;  ; bool copyValueFrom (const BaseData *data);  Update this Data from the value of its parent. More...;  ; bool updateValueFromLink (const BaseData *data);  ; template<class T > ;  SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME () static std;  ; void setFlag (DataFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (DataFlagsEnum flag) const;  Get one of the flags. More...;  ; bool isDisplayed () const;  Return whether this Data has to be displayed in GUIs. More...;  ; bool isReadOnly () const;  Return whether this Data will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html
Integrability,message,message," bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::DataFileNameVector Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::DataFileNameVector Class Reference . #include <DataFileNameVector.h>. Inheritance diagram for sofa::core::objectmodel::DataFileNameVector:. [legend]. Protected Attributes; sofa::type::vector< std::string > m_fullpath;  ; PathType m_pathType;  used to determine how file dialogs should be opened More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; sofa::type::SVector< std::string > m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DataFileNameVector (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  DataFileNameVector (const sofa::type::SVector< std::string > &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  DataFileNameVector (const BaseData::BaseInitData &init);  ;  DataFileNameVector (const Inherit::InitData &init);  ;  ~DataFileNameVector () override=default;  ; void endEdit () override;  ; void addPath (const std::string &v, bool clear=false);  ; void setValueAsString (const std::string &v);  ; bool read (const std::string &s) override;  ; virtual const std::string & getRelativePath (unsigned int i);  ; virtual const std::string & getFullPath (unsigned int i) const;  ; virtual const std::string & getAbsolutePath (unsigned int i) const;  ; void doOnUpdate () override;  ; void setPathType (PathType pathType);  ; PathType getPathType () const;  ;  DataFileNameVector (const Inherit &d)=delete;  ; DataFileNameVector & operator= (const DataFileNameVector &)=delete;  ;  Public Member Functions inherited from so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html
Security,access,access,"pMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const sofa::type::SVector< std::string > &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const sofa::type::SVector< std::string > &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html
Usability,clear,clear,"re...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; sofa::type::SVector< std::string > m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DataFileNameVector (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  DataFileNameVector (const sofa::type::SVector< std::string > &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  DataFileNameVector (const BaseData::BaseInitData &init);  ;  DataFileNameVector (const Inherit::InitData &init);  ;  ~DataFileNameVector () override=default;  ; void endEdit () override;  ; void addPath (const std::string &v, bool clear=false);  ; void setValueAsString (const std::string &v);  ; bool read (const std::string &s) override;  ; virtual const std::string & getRelativePath (unsigned int i);  ; virtual const std::string & getFullPath (unsigned int i) const;  ; virtual const std::string & getAbsolutePath (unsigned int i) const;  ; void doOnUpdate () override;  ; void setPathType (PathType pathType);  ; PathType getPathType () const;  ;  DataFileNameVector (const Inherit &d)=delete;  ; DataFileNameVector & operator= (const DataFileNameVector &)=delete;  ;  Public Member Functions inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >;  Data (const Data &)=delete;  ; const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const override;  Get info about the value type of the associated variable. More...;  ; bool read (const std::string &s) override;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading strings. More...;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading booleans. More...;  ; bool read (const std::string &str);  Specialization for reading strings. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DataLink< T > Member List . This is the complete list of members for sofa::core::objectmodel::DataLink< T >, including all inherited members. DataLink(T &owner)sofa::core::objectmodel::DataLink< T >inline; getOwner() constsofa::core::objectmodel::DataLink< T >inline; getPath() constsofa::core::objectmodel::AbstractDataLink; getTarget() constsofa::core::objectmodel::DataLink< T >inline; hasPath() constsofa::core::objectmodel::AbstractDataLink; hasTarget() constsofa::core::objectmodel::AbstractDataLink; isSet() constsofa::core::objectmodel::DataLink< T >inline; m_pathsofa::core::objectmodel::AbstractDataLinkprotected; resolvePathAndGetTarget()sofa::core::objectmodel::AbstractDataLink; resolvePathAndSetTarget()sofa::core::objectmodel::AbstractDataLink; setPath(const std::string &path)sofa::core::objectmodel::AbstractDataLink; setTarget(T *target)sofa::core::objectmodel::DataLink< T >inline; sofa::core::objectmodel::AbstractDataLink::setTarget(BaseData *target)sofa::core::objectmodel::AbstractDataLink; unSet()sofa::core::objectmodel::DataLink< T >inline; ~DataLink()sofa::core::objectmodel::DataLink< T >inlinevirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link-members.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::objectmodel::DataLink< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::DataLink< T > Class Template Referencefinal . #include <DataLink.h>; DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. ; More... Inheritance diagram for sofa::core::objectmodel::DataLink< T >:. [legend]; Detailed Description; template<class T>; class sofa::core::objectmodel::DataLink< T >; DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. . Public Member Functions;  DataLink (T &owner);  ; virtual ~DataLink ();  ; T * getTarget () const;  ; void unSet ();  ; bool isSet () const;  ; void setTarget (T *target);  ; T & getOwner () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::AbstractDataLink; const BaseData & getOwner () const;  ; void setTarget (BaseData *target);  Change the targeted DataField and set the path to the empty string. More...;  ; BaseData * getTarget () const;  Get the targeted DataField. More...;  ; bool hasTarget () const;  Returns true if there is a target. More...;  ; const std::string getPath () const;  Get the path (is any) More...;  ; void setPath (const std::string &path);  Set the path, try to resolve it, on success set the DataField. More...;  ; bool hasPath () const;  Returns true if the path is set (and thus getTarget() == nullptr) More...;  ; bool resolvePathAndSetTarget ();  ; BaseData * resolvePathAndGetTarget ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::AbstractDataLink; std::string m_path {""""};  . Constructor details. ◆ DataLink(). template<class T > . sofa::core::objectmodel::DataLink< T >::DataL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link.html
Modifiability,inherit,inherited,"::objectmodel::DataLink< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::DataLink< T > Class Template Referencefinal . #include <DataLink.h>; DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. ; More... Inheritance diagram for sofa::core::objectmodel::DataLink< T >:. [legend]; Detailed Description; template<class T>; class sofa::core::objectmodel::DataLink< T >; DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. . Public Member Functions;  DataLink (T &owner);  ; virtual ~DataLink ();  ; T * getTarget () const;  ; void unSet ();  ; bool isSet () const;  ; void setTarget (T *target);  ; T & getOwner () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::AbstractDataLink; const BaseData & getOwner () const;  ; void setTarget (BaseData *target);  Change the targeted DataField and set the path to the empty string. More...;  ; BaseData * getTarget () const;  Get the targeted DataField. More...;  ; bool hasTarget () const;  Returns true if there is a target. More...;  ; const std::string getPath () const;  Get the path (is any) More...;  ; void setPath (const std::string &path);  Set the path, try to resolve it, on success set the DataField. More...;  ; bool hasPath () const;  Returns true if the path is set (and thus getTarget() == nullptr) More...;  ; bool resolvePathAndSetTarget ();  ; BaseData * resolvePathAndGetTarget ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::AbstractDataLink; std::string m_path {""""};  . Constructor details. ◆ DataLink(). template<class T > . sofa::core::objectmodel::DataLink< T >::DataLink ; (; T & ; owner). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DeprecatedBaseClass Member List . This is the complete list of members for sofa::core::objectmodel::DeprecatedBaseClass, including all inherited members. BaseClass()sofa::core::objectmodel::BaseClassprotected; classNamesofa::core::objectmodel::BaseClass; DeprecatedBaseClass()sofa::core::objectmodel::DeprecatedBaseClass; dynamicCast(Base *) const overridesofa::core::objectmodel::DeprecatedBaseClassinlinevirtual; GetSingleton()sofa::core::objectmodel::DeprecatedBaseClassstatic; hasParent(const BaseClass *c) constsofa::core::objectmodel::BaseClassinline; hasParent(const std::string &parentClassName) constsofa::core::objectmodel::BaseClassinline; isInstance(Base *) const overridesofa::core::objectmodel::DeprecatedBaseClassinlinevirtual; namespaceNamesofa::core::objectmodel::BaseClass; operator!=(const BaseClass &c) constsofa::core::objectmodel::BaseClassinline; operator==(const BaseClass &c) constsofa::core::objectmodel::BaseClassinline; parentssofa::core::objectmodel::BaseClass; shortNamesofa::core::objectmodel::BaseClass; templateNamesofa::core::objectmodel::BaseClass; typeNamesofa::core::objectmodel::BaseClass; ~BaseClass()sofa::core::objectmodel::BaseClassprotectedvirtual. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_deprecated_base_class-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_deprecated_base_class-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::objectmodel::DeprecatedBaseClass Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::DeprecatedBaseClass Class Reference . #include <BaseClass.h>. Inheritance diagram for sofa::core::objectmodel::DeprecatedBaseClass:. [legend]. Public Member Functions;  DeprecatedBaseClass ();  ; Base * dynamicCast (Base *) const override;  ; bool isInstance (Base *) const override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseClass; bool hasParent (const BaseClass *c) const;  returns true iff c is a parent class of this More...;  ; bool hasParent (const std::string &parentClassName) const;  returns true iff a parent class of this is named parentClassName More...;  ; bool operator== (const BaseClass &c) const;  ; bool operator!= (const BaseClass &c) const;  . Static Public Member Functions; static BaseClass * GetSingleton ();  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseClass; std::string namespaceName;  ; std::string typeName;  ; std::string className;  ; std::string templateName;  ; std::string shortName;  ; type::vector< const BaseClass * > parents;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseClass;  BaseClass ();  ; virtual ~BaseClass ();  . Constructor details. ◆ DeprecatedBaseClass(). sofa::core::objectmodel::DeprecatedBaseClass::DeprecatedBaseClass ; (; ). Function details. ◆ dynamicCast(). Base* sofa::core::objectmodel::DeprecatedBaseClass::dynamicCast ; (; Base * ; ); const. inlineoverridevirtual . Implements sofa::core::objectmodel::BaseClass. ◆ GetSingleton(). BaseClass * sofa::core::objectmodel::DeprecatedBaseClass::GetSingleton ; (; ). static . ◆ isInstance(). bool sofa::core::objectmodel::DeprecatedBaseClass::isInstance ; (; Base * ; ); const. inlineoverridevirtual . Implements sofa::core::obje,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_deprecated_base_class.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_deprecated_base_class.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DetachNodeEvent Member List . This is the complete list of members for sofa::core::objectmodel::DetachNodeEvent, including all inherited members. contains(BaseNode *n) constsofa::core::objectmodel::DetachNodeEvent; contains(BaseObject *o) constsofa::core::objectmodel::DetachNodeEvent; DetachNodeEvent(BaseNode *n)sofa::core::objectmodel::DetachNodeEvent; Event()sofa::core::objectmodel::Event; GetClassName()sofa::core::objectmodel::DetachNodeEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; getNode() constsofa::core::objectmodel::DetachNodeEvent; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; nodesofa::core::objectmodel::DetachNodeEventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~DetachNodeEvent() overridesofa::core::objectmodel::DetachNodeEvent; ~Event()sofa::core::objectmodel::Eventvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_detach_node_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_detach_node_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::DetachNodeEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::DetachNodeEvent Class Reference . #include <DetachNodeEvent.h>. Inheritance diagram for sofa::core::objectmodel::DetachNodeEvent:. [legend]; Detailed Description; Event indicating that a child node is being detached from the scene. Any reference to one of its descendant (such as active contacts) should be removed. . Protected Attributes; BaseNode * node;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  DetachNodeEvent (BaseNode *n);  ;  ~DetachNodeEvent () override;  ; BaseNode * getNode () const;  ; bool contains (BaseNode *n) const;  ; bool contains (BaseObject *o) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ node. BaseNode* sofa::core::objectmodel::DetachNodeEvent::node. protected . Constructor details. ◆ DetachNodeEvent(). sofa::core::objectmodel::DetachNodeEvent::DetachNodeEvent ; (; BaseNode * ; n). ◆ ~DetachNodeEvent(). sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_detach_node_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_detach_node_event.html
Deployability,update,update,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DDGNode Member List . This is the complete list of members for sofa::core::objectmodel::DDGNode, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; update()=0sofa::core::objectmodel::DDGNodepure virtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::DDGNode Member List . This is the complete list of members for sofa::core::objectmodel::DDGNode, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; update()=0sofa::core::objectmodel::DDGNodepure virtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node-members.html
Deployability,update,update,﻿. SOFA API: sofa::core::objectmodel::DDGNode Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::DDGNode Class Referenceabstract . #include <DDGNode.h>; A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. ; More... Inheritance diagram for sofa::core::objectmodel::DDGNode:. [legend]; Detailed Description; A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. . Protected Attributes; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html
Integrability,depend,dependencies,﻿. SOFA API: sofa::core::objectmodel::DDGNode Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::DDGNode Class Referenceabstract . #include <DDGNode.h>; A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. ; More... Inheritance diagram for sofa::core::objectmodel::DDGNode:. [legend]; Detailed Description; A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. . Protected Attributes; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html
Deployability,update,update,"odel::Data< void * >protected; setAutoLink(bool b)sofa::core::objectmodel::BaseDatainline; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setDisplayed(bool b)sofa::core::objectmodel::BaseDatainline; setFlag(DataFlagsEnum flag, bool b)sofa::core::objectmodel::BaseDatainline; setGroup(const std::string &val)sofa::core::objectmodel::BaseDatainline; setHelp(const std::string &val)sofa::core::objectmodel::BaseDatainline; setName(const std::string &name)sofa::core::objectmodel::BaseDatainline; setOwner(Base *o)sofa::core::objectmodel::BaseDatainline; setParent(BaseData *parent, const std::string &path=std::string())sofa::core::objectmodel::BaseData; setParent(const std::string &path)sofa::core::objectmodel::BaseData; setPersistent(bool b)sofa::core::objectmodel::BaseDatainline; setReadOnly(bool b)sofa::core::objectmodel::BaseDatainline; setRequired(bool b)sofa::core::objectmodel::BaseDatainline; setValue(const void * &value)sofa::core::objectmodel::Data< void * >inline; setWidget(const char *val)sofa::core::objectmodel::BaseDatainline; SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME() static stdsofa::core::objectmodel::BaseDatainline; templateName()sofa::core::objectmodel::Data< void * >inlinestatic; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::objectmodel::Data< void * >; ValueType typedefsofa::core::objectmodel::Data< void * >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< void * >inline; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::EmptyData Member List . This is the complete list of members for sofa::core::objectmodel::EmptyData, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; BaseData(const BaseInitData &init)sofa::core::objectmodel::BaseDataexplicit; BaseData(const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; beginEdit()sofa::core::objectmodel::Data< void * >inlinevirtual; beginEditVoidPtr()sofa::core::objectmodel::BaseData; beginWriteOnly()sofa::core::objectmodel::Data< void * >inlinevirtual; canBeLinked() constsofa::core::objectmodel::BaseDatainlinevirtual; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; copyValueFrom(const Data< void * > *data)sofa::core::objectmodel::Data< void * >; sofa::core::objectmodel::BaseData::copyValueFrom(const BaseData *data)sofa::core::objectmodel::BaseData; Data(const BaseData::BaseInitData &init)sofa::core::objectmodel::Data< void * >inlineexplicit; Data(const InitData &init)sofa::core::objectmodel::Data< void * >inlineexplicit; Data(const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< void * >inline; Data(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< void * >inline; Data(const void * &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< void * >inline; Da",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data-members.html
Deployability,update,update,"nkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to a parent data. The value of this data will automatically duplicate the value of the parent data. More...;  ; bool setParent (const std::string &path);  ; virtual bool validParent (const BaseData *parent);  Check if a given Data can be linked as a parent of this data. More...;  ; BaseData * getParent () const;  ; void update () override;  Update the value of this Data. More...;  ; bool copyValueFrom (const BaseData *data);  Update this Data from the value of its parent. More...;  ; bool updateValueFromLink (const BaseData *data);  ; template<class T > ;  SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME () static std;  ; void setFlag (DataFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (DataFlagsEnum flag) const;  Get one of the flags. More...;  ; bool isDisplayed () const;  Return whether this Data has to be displayed in GUIs. More...;  ; bool isReadOnly () const;  Return whether this Data will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html
Integrability,message,message,"﻿. SOFA API: sofa::core::objectmodel::EmptyData Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::objectmodel::EmptyData Class Reference . #include <Data.h>. Inheritance diagram for sofa::core::objectmodel::EmptyData:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< void * >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< void * >; void * m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Public Member Functions inherited from sofa::core::objectmodel::Data< void * >;  Data (const Data &)=delete;  ; const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const override;  Get info about the value type of the associated variable. More...;  ; bool read (const std::string &s) override;  ; bool SOFA_CORE_API read (c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::EmptyData Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::objectmodel::EmptyData Class Reference . #include <Data.h>. Inheritance diagram for sofa::core::objectmodel::EmptyData:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< void * >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< void * >; void * m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Public Member Functions inherited from sofa::core::objectmodel::Data< void * >;  Data (const Data &)=delete;  ; const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const override;  Get info about the value type of the associated variable. More...;  ; bool read (const std::string &s) override;  ; bool SOFA_CORE_API read (c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html
Security,access,access,"  Data (const InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const void * &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const void * &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::Event Member List . This is the complete list of members for sofa::core::objectmodel::Event, including all inherited members. Event()sofa::core::objectmodel::Event; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; GetClassName()sofa::core::objectmodel::Eventinlinestatic; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_event-members.html
Availability,avail,available,"tatic const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Attribute details. ◆ m_handled. bool sofa::core::objectmodel::Event::m_handled. protected . ◆ s_lastEventTypeIndex. size_t sofa::core::objectmodel::Event::s_lastEventTypeIndex = 0. staticprotected . storing the last given id . Constructor details. ◆ Event(). sofa::core::objectmodel::Event::Event ; (; ). ◆ ~Event(). sofa::core::objectmodel::Event::~Event ; (; ). virtual . Function details. ◆ GetClassName(). static const char* sofa::core::objectmodel::Event::GetClassName ; (; ). inlinestatic . Returnsthe name of the event type. As the method is static the name can be retrieved without instantiation. Must be reimplemented in each subclasse . ◆ getClassName(). virtual const char* sofa::core::objectmodel::Event::getClassName ; (; ); const. inlinevirtual . Returnsthe class name from an instance. Do not override directly. Instead, add the SOFA_EVENT_H in your class definition . ◆ getEventTypeCount(). static size_t sofa::core::objectmodel::Event::getEventTypeCount ; (; ). inlinestatic . Returnsthe total number of events available in SOFA . ◆ getEventTypeIndex(). virtual size_t sofa::core::objectmodel::Event::getEventTypeIndex ; (; ); const. pure virtual . Returnsunique type index for fast Event type comparison with unique indices (see function 'checkEventType') ; Warningthis mechanism will only work for the last derivated type (and not for eventual intermediaries) e.g. for C derivated from B derivated from A, checkEventType will returns true only for C* but false for B* or A* Should be implemented by using macros SOFA_EVENT_H / SOFA_EVENT_CPP . ◆ isHandled(). bool sofa::core::objectmodel::Event::isHandled ; (; ); const. Returns true of the event has been handled. . ◆ setHandled(). void sofa::core::objectmodel::Event::setHandled ; (; ). Tag the event as handled, i.e. the event needs not be propagated further. . sofacoreobjectmodelEvent; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::GUIEvent Member List . This is the complete list of members for sofa::core::objectmodel::GUIEvent, including all inherited members. Event()sofa::core::objectmodel::Event; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; GetClassName()sofa::core::objectmodel::GUIEventinlinestatic; getControlID(void) constsofa::core::objectmodel::GUIEventinline; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; getValue(void) constsofa::core::objectmodel::GUIEventinline; getValueName(void) constsofa::core::objectmodel::GUIEventinline; GUIEvent(const char *controlID, const char *valueName, const char *value)sofa::core::objectmodel::GUIEvent; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual; ~GUIEvent() overridesofa::core::objectmodel::GUIEvent. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_g_u_i_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_g_u_i_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::GUIEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::GUIEvent Class Reference . #include <GUIEvent.h>; This event notifies about GUI interaction. ; More... Inheritance diagram for sofa::core::objectmodel::GUIEvent:. [legend]; Detailed Description; This event notifies about GUI interaction. . Public Member Functions;  GUIEvent (const char *controlID, const char *valueName, const char *value);  Constructor. More...;  ;  ~GUIEvent () override;  Destructor. More...;  ; const std::string getControlID (void) const;  Get the emitter control ID. More...;  ; const std::string getValueName (void) const;  Get the value name. More...;  ; const std::string getValue (void) const;  Get the value. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ GUIEvent(). sofa::core::objectmodel::GUIEvent::GUIEvent ; (; const char * ; controlID, . const char * ; valueName, . const char * ; value . ). Constructor. . ◆ ~GUIEvent(). sofa::core::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_g_u_i_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_g_u_i_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HapticDeviceEvent Member List . This is the complete list of members for sofa::core::objectmodel::HapticDeviceEvent, including all inherited members. Button1StateMask enum valuesofa::core::objectmodel::HapticDeviceEvent; Button2StateMask enum valuesofa::core::objectmodel::HapticDeviceEvent; Button3StateMask enum valuesofa::core::objectmodel::HapticDeviceEvent; Button4StateMask enum valuesofa::core::objectmodel::HapticDeviceEvent; Button5StateMask enum valuesofa::core::objectmodel::HapticDeviceEvent; Button6StateMask enum valuesofa::core::objectmodel::HapticDeviceEvent; Button7StateMask enum valuesofa::core::objectmodel::HapticDeviceEvent; Button8StateMask enum valuesofa::core::objectmodel::HapticDeviceEvent; ButtonsStateMask enum namesofa::core::objectmodel::HapticDeviceEvent; Event()sofa::core::objectmodel::Event; getButton(const int id=0) constsofa::core::objectmodel::HapticDeviceEventinline; getButtonState() constsofa::core::objectmodel::HapticDeviceEventinline; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; GetClassName()sofa::core::objectmodel::HapticDeviceEventinlinestatic; getDeviceId() constsofa::core::objectmodel::HapticDeviceEventinline; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; getOrientation(void) constsofa::core::objectmodel::HapticDeviceEventinline; getPosition(void) constsofa::core::objectmodel::HapticDeviceEventinline; getPosX(void) constsofa::core::objectmodel::HapticDeviceEventinline; getPosY(void) constsofa::core::objectmodel::HapticDeviceEventinline; getPosZ(void) constsofa::core::objectmodel::HapticDeviceEventinline; HapticDeviceEvent(const unsigned int id, const sofa::type::Vec3 &position, const sofa::type::Quat< SReal > &orientation, const unsigned char button)sofa::core::objectmodel::HapticDeviceEvent; isHandled",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_haptic_device_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_haptic_device_event-members.html
Modifiability,inherit,inherited,"end]; Detailed Description; This event notifies about haptic device interaction. . Public Member Functions;  HapticDeviceEvent (const unsigned int id, const sofa::type::Vec3 &position, const sofa::type::Quat< SReal > &orientation, const unsigned char button);  Constructor. More...;  ;  ~HapticDeviceEvent () override;  Destructor. More...;  ; SReal getPosX (void) const;  Get the device X coordinate. More...;  ; SReal getPosY (void) const;  Get the device Y coordinate. More...;  ; SReal getPosZ (void) const;  Get the device Z coordinate. More...;  ; sofa::type::Vec3 getPosition (void) const;  Get the device coordinates. More...;  ; sofa::type::Quat< SReal > getOrientation (void) const;  Get the device orientation. More...;  ; unsigned char getButtonState () const;  Get the device button state. More...;  ; bool getButton (const int id=0) const;  ; unsigned int getDeviceId () const;  Get the device Id. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ HapticDeviceEvent(). sofa::core::objectmodel::HapticDeviceEvent::HapticDeviceEvent ; (; const unsigned int ; id, . const sofa::type::Vec3 & ; position, . con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_haptic_device_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_haptic_device_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HasDataTypeInfo< T > Member List . This is the complete list of members for sofa::core::objectmodel::HasDataTypeInfo< T >, including all inherited members. value enum valuesofa::core::objectmodel::HasDataTypeInfo< T >. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_data_type_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HasDeprecatedClassName< T > Member List . This is the complete list of members for sofa::core::objectmodel::HasDeprecatedClassName< T >, including all inherited members. value enum valuesofa::core::objectmodel::HasDeprecatedClassName< T >. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_deprecated_class_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_deprecated_class_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HasDeprecatedShortName< T > Member List . This is the complete list of members for sofa::core::objectmodel::HasDeprecatedShortName< T >, including all inherited members. value enum valuesofa::core::objectmodel::HasDeprecatedShortName< T >. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_deprecated_short_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_deprecated_short_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HasDeprecatedTemplateName< T > Member List . This is the complete list of members for sofa::core::objectmodel::HasDeprecatedTemplateName< T >, including all inherited members. value enum valuesofa::core::objectmodel::HasDeprecatedTemplateName< T >. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_deprecated_template_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_deprecated_template_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HasGetCustomClassName< T > Member List . This is the complete list of members for sofa::core::objectmodel::HasGetCustomClassName< T >, including all inherited members. value enum valuesofa::core::objectmodel::HasGetCustomClassName< T >. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_get_custom_class_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_get_custom_class_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HasGetCustomTemplateName< T > Member List . This is the complete list of members for sofa::core::objectmodel::HasGetCustomTemplateName< T >, including all inherited members. value enum valuesofa::core::objectmodel::HasGetCustomTemplateName< T >. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_get_custom_template_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_get_custom_template_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HasGetDefaultTemplateName< T > Member List . This is the complete list of members for sofa::core::objectmodel::HasGetDefaultTemplateName< T >, including all inherited members. value enum valuesofa::core::objectmodel::HasGetDefaultTemplateName< T >. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_get_default_template_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_get_default_template_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::HasName< T > Member List . This is the complete list of members for sofa::core::objectmodel::HasName< T >, including all inherited members. value enum valuesofa::core::objectmodel::HasName< T >. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_has_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::IdleEvent Member List . This is the complete list of members for sofa::core::objectmodel::IdleEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::core::objectmodel::IdleEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; IdleEvent()sofa::core::objectmodel::IdleEvent; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual; ~IdleEvent() overridesofa::core::objectmodel::IdleEvent. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_idle_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_idle_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::IdleEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::IdleEvent Class Reference . #include <IdleEvent.h>; This event is propagated along the objects hierarchy at regular interval. ; More... Inheritance diagram for sofa::core::objectmodel::IdleEvent:. [legend]; Detailed Description; This event is propagated along the objects hierarchy at regular interval. ; AuthorDamien Marchal . Public Member Functions;  IdleEvent ();  ;  ~IdleEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ IdleEvent(). sofa::core::objectmodel::IdleEvent::IdleEvent ; (; ). ◆ ~IdleEvent(). sofa::core::objectmodel::IdleEvent::~IdleEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::core::objectmodel::IdleEvent::GetClassName ; (; ). inlinestatic . sofacoreobjectmodelIdleEvent; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_idle_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_idle_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::JoystickEvent Member List . This is the complete list of members for sofa::core::objectmodel::JoystickEvent, including all inherited members. addAxisEvent(AxisEvent *)sofa::core::objectmodel::JoystickEvent; addHatEvent(HatEvent *)sofa::core::objectmodel::JoystickEvent; axisEventssofa::core::objectmodel::JoystickEventprotected; buttonEventsofa::core::objectmodel::JoystickEventprotected; Event()sofa::core::objectmodel::Event; getAxisEvent(const int) constsofa::core::objectmodel::JoystickEvent; getAxisEvents(void) constsofa::core::objectmodel::JoystickEvent; getAxisEventsSize(void) constsofa::core::objectmodel::JoystickEvent; getButton(unsigned int) constsofa::core::objectmodel::JoystickEvent; getButtonEvent(void) constsofa::core::objectmodel::JoystickEvent; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; GetClassName()sofa::core::objectmodel::JoystickEventinlinestatic; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; getHatEvent(const int) constsofa::core::objectmodel::JoystickEvent; getHatEvents(void) constsofa::core::objectmodel::JoystickEvent; getHatEventsSize(void) constsofa::core::objectmodel::JoystickEvent; hatEventssofa::core::objectmodel::JoystickEventprotected; isHandled() constsofa::core::objectmodel::Event; JoystickEvent()sofa::core::objectmodel::JoystickEvent; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setButtonEvent(ButtonEvent *)sofa::core::objectmodel::JoystickEvent; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual; ~JoystickEvent() overridesofa::core::objectmodel::JoystickEvent. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event-members.html
Modifiability,inherit,inherited,"679a9147. Open source framework for multi-physics simuation. Classes |; List of all members . sofa::core::objectmodel::JoystickEvent Class Reference . #include <JoystickEvent.h>; JoystickEvent Class. ; More... Inheritance diagram for sofa::core::objectmodel::JoystickEvent:. [legend]; Detailed Description; JoystickEvent Class. . Classes; class  AxisEvent;  Implements an event that notifies about axis positions (like analog controls of a joystick). The axis position is normalized so values are always in the range [-1, 1]. More...;  ; class  ButtonEvent;  Implements the button event for joysticks. More...;  ; class  HatEvent;  Implements an event notifying changes about a directionnal hat on a device (like a joystick). More...;  . Public Member Functions; Axis; const AxisEvent * getAxisEvent (const int) const;  ; const std::vector< AxisEvent * > & getAxisEvents (void) const;  ; unsigned int getAxisEventsSize (void) const;  ; void addAxisEvent (AxisEvent *);  ; Button; ButtonEvent * getButtonEvent (void) const;  ; bool getButton (unsigned int) const;  ; void setButtonEvent (ButtonEvent *);  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Hat; std::vector< AxisEvent * > axisEvents;  State of the Analogic Pad. More...;  ; ButtonEvent * buttonEvent;  State of the Joystick Buttons. More...;  ; std::vector< HatEvent * > hatEvents;  State of the directional cross. More...;  ; const HatEvent * getHatEvent (const int) const;  ; const std::vector< HatEvent * > & getHatEvents (void) const;  ; unsigned int getHatEventsSize (void) const;  ; void addHatEvent (HatEvent *);  ;  JoystickEvent ();  default constructor. More...;  ;  ~JoystickEvent",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::JoystickEvent::AxisEvent Member List . This is the complete list of members for sofa::core::objectmodel::JoystickEvent::AxisEvent, including all inherited members. AxisEvent(const int, const float)sofa::core::objectmodel::JoystickEvent::AxisEvent; getClassName() constsofa::core::objectmodel::JoystickEvent::AxisEventinlinevirtual; getIndex() constsofa::core::objectmodel::JoystickEvent::AxisEvent; getValue() constsofa::core::objectmodel::JoystickEvent::AxisEvent; ~AxisEvent()sofa::core::objectmodel::JoystickEvent::AxisEventvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event_1_1_axis_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event_1_1_axis_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::JoystickEvent::ButtonEvent Member List . This is the complete list of members for sofa::core::objectmodel::JoystickEvent::ButtonEvent, including all inherited members. ButtonEvent(const int buttonStates=0)sofa::core::objectmodel::JoystickEvent::ButtonEvent; getButton(const int) constsofa::core::objectmodel::JoystickEvent::ButtonEvent; getClassName() constsofa::core::objectmodel::JoystickEvent::ButtonEventinlinevirtual; setButtons(const int)sofa::core::objectmodel::JoystickEvent::ButtonEvent; ~ButtonEvent()sofa::core::objectmodel::JoystickEvent::ButtonEventvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event_1_1_button_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event_1_1_button_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::JoystickEvent::HatEvent Member List . This is the complete list of members for sofa::core::objectmodel::JoystickEvent::HatEvent, including all inherited members. CENTERED enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; DOWN enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; DOWN_LEFT enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; DOWN_RIGHT enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; getClassName() constsofa::core::objectmodel::JoystickEvent::HatEventinlinevirtual; getIndex() constsofa::core::objectmodel::JoystickEvent::HatEvent; getState() constsofa::core::objectmodel::JoystickEvent::HatEvent; HatEvent(const int, const State)sofa::core::objectmodel::JoystickEvent::HatEvent; LEFT enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; RIGHT enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; State enum namesofa::core::objectmodel::JoystickEvent::HatEvent; UP enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; UP_LEFT enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; UP_RIGHT enum valuesofa::core::objectmodel::JoystickEvent::HatEvent; ~HatEvent()sofa::core::objectmodel::JoystickEvent::HatEventvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event_1_1_hat_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event_1_1_hat_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::KeypressedEvent Member List . This is the complete list of members for sofa::core::objectmodel::KeypressedEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::core::objectmodel::KeypressedEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; getKey() constsofa::core::objectmodel::KeypressedEvent; isHandled() constsofa::core::objectmodel::Event; KeypressedEvent(char)sofa::core::objectmodel::KeypressedEvent; m_charsofa::core::objectmodel::KeypressedEventprotected; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual; ~KeypressedEvent() overridesofa::core::objectmodel::KeypressedEvent. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keypressed_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keypressed_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::KeypressedEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::KeypressedEvent Class Reference . #include <KeypressedEvent.h>; This event is propagated along the objects when a key on the keyboard is pressed. ; More... Inheritance diagram for sofa::core::objectmodel::KeypressedEvent:. [legend]; Detailed Description; This event is propagated along the objects when a key on the keyboard is pressed. ; AuthorFrancois Faure . Protected Attributes; char m_char;  Store the key. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  KeypressedEvent (char);  Constructor. More...;  ;  ~KeypressedEvent () override;  Destructor. More...;  ; char getKey () const;  Return the key pressed. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ m_char. char sofa::core::objectmodel::KeypressedEvent::m_char. protected . Store the key. . Constructor details. ◆ KeypressedEvent(). sofa::core::objectmodel::KeypressedEvent::KeypressedEvent",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keypressed_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keypressed_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::KeyreleasedEvent Member List . This is the complete list of members for sofa::core::objectmodel::KeyreleasedEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::core::objectmodel::KeyreleasedEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; getKey() constsofa::core::objectmodel::KeyreleasedEvent; isHandled() constsofa::core::objectmodel::Event; KeyreleasedEvent(char)sofa::core::objectmodel::KeyreleasedEvent; m_charsofa::core::objectmodel::KeyreleasedEventprotected; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual; ~KeyreleasedEvent() overridesofa::core::objectmodel::KeyreleasedEvent. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event-members.html
Deployability,release,released,"﻿. SOFA API: sofa::core::objectmodel::KeyreleasedEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::KeyreleasedEvent Class Reference . #include <KeyreleasedEvent.h>; This event is propagated along the objects when a key on the keyboard is released. ; More... Inheritance diagram for sofa::core::objectmodel::KeyreleasedEvent:. [legend]; Detailed Description; This event is propagated along the objects when a key on the keyboard is released. ; AuthorJuan Pablo de la Plata . Protected Attributes; char m_char;  Store the key. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  KeyreleasedEvent (char);  Constructor. More...;  ;  ~KeyreleasedEvent () override;  Destructor. More...;  ; char getKey () const;  Return the key released. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ m_char. char sofa::core::objectmodel::KeyreleasedEvent::m_char. protected . Store the key. . Constructor details. ◆ KeyreleasedEvent(). sofa::core::objectmodel::KeyreleasedEv",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::KeyreleasedEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::KeyreleasedEvent Class Reference . #include <KeyreleasedEvent.h>; This event is propagated along the objects when a key on the keyboard is released. ; More... Inheritance diagram for sofa::core::objectmodel::KeyreleasedEvent:. [legend]; Detailed Description; This event is propagated along the objects when a key on the keyboard is released. ; AuthorJuan Pablo de la Plata . Protected Attributes; char m_char;  Store the key. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  KeyreleasedEvent (char);  Constructor. More...;  ;  ~KeyreleasedEvent () override;  Destructor. More...;  ; char getKey () const;  Return the key released. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ m_char. char sofa::core::objectmodel::KeyreleasedEvent::m_char. protected . Store the key. . Constructor details. ◆ KeyreleasedEvent(). sofa::core::objectmodel::KeyreleasedEv",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_keyreleased_event.html
Usability,clear,clear,"﻿. SOFA API: sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false > Class Template Reference . #include <Link.h>. Static Public Member Functions; static void resize (T &c, size_t newsize);  ; static void clear (T &c);  ; static std::size_t add (T &c, TDestPtr v);  ; static std::size_t find (const T &c, TDestPtr v);  ; static void remove (T &c, std::size_t index);  . Function details. ◆ add(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::add ; (; T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ clear(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::clear ; (; T & ; c). inlinestatic . ◆ find(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::find ; (; const T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ remove(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::remove ; (; T & ; c, . std::size_t ; index . ). inlinestatic . ◆ resize(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::resize ; (; T & ; c, . size_t ; newsize . ). inlinestatic . sofacoreobjectmodelLinkTraitsContainer< TDestType, TDestPtr, TValueType, false >; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01false_01_4.html
Usability,clear,clear,"﻿. SOFA API: sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true > Class Template Reference . #include <Link.h>. Static Public Member Functions; static void clear (T &c);  ; static std::size_t add (T &c, TDestPtr v);  ; static std::size_t addBegin (T &c, TDestPtr v);  ; static std::size_t find (const T &c, TDestPtr v);  ; static void remove (T &c, std::size_t index);  . Function details. ◆ add(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::add ; (; T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ addBegin(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::addBegin ; (; T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ clear(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::clear ; (; T & ; c). inlinestatic . ◆ find(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::find ; (; const T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ remove(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::remove ; (; T & ; c, . std::size_t ; index . ). inlinestatic . sofacoreobjectmodelLinkTraitsContainer< TDestType, TDestPtr, TValueType, true >; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01true_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >, including all inherited members. add(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; addBegin(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; clear(T &c)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; find(const T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; remove(T &c, std::size_t index)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_32d6d50c3570276461072c49bb55b5e8.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_32d6d50c3570276461072c49bb55b5e8.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >, including all inherited members. add(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; addBegin(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; clear(T &c)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; find(const T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; remove(T &c, std::size_t index)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_32d6d50c3570276461072c49bb55b5e8.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_32d6d50c3570276461072c49bb55b5e8.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >, including all inherited members. add(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; clear(T &c)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; find(const T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; remove(T &c, std::size_t index)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; resize(T &c, size_t newsize)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_d676823968d82043c559156e041c5978.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_d676823968d82043c559156e041c5978.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >, including all inherited members. add(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; clear(T &c)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; find(const T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; remove(T &c, std::size_t index)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; resize(T &c, size_t newsize)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_d676823968d82043c559156e041c5978.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_d676823968d82043c559156e041c5978.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsDestPtr< TDestType, false > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsDestPtr< TDestType, false >, including all inherited members. get(T p)sofa::core::objectmodel::LinkTraitsDestPtr< TDestType, false >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsDestPtr< TDestType, false >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_dest_ptr_3_01_t_dest_type_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_dest_ptr_3_01_t_dest_type_00_01false_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsDestPtr< TDestType, true > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsDestPtr< TDestType, true >, including all inherited members. get(const T &p)sofa::core::objectmodel::LinkTraitsDestPtr< TDestType, true >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsDestPtr< TDestType, true >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_dest_ptr_3_01_t_dest_type_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_dest_ptr_3_01_t_dest_type_00_01true_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, false > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, false >, including all inherited members. get(const T &v)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, false >inlinestatic; path(const T &, std::string &)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, false >inlinestatic; set(T &v, const TDestPtr &ptr)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, false >inlinestatic; setPath(T &, const std::string &)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, false >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, false >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_00d3c2ea0645d755b27aa8f467b6a99f01.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_00d3c2ea0645d755b27aa8f467b6a99f01.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >, including all inherited members. get(const T &v)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >inlinestatic; path(const T &v, std::string &str)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >inlinestatic; set(T &v, const TDestPtr &ptr)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >inlinestatic; setPath(T &v, const std::string &name)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >inlinestatic; TraitsDestPtr typedefsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_00f6aeddd0847050d8fee1d6f1ed15d52d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_00f6aeddd0847050d8fee1d6f1ed15d52d.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::MouseEvent Member List . This is the complete list of members for sofa::core::objectmodel::MouseEvent, including all inherited members. AnyExtraButtonPressed enum valuesofa::core::objectmodel::MouseEvent; AnyExtraButtonReleased enum valuesofa::core::objectmodel::MouseEvent; Event()sofa::core::objectmodel::Event; GetClassName()sofa::core::objectmodel::MouseEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; getPosX(void) constsofa::core::objectmodel::MouseEventinline; getPosY(void) constsofa::core::objectmodel::MouseEventinline; getState(void) constsofa::core::objectmodel::MouseEventinline; getWheelDelta(void) constsofa::core::objectmodel::MouseEventinline; isHandled() constsofa::core::objectmodel::Event; LeftPressed enum valuesofa::core::objectmodel::MouseEvent; LeftReleased enum valuesofa::core::objectmodel::MouseEvent; m_handledsofa::core::objectmodel::Eventprotected; MiddlePressed enum valuesofa::core::objectmodel::MouseEvent; MiddleReleased enum valuesofa::core::objectmodel::MouseEvent; MouseEvent(State state, int wheelDelta=0)sofa::core::objectmodel::MouseEvent; MouseEvent(State state, int posX, int posY)sofa::core::objectmodel::MouseEvent; Move enum valuesofa::core::objectmodel::MouseEvent; Reset enum valuesofa::core::objectmodel::MouseEvent; RightPressed enum valuesofa::core::objectmodel::MouseEvent; RightReleased enum valuesofa::core::objectmodel::MouseEvent; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; setHandled()sofa::core::objectmodel::Event; State enum namesofa::core::objectmodel::MouseEvent; Wheel enum valuesofa::core::objectmodel::MouseEvent; ~Event()sofa::core::objectmodel::Eventvirtual; ~MouseEvent() overridesofa::core::objectmodel::MouseEven",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_mouse_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_mouse_event-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::MouseEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::MouseEvent Class Reference . #include <MouseEvent.h>; MouseEvent Class. ; More... Inheritance diagram for sofa::core::objectmodel::MouseEvent:. [legend]; Detailed Description; MouseEvent Class. ; Implements an Event that notifies about a Mouse Interaction. . Public Member Functions;  MouseEvent (State state, int wheelDelta=0);  Wheel Mouse Event constructor. More...;  ;  MouseEvent (State state, int posX, int posY);  Default constructor. More...;  ;  ~MouseEvent () override;  Default destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Accessors; int getPosX (void) const;  ; int getPosY (void) const;  ; int getWheelDelta (void) const;  ; State getState (void) const;  ; static const char * GetClassName ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Constructor details. ◆ MouseEvent() [1/2]. sofa::core::objectmodel::MouseEvent::MouseEvent ; (; State ; state, . int ; wheelDelta = 0 . ). Wheel Mouse Event constructor. . ◆ MouseEvent() [2/2]. sofa::core::objectmodel::MouseEvent::MouseEvent ; (; State ; state, . int ; posX",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_mouse_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_mouse_event.html
Deployability,update,updateCounter,"line; setFlag(LinkFlagsEnum flag, bool b)sofa::core::objectmodel::BaseLinkinline; setHelp(const std::string &val)sofa::core::objectmodel::BaseLinkinline; setLinkedBase(Base *link)sofa::core::objectmodel::BaseLink; setName(const std::string &name)sofa::core::objectmodel::BaseLinkinline; setOwner(OwnerType *owner)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; sofa::core::objectmodel::BaseLink::setOwner(Base *owner)sofa::core::objectmodel::BaseLinkinline; setPersistent(bool b)sofa::core::objectmodel::BaseLinkinline; setValidator(ValidatorFn fn)sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >inline; size() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; StorePathsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >static; storePath() constsofa::core::objectmodel::BaseLinkinline; TLink()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; TLink(const InitLink< OwnerType > &init)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; TraitsContainer typedefsofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; TraitsDestPtr typedefsofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; TraitsValueType typedefsofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; updateCounter()sofa::core::objectmodel::BaseLinkinlineprotected; updateLinks()sofa::core::objectmodel::BaseLink; ValidatorFn typedefsofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; ValueType typedefsofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; ~BaseLink()sofa::core::objectmodel::BaseLinkvirtual; ~MultiLink()sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >inlinevirtual; ~TLink() overridesofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags > Member List . This is the complete list of members for sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >, including all inherited members. ActiveFlagssofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; added(DestPtr val, std::size_t index)sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; Container typedefsofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html
Usability,clear,clear,"tatic; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; added(DestPtr val, std::size_t index)sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; Container typedefsofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::MultiLink< TOwnerType, TD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html
Deployability,update,updateLinks,"tring &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; void added (DestPtr val, std::size_t index);  ; void removed (DestPtr val, std::size_t index);  ;  Protected Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; DestType * getIndex (std::size_t index) const;  ;  Protected Member Functions inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html
Integrability,message,message,"ed from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html
Modifiability,inherit,inherited," Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags > Class Template Reference . #include <Link.h>; Container of vectors of links in the scenegraph, from a given type of object (Owner) to another (Dest) ; More... Inheritance diagram for sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >:. [legend]; Detailed Description; template<class TOwnerType, class TDestType, unsigned TFlags>; class sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; Container of vectors of links in the scenegraph, from a given type of object (Owner) to another (Dest) . Protected Attributes; ValidatorFn m_validator;  ;  Protected Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; OwnerType * m_owner;  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator ren",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html
Usability,clear,clear,"ed from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::New< T > Member List . This is the complete list of members for sofa::core::objectmodel::New< T >, including all inherited members. New(Args &&... args)sofa::core::objectmodel::New< T >inline. Generated on Mon Nov 11 2024 03:16:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_new-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_new-members.html
Deployability,update,update,"ccessor< Data< T >>() constsofa::core::objectmodel::RenamedData< T >inline; operator sofa::helper::WriteOnlyAccessor< Data< T >>() constsofa::core::objectmodel::RenamedData< T >inline; operator&()sofa::core::objectmodel::RenamedData< T >inline; operator=(const T &value)sofa::core::objectmodel::RenamedData< T >inline; printValue(std::ostream &os) constsofa::core::objectmodel::RenamedData< T >inline; read(const std::string &value)sofa::core::objectmodel::RenamedData< T >inline; RenamedData()sofa::core::objectmodel::RenamedData< T >inline; setAutoLink(bool b)sofa::core::objectmodel::RenamedData< T >inline; setDisplayed(bool b)sofa::core::objectmodel::RenamedData< T >inline; setFlag(BaseData::DataFlagsEnum flag, bool b)sofa::core::objectmodel::RenamedData< T >inline; setGroup(const std::string &val)sofa::core::objectmodel::RenamedData< T >inline; setHelp(const std::string &val)sofa::core::objectmodel::RenamedData< T >inline; setName(const std::string &name)sofa::core::objectmodel::RenamedData< T >inline; setOriginalData(Data< T > *data)sofa::core::objectmodel::RenamedData< T >inline; setOwner(Base *o)sofa::core::objectmodel::RenamedData< T >inline; setParent(BaseData *parent, const std::string &path=std::string())sofa::core::objectmodel::RenamedData< T >inline; setParent(const std::string &path)sofa::core::objectmodel::RenamedData< T >inline; setPersistent(bool b)sofa::core::objectmodel::RenamedData< T >inline; setReadOnly(bool b)sofa::core::objectmodel::RenamedData< T >inline; setRequired(bool b)sofa::core::objectmodel::RenamedData< T >inline; setValue(const T &value)sofa::core::objectmodel::RenamedData< T >inline; setWidget(const char *val)sofa::core::objectmodel::RenamedData< T >inline; unset()sofa::core::objectmodel::RenamedData< T >inline; update()sofa::core::objectmodel::RenamedData< T >inline; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::RenamedData< T >inline; validParent(const BaseData *parent)sofa::core::objectmodel::RenamedData< T >inline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_renamed_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_renamed_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::RenamedData< T > Member List . This is the complete list of members for sofa::core::objectmodel::RenamedData< T >, including all inherited members. beginEdit()sofa::core::objectmodel::RenamedData< T >inline; beginEditVoidPtr()sofa::core::objectmodel::RenamedData< T >inline; beginWriteOnly()sofa::core::objectmodel::RenamedData< T >inline; canBeLinked() constsofa::core::objectmodel::RenamedData< T >inline; copyValueFrom(const BaseData *data)sofa::core::objectmodel::RenamedData< T >inline; copyValueFrom(const Data< T > *data)sofa::core::objectmodel::RenamedData< T >inline; endEdit()sofa::core::objectmodel::RenamedData< T >inline; endEditVoidPtr()sofa::core::objectmodel::RenamedData< T >inline; forceSet()sofa::core::objectmodel::RenamedData< T >inline; getCounter() constsofa::core::objectmodel::RenamedData< T >inline; getData() constsofa::core::objectmodel::RenamedData< T >inline; getDefaultValueString() constsofa::core::objectmodel::RenamedData< T >inline; getFlag(BaseData::DataFlagsEnum flag) constsofa::core::objectmodel::RenamedData< T >inline; getGroup() constsofa::core::objectmodel::RenamedData< T >inline; getHelp() constsofa::core::objectmodel::RenamedData< T >inline; getLinkPath() constsofa::core::objectmodel::RenamedData< T >inline; getName() constsofa::core::objectmodel::RenamedData< T >inline; getOwner() constsofa::core::objectmodel::RenamedData< T >inline; getParent() constsofa::core::objectmodel::RenamedData< T >inline; getValue() constsofa::core::objectmodel::RenamedData< T >inline; getValueString() constsofa::core::objectmodel::RenamedData< T >inline; getValueTypeInfo() constsofa::core::objectmodel::RenamedData< T >inline; getValueTypeString() constsofa::core::objectmodel::RenamedData< T >inline; getValueVoidPtr() constsofa::core::objectmodel::RenamedData< T >inline; getWidget() constsofa::core::objectmodel::RenamedData< T >inline; ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_renamed_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_renamed_data-members.html
Deployability,update,update,"helper::WriteOnlyAccessor< Data< T >> () const;  ; bool read (const std::string &value);  ; void printValue (std::ostream &os) const;  ; std::string getValueString () const;  ; std::string getDefaultValueString () const;  ; std::string getValueTypeString () const;  ; const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const;  ; const void * getValueVoidPtr () const;  ; void * beginEditVoidPtr ();  ; void endEditVoidPtr ();  ; const std::string & getHelp () const;  ; void setHelp (const std::string &val);  ; const std::string & getGroup () const;  ; void setGroup (const std::string &val);  ; const std::string & getWidget () const;  ; void setWidget (const char *val);  ; void setFlag (BaseData::DataFlagsEnum flag, bool b);  ; bool getFlag (BaseData::DataFlagsEnum flag) const;  ; bool isDisplayed () const;  ; bool isReadOnly () const;  ; bool isPersistent () const;  ; bool isAutoLink () const;  ; bool isRequired () const;  ; void setDisplayed (bool b);  ; void setReadOnly (bool b);  ; void setPersistent (bool b);  ; void setAutoLink (bool b);  ; void setRequired (bool b);  ; std::string getLinkPath () const;  ; bool canBeLinked () const;  ; Base * getOwner () const;  ; void setOwner (Base *o);  ; BaseData * getData () const;  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  ; bool isSet () const;  ; void unset ();  ; void forceSet ();  ; int getCounter () const;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  ; bool setParent (const std::string &path);  ; bool validParent (const BaseData *parent);  ; BaseData * getParent () const;  ; void update ();  ; bool copyValueFrom (const BaseData *data);  ; bool updateValueFromLink (const BaseData *data);  ; T * beginEdit ();  ; T * beginWriteOnly ();  ; void endEdit ();  ; void setValue (const T &value);  ; const T & getValue () const;  ; void operator= (const T &value);  ; bool copyValueFrom (const Data< T > *data);  .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_renamed_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_renamed_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::ScriptEvent Member List . This is the complete list of members for sofa::core::objectmodel::ScriptEvent, including all inherited members. Event()sofa::core::objectmodel::Event; GetClassName()sofa::core::objectmodel::ScriptEventinlinestatic; getClassName() constsofa::core::objectmodel::Eventinlinevirtual; getEventName(void) constsofa::core::objectmodel::ScriptEventinline; getEventTypeCount()sofa::core::objectmodel::Eventinlinestatic; getEventTypeIndex() const =0sofa::core::objectmodel::Eventpure virtual; getSender(void) constsofa::core::objectmodel::ScriptEvent; isHandled() constsofa::core::objectmodel::Event; m_handledsofa::core::objectmodel::Eventprotected; s_lastEventTypeIndexsofa::core::objectmodel::Eventprotectedstatic; ScriptEvent(sofa::core::sptr< sofa::core::objectmodel::BaseNode > sender, const char *eventName)sofa::core::objectmodel::ScriptEvent; setHandled()sofa::core::objectmodel::Event; ~Event()sofa::core::objectmodel::Eventvirtual; ~ScriptEvent() overridesofa::core::objectmodel::ScriptEvent. Generated on Mon Nov 11 2024 03:16:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event-members.html
Integrability,message,message,"﻿. SOFA API: sofa::core::objectmodel::ScriptEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::ScriptEvent Class Reference . #include <ScriptEvent.h>; Generic Event class to send a message through the simulation graph. ; More... Inheritance diagram for sofa::core::objectmodel::ScriptEvent:. [legend]; Detailed Description; Generic Event class to send a message through the simulation graph. . Public Member Functions;  ScriptEvent (sofa::core::sptr< sofa::core::objectmodel::BaseNode > sender, const char *eventName);  Constructor. More...;  ;  ~ScriptEvent () override;  Destructor. More...;  ; const sofa::core::sptr< sofa::core::objectmodel::BaseNode > getSender (void) const;  Get the sender name. More...;  ; const std::string & getEventName (void) const;  Get the event name. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ ScriptEvent(). sofa::core::objectmodel::ScriptEvent::ScriptEvent ; (; sofa::core::sptr< sofa::core::objectmodel::BaseNode > ; sender,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html
Modifiability,inherit,inherited,"objectmodel::ScriptEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::ScriptEvent Class Reference . #include <ScriptEvent.h>; Generic Event class to send a message through the simulation graph. ; More... Inheritance diagram for sofa::core::objectmodel::ScriptEvent:. [legend]; Detailed Description; Generic Event class to send a message through the simulation graph. . Public Member Functions;  ScriptEvent (sofa::core::sptr< sofa::core::objectmodel::BaseNode > sender, const char *eventName);  Constructor. More...;  ;  ~ScriptEvent () override;  Destructor. More...;  ; const sofa::core::sptr< sofa::core::objectmodel::BaseNode > getSender (void) const;  Get the sender name. More...;  ; const std::string & getEventName (void) const;  Get the event name. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ ScriptEvent(). sofa::core::objectmodel::ScriptEvent::ScriptEvent ; (; sofa::core::sptr< sofa::core::objectmodel::BaseNode > ; sender, . const char * ; eventN",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html
Deployability,update,updateCounter,":BaseLinkinline; setPath(const std::string &path)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; setPersistent(bool b)sofa::core::objectmodel::BaseLinkinline; setValidator(ValidatorFn fn)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; SingleLink()sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; SingleLink(const BaseLink::InitLink< OwnerType > &init)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; SingleLink(const BaseLink::InitLink< OwnerType > &init, DestPtr val)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inline; size() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; storePath() constsofa::core::objectmodel::BaseLinkinline; StorePathsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >static; TLink()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; TLink(const InitLink< OwnerType > &init)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; TraitsContainer typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; TraitsDestPtr typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; TraitsValueType typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; updateCounter()sofa::core::objectmodel::BaseLinkinlineprotected; updateLinks()sofa::core::objectmodel::BaseLink; ValidatorFn typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; ValueType typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; ~BaseLink()sofa::core::objectmodel::BaseLinkvirtual; ~SingleLink()sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inlinevirtual; ~TLink() overridesofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags > Member List . This is the complete list of members for sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >, including all inherited members. ActiveFlagssofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; added(DestPtr val, std::size_t)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; changed(DestPtr before, DestPtr val)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inlineprotected; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; Container typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; CreateString(const st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html
Usability,clear,clear,"tPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; added(DestPtr val, std::size_t)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; changed(DestPtr before, DestPtr val)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inlineprotected; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; Container typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::SingleLink< TOwner",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html
Deployability,update,updateLinks,"tring &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; void added (DestPtr val, std::size_t);  ; void removed (DestPtr val, std::size_t);  ; void changed (DestPtr before, DestPtr val);  ;  Protected Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; DestType * getIndex (std::size_t index) const;  ;  Protected ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html
Integrability,message,message,"datorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html
Modifiability,inherit,inherited,"lass Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags > Class Template Reference . #include <Link.h>; Container of single links in the scenegraph, from a given type of object (Owner) to another (Dest) ; More... Inheritance diagram for sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >:. [legend]; Detailed Description; template<class TOwnerType, class TDestType, unsigned TFlags>; class sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; Container of single links in the scenegraph, from a given type of object (Owner) to another (Dest) . Protected Attributes; ValidatorFn m_validator;  ;  Protected Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; OwnerType * m_owner;  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  SingleLink ();  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init);  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~SingleLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html
Usability,clear,clear,"datorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr > Member List . This is the complete list of members for sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >, including all inherited members. add(TDestPtr v)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; addBegin(TDestPtr v)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; begin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; cbegin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; cend() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; clear()sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; const_iterator typedefsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; const_reverse_iterator typedefsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; crbegin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; crend() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; elemssofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >protected; empty() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; end() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; get() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; get()sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; isEmptysofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >protected; operator T*() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator()(std::size_t i) constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator()(std::size_t i)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator->() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator[](std::size_t i) constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator[](std::size_t i)sofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr-members.html
Usability,clear,clear," add(TDestPtr v)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; addBegin(TDestPtr v)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; begin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; cbegin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; cend() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; clear()sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; const_iterator typedefsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; const_reverse_iterator typedefsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; crbegin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; crend() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; elemssofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >protected; empty() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; end() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; get() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; get()sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; isEmptysofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >protected; operator T*() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator()(std::size_t i) constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator()(std::size_t i)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator->() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator[](std::size_t i) constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator[](std::size_t i)sofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr-members.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr > Class Template Reference . #include <Link.h>; Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. ; More...; Detailed Description; template<class T, class TDestPtr, class TPtr = T*>; class sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. . Protected Attributes; bool isEmpty {true};  ; TPtr elems [1];  . Public Member Functions;  SinglePtr ();  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; const_iterator cbegin () const;  ; const_iterator cend () const;  ; const_reverse_iterator crbegin () const;  ; const_reverse_iterator crend () const;  ; std::size_t size () const;  ; void resize (size_t size);  ; bool empty () const;  ; void clear ();  ; const TPtr & get () const;  ; TPtr & get ();  ; void add (TDestPtr v);  ; void addBegin (TDestPtr v);  ; const TPtr & operator[] (std::size_t i) const;  ; TPtr & operator[] (std::size_t i);  ; const TPtr & operator() (std::size_t i) const;  ; TPtr & operator() (std::size_t i);  ;  operator T* () const;  ; T * operator-> () const;  . Attribute details. ◆ elems. template<class T , class TDestPtr , class TPtr = T*> . TPtr sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::elems[1]. protected . ◆ isEmpty. template<class T , class TDestPtr , class TPtr = T*> . bool sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::isEmpty {true}. protected . Constructor details. ◆ SinglePtr(). template<class T , class TD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html
Usability,clear,clear,"st of all members . sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr > Class Template Reference . #include <Link.h>; Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. ; More...; Detailed Description; template<class T, class TDestPtr, class TPtr = T*>; class sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. . Protected Attributes; bool isEmpty {true};  ; TPtr elems [1];  . Public Member Functions;  SinglePtr ();  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; const_iterator cbegin () const;  ; const_iterator cend () const;  ; const_reverse_iterator crbegin () const;  ; const_reverse_iterator crend () const;  ; std::size_t size () const;  ; void resize (size_t size);  ; bool empty () const;  ; void clear ();  ; const TPtr & get () const;  ; TPtr & get ();  ; void add (TDestPtr v);  ; void addBegin (TDestPtr v);  ; const TPtr & operator[] (std::size_t i) const;  ; TPtr & operator[] (std::size_t i);  ; const TPtr & operator() (std::size_t i) const;  ; TPtr & operator() (std::size_t i);  ;  operator T* () const;  ; T * operator-> () const;  . Attribute details. ◆ elems. template<class T , class TDestPtr , class TPtr = T*> . TPtr sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::elems[1]. protected . ◆ isEmpty. template<class T , class TDestPtr , class TPtr = T*> . bool sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::isEmpty {true}. protected . Constructor details. ◆ SinglePtr(). template<class T , class TDestPtr , class TPtr = T*> . sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::SinglePtr ; (; ). inline . Function details. ◆ add(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::SPtr_const_cast< T > Member List . This is the complete list of members for sofa::core::objectmodel::SPtr_const_cast< T >, including all inherited members. SPtr_const_cast(UPtr p)sofa::core::objectmodel::SPtr_const_cast< T >inline. Generated on Mon Nov 11 2024 03:16:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_s_ptr__const__cast-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_s_ptr__const__cast-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::SPtr_dynamic_cast< T > Member List . This is the complete list of members for sofa::core::objectmodel::SPtr_dynamic_cast< T >, including all inherited members. SPtr_dynamic_cast(UPtr p)sofa::core::objectmodel::SPtr_dynamic_cast< T >inline. Generated on Mon Nov 11 2024 03:16:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_s_ptr__dynamic__cast-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_s_ptr__dynamic__cast-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::SPtr_static_cast< T > Member List . This is the complete list of members for sofa::core::objectmodel::SPtr_static_cast< T >, including all inherited members. SPtr_static_cast(UPtr p)sofa::core::objectmodel::SPtr_static_cast< T >inline. Generated on Mon Nov 11 2024 03:16:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_s_ptr__static__cast-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_s_ptr__static__cast-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::Tag Member List . This is the complete list of members for sofa::core::objectmodel::Tag, including all inherited members. idsofa::core::objectmodel::Tagprotected; negative() constsofa::core::objectmodel::Taginline; operator std::string() constsofa::core::objectmodel::Tag; operator!() constsofa::core::objectmodel::Taginline; operator!=(const Tag &t) constsofa::core::objectmodel::Taginline; operator-() constsofa::core::objectmodel::Taginline; operator<(const Tag &t) constsofa::core::objectmodel::Taginline; operator<<(std::ostream &o, const Tag &t)sofa::core::objectmodel::Tagfriend; operator<=(const Tag &t) constsofa::core::objectmodel::Taginline; operator==(const Tag &t) constsofa::core::objectmodel::Taginline; operator>(const Tag &t) constsofa::core::objectmodel::Taginline; operator>=(const Tag &t) constsofa::core::objectmodel::Taginline; operator>>(std::istream &i, Tag &t)sofa::core::objectmodel::Tagfriend; Tag()sofa::core::objectmodel::Taginline; Tag(const std::string &s)sofa::core::objectmodel::Tag; Tag(int id)sofa::core::objectmodel::Taginlineexplicit. Generated on Mon Nov 11 2024 03:16:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TagSet Member List . This is the complete list of members for sofa::core::objectmodel::TagSet, including all inherited members. begin() noexceptsofa::core::objectmodel::TagSet; begin() const noexceptsofa::core::objectmodel::TagSet; cbegin() const noexceptsofa::core::objectmodel::TagSet; cend() const noexceptsofa::core::objectmodel::TagSet; clear() noexceptsofa::core::objectmodel::TagSet; const_iterator typedefsofa::core::objectmodel::TagSet; const_reverse_iterator typedefsofa::core::objectmodel::TagSet; count(const Tag &_Keyval) constsofa::core::objectmodel::TagSet; crbegin() const noexceptsofa::core::objectmodel::TagSet; crend() const noexceptsofa::core::objectmodel::TagSet; empty() const noexceptsofa::core::objectmodel::TagSet; end() noexceptsofa::core::objectmodel::TagSet; end() const noexceptsofa::core::objectmodel::TagSet; erase(const_iterator _Where) noexceptsofa::core::objectmodel::TagSet; erase(const_iterator _First, const_iterator _Last) noexceptsofa::core::objectmodel::TagSet; erase(const Tag &_Keyval) noexceptsofa::core::objectmodel::TagSet; find(const Tag &_Keyval)sofa::core::objectmodel::TagSet; find(const Tag &_Keyval) constsofa::core::objectmodel::TagSet; includes(const Tag &t) constsofa::core::objectmodel::TagSet; includes(const TagSet &t) constsofa::core::objectmodel::TagSet; insert(const value_type &_Val)sofa::core::objectmodel::TagSet; iterator typedefsofa::core::objectmodel::TagSet; rbegin() noexceptsofa::core::objectmodel::TagSet; rbegin() const noexceptsofa::core::objectmodel::TagSet; rend() noexceptsofa::core::objectmodel::TagSet; rend() const noexceptsofa::core::objectmodel::TagSet; reverse_iterator typedefsofa::core::objectmodel::TagSet; size() const noexceptsofa::core::objectmodel::TagSet; TagSet()=defaultsofa::core::objectmodel::TagSet; TagSet(const Tag &t)sofa::core::objectmodel::TagSet; value_type typedefsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html
Usability,clear,clear,"ics simuation. sofa::core::objectmodel::TagSet Member List . This is the complete list of members for sofa::core::objectmodel::TagSet, including all inherited members. begin() noexceptsofa::core::objectmodel::TagSet; begin() const noexceptsofa::core::objectmodel::TagSet; cbegin() const noexceptsofa::core::objectmodel::TagSet; cend() const noexceptsofa::core::objectmodel::TagSet; clear() noexceptsofa::core::objectmodel::TagSet; const_iterator typedefsofa::core::objectmodel::TagSet; const_reverse_iterator typedefsofa::core::objectmodel::TagSet; count(const Tag &_Keyval) constsofa::core::objectmodel::TagSet; crbegin() const noexceptsofa::core::objectmodel::TagSet; crend() const noexceptsofa::core::objectmodel::TagSet; empty() const noexceptsofa::core::objectmodel::TagSet; end() noexceptsofa::core::objectmodel::TagSet; end() const noexceptsofa::core::objectmodel::TagSet; erase(const_iterator _Where) noexceptsofa::core::objectmodel::TagSet; erase(const_iterator _First, const_iterator _Last) noexceptsofa::core::objectmodel::TagSet; erase(const Tag &_Keyval) noexceptsofa::core::objectmodel::TagSet; find(const Tag &_Keyval)sofa::core::objectmodel::TagSet; find(const Tag &_Keyval) constsofa::core::objectmodel::TagSet; includes(const Tag &t) constsofa::core::objectmodel::TagSet; includes(const TagSet &t) constsofa::core::objectmodel::TagSet; insert(const value_type &_Val)sofa::core::objectmodel::TagSet; iterator typedefsofa::core::objectmodel::TagSet; rbegin() noexceptsofa::core::objectmodel::TagSet; rbegin() const noexceptsofa::core::objectmodel::TagSet; rend() noexceptsofa::core::objectmodel::TagSet; rend() const noexceptsofa::core::objectmodel::TagSet; reverse_iterator typedefsofa::core::objectmodel::TagSet; size() const noexceptsofa::core::objectmodel::TagSet; TagSet()=defaultsofa::core::objectmodel::TagSet; TagSet(const Tag &t)sofa::core::objectmodel::TagSet; value_type typedefsofa::core::objectmodel::TagSet. Generated on Mon Nov 11 2024 03:16:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html
Usability,clear,clear,"i-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::TagSet Class Reference . #include <TagSet.h>. Public Member Functions;  TagSet ()=default;  ;  TagSet (const Tag &t);  Automatic conversion between a tag and a tagset composed of this tag. More...;  ; bool includes (const Tag &t) const;  Returns true if this TagSet contains specified tag. More...;  ; bool includes (const TagSet &t) const;  Returns true if this TagSet contains all specified tags. More...;  ; iterator find (const Tag &_Keyval);  ; const_iterator find (const Tag &_Keyval) const;  ; bool empty () const noexcept;  ; std::size_t size () const noexcept;  ; std::size_t count (const Tag &_Keyval) const;  ; iterator begin () noexcept;  ; const_iterator begin () const noexcept;  ; iterator end () noexcept;  ; const_iterator end () const noexcept;  ; reverse_iterator rbegin () noexcept;  ; const_reverse_iterator rbegin () const noexcept;  ; reverse_iterator rend () noexcept;  ; const_reverse_iterator rend () const noexcept;  ; const_iterator cbegin () const noexcept;  ; const_iterator cend () const noexcept;  ; const_reverse_iterator crbegin () const noexcept;  ; const_reverse_iterator crend () const noexcept;  ; std::pair< iterator, bool > insert (const value_type &_Val);  ; iterator erase (const_iterator _Where) noexcept;  ; iterator erase (const_iterator _First, const_iterator _Last) noexcept;  ; std::size_t erase (const Tag &_Keyval) noexcept;  ; void clear () noexcept;  . Constructor details. ◆ TagSet() [1/2]. sofa::core::objectmodel::TagSet::TagSet ; (; ). default . ◆ TagSet() [2/2]. sofa::core::objectmodel::TagSet::TagSet ; (; const Tag & ; t). Automatic conversion between a tag and a tagset composed of this tag. . Function details. ◆ begin() [1/2]. TagSet::const_iterator sofa::core::objectmodel::TagSet::begin ; (; ); const. noexcept . ◆ begin() [2/2]. TagSet::iterator sofa::core::objectmodel::TagSet::begin ; (; ). noexcept . ◆ cbegin(). TagSet::const_iterator ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TClass< T, Parents > Member List . This is the complete list of members for sofa::core::objectmodel::TClass< T, Parents >, including all inherited members. BaseClass()sofa::core::objectmodel::BaseClassprotected; classNamesofa::core::objectmodel::BaseClass; dynamicCast(Base *obj) const overridesofa::core::objectmodel::TClass< T, Parents >inlineprotectedvirtual; get()sofa::core::objectmodel::TClass< T, Parents >inlinestatic; hasParent(const BaseClass *c) constsofa::core::objectmodel::BaseClassinline; hasParent(const std::string &parentClassName) constsofa::core::objectmodel::BaseClassinline; isInstance(Base *obj) const overridesofa::core::objectmodel::TClass< T, Parents >inlineprotectedvirtual; namespaceNamesofa::core::objectmodel::BaseClass; operator!=(const BaseClass &c) constsofa::core::objectmodel::BaseClassinline; operator==(const BaseClass &c) constsofa::core::objectmodel::BaseClassinline; parentssofa::core::objectmodel::BaseClass; shortNamesofa::core::objectmodel::BaseClass; TClass()sofa::core::objectmodel::TClass< T, Parents >inlineprotected; templateNamesofa::core::objectmodel::BaseClass; typeNamesofa::core::objectmodel::BaseClass; ~BaseClass()sofa::core::objectmodel::BaseClassprotectedvirtual; ~TClass() overridesofa::core::objectmodel::TClass< T, Parents >inlineprotected. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_class-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_class-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::TClass< T, Parents > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::TClass< T, Parents > Class Template Reference . #include <BaseClass.h>. Inheritance diagram for sofa::core::objectmodel::TClass< T, Parents >:. [legend]. Static Public Member Functions; static const BaseClass * get ();  . Protected Member Functions;  TClass ();  ;  ~TClass () override;  ; Base * dynamicCast (Base *obj) const override;  ; bool isInstance (Base *obj) const override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseClass;  BaseClass ();  ; virtual ~BaseClass ();  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseClass; std::string namespaceName;  ; std::string typeName;  ; std::string className;  ; std::string templateName;  ; std::string shortName;  ; type::vector< const BaseClass * > parents;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseClass; bool hasParent (const BaseClass *c) const;  returns true iff c is a parent class of this More...;  ; bool hasParent (const std::string &parentClassName) const;  returns true iff a parent class of this is named parentClassName More...;  ; bool operator== (const BaseClass &c) const;  ; bool operator!= (const BaseClass &c) const;  . Constructor details. ◆ TClass(). template<class T , class Parents = void> . sofa::core::objectmodel::TClass< T, Parents >::TClass ; (; ). inlineprotected . ◆ ~TClass(). template<class T , class Parents = void> . sofa::core::objectmodel::TClass< T, Parents >::~TClass ; (; ). inlineoverrideprotected . Function details. ◆ dynamicCast(). template<class T , class Parents = void> . Base* sofa::core::objectmodel::TClass< T, Parents >::dynamicCast ; (; Base * ; obj); const. inlineoverrideprotectedvirtual . Implements sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_class.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_class.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TClassInfo< T > Member List . This is the complete list of members for sofa::core::objectmodel::TClassInfo< T >, including all inherited members. classessofa::core::objectmodel::ClassInfoprotectedstatic; ClassInfo(const std::type_info *ti)sofa::core::objectmodel::ClassInfoprotected; dynamicCast(Base *obj) constsofa::core::objectmodel::TClassInfo< T >inlinevirtual; get()sofa::core::objectmodel::TClassInfo< T >inlinestatic; isInstance(Base *obj) constsofa::core::objectmodel::ClassInfoinlinevirtual; name() constsofa::core::objectmodel::ClassInfoinline; operator const std::type_info &() constsofa::core::objectmodel::ClassInfoinline; operator!=(const ClassInfo &t) constsofa::core::objectmodel::ClassInfoinline; operator<(const ClassInfo &t) constsofa::core::objectmodel::ClassInfoinline; operator==(const ClassInfo &t) constsofa::core::objectmodel::ClassInfoinline; ptsofa::core::objectmodel::ClassInfoprotected; TClassInfo()sofa::core::objectmodel::TClassInfo< T >inlineprotected; type() constsofa::core::objectmodel::ClassInfoinline; ~ClassInfo()sofa::core::objectmodel::ClassInfoprotectedvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_class_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_class_info-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::objectmodel::TClassInfo< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::TClassInfo< T > Class Template Reference . #include <ClassInfo.h>. Inheritance diagram for sofa::core::objectmodel::TClassInfo< T >:. [legend]. Public Member Functions; virtual void * dynamicCast (Base *obj) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::ClassInfo; std::string name () const;  ;  operator const std::type_info & () const;  ; helper::TypeInfo type () const;  ; bool operator== (const ClassInfo &t) const;  ; bool operator!= (const ClassInfo &t) const;  ; bool operator< (const ClassInfo &t) const;  ; virtual bool isInstance (Base *obj) const;  . Static Public Member Functions; static TClassInfo< T > & get ();  . Protected Member Functions;  TClassInfo ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ClassInfo;  ClassInfo (const std::type_info *ti);  ; virtual ~ClassInfo ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::ClassInfo; const std::type_info * pt;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::ClassInfo; static std::map< sofa::helper::TypeInfo, ClassInfo * > classes;  . Constructor details. ◆ TClassInfo(). template<class T > . sofa::core::objectmodel::TClassInfo< T >::TClassInfo ; (; ). inlineprotected . Function details. ◆ dynamicCast(). template<class T > . virtual void* sofa::core::objectmodel::TClassInfo< T >::dynamicCast ; (; Base * ; obj); const. inlinevirtual . Implements sofa::core::objectmodel::ClassInfo. ◆ get(). template<class T > . static TClassInfo<T>& sofa::core::objectmodel::TClassInfo< T >::get ; (; ). inlinestatic . sofacoreobjectmodelTClassInfo; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_class_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_class_info.html
Deployability,update,updateCounter,":core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; removed(DestPtr ptr, std::size_t index)=0sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >protectedpure virtual; removePath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; rend() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; set(Base *baseptr, size_t index=0)sofa::core::objectmodel::BaseLinkinline; setFlag(LinkFlagsEnum flag, bool b)sofa::core::objectmodel::BaseLinkinline; setHelp(const std::string &val)sofa::core::objectmodel::BaseLinkinline; setLinkedBase(Base *link)sofa::core::objectmodel::BaseLink; setName(const std::string &name)sofa::core::objectmodel::BaseLinkinline; setOwner(OwnerType *owner)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::setOwner(Base *owner)sofa::core::objectmodel::BaseLinkinline; setPersistent(bool b)sofa::core::objectmodel::BaseLinkinline; size() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; StorePathsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; storePath() constsofa::core::objectmodel::BaseLinkinline; TLink()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; TLink(const InitLink< OwnerType > &init)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; TraitsContainer typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; TraitsDestPtr typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; TraitsValueType typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; updateCounter()sofa::core::objectmodel::BaseLinkinlineprotected; updateLinks()sofa::core::objectmodel::BaseLink; ValueType typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; ~BaseLink()sofa::core::objectmodel::BaseLinkvirtual; ~TLink() overridesofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags > Member List . This is the complete list of members for sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >, including all inherited members. ActiveFlagssofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr ptr, std::size_t index)=0sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >protectedpure virtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; Container typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html
Usability,clear,clear," ActiveFlagssofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr ptr, std::size_t index)=0sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >protectedpure virtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; Container typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html
Deployability,update,updateLinks,"tring &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; DestType * getIndex (std::size_t index) const;  ; virtual void added (DestPtr ptr, std::size_t index)=0;  ; virtual void removed (DestPtr ptr, std::size_t index)=0;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseLink; void updateCounter ();  . Additional Inherited Members;  Static Public Member Funct",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html
Integrability,message,message," (ActiveFlags & FLAG_MULTILINK) != 0;  ; static constexpr bool StorePath = (ActiveFlags & FLAG_STOREPATH) != 0;  . Protected Attributes; OwnerType * m_owner {nullptr};  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html
Modifiability,inherit,inherited,"ctmodel::TLink< TOwnerType, TDestType, TFlags > Class Template Referenceabstract . #include <Link.h>; Container of all links in the scenegraph, from a given type of object (Owner) to another (Dest) ; More... Inheritance diagram for sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >:. [legend]; Detailed Description; template<class TOwnerType, class TDestType, unsigned TFlags>; class sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; Container of all links in the scenegraph, from a given type of object (Owner) to another (Dest) . Static Public Attributes; static constexpr unsigned ActiveFlags = TFlags;  ; static constexpr bool IsStrongLink = (ActiveFlags & FLAG_STRONGLINK) != 0;  ; static constexpr bool IsMultiLink = (ActiveFlags & FLAG_MULTILINK) != 0;  ; static constexpr bool StorePath = (ActiveFlags & FLAG_STOREPATH) != 0;  . Protected Attributes; OwnerType * m_owner {nullptr};  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html
Usability,clear,clear," (ActiveFlags & FLAG_MULTILINK) != 0;  ; static constexpr bool StorePath = (ActiveFlags & FLAG_STOREPATH) != 0;  . Protected Attributes; OwnerType * m_owner {nullptr};  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::VectorLinks< LinkType, OwnerType > Member List . This is the complete list of members for sofa::core::objectmodel::VectorLinks< LinkType, OwnerType >, including all inherited members. Alloc typedefsofa::type::vector< LinkType * >; const_reference typedefsofa::type::vector< LinkType * >; fastResize(Size n)sofa::type::vector< LinkType * >inline; fill(const LinkType * &value)sofa::type::vector< LinkType * >inline; Inherit typedefsofa::core::objectmodel::VectorLinks< LinkType, OwnerType >; m_componentsofa::core::objectmodel::VectorLinks< LinkType, OwnerType >protected; m_helpsofa::core::objectmodel::VectorLinks< LinkType, OwnerType >protected; m_namesofa::core::objectmodel::VectorLinks< LinkType, OwnerType >protected; memory_manager typedefsofa::type::vector< LinkType * >; operator=(const std::vector< LinkType *, Alloc > &x)sofa::type::vector< LinkType * >inline; operator=(std::vector< LinkType *, Alloc > &&v)sofa::type::vector< LinkType * >inline; operator[](Size n)sofa::type::vector< LinkType * >inline; operator[](Size n) constsofa::type::vector< LinkType * >inline; parseFieldsSizeLinks(const std::map< std::string, std::string * > &str, Data< unsigned int > &size)sofa::core::objectmodel::VectorLinks< LinkType, OwnerType >inline; parseSizeLinks(sofa::core::objectmodel::BaseObjectDescription *arg, Data< unsigned int > &size)sofa::core::objectmodel::VectorLinks< LinkType, OwnerType >inline; read(std::istream &in)sofa::type::vector< LinkType * >inline; read(std::istream &in)sofa::type::vector< LinkType * >; read(std::istream &in)sofa::type::vector< LinkType * >; read(std::istream &in)sofa::type::vector< LinkType * >; read(std::istream &in)sofa::type::vector< LinkType * >; read(std::istream &in)sofa::type::vector< LinkType * >; read(std::istream &in)sofa::type::vector< LinkType * >; rebind_to typedefsofa::type::vector< LinkType * >; reference typedefs",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_vector_links-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_vector_links-members.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::core::objectmodel::VectorLinks< LinkType, OwnerType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::VectorLinks< LinkType, OwnerType > Class Template Reference . #include <vectorLinks.h>. Inheritance diagram for sofa::core::objectmodel::VectorLinks< LinkType, OwnerType >:. [legend]; Detailed Description; template<class LinkType, class OwnerType>; class sofa::core::objectmodel::VectorLinks< LinkType, OwnerType >; A helper class which implements a vector of a variable number of Links; WarningThe first index is 1 in the Data name; AuthorMatthieu Nesme ; Date2015 . Protected Attributes; OwnerType * m_component;  ; std::string m_name;  ; std::string m_help;  . Public Member Functions;  VectorLinks (OwnerType *component, std::string const &name, std::string const &help);  'dataEngineInOut' is only valid if 'component' is a DataEngine More...;  ;  ~VectorLinks ();  ; void parseSizeLinks (sofa::core::objectmodel::BaseObjectDescription *arg, Data< unsigned int > &size);  ; void parseFieldsSizeLinks (const std::map< std::string, std::string * > &str, Data< unsigned int > &size);  ; void resize (const unsigned int size);  ;  Public Member Functions inherited from sofa::type::vector< LinkType * >;  vector ();  Basic constructor. More...;  ;  vector (Size n, const LinkType * &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< LinkType *, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< LinkType * > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< LinkType *, Alloc > &&v);  Move constructor. More...;  ;  vector (typename vector< LinkType * >::const_iterator first, typename vector< LinkType * >::const_iterator last);  Constructor. More...;  ; vector & operator= (const std::vector< LinkType *, Alloc > &x);  Copy",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_vector_links.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_vector_links.html
Security,access,access,"; void parseFieldsSizeLinks (const std::map< std::string, std::string * > &str, Data< unsigned int > &size);  ; void resize (const unsigned int size);  ;  Public Member Functions inherited from sofa::type::vector< LinkType * >;  vector ();  Basic constructor. More...;  ;  vector (Size n, const LinkType * &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< LinkType *, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< LinkType * > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< LinkType *, Alloc > &&v);  Move constructor. More...;  ;  vector (typename vector< LinkType * >::const_iterator first, typename vector< LinkType * >::const_iterator last);  Constructor. More...;  ; vector & operator= (const std::vector< LinkType *, Alloc > &x);  Copy operator. More...;  ; vector & operator= (std::vector< LinkType *, Alloc > &&v);  Move assignment operator. More...;  ; reference operator[] (Size n);  Read/write random access. More...;  ; const_reference operator[] (Size n) const;  Read-only random access. More...;  ; std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  Specialization for writing vectors of unsigned char. More...;  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  Specialization for reading vectors of int and unsigned int using ""A-B"" notation for all integers between A and B. More...;  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in); ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_vector_links.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_vector_links.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::WriteAccessWithRawPtr Member List . This is the complete list of members for sofa::core::objectmodel::WriteAccessWithRawPtr, including all inherited members. ptrsofa::core::objectmodel::WriteAccessWithRawPtr; WriteAccessWithRawPtr(BaseData *data)sofa::core::objectmodel::WriteAccessWithRawPtrinlineexplicit; ~WriteAccessWithRawPtr()sofa::core::objectmodel::WriteAccessWithRawPtrinline. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_write_access_with_raw_ptr-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_write_access_with_raw_ptr-members.html
Security,access,access,"﻿. SOFA API: sofa::core::objectmodel::WriteAccessWithRawPtr Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::WriteAccessWithRawPtr Class Reference . #include <BaseData.h>; Detailed Description; A WriteAccessWithRawPtr is a RAII class, holding a reference to a given container and providing access to its data through a non-const void* ptr taking care of the beginEdit/endEdit pairs.; Advantadges of using a WriteAccessWithRawPtr are :. It can be faster that the default methods and operators of the container, as verifications and changes notifications can be handled in the accessor's constructor and destructor instead of at each item access. . Public Attributes; void * ptr { nullptr };  . Public Member Functions;  WriteAccessWithRawPtr (BaseData *data);  ;  ~WriteAccessWithRawPtr ();  . Attribute details. ◆ ptr. void* sofa::core::objectmodel::WriteAccessWithRawPtr::ptr { nullptr }. Constructor details. ◆ WriteAccessWithRawPtr(). sofa::core::objectmodel::WriteAccessWithRawPtr::WriteAccessWithRawPtr ; (; BaseData * ; data). inlineexplicit . ◆ ~WriteAccessWithRawPtr(). sofa::core::objectmodel::WriteAccessWithRawPtr::~WriteAccessWithRawPtr ; (; ). inline . sofacoreobjectmodelWriteAccessWithRawPtr; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_write_access_with_raw_ptr.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_write_access_with_raw_ptr.html
Deployability,update,updateInternal," *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMeshTopology, core::topology::Topology)sofa::core::topology::BaseMeshTopology; SOFA_CLASS(Topology, core::objectmodel::BaseObject)sofa::core::topology::Topology; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Topology()sofa::core::topology::Topologyinlineprotectedvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::BaseMeshTopology Member List . This is the complete list of members for sofa::core::topology::BaseMeshTopology, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz)sofa::core::topology::BaseMeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTriangle(Index a, Index b, Index c)sofa::core::topology::BaseMeshTopologyvirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html
Performance,load,load,":core::topology::BaseMeshTopologystatic; InvalidHexahedronsofa::core::topology::Topologystatic; InvalidIDsofa::core::topology::Topologystatic; InvalidPentahedronsofa::core::topology::Topologystatic; InvalidPyramidsofa::core::topology::Topologystatic; InvalidQuadsofa::core::topology::Topologystatic; InvalidQuadsInHexahedronsofa::core::topology::BaseMeshTopologystatic; InvalidSetsofa::core::topology::Topologyinlinestatic; InvalidTetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz)sofa::core::topology::BaseMeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTriangle(Index a, Index b, Index c)sofa::core::topology::BaseMeshTopologyvirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html
Usability,clear,clear,"bjectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html
Availability,down,down,"ogy Class Referenceabstract . #include <BaseMeshTopology.h>. Inheritance diagram for sofa::core::topology::BaseMeshTopology:. [legend]. Protected Attributes; sofa::core::objectmodel::DataFileName fileTopology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMeshTopology, core::topology::Topology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool load (const char *filename);  ; virtual std::string getFilename () const;  ; virtual EdgeID getEdgeIndex (PointID v1, PointID v2);  Returns the index of the edge joining vertex v1 and vertex v2; returns InvalidID if no edge exists. More...;  ; virtual TriangleID getTriangleIndex (PointID v1, PointID v2, PointID v3);  Returns the index of the triangle given three vertex indices; returns InvalidID if no triangle exists. More...;  ; virtual QuadID getQuadIndex (PointID v1, PointID v2, PointID v3, PointID v4);  Returns the index of the quad given four vertex indices; returns InvalidID if no quad exists. More...;  ; virtual TetrahedronID getTetrahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4);  Returns the index of the tetrahedron given four vertex indices; returns InvalidID if no tetrahedron exists. More...;  ; virtual HexahedronID getHexahedronInd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Integrability,depend,dependent,"pologyChange * >::const_iterator beginStateChange () const;  Provides an iterator on the first element in the list of StateChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endStateChange () const;  Provides an iterator on the last element in the list of StateChange objects. More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbPoints () const;  ; virtual void setNbPoints (Size);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::BaseMeshTopology Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::BaseMeshTopology Class Referenceabstract . #include <BaseMeshTopology.h>. Inheritance diagram for sofa::core::topology::BaseMeshTopology:. [legend]. Protected Attributes; sofa::core::objectmodel::DataFileName fileTopology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMeshTopology, core::topology::Topology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool load (const char *filename);  ; virtual std::string getFilename () const;  ; virtual EdgeID getEdgeIndex (PointID v1, PointID v2);  Returns the index of the edge joining vertex v1 and vertex v2; returns InvalidID if no edge exists. More...;  ; virtual TriangleID getTriangleIndex (PointID v1, PointID v2, PointID v3);  Returns the index of the triangle given three vertex indices; returns InvalidID if no triangle exists. More...;  ; virtual QuadID getQuadIndex (PointID v1, PointID v2, PointID v3, PointID v4);  Returns the index of the quad given four vertex indices; returns InvalidID ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Performance,load,load,"erited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMeshTopology, core::topology::Topology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool load (const char *filename);  ; virtual std::string getFilename () const;  ; virtual EdgeID getEdgeIndex (PointID v1, PointID v2);  Returns the index of the edge joining vertex v1 and vertex v2; returns InvalidID if no edge exists. More...;  ; virtual TriangleID getTriangleIndex (PointID v1, PointID v2, PointID v3);  Returns the index of the triangle given three vertex indices; returns InvalidID if no triangle exists. More...;  ; virtual QuadID getQuadIndex (PointID v1, PointID v2, PointID v3, PointID v4);  Returns the index of the quad given four vertex indices; returns InvalidID if no quad exists. More...;  ; virtual TetrahedronID getTetrahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4);  Returns the index of the tetrahedron given four vertex indices; returns InvalidID if no tetrahedron exists. More...;  ; virtual HexahedronID getHexahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8);  Returns the index of the hexahedron given eight vertex indices; returns InvalidID if no hexahedron exists. More...;  ; virtual int getVe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Safety,detect,detect,"shTopology. ◆ getQuadsAroundVertex(). const BaseMeshTopology::QuadsAroundVertex & sofa::core::topology::BaseMeshTopology::getQuadsAroundVertex ; (; PointID ; i). virtual . Returns the set of quads adjacent to a given vertex. ; Returns the set of quad adjacent to a given vertex. ; Reimplemented in sofa::component::topology::container::constant::MeshTopology. ◆ getQuadsInHexahedron(). const BaseMeshTopology::QuadsInHexahedron & sofa::core::topology::BaseMeshTopology::getQuadsInHexahedron ; (; HexaID ; i). virtual . Returns the set of quads adjacent to a given hexahedron. ; Returns the set of quad adjacent to a given hexahedron. ; Reimplemented in sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ getRevision(). virtual int sofa::core::topology::BaseMeshTopology::getRevision ; (; ); const. inlinevirtual . Get the current revision of this mesh. This can be used to detect changes, however topological changes event should be used whenever possible. ; Reimplemented in sofa::core::topology::TopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ getTetra(). virtual Tetra sofa::core::topology::BaseMeshTopology::getTetra ; (; TetraID ; i). inlinevirtual . ◆ getTetrahedra(). virtual const SeqTetrahedra& sofa::core::topology::BaseMeshTopology::getTetrahedra ; (; ). pure virtual . Implemented in sofa::core::topology::TopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ getTetrahedraAroundEdge(). const BaseMeshTopology::TetrahedraAroundEdge & sofa::core::topology::BaseMeshTopology::getTetrahedraAroundEdge ; (; EdgeID ; i). virtual . Returns the set of tetrahedra adjacent to a given edge. ; Reimplemented in sofa::component::topology::container::constant::MeshTopology. ◆ getTetrahedraAroundTriangle(). const BaseMeshTopology::TetrahedraAroundTria",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Security,access,accessors,"of hexahedra adjacent to a given vertex. More...;  ; virtual const HexahedraAroundEdge & getHexahedraAroundEdge (EdgeID i);  Returns the set of hexahedra adjacent to a given edge. More...;  ; virtual const HexahedraAroundQuad & getHexahedraAroundQuad (QuadID i);  Returns the set of hexahedra adjacent to a given quad. More...;  ; virtual const VerticesAroundVertex getVerticesAroundVertex (PointID i);  Returns the set of vertices adjacent to a given vertex (i.e. sharing an edge) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElement (Index elem);  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElements (sofa::type::vector< Index > elems);  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; Deprecated names, for backward-compatibility; const SeqLines & getLines ();  ; Size getNbLines ();  ; Line getLine (LineID i);  ; Initial points accessors (only available if the topology was loaded from a file containing this information).; Note that this data is only used for initialization and is not maintained afterwards (i.e. topological changes may not be applied) . bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  . virtual void clear ();  ; virtual void addPoint (SReal px, SReal py, SReal pz);  ; virtual void addEdge (Index a, Index b);  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addQuad (Index a, Index b, Index c, Index d);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ; virtual void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h);  . virtual bool checkConnexity ();  ; virtual bool checkTopology () const;  Checks if the topology is coherent. More...;  ; virtual Size getNumberOfConn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Usability,clear,clear,"n element (i.e. sharing a link) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElements (sofa::type::vector< Index > elems);  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; Deprecated names, for backward-compatibility; const SeqLines & getLines ();  ; Size getNbLines ();  ; Line getLine (LineID i);  ; Initial points accessors (only available if the topology was loaded from a file containing this information).; Note that this data is only used for initialization and is not maintained afterwards (i.e. topological changes may not be applied) . bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  . virtual void clear ();  ; virtual void addPoint (SReal px, SReal py, SReal pz);  ; virtual void addEdge (Index a, Index b);  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addQuad (Index a, Index b, Index c, Index d);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ; virtual void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h);  . virtual bool checkConnexity ();  ; virtual bool checkTopology () const;  Checks if the topology is coherent. More...;  ; virtual Size getNumberOfConnectedComponent ();  Returns the number of connected component. More...;  ; virtual const sofa::type::vector< Index > getConnectedElement (Index elem);  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  . virtual std::list< const TopologyChange * >::const_iterator beginChange () const;  Provides an iterator on the first element in the list of TopologyChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endChange () const;  Provides an iterator on the last element in the list of TopologyChange objects. More...;  ; virtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html
Deployability,update,update," setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setDisplayed(bool b)sofa::core::objectmodel::BaseDatainline; setFlag(DataFlagsEnum flag, bool b)sofa::core::objectmodel::BaseDatainline; setGroup(const std::string &val)sofa::core::objectmodel::BaseDatainline; setHelp(const std::string &val)sofa::core::objectmodel::BaseDatainline; setName(const std::string &name)sofa::core::objectmodel::BaseDatainline; setOwner(Base *o)sofa::core::objectmodel::BaseDatainline; setParent(BaseData *parent, const std::string &path=std::string())sofa::core::objectmodel::BaseData; setParent(const std::string &path)sofa::core::objectmodel::BaseData; setPersistent(bool b)sofa::core::objectmodel::BaseDatainline; setReadOnly(bool b)sofa::core::objectmodel::BaseDatainline; setRequired(bool b)sofa::core::objectmodel::BaseDatainline; setValue(const void * &value)sofa::core::objectmodel::Data< void * >inline; setWidget(const char *val)sofa::core::objectmodel::BaseDatainline; SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME() static stdsofa::core::objectmodel::BaseDatainline; swap(unsigned int, unsigned int)sofa::core::topology::BaseTopologyData< T >inlinevirtual; templateName()sofa::core::objectmodel::Data< void * >inlinestatic; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::objectmodel::Data< void * >; ValueType typedefsofa::core::objectmodel::Data< void * >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< void * >inline; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::BaseTopologyData< T > Member List . This is the complete list of members for sofa::core::topology::BaseTopologyData< T >, including all inherited members. add(const sofa::type::vector< Topology::PointID > &, const sofa::type::vector< Topology::Point > &, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< PointAncestorElem > &)sofa::core::topology::BaseTopologyData< T >inlinevirtual; add(const sofa::type::vector< Topology::EdgeID > &, const sofa::type::vector< Topology::Edge > &, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< EdgeAncestorElem > &)sofa::core::topology::BaseTopologyData< T >inlinevirtual; add(const sofa::type::vector< Topology::TriangleID > &, const sofa::type::vector< Topology::Triangle > &, const sofa::type::vector< sofa::type::vector< Topology::TriangleID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< TriangleAncestorElem > &)sofa::core::topology::BaseTopologyData< T >inlinevirtual; add(const sofa::type::vector< Topology::TetrahedronID > &, const sofa::type::vector< Topology::Tetrahedron > &, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< TetrahedronAncestorElem > &)sofa::core::topology::BaseTopologyData< T >inlinevirtual; add(const sofa::type::vector< Topology::QuadID > &, const sofa::type::vector< Topology::Quad > &, const sofa::type::vector< sofa::type::vector< Topology::QuadID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< QuadAncestorElem > &)sofa::core::topology::BaseTopologyData< T >inlinevirtual; add(const sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data-members.html
Deployability,update,update,"nkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to a parent data. The value of this data will automatically duplicate the value of the parent data. More...;  ; bool setParent (const std::string &path);  ; virtual bool validParent (const BaseData *parent);  Check if a given Data can be linked as a parent of this data. More...;  ; BaseData * getParent () const;  ; void update () override;  Update the value of this Data. More...;  ; bool copyValueFrom (const BaseData *data);  Update this Data from the value of its parent. More...;  ; bool updateValueFromLink (const BaseData *data);  ; template<class T > ;  SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME () static std;  ; void setFlag (DataFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (DataFlagsEnum flag) const;  Get one of the flags. More...;  ; bool isDisplayed () const;  Return whether this Data has to be displayed in GUIs. More...;  ; bool isReadOnly () const;  Return whether this Data will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html
Integrability,depend,depending,"﻿. SOFA API: sofa::core::topology::BaseTopologyData< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::topology::BaseTopologyData< T > Class Template Reference . #include <BaseTopologyData.h>. Inheritance diagram for sofa::core::topology::BaseTopologyData< T >:. [legend]; Detailed Description; template<class T = void*>; class sofa::core::topology::BaseTopologyData< T >; A class that define topological Data general methods . Protected Attributes; sofa::core::topology::BaseMeshTopology * m_topology = nullptr;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex = 0;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< void * >; void * m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  BaseTopologyData (const sofa::core::objectmodel::BaseData::BaseInitData &init);  ; virtual void add (const sofa::type::vector< Topology::PointID > &, const sofa::type::vector< Topology::Point > &, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< PointAncestorElem > &);  Add some values. Values are added at the end of the vector. More...;  ; virtual void add (const sofa::type::vector< Topology::EdgeID > &, const sofa::type::vector< Topology::Edge > &, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< EdgeAncestorElem > &);  ; virtual void add (const sofa::type::vector< Topology::TriangleID > &, const sofa::type::vector< Topology::Triangle > &, const sofa::type::vector< sofa::type::vector< Topology::TriangleID > > &, const sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::BaseTopologyData< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::topology::BaseTopologyData< T > Class Template Reference . #include <BaseTopologyData.h>. Inheritance diagram for sofa::core::topology::BaseTopologyData< T >:. [legend]; Detailed Description; template<class T = void*>; class sofa::core::topology::BaseTopologyData< T >; A class that define topological Data general methods . Protected Attributes; sofa::core::topology::BaseMeshTopology * m_topology = nullptr;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex = 0;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< void * >; void * m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  BaseTopologyData (const sofa::core::objectmodel::BaseData::BaseInitData &init);  ; virtual void add (const sofa::type::vector< Topology::PointID > &, const sofa::type::vector< Topology::Point > &, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< PointAncestorElem > &);  Add some values. Values are added at the end of the vector. More...;  ; virtual void add (const sofa::type::vector< Topology::EdgeID > &, const sofa::type::vector< Topology::Edge > &, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< EdgeAncestorElem > &);  ; virtual void add (const sofa::type::vector< Topology::TriangleID > &, const sofa::type::vector< Topology::Triangle > &, const sofa::type::vector< sofa::type::vector< Topology::TriangleID > > &, const sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html
Performance,queue,queued,"in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_lastElementIndex. template<class T = void*> . Index sofa::core::topology::BaseTopologyData< T >::m_lastElementIndex = 0. protected . to handle properly the removal of items, the container must keep the last element index and update it during operations (add/remove). Note that this index is mandatory and can't be retrieved directly from the topology in the case when several topology events are queued. i.e: If 2 removalElements events are queued, the second event still point to a topology not yet updated by the first event. . ◆ m_topology. template<class T = void*> . sofa::core::topology::BaseMeshTopology* sofa::core::topology::BaseTopologyData< T >::m_topology = nullptr. protected . Pointer to the Topology this TopologyData is depending on. . Constructor details. ◆ BaseTopologyData(). template<class T = void*> . sofa::core::topology::BaseTopologyData< T >::BaseTopologyData ; (; const sofa::core::objectmodel::BaseData::BaseInitData & ; init). inlineexplicit . Constructor used via the Base::initData() methods. . Function details. ◆ add() [1/6]. template<class T = void*> . virtual void sofa::core::topology::BaseTopologyData< T >::add ; (; const sofa::type::vector< Topology::EdgeID > & ; , . const sofa::type::vector< Topology::Edge > & ; , . const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > & ; , . con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html
Security,access,access,"  Data (const InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const void * &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const void * &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html
Deployability,update,updateInternal,"model::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::BaseTopologyObject Member List . This is the complete list of members for sofa::core::topology::BaseTopologyObject, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html
Performance,load,loader,"t()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::topology::BaseTopologyObjectvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &sepa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html
Usability,clear,clearLoggedMessages,")sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html
Integrability,depend,dependent,"﻿. SOFA API: sofa::core::topology::BaseTopologyObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::BaseTopologyObject Class Reference . #include <BaseTopologyObject.h>. Inheritance diagram for sofa::core::topology::BaseTopologyObject:. [legend]. Public Member Functions;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::BaseTopologyObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::BaseTopologyObject Class Reference . #include <BaseTopologyObject.h>. Inheritance diagram for sofa::core::topology::BaseTopologyObject:. [legend]. Public Member Functions;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html
Performance,load,loader,"pology::BaseTopologyObject Class Reference . #include <BaseTopologyObject.h>. Inheritance diagram for sofa::core::topology::BaseTopologyObject:. [legend]. Public Member Functions;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::DefaultMeshTopologyLoader Member List . This is the complete list of members for sofa::core::topology::DefaultMeshTopologyLoader, including all inherited members. addCube(Index p1, Index p2, Index p3, Index p4, Index p5, Index p6, Index p7, Index p8) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addLine(Index p1, Index p2) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addPoint(SReal px, SReal py, SReal pz) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addQuad(Index p1, Index p2, Index p3, Index p4) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addTetra(Index p1, Index p2, Index p3, Index p4) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addTriangle(Index p1, Index p2, Index p3) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; DefaultMeshTopologyLoader(BaseMeshTopology *dest)sofa::core::topology::DefaultMeshTopologyLoaderinline; destsofa::core::topology::DefaultMeshTopologyLoader; Index typedefsofa::helper::io::MeshTopologyLoader; load(const char *filename)sofa::helper::io::MeshTopologyLoader; MeshTopologyLoader()sofa::helper::io::MeshTopologyLoaderinline; setNbCubes(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbEdges(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbLines(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbPoints(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbQuads(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbTetrahedra(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbTriangles(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; ~MeshTopologyLoader()sofa::helper::io::MeshTopologyLoaderinlinevirtual. Generated on Mon Nov 11 2024 03:16:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_default_mesh_topology_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_default_mesh_topology_loader-members.html
Performance,load,load,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::DefaultMeshTopologyLoader Member List . This is the complete list of members for sofa::core::topology::DefaultMeshTopologyLoader, including all inherited members. addCube(Index p1, Index p2, Index p3, Index p4, Index p5, Index p6, Index p7, Index p8) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addLine(Index p1, Index p2) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addPoint(SReal px, SReal py, SReal pz) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addQuad(Index p1, Index p2, Index p3, Index p4) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addTetra(Index p1, Index p2, Index p3, Index p4) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; addTriangle(Index p1, Index p2, Index p3) overridesofa::core::topology::DefaultMeshTopologyLoaderinlinevirtual; DefaultMeshTopologyLoader(BaseMeshTopology *dest)sofa::core::topology::DefaultMeshTopologyLoaderinline; destsofa::core::topology::DefaultMeshTopologyLoader; Index typedefsofa::helper::io::MeshTopologyLoader; load(const char *filename)sofa::helper::io::MeshTopologyLoader; MeshTopologyLoader()sofa::helper::io::MeshTopologyLoaderinline; setNbCubes(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbEdges(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbLines(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbPoints(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbQuads(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbTetrahedra(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; setNbTriangles(Index)sofa::helper::io::MeshTopologyLoaderinlinevirtual; ~MeshTopologyLoader()sofa::helper::io::MeshTopologyLoaderinlinevirtual. Generated on Mon Nov 11 2024 03:16:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_default_mesh_topology_loader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_default_mesh_topology_loader-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::DefaultMeshTopologyLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::DefaultMeshTopologyLoader Class Reference . Inheritance diagram for sofa::core::topology::DefaultMeshTopologyLoader:. [legend]. Public Attributes; BaseMeshTopology * dest;  . Public Member Functions;  DefaultMeshTopologyLoader (BaseMeshTopology *dest);  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addLine (Index p1, Index p2) override;  ; void addTriangle (Index p1, Index p2, Index p3) override;  ; void addQuad (Index p1, Index p2, Index p3, Index p4) override;  ; void addTetra (Index p1, Index p2, Index p3, Index p4) override;  ; void addCube (Index p1, Index p2, Index p3, Index p4, Index p5, Index p6, Index p7, Index p8) override;  ;  Public Member Functions inherited from sofa::helper::io::MeshTopologyLoader;  MeshTopologyLoader ();  ; virtual ~MeshTopologyLoader ();  ; bool load (const char *filename);  ; virtual void setNbPoints (Index);  ; virtual void setNbLines (Index);  ; virtual void setNbEdges (Index);  ; virtual void setNbTriangles (Index);  ; virtual void setNbQuads (Index);  ; virtual void setNbTetrahedra (Index);  ; virtual void setNbCubes (Index);  . Attribute details. ◆ dest. BaseMeshTopology* sofa::core::topology::DefaultMeshTopologyLoader::dest. Constructor details. ◆ DefaultMeshTopologyLoader(). sofa::core::topology::DefaultMeshTopologyLoader::DefaultMeshTopologyLoader ; (; BaseMeshTopology * ; dest). inline . Function details. ◆ addCube(). void sofa::core::topology::DefaultMeshTopologyLoader::addCube ; (; Index ; p1, . Index ; p2, . Index ; p3, . Index ; p4, . Index ; p5, . Index ; p6, . Index ; p7, . Index ; p8 . ). inlineoverridevirtual . Reimplemented from sofa::helper::io::MeshTopologyLoader. ◆ addLine(). void sofa::core::topology::DefaultMeshTopologyLoader::addLine ; (; Index ; p1, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_default_mesh_topology_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_default_mesh_topology_loader.html
Performance,load,load,"﻿. SOFA API: sofa::core::topology::DefaultMeshTopologyLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::DefaultMeshTopologyLoader Class Reference . Inheritance diagram for sofa::core::topology::DefaultMeshTopologyLoader:. [legend]. Public Attributes; BaseMeshTopology * dest;  . Public Member Functions;  DefaultMeshTopologyLoader (BaseMeshTopology *dest);  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addLine (Index p1, Index p2) override;  ; void addTriangle (Index p1, Index p2, Index p3) override;  ; void addQuad (Index p1, Index p2, Index p3, Index p4) override;  ; void addTetra (Index p1, Index p2, Index p3, Index p4) override;  ; void addCube (Index p1, Index p2, Index p3, Index p4, Index p5, Index p6, Index p7, Index p8) override;  ;  Public Member Functions inherited from sofa::helper::io::MeshTopologyLoader;  MeshTopologyLoader ();  ; virtual ~MeshTopologyLoader ();  ; bool load (const char *filename);  ; virtual void setNbPoints (Index);  ; virtual void setNbLines (Index);  ; virtual void setNbEdges (Index);  ; virtual void setNbTriangles (Index);  ; virtual void setNbQuads (Index);  ; virtual void setNbTetrahedra (Index);  ; virtual void setNbCubes (Index);  . Attribute details. ◆ dest. BaseMeshTopology* sofa::core::topology::DefaultMeshTopologyLoader::dest. Constructor details. ◆ DefaultMeshTopologyLoader(). sofa::core::topology::DefaultMeshTopologyLoader::DefaultMeshTopologyLoader ; (; BaseMeshTopology * ; dest). inline . Function details. ◆ addCube(). void sofa::core::topology::DefaultMeshTopologyLoader::addCube ; (; Index ; p1, . Index ; p2, . Index ; p3, . Index ; p4, . Index ; p5, . Index ; p6, . Index ; p7, . Index ; p8 . ). inlineoverridevirtual . Reimplemented from sofa::helper::io::MeshTopologyLoader. ◆ addLine(). void sofa::core::topology::DefaultMeshTopologyLoader::addLine ; (; Index ; p1, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_default_mesh_topology_loader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_default_mesh_topology_loader.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::EdgesAdded Member List . This is the complete list of members for sofa::core::topology::EdgesAdded, including all inherited members. ancestorElemssofa::core::topology::EdgesAdded; ancestorsListsofa::core::topology::EdgesAdded; coefssofa::core::topology::EdgesAdded; edgeArraysofa::core::topology::EdgesAdded; edgeIndexArraysofa::core::topology::EdgesAdded; EdgesAdded(const size_t nE)sofa::core::topology::EdgesAddedinline; EdgesAdded(const size_t nE, const sofa::type::vector< Topology::Edge > &edgesList, const sofa::type::vector< Topology::EdgeID > &edgesIndex)sofa::core::topology::EdgesAddedinline; EdgesAdded(const size_t nE, const sofa::type::vector< Topology::Edge > &edgesList, const sofa::type::vector< Topology::EdgeID > &edgesIndex, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &ancestors)sofa::core::topology::EdgesAddedinline; EdgesAdded(const size_t nE, const sofa::type::vector< Topology::Edge > &edgesList, const sofa::type::vector< Topology::EdgeID > &edgesIndex, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::EdgesAddedinline; EdgesAdded(const size_t nE, const sofa::type::vector< Topology::Edge > &edgesList, const sofa::type::vector< Topology::EdgeID > &edgesIndex, const sofa::type::vector< EdgeAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::EdgesAddedinline; getArray() constsofa::core::topology::EdgesAddedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::EdgesAddedinline; getIndexArray() constsofa::core::topology::EdgesAddedinline; getNbAddedEdges() constsofa::core::topology::EdgesAddedinline",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_added-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_added-members.html
Modifiability,inherit,inherited,"xArray;  ; sofa::type::vector< sofa::type::vector< Topology::EdgeID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > coefs;  ; sofa::type::vector< EdgeAncestorElem > ancestorElems;  . Public Member Functions;  EdgesAdded (const size_t nE);  ;  EdgesAdded (const size_t nE, const sofa::type::vector< Topology::Edge > &edgesList, const sofa::type::vector< Topology::EdgeID > &edgesIndex);  ;  EdgesAdded (const size_t nE, const sofa::type::vector< Topology::Edge > &edgesList, const sofa::type::vector< Topology::EdgeID > &edgesIndex, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &ancestors);  ;  EdgesAdded (const size_t nE, const sofa::type::vector< Topology::Edge > &edgesList, const sofa::type::vector< Topology::EdgeID > &edgesIndex, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  EdgesAdded (const size_t nE, const sofa::type::vector< Topology::Edge > &edgesList, const sofa::type::vector< Topology::EdgeID > &edgesIndex, const sofa::type::vector< EdgeAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~EdgesAdded () override;  ; size_t getNbAddedEdges () const;  ; const sofa::type::vector< Topology::Edge > & getArray () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::EdgeID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Edge > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_added.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_added.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::EdgesIndicesSwap Member List . This is the complete list of members for sofa::core::topology::EdgesIndicesSwap, including all inherited members. EdgesIndicesSwap(const Topology::EdgeID i1, const Topology::EdgeID i2)sofa::core::topology::EdgesIndicesSwapinline; getChangeType() constsofa::core::topology::TopologyChangeinline; indexsofa::core::topology::EdgesIndicesSwap; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~EdgesIndicesSwap() overridesofa::core::topology::EdgesIndicesSwap; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_indices_swap-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_indices_swap-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::EdgesIndicesSwap Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::EdgesIndicesSwap Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::EdgesIndicesSwap:. [legend]; Detailed Description; indicates that the indices of two edges are being swapped . Public Attributes; Topology::EdgeID index [2];  . Public Member Functions;  EdgesIndicesSwap (const Topology::EdgeID i1, const Topology::EdgeID i2);  ;  ~EdgesIndicesSwap () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ index. Topology::EdgeID sofa::core::topology::EdgesIndicesSwap::index[2]. Constructor details. ◆ EdgesIndicesSwap(). sofa::core::topology::EdgesIndicesSwap::EdgesIndicesSwap ; (; const Topology::EdgeID ; i1, . const Topology::EdgeID ; i2 . ). inline . ◆ ~EdgesIndicesSwap(). sofa::core::topology::EdgesIndicesSwap::~EdgesIndicesSwap ; (; ). override . sofacoretopologyEdgesIndicesSwap; Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_indices_swap.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_indices_swap.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::EdgesMoved_Adding Member List . This is the complete list of members for sofa::core::topology::EdgesMoved_Adding, including all inherited members. edgeArray2Movedsofa::core::topology::EdgesMoved_Adding; edgesAroundVertexMovedsofa::core::topology::EdgesMoved_Adding; EdgesMoved_Adding(const sofa::type::vector< Topology::EdgeID > &edgeShell, const sofa::type::vector< Topology::Edge > &edgeArray)sofa::core::topology::EdgesMoved_Addinginline; getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::EdgesMoved_Addinginline; getIndexArray() constsofa::core::topology::EdgesMoved_Addinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~EdgesMoved_Adding() overridesofa::core::topology::EdgesMoved_Adding; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___adding-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___adding-members.html
Modifiability,inherit,inherited,"topology::EdgesMoved_Adding Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::EdgesMoved_Adding Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::EdgesMoved_Adding:. [legend]; Detailed Description; indicates that some edges are about to be moved (i.e one or both of their vertices have just been moved) EdgesMoved_Adding Second part, recompute state of all elements previously removed, with new positions points . Public Attributes; sofa::type::vector< Topology::EdgeID > edgesAroundVertexMoved;  ; sofa::type::vector< Topology::Edge > edgeArray2Moved;  . Public Member Functions;  EdgesMoved_Adding (const sofa::type::vector< Topology::EdgeID > &edgeShell, const sofa::type::vector< Topology::Edge > &edgeArray);  ;  ~EdgesMoved_Adding () override;  ; const sofa::type::vector< Topology::EdgeID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Edge > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ edgeArray2Moved. sofa::type::vector< Topology::Edge > sofa::core::topology::EdgesMoved_Adding::edgeArray2Moved. ◆ edgesAroundVertexMoved. sofa::type::vector< Topology::EdgeID > sofa::core::topology::EdgesMoved_Adding::edgesAroundVerte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___adding.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___adding.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::EdgesMoved_Removing Member List . This is the complete list of members for sofa::core::topology::EdgesMoved_Removing, including all inherited members. edgesAroundVertexMovedsofa::core::topology::EdgesMoved_Removing; EdgesMoved_Removing(const sofa::type::vector< Topology::EdgeID > &edgeShell)sofa::core::topology::EdgesMoved_Removinginline; getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::EdgesMoved_Removinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~EdgesMoved_Removing() overridesofa::core::topology::EdgesMoved_Removing; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___removing-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___removing-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::EdgesMoved_Removing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::EdgesMoved_Removing Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::EdgesMoved_Removing:. [legend]; Detailed Description; indicates that some edges are about to be moved (i.e one or both of their vertices have just been moved) EdgesMoved_Removing First part, remove element concerned to force object to recompute global state with current positions . Public Attributes; sofa::type::vector< Topology::EdgeID > edgesAroundVertexMoved;  . Public Member Functions;  EdgesMoved_Removing (const sofa::type::vector< Topology::EdgeID > &edgeShell);  ;  ~EdgesMoved_Removing () override;  ; const sofa::type::vector< Topology::EdgeID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ edgesAroundVertexMoved. sofa::type::vector< Topology::EdgeID > sofa::core::topology::EdgesMoved_Removing::edgesAroundVertexMoved. Constructor details. ◆ EdgesMoved_Removing(). sofa::core::topology::EdgesMoved_Removing::EdgesMoved_Removing ; (; const sofa::type::vector< Topology::EdgeID > & ; edgeShell). inline . ◆ ~EdgesMoved_Removing(). sofa::core::topology::EdgesMoved",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___removing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___removing.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::EdgesRemoved Member List . This is the complete list of members for sofa::core::topology::EdgesRemoved, including all inherited members. EdgesRemoved(const sofa::type::vector< Topology::EdgeID > _eArray)sofa::core::topology::EdgesRemovedinline; getArray() constsofa::core::topology::EdgesRemovedinlinevirtual; getChangeType() constsofa::core::topology::TopologyChangeinline; getNbRemovedEdges() constsofa::core::topology::EdgesRemovedinlinevirtual; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; removedEdgesArraysofa::core::topology::EdgesRemoved; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~EdgesRemoved() overridesofa::core::topology::EdgesRemoved; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::topology::EdgesRemoved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::EdgesRemoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::EdgesRemoved:. [legend]; Detailed Description; indicates that some edges are about to be removed . Public Attributes; sofa::type::vector< Topology::EdgeID > removedEdgesArray;  . Public Member Functions;  EdgesRemoved (const sofa::type::vector< Topology::EdgeID > _eArray);  ;  ~EdgesRemoved () override;  ; virtual const sofa::type::vector< Topology::EdgeID > & getArray () const;  ; virtual std::size_t getNbRemovedEdges () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedEdgesArray. sofa::type::vector<Topology::EdgeID> sofa::core::topology::EdgesRemoved::removedEdgesArray. Constructor details. ◆ EdgesRemoved(). sofa::core::topology::EdgesRemoved::EdgesRemoved ; (; const sofa::type::vector< Topology::EdgeID > ; _eArray). inline . ◆ ~EdgesRemoved(). sofa::core::topology::EdgesRemoved::~EdgesRemoved ; (; ). override . Function details. ◆ getArray(). virtual const sofa::type::vector<Topology::EdgeID>& sofa::core::topology::EdgesRemoved::getArray ; (; ); const. inlinevirtual . ◆ getNbRemovedEdges(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::EdgesRenumbering Member List . This is the complete list of members for sofa::core::topology::EdgesRenumbering, including all inherited members. EdgesRenumbering()sofa::core::topology::EdgesRenumberinginline; EdgesRenumbering(const sofa::type::vector< Topology::EdgeID > &indices, const sofa::type::vector< Topology::EdgeID > &inv_indices)sofa::core::topology::EdgesRenumberinginline; getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::EdgesRenumberinginline; getinv_IndexArray() constsofa::core::topology::EdgesRenumberinginline; indexArraysofa::core::topology::EdgesRenumbering; inv_indexArraysofa::core::topology::EdgesRenumbering; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~EdgesRenumbering() overridesofa::core::topology::EdgesRenumbering; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_renumbering-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_renumbering-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::EdgesRenumbering Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::EdgesRenumbering Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::EdgesRenumbering:. [legend]; Detailed Description; indicates that the indices of all points have been renumbered . Public Attributes; sofa::type::vector< Topology::EdgeID > indexArray;  ; sofa::type::vector< Topology::EdgeID > inv_indexArray;  . Public Member Functions;  EdgesRenumbering ();  ;  EdgesRenumbering (const sofa::type::vector< Topology::EdgeID > &indices, const sofa::type::vector< Topology::EdgeID > &inv_indices);  ;  ~EdgesRenumbering () override;  ; const sofa::type::vector< Topology::EdgeID > & getIndexArray () const;  ; const sofa::type::vector< Topology::EdgeID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::EdgeID> sofa::core::topology::EdgesRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::EdgeID> sofa::core::topology::EdgesRenumbering::inv_indexArray. Constructor details. ◆ EdgesRenumbering() [1/2]. sofa::core::topology::EdgesRenumbering::EdgesRenumbering ; (; ). inline . ◆ EdgesRenu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_renumbering.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_renumbering.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::EndingEvent Member List . This is the complete list of members for sofa::core::topology::EndingEvent, including all inherited members. EndingEvent()sofa::core::topology::EndingEventinline; getChangeType() constsofa::core::topology::TopologyChangeinline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~EndingEvent() overridesofa::core::topology::EndingEvent; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_ending_event-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_ending_event-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::topology::EndingEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::topology::EndingEvent Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::EndingEvent:. [legend]; Detailed Description; notifies the end for the current sequence of topological change events . Public Member Functions;  EndingEvent ();  ;  ~EndingEvent () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Constructor details. ◆ EndingEvent(). sofa::core::topology::EndingEvent::EndingEvent ; (; ). inline . ◆ ~EndingEvent(). sofa::core::topology::EndingEvent::~EndingEvent ; (; ). override . sofacoretopologyEndingEvent; Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_ending_event.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_ending_event.html
Deployability,update,updateInternal,"efinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~GeometryAlgorithms() overridesofa::core::topology::GeometryAlgorithmsinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::GeometryAlgorithms Member List . This is the complete list of members for sofa::core::topology::GeometryAlgorithms, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html
Performance,load,loader,"t()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::topology::BaseTopologyObjectvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; write",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html
Usability,clear,clearLoggedMessages,")sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html
Availability,down,down,"﻿. SOFA API: sofa::core::topology::GeometryAlgorithms Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::GeometryAlgorithms Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::GeometryAlgorithms:. [legend]; Detailed Description; A class that contains a set of methods that describes the geometry of the object . Public Member Functions;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs);  Called by the MechanicalObject state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html
Integrability,depend,dependent,"d initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs);  Called by the MechanicalObject state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html
Modifiability,inherit,inherited,"ore::topology::GeometryAlgorithms:. [legend]; Detailed Description; A class that contains a set of methods that describes the geometry of the object . Public Member Functions;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs);  Called by the MechanicalObject state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html
Performance,load,loader,"tialize added points according to the topology (topology element & local coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::HexahedraAdded Member List . This is the complete list of members for sofa::core::topology::HexahedraAdded, including all inherited members. ancestorElemssofa::core::topology::HexahedraAdded; ancestorsListsofa::core::topology::HexahedraAdded; coefssofa::core::topology::HexahedraAdded; getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::HexahedraAddedinline; getIndexArray() constsofa::core::topology::HexahedraAddedinline; getNbAddedElements() constsofa::core::topology::HexahedraAddedinline; getNbAddedHexahedra() constsofa::core::topology::HexahedraAddedinline; HexahedraAdded(const size_t nT)sofa::core::topology::HexahedraAddedinline; HexahedraAdded(const size_t nT, const sofa::type::vector< Topology::Hexahedron > &_hexahedronArray, const sofa::type::vector< Topology::HexahedronID > &hexahedraIndex)sofa::core::topology::HexahedraAddedinline; HexahedraAdded(const size_t nT, const sofa::type::vector< Topology::Hexahedron > &_hexahedronArray, const sofa::type::vector< Topology::HexahedronID > &hexahedraIndex, const sofa::type::vector< sofa::type::vector< Topology::HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::HexahedraAddedinline; HexahedraAdded(const size_t nT, const sofa::type::vector< Topology::Hexahedron > &_hexahedronArray, const sofa::type::vector< Topology::HexahedronID > &hexahedraIndex, const sofa::type::vector< HexahedronAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::HexahedraAddedinline; hexahedronArraysofa::core::topology::HexahedraAdded; hexahedronIndexArraysofa::core::topology::HexahedraAdded; m_changeTypesofa::core::topology::TopologyChangeprotected; nHexahedr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_added-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_added-members.html
Modifiability,inherit,inherited,"dronArray;  ; sofa::type::vector< Topology::HexahedronID > hexahedronIndexArray;  ; sofa::type::vector< sofa::type::vector< Topology::HexahedronID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > coefs;  ; sofa::type::vector< HexahedronAncestorElem > ancestorElems;  . Public Member Functions;  HexahedraAdded (const size_t nT);  ;  HexahedraAdded (const size_t nT, const sofa::type::vector< Topology::Hexahedron > &_hexahedronArray, const sofa::type::vector< Topology::HexahedronID > &hexahedraIndex);  ;  HexahedraAdded (const size_t nT, const sofa::type::vector< Topology::Hexahedron > &_hexahedronArray, const sofa::type::vector< Topology::HexahedronID > &hexahedraIndex, const sofa::type::vector< sofa::type::vector< Topology::HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  HexahedraAdded (const size_t nT, const sofa::type::vector< Topology::Hexahedron > &_hexahedronArray, const sofa::type::vector< Topology::HexahedronID > &hexahedraIndex, const sofa::type::vector< HexahedronAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~HexahedraAdded () override;  ; size_t getNbAddedHexahedra () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::HexahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Hexahedron > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_added.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_added.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::HexahedraIndicesSwap Member List . This is the complete list of members for sofa::core::topology::HexahedraIndicesSwap, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; HexahedraIndicesSwap(const Topology::HexahedronID i1, const Topology::HexahedronID i2)sofa::core::topology::HexahedraIndicesSwapinline; indexsofa::core::topology::HexahedraIndicesSwap; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~HexahedraIndicesSwap() overridesofa::core::topology::HexahedraIndicesSwap; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_indices_swap-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_indices_swap-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::HexahedraIndicesSwap Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::HexahedraIndicesSwap Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::HexahedraIndicesSwap:. [legend]; Detailed Description; indicates that the indices of two Hexahedra are being swapped . Public Attributes; Topology::HexahedronID index [2];  . Public Member Functions;  HexahedraIndicesSwap (const Topology::HexahedronID i1, const Topology::HexahedronID i2);  ;  ~HexahedraIndicesSwap () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ index. Topology::HexahedronID sofa::core::topology::HexahedraIndicesSwap::index[2]. Constructor details. ◆ HexahedraIndicesSwap(). sofa::core::topology::HexahedraIndicesSwap::HexahedraIndicesSwap ; (; const Topology::HexahedronID ; i1, . const Topology::HexahedronID ; i2 . ). inline . ◆ ~HexahedraIndicesSwap(). sofa::core::topology::HexahedraIndicesSwap::~HexahedraIndicesSwap ; (; ). override . sofacoretopologyHexahedraIndicesSwap; Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_indices_swap.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_indices_swap.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::HexahedraMoved_Adding Member List . This is the complete list of members for sofa::core::topology::HexahedraMoved_Adding, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::HexahedraMoved_Addinginline; getIndexArray() constsofa::core::topology::HexahedraMoved_Addinginline; hexahedraAroundVertexMovedsofa::core::topology::HexahedraMoved_Adding; HexahedraMoved_Adding(const sofa::type::vector< Topology::HexahedronID > &hexahedronShell, const sofa::type::vector< Topology::Hexahedron > &hexahedronArray)sofa::core::topology::HexahedraMoved_Addinginline; hexahedronArray2Movedsofa::core::topology::HexahedraMoved_Adding; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~HexahedraMoved_Adding() overridesofa::core::topology::HexahedraMoved_Adding; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___adding-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___adding-members.html
Modifiability,inherit,inherited,"147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::HexahedraMoved_Adding Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::HexahedraMoved_Adding:. [legend]; Detailed Description; indicates that some hexahedra are about to be moved (i.e some/all of their vertices have just been moved) HexahedraMoved_Adding Second part, recompute state of all elements previously removed, with new positions points . Public Attributes; sofa::type::vector< Topology::HexahedronID > hexahedraAroundVertexMoved;  ; const sofa::type::vector< Topology::Hexahedron > hexahedronArray2Moved;  . Public Member Functions;  HexahedraMoved_Adding (const sofa::type::vector< Topology::HexahedronID > &hexahedronShell, const sofa::type::vector< Topology::Hexahedron > &hexahedronArray);  ;  ~HexahedraMoved_Adding () override;  ; const sofa::type::vector< Topology::HexahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Hexahedron > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ hexahedraAroundVertexMoved. sofa::type::vector< Topology::HexahedronID > sofa::core::topology::HexahedraMoved_Adding::hexahedraAroundVertexMoved. ◆ hexahedronArray2Moved. const sofa::type::vector< Topology::Hexah",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___adding.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___adding.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::HexahedraMoved_Removing Member List . This is the complete list of members for sofa::core::topology::HexahedraMoved_Removing, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::HexahedraMoved_Removinginline; hexahedraAroundVertexMovedsofa::core::topology::HexahedraMoved_Removing; HexahedraMoved_Removing(const sofa::type::vector< Topology::HexahedronID > &hexahedronShell)sofa::core::topology::HexahedraMoved_Removinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~HexahedraMoved_Removing() overridesofa::core::topology::HexahedraMoved_Removing; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___removing-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___removing-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::HexahedraMoved_Removing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::HexahedraMoved_Removing Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::HexahedraMoved_Removing:. [legend]; Detailed Description; indicates that some hexahedra are about to be moved (i.e some/all of their vertices have just been moved) HexahedraMoved_Removing First part, remove element concerned to force object to recompute global state with current positions . Public Attributes; sofa::type::vector< Topology::HexahedronID > hexahedraAroundVertexMoved;  . Public Member Functions;  HexahedraMoved_Removing (const sofa::type::vector< Topology::HexahedronID > &hexahedronShell);  ;  ~HexahedraMoved_Removing () override;  ; const sofa::type::vector< Topology::HexahedronID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ hexahedraAroundVertexMoved. sofa::type::vector< Topology::HexahedronID > sofa::core::topology::HexahedraMoved_Removing::hexahedraAroundVertexMoved. Constructor details. ◆ HexahedraMoved_Removing(). sofa::core::topology::HexahedraMoved_Removing::HexahedraMoved_Removing ; (; const sofa::type::vector< Topology::Hexahedro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___removing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___removing.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::HexahedraRemoved Member List . This is the complete list of members for sofa::core::topology::HexahedraRemoved, including all inherited members. getArray() constsofa::core::topology::HexahedraRemovedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getNbRemovedHexahedra() constsofa::core::topology::HexahedraRemovedinline; HexahedraRemoved(const sofa::type::vector< Topology::HexahedronID > _tArray)sofa::core::topology::HexahedraRemovedinline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; removedHexahedraArraysofa::core::topology::HexahedraRemoved; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~HexahedraRemoved() overridesofa::core::topology::HexahedraRemoved; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_removed-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_removed-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::topology::HexahedraRemoved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::HexahedraRemoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::HexahedraRemoved:. [legend]; Detailed Description; indicates that some hexahedra are about to be removed . Public Attributes; sofa::type::vector< Topology::HexahedronID > removedHexahedraArray;  . Public Member Functions;  HexahedraRemoved (const sofa::type::vector< Topology::HexahedronID > _tArray);  ;  ~HexahedraRemoved () override;  ; const sofa::type::vector< Topology::HexahedronID > & getArray () const;  ; std::size_t getNbRemovedHexahedra () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedHexahedraArray. sofa::type::vector<Topology::HexahedronID> sofa::core::topology::HexahedraRemoved::removedHexahedraArray. Constructor details. ◆ HexahedraRemoved(). sofa::core::topology::HexahedraRemoved::HexahedraRemoved ; (; const sofa::type::vector< Topology::HexahedronID > ; _tArray). inline . ◆ ~HexahedraRemoved(). sofa::core::topology::HexahedraRemoved::~HexahedraRemoved ; (; ). override . Function details. ◆ getArray(). const sofa::type::vector<Topology::HexahedronID>& sofa::core::topo,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_removed.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::HexahedraRenumbering Member List . This is the complete list of members for sofa::core::topology::HexahedraRenumbering, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::HexahedraRenumberinginline; getinv_IndexArray() constsofa::core::topology::HexahedraRenumberinginline; HexahedraRenumbering()sofa::core::topology::HexahedraRenumberinginline; HexahedraRenumbering(const sofa::type::vector< Topology::HexahedronID > &indices, const sofa::type::vector< Topology::HexahedronID > &inv_indices)sofa::core::topology::HexahedraRenumberinginline; indexArraysofa::core::topology::HexahedraRenumbering; inv_indexArraysofa::core::topology::HexahedraRenumbering; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~HexahedraRenumbering() overridesofa::core::topology::HexahedraRenumbering; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_renumbering-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_renumbering-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::HexahedraRenumbering Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::HexahedraRenumbering Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::HexahedraRenumbering:. [legend]; Detailed Description; indicates that the indices of all points have been renumbered . Public Attributes; sofa::type::vector< Topology::HexahedronID > indexArray;  ; sofa::type::vector< Topology::HexahedronID > inv_indexArray;  . Public Member Functions;  HexahedraRenumbering ();  ;  HexahedraRenumbering (const sofa::type::vector< Topology::HexahedronID > &indices, const sofa::type::vector< Topology::HexahedronID > &inv_indices);  ;  ~HexahedraRenumbering () override;  ; const sofa::type::vector< Topology::HexahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::HexahedronID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::HexahedronID> sofa::core::topology::HexahedraRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::HexahedronID> sofa::core::topology::HexahedraRenumbering::inv_indexArray. Constructor details. ◆ HexahedraRenumbering() [1/2]. s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_renumbering.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_renumbering.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::PointsAdded Member List . This is the complete list of members for sofa::core::topology::PointsAdded, including all inherited members. ancestorElemssofa::core::topology::PointsAdded; ancestorsListsofa::core::topology::PointsAdded; coefssofa::core::topology::PointsAdded; getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::PointsAddedinline; getIndexArray() constsofa::core::topology::PointsAddedinline; getNbAddedElements() constsofa::core::topology::PointsAddedinline; getNbAddedVertices() constsofa::core::topology::PointsAddedinline; m_changeTypesofa::core::topology::TopologyChangeprotected; nVerticessofa::core::topology::PointsAdded; pointIndexArraysofa::core::topology::PointsAdded; PointsAdded(const size_t nV)sofa::core::topology::PointsAddedinline; PointsAdded(const size_t nV, const sofa::type::vector< Topology::PointID > &indices)sofa::core::topology::PointsAddedinline; PointsAdded(const size_t nV, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::PointsAddedinline; PointsAdded(const size_t nV, const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::PointsAddedinline; PointsAdded(const size_t nV, const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< PointAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::PointsAddedinline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added-members.html
Modifiability,inherit,inherited,"n; indicates that some points were added . Public Attributes; size_t nVertices;  ; sofa::type::vector< Topology::PointID > pointIndexArray;  ; sofa::type::vector< sofa::type::vector< Topology::PointID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > coefs;  ; sofa::type::vector< PointAncestorElem > ancestorElems;  . Public Member Functions;  PointsAdded (const size_t nV);  ;  PointsAdded (const size_t nV, const sofa::type::vector< Topology::PointID > &indices);  ;  PointsAdded (const size_t nV, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  PointsAdded (const size_t nV, const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  PointsAdded (const size_t nV, const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< PointAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~PointsAdded () override;  ; size_t getNbAddedVertices () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::PointID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Point > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  P",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::PointsIndicesSwap Member List . This is the complete list of members for sofa::core::topology::PointsIndicesSwap, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; indexsofa::core::topology::PointsIndicesSwap; m_changeTypesofa::core::topology::TopologyChangeprotected; PointsIndicesSwap(const Topology::PointID i1, const Topology::PointID i2)sofa::core::topology::PointsIndicesSwapinline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~PointsIndicesSwap() overridesofa::core::topology::PointsIndicesSwap; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_indices_swap-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_indices_swap-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::PointsIndicesSwap Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::PointsIndicesSwap Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::PointsIndicesSwap:. [legend]; Detailed Description; indicates that the indices of two points are being swapped . Public Attributes; Topology::PointID index [2];  . Public Member Functions;  PointsIndicesSwap (const Topology::PointID i1, const Topology::PointID i2);  ;  ~PointsIndicesSwap () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ index. Topology::PointID sofa::core::topology::PointsIndicesSwap::index[2]. Constructor details. ◆ PointsIndicesSwap(). sofa::core::topology::PointsIndicesSwap::PointsIndicesSwap ; (; const Topology::PointID ; i1, . const Topology::PointID ; i2 . ). inline . ◆ ~PointsIndicesSwap(). sofa::core::topology::PointsIndicesSwap::~PointsIndicesSwap ; (; ). override . sofacoretopologyPointsIndicesSwap; Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_indices_swap.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_indices_swap.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::PointsMoved Member List . This is the complete list of members for sofa::core::topology::PointsMoved, including all inherited members. ancestorsListsofa::core::topology::PointsMoved; baryCoefsListsofa::core::topology::PointsMoved; getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::PointsMovedinline; indicesListsofa::core::topology::PointsMoved; m_changeTypesofa::core::topology::TopologyChangeprotected; PointsMoved(const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::PointsMovedinline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~PointsMoved() overridesofa::core::topology::PointsMoved; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_moved-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_moved-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::PointsMoved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::PointsMoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::PointsMoved:. [legend]; Detailed Description; indicates that some points were moved . Public Attributes; sofa::type::vector< Topology::PointID > indicesList;  ; sofa::type::vector< sofa::type::vector< Topology::PointID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > baryCoefsList;  . Public Member Functions;  PointsMoved (const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~PointsMoved () override;  ; const sofa::type::vector< Topology::PointID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ ancestorsList. sofa::type::vector< sofa::type::vector< Topology::PointID > > sofa::core::topology::PointsMoved::ancestorsList. ◆ baryCoefsList. sofa::type::vector< sofa::type::vector< SReal > > sofa::core::topology::PointsMoved::baryCoefsList. ◆ indicesList. sofa::type::vector<Topology::PointID> sofa::core::topolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_moved.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_moved.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::PointsRemoved Member List . This is the complete list of members for sofa::core::topology::PointsRemoved, including all inherited members. getArray() constsofa::core::topology::PointsRemovedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; m_changeTypesofa::core::topology::TopologyChangeprotected; PointsRemoved(const sofa::type::vector< Topology::PointID > &_vArray)sofa::core::topology::PointsRemovedinline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; removedVertexArraysofa::core::topology::PointsRemoved; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~PointsRemoved() overridesofa::core::topology::PointsRemoved; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_removed-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_removed-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::topology::PointsRemoved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::PointsRemoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::PointsRemoved:. [legend]; Detailed Description; indicates that some points are about to be removed . Public Attributes; sofa::type::vector< Topology::PointID > removedVertexArray;  . Public Member Functions;  PointsRemoved (const sofa::type::vector< Topology::PointID > &_vArray);  ;  ~PointsRemoved () override;  ; const sofa::type::vector< Topology::PointID > & getArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedVertexArray. sofa::type::vector<Topology::PointID> sofa::core::topology::PointsRemoved::removedVertexArray. Constructor details. ◆ PointsRemoved(). sofa::core::topology::PointsRemoved::PointsRemoved ; (; const sofa::type::vector< Topology::PointID > & ; _vArray). inline . ◆ ~PointsRemoved(). sofa::core::topology::PointsRemoved::~PointsRemoved ; (; ). override . Function details. ◆ getArray(). const sofa::type::vector<Topology::PointID>& sofa::core::topology::PointsRemoved::getArray ; (; ); const. inline . sofacoretopologyPointsRemoved; Generated on Mon Nov 11 2024 03:16:02,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_removed.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::PointsRenumbering Member List . This is the complete list of members for sofa::core::topology::PointsRenumbering, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::PointsRenumberinginline; getinv_IndexArray() constsofa::core::topology::PointsRenumberinginline; indexArraysofa::core::topology::PointsRenumbering; inv_indexArraysofa::core::topology::PointsRenumbering; m_changeTypesofa::core::topology::TopologyChangeprotected; PointsRenumbering()sofa::core::topology::PointsRenumberinginline; PointsRenumbering(const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< Topology::PointID > &inv_indices)sofa::core::topology::PointsRenumberinginline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~PointsRenumbering() overridesofa::core::topology::PointsRenumbering; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_renumbering-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_renumbering-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::PointsRenumbering Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::PointsRenumbering Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::PointsRenumbering:. [legend]; Detailed Description; indicates that the indices of all points have been renumbered . Public Attributes; sofa::type::vector< Topology::PointID > indexArray;  ; sofa::type::vector< Topology::PointID > inv_indexArray;  . Public Member Functions;  PointsRenumbering ();  ;  PointsRenumbering (const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< Topology::PointID > &inv_indices);  ;  ~PointsRenumbering () override;  ; const sofa::type::vector< Topology::PointID > & getIndexArray () const;  ; const sofa::type::vector< Topology::PointID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::PointID> sofa::core::topology::PointsRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::PointID> sofa::core::topology::PointsRenumbering::inv_indexArray. Constructor details. ◆ PointsRenumbering() [1/2]. sofa::core::topology::PointsRenumbering::PointsRenumbering ; (; ). i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_renumbering.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_renumbering.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::QuadsAdded Member List . This is the complete list of members for sofa::core::topology::QuadsAdded, including all inherited members. ancestorElemssofa::core::topology::QuadsAdded; ancestorsListsofa::core::topology::QuadsAdded; coefssofa::core::topology::QuadsAdded; getArray() constsofa::core::topology::QuadsAddedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::QuadsAddedinline; getIndexArray() constsofa::core::topology::QuadsAddedinline; getNbAddedElements() constsofa::core::topology::QuadsAddedinline; getNbAddedQuads() constsofa::core::topology::QuadsAddedinline; getQuad(const Topology::QuadID i) constsofa::core::topology::QuadsAddedinline; m_changeTypesofa::core::topology::TopologyChangeprotected; nQuadssofa::core::topology::QuadsAdded; quadArraysofa::core::topology::QuadsAdded; quadIndexArraysofa::core::topology::QuadsAdded; QuadsAdded(const size_t nT)sofa::core::topology::QuadsAddedinline; QuadsAdded(const size_t nT, const sofa::type::vector< Topology::Quad > &_quadArray, const sofa::type::vector< Topology::QuadID > &quadsIndex)sofa::core::topology::QuadsAddedinline; QuadsAdded(const size_t nT, const sofa::type::vector< Topology::Quad > &_quadArray, const sofa::type::vector< Topology::QuadID > &quadsIndex, const sofa::type::vector< sofa::type::vector< Topology::QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::QuadsAddedinline; QuadsAdded(const size_t nT, const sofa::type::vector< Topology::Quad > &_quadArray, const sofa::type::vector< Topology::QuadID > &quadsIndex, const sofa::type::vector< QuadAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::QuadsAddedinline; read(std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_added-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_added-members.html
Modifiability,inherit,inherited,"pology::Quad > quadArray;  ; sofa::type::vector< Topology::QuadID > quadIndexArray;  ; sofa::type::vector< sofa::type::vector< Topology::QuadID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > coefs;  ; sofa::type::vector< QuadAncestorElem > ancestorElems;  . Public Member Functions;  QuadsAdded (const size_t nT);  ;  QuadsAdded (const size_t nT, const sofa::type::vector< Topology::Quad > &_quadArray, const sofa::type::vector< Topology::QuadID > &quadsIndex);  ;  QuadsAdded (const size_t nT, const sofa::type::vector< Topology::Quad > &_quadArray, const sofa::type::vector< Topology::QuadID > &quadsIndex, const sofa::type::vector< sofa::type::vector< Topology::QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  QuadsAdded (const size_t nT, const sofa::type::vector< Topology::Quad > &_quadArray, const sofa::type::vector< Topology::QuadID > &quadsIndex, const sofa::type::vector< QuadAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~QuadsAdded () override;  ; size_t getNbAddedQuads () const;  ; const sofa::type::vector< Topology::QuadID > & getArray () const;  ; const Topology::Quad & getQuad (const Topology::QuadID i) const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::QuadID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Quad > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_added.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_added.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::QuadsIndicesSwap Member List . This is the complete list of members for sofa::core::topology::QuadsIndicesSwap, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; indexsofa::core::topology::QuadsIndicesSwap; m_changeTypesofa::core::topology::TopologyChangeprotected; QuadsIndicesSwap(const Topology::QuadID i1, const Topology::QuadID i2)sofa::core::topology::QuadsIndicesSwapinline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~QuadsIndicesSwap() overridesofa::core::topology::QuadsIndicesSwap; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_indices_swap-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_indices_swap-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::QuadsIndicesSwap Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::QuadsIndicesSwap Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::QuadsIndicesSwap:. [legend]; Detailed Description; indicates that the indices of two Quads are being swapped . Public Attributes; Topology::QuadID index [2];  . Public Member Functions;  QuadsIndicesSwap (const Topology::QuadID i1, const Topology::QuadID i2);  ;  ~QuadsIndicesSwap () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ index. Topology::QuadID sofa::core::topology::QuadsIndicesSwap::index[2]. Constructor details. ◆ QuadsIndicesSwap(). sofa::core::topology::QuadsIndicesSwap::QuadsIndicesSwap ; (; const Topology::QuadID ; i1, . const Topology::QuadID ; i2 . ). inline . ◆ ~QuadsIndicesSwap(). sofa::core::topology::QuadsIndicesSwap::~QuadsIndicesSwap ; (; ). override . sofacoretopologyQuadsIndicesSwap; Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_indices_swap.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_indices_swap.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::QuadsMoved_Adding Member List . This is the complete list of members for sofa::core::topology::QuadsMoved_Adding, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::QuadsMoved_Addinginline; getIndexArray() constsofa::core::topology::QuadsMoved_Addinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; quadArray2Movedsofa::core::topology::QuadsMoved_Adding; quadsAroundVertexMovedsofa::core::topology::QuadsMoved_Adding; QuadsMoved_Adding(const sofa::type::vector< Topology::QuadID > &quadShell, const sofa::type::vector< Topology::Quad > &quadArray)sofa::core::topology::QuadsMoved_Addinginline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~QuadsMoved_Adding() overridesofa::core::topology::QuadsMoved_Adding; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding-members.html
Modifiability,inherit,inherited,"ology::QuadsMoved_Adding Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::QuadsMoved_Adding Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::QuadsMoved_Adding:. [legend]; Detailed Description; indicates that some quads are about to be moved (i.e some/all of their vertices have just been moved) QuadsMoved_Adding Second part, recompute state of all elements previously removed, with new positions points . Public Attributes; sofa::type::vector< Topology::QuadID > quadsAroundVertexMoved;  ; const sofa::type::vector< Topology::Quad > quadArray2Moved;  . Public Member Functions;  QuadsMoved_Adding (const sofa::type::vector< Topology::QuadID > &quadShell, const sofa::type::vector< Topology::Quad > &quadArray);  ;  ~QuadsMoved_Adding () override;  ; const sofa::type::vector< Topology::QuadID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Quad > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ quadArray2Moved. const sofa::type::vector< Topology::Quad > sofa::core::topology::QuadsMoved_Adding::quadArray2Moved. ◆ quadsAroundVertexMoved. sofa::type::vector< Topology::QuadID > sofa::core::topology::QuadsMoved_Adding::quadsAroun",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::QuadsMoved_Removing Member List . This is the complete list of members for sofa::core::topology::QuadsMoved_Removing, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::QuadsMoved_Removinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; quadsAroundVertexMovedsofa::core::topology::QuadsMoved_Removing; QuadsMoved_Removing(const sofa::type::vector< Topology::QuadID > &quadShell)sofa::core::topology::QuadsMoved_Removinginline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~QuadsMoved_Removing() overridesofa::core::topology::QuadsMoved_Removing; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___removing-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___removing-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::QuadsMoved_Removing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::QuadsMoved_Removing Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::QuadsMoved_Removing:. [legend]; Detailed Description; indicates that some quads are about to be moved (i.e some/all of their vertices have just been moved) QuadsMoved_Removing First part, remove element concerned to force object to recompute global state with current positions . Public Attributes; sofa::type::vector< Topology::QuadID > quadsAroundVertexMoved;  . Public Member Functions;  QuadsMoved_Removing (const sofa::type::vector< Topology::QuadID > &quadShell);  ;  ~QuadsMoved_Removing () override;  ; const sofa::type::vector< Topology::QuadID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ quadsAroundVertexMoved. sofa::type::vector< Topology::QuadID > sofa::core::topology::QuadsMoved_Removing::quadsAroundVertexMoved. Constructor details. ◆ QuadsMoved_Removing(). sofa::core::topology::QuadsMoved_Removing::QuadsMoved_Removing ; (; const sofa::type::vector< Topology::QuadID > & ; quadShell). inline . ◆ ~QuadsMoved_Removing(). sofa::core::topology::QuadsMoved_Re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___removing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___removing.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::QuadsRemoved Member List . This is the complete list of members for sofa::core::topology::QuadsRemoved, including all inherited members. getArray() constsofa::core::topology::QuadsRemovedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getNbRemovedQuads() constsofa::core::topology::QuadsRemovedinline; getQuadIndices(const Topology::QuadID i)sofa::core::topology::QuadsRemovedinline; m_changeTypesofa::core::topology::TopologyChangeprotected; QuadsRemoved(const sofa::type::vector< Topology::QuadID > _qArray)sofa::core::topology::QuadsRemovedinline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; removedQuadsArraysofa::core::topology::QuadsRemovedprotected; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~QuadsRemoved() overridesofa::core::topology::QuadsRemoved; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_removed-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_removed-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::topology::QuadsRemoved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::topology::QuadsRemoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::QuadsRemoved:. [legend]; Detailed Description; indicates that some quads are about to be removed . Protected Attributes; sofa::type::vector< Topology::QuadID > removedQuadsArray;  ;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  . Public Member Functions;  QuadsRemoved (const sofa::type::vector< Topology::QuadID > _qArray);  ;  ~QuadsRemoved () override;  ; std::size_t getNbRemovedQuads () const;  ; const sofa::type::vector< Topology::QuadID > & getArray () const;  ; Topology::QuadID & getQuadIndices (const Topology::QuadID i);  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedQuadsArray. sofa::type::vector<Topology::QuadID> sofa::core::topology::QuadsRemoved::removedQuadsArray. protected . Constructor details. ◆ QuadsRemoved(). sofa::core::topology::QuadsRemoved::QuadsRemoved ; (; const sofa::type::vector< Topology::QuadID > ; _qArray). inline . ◆ ~QuadsRemoved(). sofa::core::topology::QuadsRemoved::~QuadsRemoved ; (; ). override . Function details. ◆ getArray(). const sofa::type::vector<Topology::QuadID>& sofa::core::topology::QuadsRemoved::g,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_removed.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::QuadsRenumbering Member List . This is the complete list of members for sofa::core::topology::QuadsRenumbering, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::QuadsRenumberinginline; getinv_IndexArray() constsofa::core::topology::QuadsRenumberinginline; indexArraysofa::core::topology::QuadsRenumbering; inv_indexArraysofa::core::topology::QuadsRenumbering; m_changeTypesofa::core::topology::TopologyChangeprotected; QuadsRenumbering()sofa::core::topology::QuadsRenumberinginline; QuadsRenumbering(const sofa::type::vector< Topology::QuadID > &indices, const sofa::type::vector< Topology::QuadID > &inv_indices)sofa::core::topology::QuadsRenumberinginline; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~QuadsRenumbering() overridesofa::core::topology::QuadsRenumbering; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_renumbering-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_renumbering-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::QuadsRenumbering Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::QuadsRenumbering Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::QuadsRenumbering:. [legend]; Detailed Description; indicates that the indices of all points have been renumbered . Public Attributes; sofa::type::vector< Topology::QuadID > indexArray;  ; sofa::type::vector< Topology::QuadID > inv_indexArray;  . Public Member Functions;  QuadsRenumbering ();  ;  ~QuadsRenumbering () override;  ;  QuadsRenumbering (const sofa::type::vector< Topology::QuadID > &indices, const sofa::type::vector< Topology::QuadID > &inv_indices);  ; const sofa::type::vector< Topology::QuadID > & getIndexArray () const;  ; const sofa::type::vector< Topology::QuadID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::QuadID> sofa::core::topology::QuadsRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::QuadID> sofa::core::topology::QuadsRenumbering::inv_indexArray. Constructor details. ◆ QuadsRenumbering() [1/2]. sofa::core::topology::QuadsRenumbering::QuadsRenumbering ; (; ). inline . ◆ ~QuadsRen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_renumbering.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_renumbering.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TetrahedraAdded Member List . This is the complete list of members for sofa::core::topology::TetrahedraAdded, including all inherited members. ancestorElemssofa::core::topology::TetrahedraAdded; ancestorsListsofa::core::topology::TetrahedraAdded; coefssofa::core::topology::TetrahedraAdded; getArray() constsofa::core::topology::TetrahedraAddedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::TetrahedraAddedinline; getIndexArray() constsofa::core::topology::TetrahedraAddedinline; getNbAddedElements() constsofa::core::topology::TetrahedraAddedinline; getNbAddedTetrahedra() constsofa::core::topology::TetrahedraAddedinline; m_changeTypesofa::core::topology::TopologyChangeprotected; nTetrahedrasofa::core::topology::TetrahedraAdded; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TetrahedraAdded(const size_t nT)sofa::core::topology::TetrahedraAddedinline; TetrahedraAdded(const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex)sofa::core::topology::TetrahedraAddedinline; TetrahedraAdded(const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::TetrahedraAddedinline; TetrahedraAdded(const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex, const sofa::type::vector< TetrahedronAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &ancestors, const sofa::type::vec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added-members.html
Modifiability,inherit,inherited,"nID > tetrahedronIndexArray;  ; sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > coefs;  ; sofa::type::vector< TetrahedronAncestorElem > ancestorElems;  . Public Member Functions;  TetrahedraAdded (const size_t nT);  ;  TetrahedraAdded (const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex);  ;  TetrahedraAdded (const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  TetrahedraAdded (const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex, const sofa::type::vector< TetrahedronAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~TetrahedraAdded () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getArray () const;  ; size_t getNbAddedTetrahedra () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Tetrahedron > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TetrahedraIndicesSwap Member List . This is the complete list of members for sofa::core::topology::TetrahedraIndicesSwap, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; indexsofa::core::topology::TetrahedraIndicesSwap; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TetrahedraIndicesSwap(const Topology::TetrahedronID i1, const Topology::TetrahedronID i2)sofa::core::topology::TetrahedraIndicesSwapinline; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TetrahedraIndicesSwap() overridesofa::core::topology::TetrahedraIndicesSwap; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_indices_swap-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_indices_swap-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TetrahedraIndicesSwap Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TetrahedraIndicesSwap Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TetrahedraIndicesSwap:. [legend]; Detailed Description; indicates that the indices of two Tetrahedra are being swapped . Public Attributes; Topology::TetrahedronID index [2];  . Public Member Functions;  TetrahedraIndicesSwap (const Topology::TetrahedronID i1, const Topology::TetrahedronID i2);  ;  ~TetrahedraIndicesSwap () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ index. Topology::TetrahedronID sofa::core::topology::TetrahedraIndicesSwap::index[2]. Constructor details. ◆ TetrahedraIndicesSwap(). sofa::core::topology::TetrahedraIndicesSwap::TetrahedraIndicesSwap ; (; const Topology::TetrahedronID ; i1, . const Topology::TetrahedronID ; i2 . ). inline . ◆ ~TetrahedraIndicesSwap(). sofa::core::topology::TetrahedraIndicesSwap::~TetrahedraIndicesSwap ; (; ). override . sofacoretopologyTetrahedraIndicesSwap; Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_indices_swap.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_indices_swap.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TetrahedraMoved_Adding Member List . This is the complete list of members for sofa::core::topology::TetrahedraMoved_Adding, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::TetrahedraMoved_Addinginline; getIndexArray() constsofa::core::topology::TetrahedraMoved_Addinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; tetrahedraAroundVertexMovedsofa::core::topology::TetrahedraMoved_Adding; TetrahedraMoved_Adding(const sofa::type::vector< Topology::TetrahedronID > &tetrahedronShell, const sofa::type::vector< Topology::Tetrahedron > &tetrahedronArray)sofa::core::topology::TetrahedraMoved_Addinginline; tetrahedronArray2Movedsofa::core::topology::TetrahedraMoved_Adding; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TetrahedraMoved_Adding() overridesofa::core::topology::TetrahedraMoved_Adding; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___adding-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___adding-members.html
Modifiability,inherit,inherited,"urce framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TetrahedraMoved_Adding Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TetrahedraMoved_Adding:. [legend]; Detailed Description; indicates that some tetrahedra are about to be moved (i.e some/all of their vertices have just been moved) TetrahedraMoved_Adding Second part, recompute state of all elements previously removed, with new positions points . Public Attributes; sofa::type::vector< Topology::TetrahedronID > tetrahedraAroundVertexMoved;  ; const sofa::type::vector< Topology::Tetrahedron > tetrahedronArray2Moved;  . Public Member Functions;  TetrahedraMoved_Adding (const sofa::type::vector< Topology::TetrahedronID > &tetrahedronShell, const sofa::type::vector< Topology::Tetrahedron > &tetrahedronArray);  ;  ~TetrahedraMoved_Adding () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Tetrahedron > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ tetrahedraAroundVertexMoved. sofa::type::vector< Topology::TetrahedronID > sofa::core::topology::TetrahedraMoved_Adding::tetrahedraAroundVertexMoved. ◆ tetrahedronArray2Moved. const sofa::type::vector< Topolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___adding.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___adding.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TetrahedraMoved_Removing Member List . This is the complete list of members for sofa::core::topology::TetrahedraMoved_Removing, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::TetrahedraMoved_Removinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; tetrahedraAroundVertexMovedsofa::core::topology::TetrahedraMoved_Removing; TetrahedraMoved_Removing(const sofa::type::vector< Topology::TetrahedronID > &tetrahedronShell)sofa::core::topology::TetrahedraMoved_Removinginline; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TetrahedraMoved_Removing() overridesofa::core::topology::TetrahedraMoved_Removing; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___removing-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___removing-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TetrahedraMoved_Removing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TetrahedraMoved_Removing Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TetrahedraMoved_Removing:. [legend]; Detailed Description; indicates that some tetrahedra are about to be moved (i.e some/all of their vertices have just been moved) TetrahedraMoved_Removing First part, remove element concerned to force object to recompute global state with current positions . Public Attributes; sofa::type::vector< Topology::TetrahedronID > tetrahedraAroundVertexMoved;  . Public Member Functions;  TetrahedraMoved_Removing (const sofa::type::vector< Topology::TetrahedronID > &tetrahedronShell);  ;  ~TetrahedraMoved_Removing () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ tetrahedraAroundVertexMoved. sofa::type::vector< Topology::TetrahedronID > sofa::core::topology::TetrahedraMoved_Removing::tetrahedraAroundVertexMoved. Constructor details. ◆ TetrahedraMoved_Removing(). sofa::core::topology::TetrahedraMoved_Removing::TetrahedraMoved_Removing ; (; const sofa::type::vector< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___removing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___removing.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TetrahedraRemoved Member List . This is the complete list of members for sofa::core::topology::TetrahedraRemoved, including all inherited members. getArray() constsofa::core::topology::TetrahedraRemovedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getNbRemovedTetrahedra() constsofa::core::topology::TetrahedraRemovedinline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; removedTetrahedraArraysofa::core::topology::TetrahedraRemoved; TetrahedraRemoved(const sofa::type::vector< Topology::TetrahedronID > _tArray)sofa::core::topology::TetrahedraRemovedinline; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TetrahedraRemoved() overridesofa::core::topology::TetrahedraRemoved; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_removed-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_removed-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::topology::TetrahedraRemoved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TetrahedraRemoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TetrahedraRemoved:. [legend]; Detailed Description; indicates that some tetrahedra are about to be removed . Public Attributes; sofa::type::vector< Topology::TetrahedronID > removedTetrahedraArray;  . Public Member Functions;  TetrahedraRemoved (const sofa::type::vector< Topology::TetrahedronID > _tArray);  ;  ~TetrahedraRemoved () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getArray () const;  ; std::size_t getNbRemovedTetrahedra () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedTetrahedraArray. sofa::type::vector<Topology::TetrahedronID> sofa::core::topology::TetrahedraRemoved::removedTetrahedraArray. Constructor details. ◆ TetrahedraRemoved(). sofa::core::topology::TetrahedraRemoved::TetrahedraRemoved ; (; const sofa::type::vector< Topology::TetrahedronID > ; _tArray). inline . ◆ ~TetrahedraRemoved(). sofa::core::topology::TetrahedraRemoved::~TetrahedraRemoved ; (; ). override . Function details. ◆ getArray(). const sofa::type::vector<Topology::Tetrahedr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_removed.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TetrahedraRenumbering Member List . This is the complete list of members for sofa::core::topology::TetrahedraRenumbering, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::TetrahedraRenumberinginline; getinv_IndexArray() constsofa::core::topology::TetrahedraRenumberinginline; indexArraysofa::core::topology::TetrahedraRenumbering; inv_indexArraysofa::core::topology::TetrahedraRenumbering; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TetrahedraRenumbering()sofa::core::topology::TetrahedraRenumberinginline; TetrahedraRenumbering(const sofa::type::vector< Topology::TetrahedronID > &indices, const sofa::type::vector< Topology::TetrahedronID > &inv_indices)sofa::core::topology::TetrahedraRenumberinginline; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TetrahedraRenumbering() overridesofa::core::topology::TetrahedraRenumbering; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_renumbering-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_renumbering-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TetrahedraRenumbering Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TetrahedraRenumbering Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TetrahedraRenumbering:. [legend]; Detailed Description; indicates that the indices of all points have been renumbered . Public Attributes; sofa::type::vector< Topology::TetrahedronID > indexArray;  ; sofa::type::vector< Topology::TetrahedronID > inv_indexArray;  . Public Member Functions;  TetrahedraRenumbering ();  ;  TetrahedraRenumbering (const sofa::type::vector< Topology::TetrahedronID > &indices, const sofa::type::vector< Topology::TetrahedronID > &inv_indices);  ;  ~TetrahedraRenumbering () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::TetrahedronID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::TetrahedronID> sofa::core::topology::TetrahedraRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::TetrahedronID> sofa::core::topology::TetrahedraRenumbering::inv_indexArray. Constructor details. ◆ TetrahedraRenum",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_renumbering.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_renumbering.html
Deployability,update,updateInternal,"nst std::string &n, int counter)sofa::core::objectmodel::Base; setPathInputObject(const std::string &o)sofa::core::topology::TopologicalMappinginline; setPathOutputObject(const std::string &o)sofa::core::topology::TopologicalMappinginline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown()=0sofa::core::topology::TopologicalMappingpure virtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologicalMapping Member List . This is the complete list of members for sofa::core::topology::TopologicalMapping, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html
Performance,load,loader,"seObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathInputObject(const std::string &o)sofa::core::topology::TopologicalMappinginline; setPathOutputObject(const std::string &o)sofa::core::topology::TopologicalMappinginline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html
Usability,clear,clearLoggedMessages,"model::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping-members.html
Availability,down,down,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html
Deployability,update,updates,"utes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologicalMapping Class Referenceabstract . #include <TopologicalMapping.h>; This Interface is a new kind of Mapping, called TopologicalMapping, which converts an INPUT TOPOLOGY to an OUTPUT TOPOLOGY (both topologies are of type BaseTopology) ; More... Inheritance diagram for sofa::core::topology::TopologicalMapping:. [legend]; Detailed Description; This Interface is a new kind of Mapping, called TopologicalMapping, which converts an INPUT TOPOLOGY to an OUTPUT TOPOLOGY (both topologies are of type BaseTopology) ; It first initializes the mesh of the output topology from the mesh of the input topology, and it creates the two Index Maps that maintain the correspondence between the indices of their common elements.; Then, at each propagation of topological changes, it translates the topological change events that are propagated from the INPUT topology into specific actions that call element adding or element removal methods on the OUTPUT topology, and it updates the Index Maps.; So, at each time step, the geometrical and adjacency information are consistent in both topologies. . Public Attributes; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_print",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html
Energy Efficiency,adapt,adapt,"model::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingTopDown ()=0;  Method called at each topological changes propagation which comes from the INPUT topology to adapt the OUTPUT topology : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT topology : More...;  ; virtual bool propagateFromInputToOutputModel ();  Return true if this mapping is able to propagate topological changes from input to output model. More...;  ; virtual bool propagateFromOutputToInputModel ();  Return true if this mapping is able to propagate topological changes from output to input model. More...;  ; virtual bool isTheOutputTopologySubdividingTheInputOne ();  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; virtual Index getGlobIndex (Index ind);  ; virtual Index getFromIndex (Index ind);  ; vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html
Integrability,message,messages,"specific actions that call element adding or element removal methods on the OUTPUT topology, and it updates the Index Maps.; So, at each time step, the geometrical and adjacency information are consistent in both topologies. . Public Attributes; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::map< Index, Index > Glob2LocMap;  ; std::map< Index, sofa::type::vector< Index > > In2OutMap;  ; ElementType m_inputType = geometry::ElementType::UNKNOWN;  ; ElementType m_outputType = geometry::ElementType::UNKNOWN;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html
Modifiability,inherit,inherited," type BaseTopology) ; It first initializes the mesh of the output topology from the mesh of the input topology, and it creates the two Index Maps that maintain the correspondence between the indices of their common elements.; Then, at each propagation of topological changes, it translates the topological change events that are propagated from the INPUT topology into specific actions that call element adding or element removal methods on the OUTPUT topology, and it updates the Index Maps.; So, at each time step, the geometrical and adjacency information are consistent in both topologies. . Public Attributes; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::map< Index, Index > Glob2LocMap;  ; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html
Performance,load,loader," ; virtual Index getFromIndex (Index ind);  ; void dumpGlob2LocMap ();  ; void dumpLoc2GlobVec ();  ; virtual bool checkTopologies ();  Method to check the topology mapping maps regarding the upper topology. More...;  ; virtual void getFromIndex (type::vector< Index > &, const Index) const;  ; const std::map< Index, sofa::type::vector< Index > > & getIn2OutMap ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html
Deployability,update,updateInternal,"el::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNbPoints(Size)sofa::core::topology::Topologyinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(Topology, core::objectmodel::BaseObject)sofa::core::topology::Topology; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Topology()sofa::core::topology::Topologyinlineprotectedvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::Topology Member List . This is the complete list of members for sofa::core::topology::Topology, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html
Performance,load,loader,"esofa::core::topology::Topologyvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; SetIndex typedefsofa::core::topology::Topology; SetIndices typedefsofa::core::topology::Topology; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNbPoints(Size)sofa::core::topology::Topologyinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(Topology, core::objectmodel::BaseObject)sofa::core::topology::Topology; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; ElemID typedefsofa::core::topology::Topology; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html
Integrability,depend,dependent,"stexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  . Public Member Functions;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool hasPos () const;  ; virtual Size getNbPoints () const;  ; virtual void setNbPoints (Size);  ; virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html
Modifiability,inherit,inherited,"Static Public Attributes; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  . Public Member Functions;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool hasPos () const;  ; virtual Size getNbPoints () const;  ; virtual void setNbPoints (Size);  ; virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html
Performance,load,loader,"jectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool hasPos () const;  ; virtual Size getNbPoints () const;  ; virtual void setNbPoints (Size);  ; virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChange Member List . This is the complete list of members for sofa::core::topology::TopologyChange, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; m_changeTypesofa::core::topology::TopologyChangeprotected; operator<<(std::ostream &out, const TopologyChange *t)sofa::core::topology::TopologyChangefriend; operator>>(std::istream &in, TopologyChange *&t)sofa::core::topology::TopologyChangefriend; operator>>(std::istream &in, const TopologyChange *&)sofa::core::topology::TopologyChangefriend; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TopologyChange()sofa::core::topology::TopologyChangevirtual. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_change-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_change-members.html
Modifiability,inherit,inheriting,"﻿. SOFA API: sofa::core::topology::TopologyChange Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::topology::TopologyChange Class Reference . #include <TopologyChange.h>; Base class to indicate a topology change occurred. ; More... Inheritance diagram for sofa::core::topology::TopologyChange:. [legend]; Detailed Description; Base class to indicate a topology change occurred. ; All topological changes taking place in a given BaseTopology will issue a TopologyChange in the BaseTopology's changeList, so that BasicTopologies mapped to it can know what happened and decide how to react. Classes inheriting from this one describe a given topolopy change (e.g. RemovedPoint, AddedEdge, etc). The exact type of topology change is given by member changeType. . Protected Attributes; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  . Public Member Functions; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Protected Member Functions;  TopologyChange (TopologyChangeType changeType=BASE);  . Friends; SOFA_CORE_API friend std::ostream & operator<< (std::ostream &out, const TopologyChange *t);  Output stream. More...;  ; SOFA_CORE_API friend std::istream & operator>> (std::istream &in, TopologyChange *&t);  Input (empty) stream. More...;  ; SOFA_CORE_API friend std::istream & operator>> (std::istream &in, const TopologyChange *&);  Input (empty) stream. More...;  . Attribute details. ◆ m_changeType. TopologyChangeType sofa::core::topology::TopologyChange::m_changeType. protected . A code that tells the nature of the Topology modification event (could be an enum). . Constructor ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_change.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_change.html
Deployability,update,updateInternal,"esetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; TopologyContainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType)sofa::core::topology::TopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~Topology()sofa::core::topology::Topologyinlineprotectedvirtual; ~TopologyContainer() overridesofa::core::topology::TopologyContainerprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyContainer Member List . This is the complete list of members for sofa::core::topology::TopologyContainer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz)sofa::core::topology::BaseMeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTopologyHandler(TopologyHandler *_TopologyHandler, sofa::geometry::ElementType elementType)sofa::core::topology::TopologyContainer; addTriangle(Index a, Index b, Index c)sofa::core::topology::BaseMeshTopologyvirtual; addUpdateCallback(const std::st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html
Performance,load,load,"idPentahedronsofa::core::topology::Topologystatic; InvalidPyramidsofa::core::topology::Topologystatic; InvalidQuadsofa::core::topology::Topologystatic; InvalidQuadsInHexahedronsofa::core::topology::BaseMeshTopologystatic; InvalidSetsofa::core::topology::Topologyinlinestatic; InvalidTetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; linkTopologyHandlerToData(TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType)sofa::core::topology::TopologyContainervirtual; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_changeListsofa::core::topology::TopologyContainer; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_stateChangeListsofa::core::topology::TopologyContainer; m_topologyHandlerListPerElementsofa::core::topology::TopologyContainer; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(Index a, Index b)sofa::core::topology::BaseMeshTopologyvirtual; addHexa(Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h)sofa::core::topology::BaseMeshTopologyvirtual; addLine(Index a, Index b)sofa::core::topology::BaseMeshTopologyinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(SReal px, SReal py, SReal pz)sofa::core::topology::BaseMeshTopologyvirtual; addQuad(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetra(Index a, Index b, Index c, Index d)sofa::core::topology::BaseMeshTopologyvirtual; addTopologyChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyContainervirtual; addTopologyHandler(TopologyHandler *_TopologyHandler, sofa::geometry::ElementType elementType)sofa::core::topology::TopologyContainer; addTriangle(Index a, Index b, Index c)sofa::core::topology::BaseMeshTopologyvirtual; addUpdateCallback(const std::st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html
Usability,clear,clear,"ology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() const overridesofa::core::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html
Availability,down,down,"﻿. SOFA API: sofa::core::topology::TopologyContainer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyContainer Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::TopologyContainer:. [legend]; Detailed Description; A class that contains a description of the topology (set of edges, triangles, adjacency information, ...) . Public Member Functions;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  . const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  . const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () const;  ; virtual void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange to the list. More...;  ; virtual void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange to the list. More...;  ; std::list< const TopologyChange * >::const_iterator beginChange () const override;  Provides an iterator on the first element in the list of TopologyChange objects. More...;  ; std::list< const TopologyChange * >::const_iterator endChange () const override;  Provides an iterator on the last element in the list of TopologyChange objects. More...;  ; std::list< const TopologyChange * >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html
Integrability,depend,dependent,"onst_iterator endStateChange () const override;  Provides an iterator on the last element in the list of StateChange objects. More...;  ; virtual void resetTopologyChangeList ();  Free each Topology changes in the list and remove them from the list. More...;  ; virtual void resetStateChangeList ();  Free each State changes in the list and remove them from the list. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html
Modifiability,inherit,inherited,"pologyChange * >::const_iterator endChange () const override;  Provides an iterator on the last element in the list of TopologyChange objects. More...;  ; std::list< const TopologyChange * >::const_iterator beginStateChange () const override;  Provides an iterator on the first element in the list of StateChange objects. More...;  ; std::list< const TopologyChange * >::const_iterator endStateChange () const override;  Provides an iterator on the last element in the list of StateChange objects. More...;  ; virtual void resetTopologyChangeList ();  Free each Topology changes in the list and remove them from the list. More...;  ; virtual void resetStateChangeList ();  Free each State changes in the list and remove them from the list. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html
Performance,load,loader,"ateChangeList ();  Free each State changes in the list and remove them from the list. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html
Safety,detect,detect,"nst TopologyChange *> >& sofa::core::topology::TopologyContainer::getDataChangeList ; (; ); const. inline . ◆ getDataStateChangeList(). const Data<std::list<const TopologyChange *> >& sofa::core::topology::TopologyContainer::getDataStateChangeList ; (; ); const. inline . ◆ getEdges(). const SeqEdges& sofa::core::topology::TopologyContainer::getEdges ; (; ). inlineoverridevirtual . BaseMeshTopology API ; Implements sofa::core::topology::BaseMeshTopology. ◆ getHexahedra(). const SeqHexahedra& sofa::core::topology::TopologyContainer::getHexahedra ; (; ). inlineoverridevirtual . Implements sofa::core::topology::BaseMeshTopology. ◆ getQuads(). const SeqQuads& sofa::core::topology::TopologyContainer::getQuads ; (; ). inlineoverridevirtual . Implements sofa::core::topology::BaseMeshTopology. ◆ getRevision(). int sofa::core::topology::TopologyContainer::getRevision ; (; ); const. inlineoverridevirtual . Get the current revision of this mesh. ; This can be used to detect changes, however topological changes event should be used whenever possible. ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ getStateChangeList(). const std::list<const TopologyChange *>& sofa::core::topology::TopologyContainer::getStateChangeList ; (; ); const. inline . ◆ getTetrahedra(). const SeqTetrahedra& sofa::core::topology::TopologyContainer::getTetrahedra ; (; ). inlineoverridevirtual . Implements sofa::core::topology::BaseMeshTopology. ◆ getTopologyHandlerList(). const std::set< TopologyHandler * > & sofa::core::topology::TopologyContainer::getTopologyHandlerList ; (; sofa::geometry::ElementType ; elementType); const. TopologyHandler interactions . ◆ getTriangles(). const SeqTriangles& sofa::core::topology::TopologyContainer::getTriangles ; (; ). inlineoverridevirtual . Implements sofa::core::topology::BaseMeshTopology. ◆ init(). void sofa::core::topology::TopologyContainer::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html
Deployability,update,update,"ctmodel::Data< T >inlinestatic; TopologyChangeCallback typedefsofa::core::topology::TopologyData< ElementType, VecT >; TopologyData(const typename sofa::core::topology::BaseTopologyData< VecT >::InitData &data)sofa::core::topology::TopologyData< ElementType, VecT >; TopologyDataElementHandler typedefsofa::core::topology::TopologyData< ElementType, VecT >; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Point *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Edge *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Triangle *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Quad *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Tetrahedron *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Hexahedron *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::topology::TopologyData< ElementType, VecT >; ValueType typedefsofa::core::objectmodel::Data< T >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< T >inline; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~TopologyData()sofa::core::topology::TopologyData< ElementType, VecT >.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyData< ElementType, VecT > Member List . This is the complete list of members for sofa::core::topology::TopologyData< ElementType, VecT >, including all inherited members. add(const sofa::type::vector< Index > &index, const sofa::type::vector< ElementType > &elems, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const sofa::type::vector< AncestorElem > &ancestorElems) overridesofa::core::topology::TopologyData< ElementType, VecT >virtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::PointID > &, const sofa::type::vector< Topology::Point > &, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< PointAncestorElem > &)sofa::core::topology::BaseTopologyData< VecT >inlinevirtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::EdgeID > &, const sofa::type::vector< Topology::Edge > &, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< EdgeAncestorElem > &)sofa::core::topology::BaseTopologyData< VecT >inlinevirtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::TriangleID > &, const sofa::type::vector< Topology::Triangle > &, const sofa::type::vector< sofa::type::vector< Topology::TriangleID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< TriangleAncestorElem > &)sofa::core::topology::BaseTopologyData< VecT >inlinevirtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::TetrahedronID > &, const sofa::type::vector< Topology::Tetrahedron > &, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &, const sofa::type::vector< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data-members.html
Deployability,update,update,"nkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to a parent data. The value of this data will automatically duplicate the value of the parent data. More...;  ; bool setParent (const std::string &path);  ; virtual bool validParent (const BaseData *parent);  Check if a given Data can be linked as a parent of this data. More...;  ; BaseData * getParent () const;  ; void update () override;  Update the value of this Data. More...;  ; bool copyValueFrom (const BaseData *data);  Update this Data from the value of its parent. More...;  ; bool updateValueFromLink (const BaseData *data);  ; template<class T > ;  SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME () static std;  ; void setFlag (DataFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (DataFlagsEnum flag) const;  Get one of the flags. More...;  ; bool isDisplayed () const;  Return whether this Data has to be displayed in GUIs. More...;  ; bool isReadOnly () const;  Return whether this Data will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html
Integrability,wrap,wrapper,"﻿. SOFA API: sofa::core::topology::TopologyData< ElementType, VecT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyData< ElementType, VecT > Class Template Reference . #include <TopologyData.h>; A class for storing topology related data. Automatically manages topology changes. ; More... Inheritance diagram for sofa::core::topology::TopologyData< ElementType, VecT >:. [legend]; Detailed Description; template<class ElementType, class VecT>; class sofa::core::topology::TopologyData< ElementType, VecT >; A class for storing topology related data. Automatically manages topology changes. ; This class is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: element added, removed, fused, renumbered). . Public Attributes; std::function< void(Index, value_type &)> p_onDestructionCallback;  ; std::function< void(Index, value_type &, const ElementType &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)> p_onCreationCallback;  ;  Public Attributes inherited from sofa::core::objectmodel::Data< T >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html
Modifiability,inherit,inherited,"ributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyData< ElementType, VecT > Class Template Reference . #include <TopologyData.h>; A class for storing topology related data. Automatically manages topology changes. ; More... Inheritance diagram for sofa::core::topology::TopologyData< ElementType, VecT >:. [legend]; Detailed Description; template<class ElementType, class VecT>; class sofa::core::topology::TopologyData< ElementType, VecT >; A class for storing topology related data. Automatically manages topology changes. ; This class is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: element added, removed, fused, renumbered). . Public Attributes; std::function< void(Index, value_type &)> p_onDestructionCallback;  ; std::function< void(Index, value_type &, const ElementType &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)> p_onCreationCallback;  ;  Public Attributes inherited from sofa::core::objectmodel::Data< T >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html
Security,access,access,"&init);  ;  Data (const InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html
Deployability,update,update,"a::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; Point typedefsofa::core::topology::TopologyDataHandler< ElementType, VecT >; Quad typedefsofa::core::topology::TopologyDataHandler< ElementType, VecT >; registerTopologicalData(t_topologicalData *topologicalData)sofa::core::topology::TopologyDataHandler< ElementType, VecT >inline; registerTopology(sofa::core::topology::BaseMeshTopology *_topology, bool printLog=false)sofa::core::topology::TopologyHandlervirtual; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setNamePrefix(const std::string &s)sofa::core::topology::TopologyHandlerinline; t_topologicalData typedefsofa::core::topology::TopologyDataHandler< ElementType, VecT >; Tetrahedron typedefsofa::core::topology::TopologyDataHandler< ElementType, VecT >; TopologyChangeCallback typedefsofa::core::topology::TopologyHandler; TopologyDataHandler(t_topologicalData *_topologicalData, sofa::core::topology::BaseMeshTopology *_topology, value_type defaultValue=value_type())sofa::core::topology::TopologyDataHandler< ElementType, VecT >; TopologyDataHandler(t_topologicalData *_topologicalData, value_type defaultValue=value_type())sofa::core::topology::TopologyDataHandler< ElementType, VecT >; TopologyHandler()sofa::core::topology::TopologyHandlerprotected; Triangle typedefsofa::core::topology::TopologyDataHandler< ElementType, VecT >; unlinkFromAllTopologyDataArray()sofa::core::topology::TopologyDataHandler< ElementType, VecT >; unlinkFromTopologyDataArray(sofa::geometry::ElementType elementType)sofa::core::topology::TopologyDataHandler< ElementType, VecT >; unregisterTopologyHandler()sofa::core::topology::TopologyHandlerinline; update() overridesofa::core::topology::TopologyHandlervirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; value_type typedefsofa::core::topology::TopologyDataHandler< ElementType, VecT >; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyDataHandler< ElementType, VecT > Member List . This is the complete list of members for sofa::core::topology::TopologyDataHandler< ElementType, VecT >, including all inherited members. addCallBack(core::topology::TopologyChangeType type, TopologyChangeCallback callback)sofa::core::topology::TopologyHandler; addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; AncestorElem typedefsofa::core::topology::TopologyDataHandler< ElementType, VecT >; ApplyTopologyChange(const EIndicesSwap *event) overridesofa::core::topology::TopologyDataHandler< ElementType, VecT >virtual; ApplyTopologyChange(const EAdded *event) overridesofa::core::topology::TopologyDataHandler< ElementType, VecT >virtual; ApplyTopologyChange(const ERemoved *event) overridesofa::core::topology::TopologyDataHandler< ElementType, VecT >virtual; ApplyTopologyChange(const ERenumbering *event) overridesofa::core::topology::TopologyDataHandler< ElementType, VecT >virtual; ApplyTopologyChange(const EMoved *event) overridesofa::core::topology::TopologyDataHandler< ElementType, VecT >virtual; ApplyTopologyChange(const core::topology::EndingEvent *)sofa::core::topology::TopologyDataHandler< ElementType, VecT >inline; ApplyTopologyChange(const core::topology::PointsIndicesSwap *)sofa::core::topology::TopologyDataHandler< ElementType, VecT >inline; ApplyTopologyChange(const core::topology::PointsAdded *)sofa::core::topology::TopologyDataHandler< ElementType, VecT >inline; ApplyTopologyChange(const core::topology::PointsRemoved *)sofa::core::topology::TopologyDataHandler< ElementType, VecT >inline; ApplyTopologyChange(const core::topology::PointsRenumbering *)sofa::core::topology::TopologyDataHandler< ElementType, VecT >inline; ApplyTopologyChange(const core::topology::PointsMoved *)sofa::core::topology::TopologyDataHandler< ElementType,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler-members.html
Deployability,update,update,"nts. More...;  ; virtual void ApplyTopologyChange (const core::topology::HexahedraRemoved *);  Apply removing hexahedron elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::HexahedraMoved_Removing *);  Apply removing function on moved hexahedron elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::HexahedraMoved_Adding *);  Apply adding function on moved hexahedron elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::HexahedraRenumbering *);  Apply renumbering on hexahedron elements. More...;  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Point >::EMoved_Adding *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Point >::EMoved_Removing *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Edge >::EMoved *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Triangle >::EMoved *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Quad >::EMoved *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Tetrahedron >::EMoved *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Hexahedron >::EMoved *);  ;  Public Member Functions inherited from sofa::core::topology::TopologyHandler; void update () override;  Update this value. More...;  ; virtual void ApplyTopologyChanges (const std::list< const core::topology::TopologyChange * > &_topologyChangeEvents, const Size _dataSize);  ; virtual void ApplyTopologyChange (const core::topology::EndingEvent *);  ; virtual void ApplyTopologyChange (const core::topology::PointsIndicesSwap *);  ; virtual void ApplyTopologyChange (const core::topology::PointsAdded *);  Apply adding points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::PointsRemoved *);  Apply removing points elements. More...;  ; virtual void ApplyTopology",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TopologyDataHandler< ElementType, VecT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TopologyDataHandler< ElementType, VecT > Class Template Reference . #include <TopologyDataHandler.h>. Inheritance diagram for sofa::core::topology::TopologyDataHandler< ElementType, VecT >:. [legend]. Protected Attributes; t_topologicalData * m_topologyData;  Apply adding function on moved elements. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologyHandler; std::string m_prefix;  use to define engine name. More...;  ; std::string m_data_name;  use to define data handled name. More...;  ; std::set< sofa::geometry::ElementType > m_registeredElements;  Set to store the information which topology element this handler is linked. I.e in which handler list this handler is registered inside the Topology. More...;  ; sofa::core::topology::TopologyContainer * m_topology;  ; std::map< core::topology::TopologyChangeType, TopologyChangeCallback > m_callbackMap;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  TopologyDataHandler (t_topologicalData *_topologicalData, sofa::core::topology::BaseMeshTopology *_topology, value_type defaultValue=value_type());  ;  TopologyDataHandler (t_topologicalData *_topologicalData, value_type defaultValue=value_type());  ; void init ();  ; void handleTopologyChange () override;  ; void registerTopologicalData (t_topologicalData *topologicalData);  ; void linkToTopologyDataArray (sofa::geometry::ElementType elementType);  Function to link DataEngine with Data array from topology. More...;  ; void unlinkFromTopologyDataArray (sofa::geometry::ElementType elementType);  ; void unlinkFromAllTopologyDataArray ();  ; virtual void ApplyTopologyChange (co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html
Deployability,update,update,"ectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getName()sofa::core::topology::TopologyHandlerinline; getNumberOfTopologicalChanges()sofa::core::topology::TopologyHandler; getOutputs()sofa::core::objectmodel::DDGNode; handleTopologyChange()sofa::core::topology::TopologyHandlerinlinevirtual; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; isTopologyHandlerRegistered() constsofa::core::topology::TopologyHandlerinline; m_callbackMapsofa::core::topology::TopologyHandlerprotected; m_data_namesofa::core::topology::TopologyHandlerprotected; m_prefixsofa::core::topology::TopologyHandlerprotected; m_registeredElementssofa::core::topology::TopologyHandlerprotected; m_topologysofa::core::topology::TopologyHandlerprotected; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; registerTopology(sofa::core::topology::BaseMeshTopology *_topology, bool printLog=false)sofa::core::topology::TopologyHandlervirtual; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setNamePrefix(const std::string &s)sofa::core::topology::TopologyHandlerinline; TopologyChangeCallback typedefsofa::core::topology::TopologyHandler; TopologyHandler()sofa::core::topology::TopologyHandlerprotected; unregisterTopologyHandler()sofa::core::topology::TopologyHandlerinline; update() overridesofa::core::topology::TopologyHandlervirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyHandler Member List . This is the complete list of members for sofa::core::topology::TopologyHandler, including all inherited members. addCallBack(core::topology::TopologyChangeType type, TopologyChangeCallback callback)sofa::core::topology::TopologyHandler; addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; ApplyTopologyChange(const core::topology::EndingEvent *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::PointsIndicesSwap *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::PointsAdded *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::PointsRemoved *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::PointsRenumbering *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::PointsMoved *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::EdgesIndicesSwap *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::EdgesAdded *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::EdgesRemoved *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::EdgesMoved_Removing *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::EdgesMoved_Adding *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::EdgesRenumbering *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::TrianglesIndicesSwap *)sofa::core::topology::TopologyHandlerinlinevirtual; ApplyTopologyChange(const core::topology::TrianglesA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler-members.html
Deployability,update,update,"ons |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyHandler Class Reference . #include <TopologyHandler.h>. Inheritance diagram for sofa::core::topology::TopologyHandler:. [legend]; Detailed Description; A class that will interact on a topological Data . Protected Attributes; std::string m_prefix;  use to define engine name. More...;  ; std::string m_data_name;  use to define data handled name. More...;  ; std::set< sofa::geometry::ElementType > m_registeredElements;  Set to store the information which topology element this handler is linked. I.e in which handler list this handler is registered inside the Topology. More...;  ; sofa::core::topology::TopologyContainer * m_topology;  ; std::map< core::topology::TopologyChangeType, TopologyChangeCallback > m_callbackMap;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions; virtual void handleTopologyChange ();  ; void update () override;  Update this value. More...;  ; virtual void ApplyTopologyChanges (const std::list< const core::topology::TopologyChange * > &_topologyChangeEvents, const Size _dataSize);  ; virtual void ApplyTopologyChange (const core::topology::EndingEvent *);  ; virtual void ApplyTopologyChange (const core::topology::PointsIndicesSwap *);  ; virtual void ApplyTopologyChange (const core::topology::PointsAdded *);  Apply adding points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::PointsRemoved *);  Apply removing points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::PointsRenumbering *);  Apply renumbering on points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::PointsMoved *);  Apply moving points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::EdgesIndicesSwap *);  ; virtual void ApplyTopologyChange (const core::topology::EdgesAdded *);  App",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TopologyHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyHandler Class Reference . #include <TopologyHandler.h>. Inheritance diagram for sofa::core::topology::TopologyHandler:. [legend]; Detailed Description; A class that will interact on a topological Data . Protected Attributes; std::string m_prefix;  use to define engine name. More...;  ; std::string m_data_name;  use to define data handled name. More...;  ; std::set< sofa::geometry::ElementType > m_registeredElements;  Set to store the information which topology element this handler is linked. I.e in which handler list this handler is registered inside the Topology. More...;  ; sofa::core::topology::TopologyContainer * m_topology;  ; std::map< core::topology::TopologyChangeType, TopologyChangeCallback > m_callbackMap;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions; virtual void handleTopologyChange ();  ; void update () override;  Update this value. More...;  ; virtual void ApplyTopologyChanges (const std::list< const core::topology::TopologyChange * > &_topologyChangeEvents, const Size _dataSize);  ; virtual void ApplyTopologyChange (const core::topology::EndingEvent *);  ; virtual void ApplyTopologyChange (const core::topology::PointsIndicesSwap *);  ; virtual void ApplyTopologyChange (const core::topology::PointsAdded *);  Apply adding points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::PointsRemoved *);  Apply removing points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::PointsRenumbering *);  Apply renumbering on points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::PointsMoved *);  Apply movin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_handler.html
Deployability,update,updateInternal,"etInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(TopologyModifier, BaseTopologyObject)sofa::core::topology::TopologyModifier; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~TopologyModifier() overridesofa::core::topology::TopologyModifierinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyModifier Member List . This is the complete list of members for sofa::core::topology::TopologyModifier, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyModifierprotected; addTag(Tag t)sofa::core::objectmodel::Base; addTopologyChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html
Performance,load,loader,"Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::topology::BaseTopologyObjectvirtual; removeItems(const sofa::type::vector< Index > &)sofa::core::topology::TopologyModifiervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(TopologyModifier, BaseTopologyObject)sofa::core::topology::TopologyModifier; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addStateChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyModifierprotected; addTag(Tag t)sofa::core::objectmodel::Base; addTopologyChange(const TopologyChange *topologyChange)sofa::core::topology::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html
Usability,clear,clearLoggedMessages,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html
Availability,down,down,"m topological changes . Protected Attributes; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void propagateStateChanges ();  Called by a topology to warn the Mechanical Object component that points have been added or will be removed. More...;  ; virtual void propagateTopologicalChanges ();  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void notifyEndingEvent ();  notify the end for the current sequence of topological change events. More...;  ; virtual void removeItems (const sofa::type::vector< Index > &);  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html
Integrability,depend,depends,"﻿. SOFA API: sofa::core::topology::TopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyModifier Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::TopologyModifier:. [legend]; Detailed Description; A class that contains a set of low-level methods that perform topological changes . Protected Attributes; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void propagateStateChanges ();  Called by a topology to warn the Mechanical Object component that points have been added or will be removed. More...;  ; virtual void propagateTopologicalChanges ();  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void notifyEndingEvent ();  notify the end for the current sequence of topol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyModifier Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::TopologyModifier:. [legend]; Detailed Description; A class that contains a set of low-level methods that perform topological changes . Protected Attributes; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void propagateStateChanges ();  Called by a topology to warn the Mechanical Object component that points have been added or will be removed. More...;  ; virtual void propagateTopologicalChanges ();  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void notifyEndingEvent ();  notify the end for the current sequence of topol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html
Performance,perform,perform,"﻿. SOFA API: sofa::core::topology::TopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyModifier Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::TopologyModifier:. [legend]; Detailed Description; A class that contains a set of low-level methods that perform topological changes . Protected Attributes; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void propagateStateChanges ();  Called by a topology to warn the Mechanical Object component that points have been added or will be removed. More...;  ; virtual void propagateTopologicalChanges ();  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void notifyEndingEvent ();  notify the end for the current sequence of topol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html
Security,access,access,"﻿. SOFA API: sofa::core::topology::TopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyModifier Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::TopologyModifier:. [legend]; Detailed Description; A class that contains a set of low-level methods that perform topological changes . Protected Attributes; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void propagateStateChanges ();  Called by a topology to warn the Mechanical Object component that points have been added or will be removed. More...;  ; virtual void propagateTopologicalChanges ();  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void notifyEndingEvent ();  notify the end for the current sequence of topol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html
Deployability,update,update,"efsofa::core::topology::TopologyData< ElementType, VecT >; TopologySubsetData(const typename sofa::core::topology::BaseTopologyData< VecT >::InitData &data)sofa::core::topology::TopologySubsetData< ElementType, VecT >; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Point *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Edge *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Triangle *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Quad *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Tetrahedron *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Hexahedron *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateLastIndex(Index posLastIndex, Index newGlobalId)sofa::core::topology::TopologySubsetData< ElementType, VecT >protectedvirtual; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::topology::TopologySubsetData< ElementType, VecT >; ValueType typedefsofa::core::objectmodel::Data< T >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< T >inline; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~TopologyData()sofa::core::topology::TopologyData< ElementType, VecT >.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologySubsetData< ElementType, VecT > Member List . This is the complete list of members for sofa::core::topology::TopologySubsetData< ElementType, VecT >, including all inherited members. add(sofa::Size nbElements, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs)sofa::core::topology::TopologySubsetData< ElementType, VecT >virtual; add(sofa::Size nbElements, const sofa::type::vector< ElementType > &elems, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs)sofa::core::topology::TopologySubsetData< ElementType, VecT >virtual; add(const sofa::type::vector< Index > &index, const sofa::type::vector< ElementType > &elems, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const sofa::type::vector< AncestorElem > &ancestorElems) overridesofa::core::topology::TopologySubsetData< ElementType, VecT >virtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::PointID > &, const sofa::type::vector< Topology::Point > &, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< PointAncestorElem > &)sofa::core::topology::BaseTopologyData< VecT >inlinevirtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::EdgeID > &, const sofa::type::vector< Topology::Edge > &, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< EdgeAncestorElem > &)sofa::core::topology::BaseTopologyData< VecT >inlinevirtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::TriangleID > &, const sofa::typ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data-members.html
Deployability,update,update,"nkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to a parent data. The value of this data will automatically duplicate the value of the parent data. More...;  ; bool setParent (const std::string &path);  ; virtual bool validParent (const BaseData *parent);  Check if a given Data can be linked as a parent of this data. More...;  ; BaseData * getParent () const;  ; void update () override;  Update the value of this Data. More...;  ; bool copyValueFrom (const BaseData *data);  Update this Data from the value of its parent. More...;  ; bool updateValueFromLink (const BaseData *data);  ; template<class T > ;  SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME () static std;  ; void setFlag (DataFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (DataFlagsEnum flag) const;  Get one of the flags. More...;  ; bool isDisplayed () const;  Return whether this Data has to be displayed in GUIs. More...;  ; bool isReadOnly () const;  Return whether this Data will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html
Energy Efficiency,reduce,reduced,"e::vector< Index > ; _map2Elements). Method to set a vector map to rull this subsetData. Will set. ; See alsom_usingMap to true Otherwise will use the Data as the map . ◆ supportNewTopologyElements(). template<class ElementType , class VecT > . void sofa::core::topology::TopologySubsetData< ElementType, VecT >::supportNewTopologyElements ; (; bool ; value). inline . Method to activate/unactivate the See alsom_addNewElements option. To allow this TopologySubsetData to add new elements. By default . m_addNewElements is set to false. ; Parameters. {bool}to change m_addNewElements value. . ◆ swap(). template<typename ElementType , typename VecT > . void sofa::core::topology::TopologySubsetData< ElementType, VecT >::swap ; (; Index ; i1, . Index ; i2 . ). override . Swaps values of this subsetmap at indices i1 and i2. (only if i1 and i2 < subset size()) . ◆ swapPostProcess(). template<typename ElementType , typename VecT > . void sofa::core::topology::TopologySubsetData< ElementType, VecT >::swapPostProcess ; (; Index ; i1, . Index ; i2 . ). protectedvirtual . Internal method called at the end of See alsoswap method to apply internal mechanism, such as map swap. ; Parameters. i1First element index to be swapped. ; i2Second element index to be swapped with first one. . Reimplemented in sofa::core::topology::TopologySubsetIndices. ◆ updateLastIndex(). template<typename ElementType , typename VecT > . void sofa::core::topology::TopologySubsetData< ElementType, VecT >::updateLastIndex ; (; Index ; posLastIndex, . Index ; newGlobalId . ). protectedvirtual . Internal method to update the last element of this Data and/or map when the topology buffer is reduced. Parameters. posLastIndexIndex position of the last topology element in this subset. ; newGlobalIdGlobal topology element index to be set at Data[posLastIndex]. . Reimplemented in sofa::core::topology::TopologySubsetIndices. sofacoretopologyTopologySubsetData; Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html
Integrability,wrap,wrapper,"﻿. SOFA API: sofa::core::topology::TopologySubsetData< ElementType, VecT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologySubsetData< ElementType, VecT > Class Template Reference . #include <TopologySubsetData.h>; A class for storing element related data. Automatically manages topology changes. ; More... Inheritance diagram for sofa::core::topology::TopologySubsetData< ElementType, VecT >:. [legend]; Detailed Description; template<class ElementType, class VecT>; class sofa::core::topology::TopologySubsetData< ElementType, VecT >; A class for storing element related data. Automatically manages topology changes. ; This class is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: elements added, removed, fused, renumbered). . Protected Attributes; sofa::type::vector< Index > m_map2Elements;  same size as this SubsetData but contains id of element link to each data[] More...;  ; bool m_addNewElements = false;  ;  Protected Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  TopologySubsetData (const typename sofa::core::topology::BaseTopologyData< VecT >::InitData ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html
Modifiability,inherit,inherited," #include <TopologySubsetData.h>; A class for storing element related data. Automatically manages topology changes. ; More... Inheritance diagram for sofa::core::topology::TopologySubsetData< ElementType, VecT >:. [legend]; Detailed Description; template<class ElementType, class VecT>; class sofa::core::topology::TopologySubsetData< ElementType, VecT >; A class for storing element related data. Automatically manages topology changes. ; This class is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: elements added, removed, fused, renumbered). . Protected Attributes; sofa::type::vector< Index > m_map2Elements;  same size as this SubsetData but contains id of element link to each data[] More...;  ; bool m_addNewElements = false;  ;  Protected Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  TopologySubsetData (const typename sofa::core::topology::BaseTopologyData< VecT >::InitData &data);  Default Constructor to init Data. More...;  ; void setMap2Elements (const sofa::type::vector< Index > _map2Elements);  Method to set a vector map to rull this subsetData. Will set. More...;  ; sofa::type::vector< Index > & getMap2Elements ();  Getter of the vector map indices. More...;  ; void supportNewTopologyElements (bool value);  ; bool isNewTopology",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html
Security,access,access,"&init);  ;  Data (const InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html
Deployability,update,update,"bsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >; TopologySubsetIndices(const typename sofa::core::topology::BaseTopologyData< type::vector< Index > >::InitData &data)sofa::core::topology::TopologySubsetIndicesexplicit; typeName()sofa::core::objectmodel::BaseDatainlinestatic; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Point *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Edge *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Triangle *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Quad *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Tetrahedron *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unlinkFromElementDataArray(sofa::core::topology::BaseMeshTopology::Hexahedron *)sofa::core::topology::TopologyData< ElementType, VecT >protected; unset()sofa::core::objectmodel::BaseDatainline; update() overridesofa::core::objectmodel::BaseDatavirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateLastIndex(Index posLastIndex, Index newGlobalId) overridesofa::core::topology::TopologySubsetIndicesprotectedvirtual; updateValueFromLink(const BaseData *data)sofa::core::objectmodel::BaseData; validParent(const BaseData *parent)sofa::core::objectmodel::BaseDatavirtual; value_type typedefsofa::core::topology::TopologySubsetIndices; ValueType typedefsofa::core::objectmodel::Data< T >protected; widgetsofa::core::objectmodel::BaseData; ~BaseData() overridesofa::core::objectmodel::BaseData; ~Data() overridesofa::core::objectmodel::Data< T >inline; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~TopologyData()sofa::core::topology::TopologyData< ElementType, VecT >.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologySubsetIndices Member List . This is the complete list of members for sofa::core::topology::TopologySubsetIndices, including all inherited members. add(sofa::Size nbElements, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs)sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >virtual; add(sofa::Size nbElements, const sofa::type::vector< core::topology::BaseMeshTopology::Point > &elems, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs)sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >virtual; add(const sofa::type::vector< Index > &index, const sofa::type::vector< core::topology::BaseMeshTopology::Point > &elems, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const sofa::type::vector< AncestorElem > &ancestorElems) overridesofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >virtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::PointID > &, const sofa::type::vector< Topology::Point > &, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< PointAncestorElem > &)sofa::core::topology::BaseTopologyData< VecT >inlinevirtual; BaseTopologyData< VecT >::add(const sofa::type::vector< Topology::EdgeID > &, const sofa::type::vector< Topology::Edge > &, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< EdgeAncestorElem > &)sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices-members.html
Deployability,update,update,"nkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to a parent data. The value of this data will automatically duplicate the value of the parent data. More...;  ; bool setParent (const std::string &path);  ; virtual bool validParent (const BaseData *parent);  Check if a given Data can be linked as a parent of this data. More...;  ; BaseData * getParent () const;  ; void update () override;  Update the value of this Data. More...;  ; bool copyValueFrom (const BaseData *data);  Update this Data from the value of its parent. More...;  ; bool updateValueFromLink (const BaseData *data);  ; template<class T > ;  SOFA_ATTRIBUTE_DEPRECATED__UNNECESSARY_PARAMETER_IN_TYPENAME () static std;  ; void setFlag (DataFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (DataFlagsEnum flag) const;  Get one of the flags. More...;  ; bool isDisplayed () const;  Return whether this Data has to be displayed in GUIs. More...;  ; bool isReadOnly () const;  Return whether this Data will be read-only in GUIs. More...;  ; bool isPersistent () const;  Return whether this Data contains persistent information. More...;  ; bool isAutoLink () const;  Return whether this Data should be autolinked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html
Energy Efficiency,reduce,reduced," of the element inside the vector map See alsom_map2Elements ; Parameters. {Index}element index of the full Data vector to find in the vector map . Returns{type::vector<Index>} positions of all the occurrence of the element in the vector map. return empty vector if not found. ; Reimplemented from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >. ◆ removePostProcess(). void sofa::core::topology::TopologySubsetIndices::removePostProcess ; (; sofa::Index ; elemId). overrideprotectedvirtual . Internal method called at the end of See alsoremove method to apply internal mechanism, such as updating the map size ; Parameters. nbElementsNumber of element removed. . Reimplemented from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >. ◆ swapPostProcess(). void sofa::core::topology::TopologySubsetIndices::swapPostProcess ; (; Index ; i1, . Index ; i2 . ). overrideprotectedvirtual . Internal method called at the end of See alsoswap method to apply internal mechanism, such as map swap. ; Parameters. i1First element index to be swapped. ; i2Second element index to be swapped with first one. . Reimplemented from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >. ◆ updateLastIndex(). void sofa::core::topology::TopologySubsetIndices::updateLastIndex ; (; Index ; posLastIndex, . Index ; newGlobalId . ). overrideprotectedvirtual . Internal method to update the last element of this Data and/or map when the topology buffer is reduced. Parameters. posLastIndexIndex position of the last topology element in this subset. ; newGlobalIdGlobal topology element index to be set at Data[posLastIndex]. . Reimplemented from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >. sofacoretopologyTopologySubsetIndices; Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html
Integrability,wrap,wrapping,"﻿. SOFA API: sofa::core::topology::TopologySubsetIndices Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologySubsetIndices Class Reference . #include <TopologySubsetIndices.h>; A class for storing point indices. Automatically manages topological changes on Point. ; More... Inheritance diagram for sofa::core::topology::TopologySubsetIndices:. [legend]; Detailed Description; A class for storing point indices. Automatically manages topological changes on Point. ; This class is a TopologySubsetData templated on PointData and wrapping a type::vector <Index>. The type::vector <Index> works as a map storing the global indices of the Point this subset is applied on. For example a TopologySubsetIndices of size N can be used in a FixConstraint to store the N fixed points. If the points are removed this subset will follow the changes and remove the constraints. . Public Member Functions;  TopologySubsetIndices (const typename sofa::core::topology::BaseTopologyData< type::vector< Index > >::InitData &data);  Default Constructor to init Data. More...;  ; Index indexOfElement (Index index) const override;  ; const type::vector< Index > indicesOfElement (Index index) const override;  ; void createTopologyHandler (sofa::core::topology::BaseMeshTopology *_topology) override;  Function to create topology handler to manage this Data. More...;  ; Index getLastElementIndex () const override;  Return the last element index of the topolgy buffer this Data is linked to. More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >;  TopologySubsetData (const typename sofa::core::topology::BaseTopologyData< type::vector< Index > >::InitData &data);  Default Constructor to init Data. More...;  ; void setMap2Elements (const sofa::type::vector< Index > _",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html
Modifiability,inherit,inherited,"the Point this subset is applied on. For example a TopologySubsetIndices of size N can be used in a FixConstraint to store the N fixed points. If the points are removed this subset will follow the changes and remove the constraints. . Public Member Functions;  TopologySubsetIndices (const typename sofa::core::topology::BaseTopologyData< type::vector< Index > >::InitData &data);  Default Constructor to init Data. More...;  ; Index indexOfElement (Index index) const override;  ; const type::vector< Index > indicesOfElement (Index index) const override;  ; void createTopologyHandler (sofa::core::topology::BaseMeshTopology *_topology) override;  Function to create topology handler to manage this Data. More...;  ; Index getLastElementIndex () const override;  Return the last element index of the topolgy buffer this Data is linked to. More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >;  TopologySubsetData (const typename sofa::core::topology::BaseTopologyData< type::vector< Index > >::InitData &data);  Default Constructor to init Data. More...;  ; void setMap2Elements (const sofa::type::vector< Index > _map2Elements);  Method to set a vector map to rull this subsetData. Will set. More...;  ; sofa::type::vector< Index > & getMap2Elements ();  Getter of the vector map indices. More...;  ; void supportNewTopologyElements (bool value);  ; bool isNewTopologyElementsSupported () const;  Getter to the option. More...;  ; void swap (Index i1, Index i2) override;  Swaps values of this subsetmap at indices i1 and i2. (only if i1 and i2 < subset size()) More...;  ; virtual void add (sofa::Size nbElements, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs);  ; virtual void add (sofa::Size nbElements, const sofa::type::vector< core::topology::BaseMeshTopology::Point > &elems, const sofa::type::vector",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html
Security,access,access,"&init);  ;  Data (const InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TrianglesAdded Member List . This is the complete list of members for sofa::core::topology::TrianglesAdded, including all inherited members. ancestorElemssofa::core::topology::TrianglesAdded; ancestorsListsofa::core::topology::TrianglesAdded; coefssofa::core::topology::TrianglesAdded; getArray() constsofa::core::topology::TrianglesAddedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::TrianglesAddedinline; getIndexArray() constsofa::core::topology::TrianglesAddedinline; getNbAddedElements() constsofa::core::topology::TrianglesAddedinline; getNbAddedTriangles() constsofa::core::topology::TrianglesAddedinline; getTriangle(const Topology::TriangleID i)sofa::core::topology::TrianglesAddedinline; m_changeTypesofa::core::topology::TopologyChangeprotected; nTrianglessofa::core::topology::TrianglesAdded; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; triangleArraysofa::core::topology::TrianglesAdded; triangleIndexArraysofa::core::topology::TrianglesAdded; TrianglesAdded(const size_t nT)sofa::core::topology::TrianglesAddedinline; TrianglesAdded(const size_t nT, const sofa::type::vector< Topology::Triangle > &_triangleArray, const sofa::type::vector< Topology::TriangleID > &trianglesIndex)sofa::core::topology::TrianglesAddedinline; TrianglesAdded(const size_t nT, const sofa::type::vector< Topology::Triangle > &_triangleArray, const sofa::type::vector< Topology::TriangleID > &trianglesIndex, const sofa::type::vector< sofa::type::vector< Topology::TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::core::topology::TrianglesAddedinline; TrianglesAdded(const size_t nT, const sofa::type::vector< Topology::Triangle > &_triangleA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_added-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_added-members.html
Modifiability,inherit,inherited,"ID > triangleIndexArray;  ; sofa::type::vector< sofa::type::vector< Topology::TriangleID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > coefs;  ; sofa::type::vector< TriangleAncestorElem > ancestorElems;  . Public Member Functions;  TrianglesAdded (const size_t nT);  ;  TrianglesAdded (const size_t nT, const sofa::type::vector< Topology::Triangle > &_triangleArray, const sofa::type::vector< Topology::TriangleID > &trianglesIndex);  ;  TrianglesAdded (const size_t nT, const sofa::type::vector< Topology::Triangle > &_triangleArray, const sofa::type::vector< Topology::TriangleID > &trianglesIndex, const sofa::type::vector< sofa::type::vector< Topology::TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  TrianglesAdded (const size_t nT, const sofa::type::vector< Topology::Triangle > &_triangleArray, const sofa::type::vector< Topology::TriangleID > &trianglesIndex, const sofa::type::vector< TriangleAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~TrianglesAdded () override;  ; size_t getNbAddedTriangles () const;  ; const sofa::type::vector< Topology::TriangleID > & getArray () const;  ; const Topology::Triangle & getTriangle (const Topology::TriangleID i);  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::TriangleID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Triangle > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_ch",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_added.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_added.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TrianglesIndicesSwap Member List . This is the complete list of members for sofa::core::topology::TrianglesIndicesSwap, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; indexsofa::core::topology::TrianglesIndicesSwap; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; TrianglesIndicesSwap(const Topology::TriangleID i1, const Topology::TriangleID i2)sofa::core::topology::TrianglesIndicesSwapinline; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TopologyChange()sofa::core::topology::TopologyChangevirtual; ~TrianglesIndicesSwap() overridesofa::core::topology::TrianglesIndicesSwap. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_indices_swap-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_indices_swap-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TrianglesIndicesSwap Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TrianglesIndicesSwap Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TrianglesIndicesSwap:. [legend]; Detailed Description; indicates that the indices of two Triangles are being swapped . Public Attributes; Topology::TriangleID index [2];  . Public Member Functions;  TrianglesIndicesSwap (const Topology::TriangleID i1, const Topology::TriangleID i2);  ;  ~TrianglesIndicesSwap () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ index. Topology::TriangleID sofa::core::topology::TrianglesIndicesSwap::index[2]. Constructor details. ◆ TrianglesIndicesSwap(). sofa::core::topology::TrianglesIndicesSwap::TrianglesIndicesSwap ; (; const Topology::TriangleID ; i1, . const Topology::TriangleID ; i2 . ). inline . ◆ ~TrianglesIndicesSwap(). sofa::core::topology::TrianglesIndicesSwap::~TrianglesIndicesSwap ; (; ). override . sofacoretopologyTrianglesIndicesSwap; Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_indices_swap.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_indices_swap.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TrianglesMoved_Adding Member List . This is the complete list of members for sofa::core::topology::TrianglesMoved_Adding, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getElementArray() constsofa::core::topology::TrianglesMoved_Addinginline; getIndexArray() constsofa::core::topology::TrianglesMoved_Addinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; triangleArray2Movedsofa::core::topology::TrianglesMoved_Adding; trianglesAroundVertexMovedsofa::core::topology::TrianglesMoved_Adding; TrianglesMoved_Adding(const sofa::type::vector< Topology::TriangleID > &triangleShell, const sofa::type::vector< Topology::Triangle > &triangleArray)sofa::core::topology::TrianglesMoved_Addinginline; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TopologyChange()sofa::core::topology::TopologyChangevirtual; ~TrianglesMoved_Adding() overridesofa::core::topology::TrianglesMoved_Adding. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___adding-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___adding-members.html
Modifiability,inherit,inherited," API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TrianglesMoved_Adding Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TrianglesMoved_Adding:. [legend]; Detailed Description; indicates that some triangles are about to be moved (i.e some/all of their vertices have just been moved) TrianglesMoved_Adding Second part, recompute state of all elements previously removed, with new positions points . Public Attributes; sofa::type::vector< Topology::TriangleID > trianglesAroundVertexMoved;  ; const sofa::type::vector< Topology::Triangle > triangleArray2Moved;  . Public Member Functions;  TrianglesMoved_Adding (const sofa::type::vector< Topology::TriangleID > &triangleShell, const sofa::type::vector< Topology::Triangle > &triangleArray);  ;  ~TrianglesMoved_Adding () override;  ; const sofa::type::vector< Topology::TriangleID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Triangle > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ triangleArray2Moved. const sofa::type::vector< Topology::Triangle > sofa::core::topology::TrianglesMoved_Adding::triangleArray2Moved. ◆ trianglesAroundVertexMoved. sofa::type::vector< Topology::TriangleID > sofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___adding.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___adding.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TrianglesMoved_Removing Member List . This is the complete list of members for sofa::core::topology::TrianglesMoved_Removing, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::TrianglesMoved_Removinginline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; trianglesAroundVertexMovedsofa::core::topology::TrianglesMoved_Removing; TrianglesMoved_Removing(const sofa::type::vector< Topology::TriangleID > &triangleShell)sofa::core::topology::TrianglesMoved_Removinginline; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TopologyChange()sofa::core::topology::TopologyChangevirtual; ~TrianglesMoved_Removing() overridesofa::core::topology::TrianglesMoved_Removing. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___removing-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___removing-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TrianglesMoved_Removing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TrianglesMoved_Removing Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TrianglesMoved_Removing:. [legend]; Detailed Description; indicates that some triangles are about to be moved (i.e some/all of their vertices have just been moved) TrianglesMoved_Removing First part, remove element concerned to force object to recompute global state with current positions . Public Attributes; sofa::type::vector< Topology::TriangleID > trianglesAroundVertexMoved;  . Public Member Functions;  TrianglesMoved_Removing (const sofa::type::vector< Topology::TriangleID > &triangleShell);  ;  ~TrianglesMoved_Removing () override;  ; const sofa::type::vector< Topology::TriangleID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ trianglesAroundVertexMoved. sofa::type::vector< Topology::TriangleID > sofa::core::topology::TrianglesMoved_Removing::trianglesAroundVertexMoved. Constructor details. ◆ TrianglesMoved_Removing(). sofa::core::topology::TrianglesMoved_Removing::TrianglesMoved_Removing ; (; const sofa::type::vector< Topology::TriangleID > & ; tr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___removing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___removing.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TrianglesRemoved Member List . This is the complete list of members for sofa::core::topology::TrianglesRemoved, including all inherited members. getArray() constsofa::core::topology::TrianglesRemovedinline; getChangeType() constsofa::core::topology::TopologyChangeinline; getNbRemovedTriangles() constsofa::core::topology::TrianglesRemovedinline; getTriangleIndices(const Topology::TriangleID i)sofa::core::topology::TrianglesRemovedinline; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; removedTrianglesArraysofa::core::topology::TrianglesRemovedprotected; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; TrianglesRemoved(const sofa::type::vector< Topology::TriangleID > _tArray)sofa::core::topology::TrianglesRemovedinline; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TopologyChange()sofa::core::topology::TopologyChangevirtual; ~TrianglesRemoved() overridesofa::core::topology::TrianglesRemoved. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_removed-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_removed-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::topology::TrianglesRemoved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TrianglesRemoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TrianglesRemoved:. [legend]; Detailed Description; indicates that some triangles are about to be removed . Protected Attributes; sofa::type::vector< Topology::TriangleID > removedTrianglesArray;  ;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  . Public Member Functions;  TrianglesRemoved (const sofa::type::vector< Topology::TriangleID > _tArray);  ;  ~TrianglesRemoved () override;  ; std::size_t getNbRemovedTriangles () const;  ; const sofa::type::vector< Topology::TriangleID > & getArray () const;  ; Topology::TriangleID & getTriangleIndices (const Topology::TriangleID i);  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedTrianglesArray. sofa::type::vector<Topology::TriangleID> sofa::core::topology::TrianglesRemoved::removedTrianglesArray. protected . Constructor details. ◆ TrianglesRemoved(). sofa::core::topology::TrianglesRemoved::TrianglesRemoved ; (; const sofa::type::vector< Topology::TriangleID > ; _tArray). inline . ◆ ~TrianglesRemoved(). sofa::core::topology::TrianglesRemoved::~TrianglesRemoved ; (; ). override . Function deta,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_removed.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_removed.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TrianglesRenumbering Member List . This is the complete list of members for sofa::core::topology::TrianglesRenumbering, including all inherited members. getChangeType() constsofa::core::topology::TopologyChangeinline; getIndexArray() constsofa::core::topology::TrianglesRenumberinginline; getinv_IndexArray() constsofa::core::topology::TrianglesRenumberinginline; indexArraysofa::core::topology::TrianglesRenumbering; inv_indexArraysofa::core::topology::TrianglesRenumbering; m_changeTypesofa::core::topology::TopologyChangeprotected; read(std::istream &in)sofa::core::topology::TopologyChangevirtual; TopologyChange(TopologyChangeType changeType=BASE)sofa::core::topology::TopologyChangeinlineprotected; TrianglesRenumbering()sofa::core::topology::TrianglesRenumberinginline; TrianglesRenumbering(const sofa::type::vector< Topology::TriangleID > &indices, const sofa::type::vector< Topology::TriangleID > &inv_indices)sofa::core::topology::TrianglesRenumberinginline; write(std::ostream &out) constsofa::core::topology::TopologyChangevirtual; ~TopologyChange()sofa::core::topology::TopologyChangevirtual; ~TrianglesRenumbering() overridesofa::core::topology::TrianglesRenumbering. Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_renumbering-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_renumbering-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::topology::TrianglesRenumbering Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TrianglesRenumbering Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TrianglesRenumbering:. [legend]; Detailed Description; indicates that the indices of all points have been renumbered . Public Attributes; sofa::type::vector< Topology::TriangleID > indexArray;  ; sofa::type::vector< Topology::TriangleID > inv_indexArray;  . Public Member Functions;  TrianglesRenumbering ();  ;  TrianglesRenumbering (const sofa::type::vector< Topology::TriangleID > &indices, const sofa::type::vector< Topology::TriangleID > &inv_indices);  ;  ~TrianglesRenumbering () override;  ; const sofa::type::vector< Topology::TriangleID > & getIndexArray () const;  ; const sofa::type::vector< Topology::TriangleID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::TriangleID> sofa::core::topology::TrianglesRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::TriangleID> sofa::core::topology::TrianglesRenumbering::inv_indexArray. Constructor details. ◆ TrianglesRenumbering() [1/2]. sofa::core::topol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_renumbering.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_renumbering.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::DisplayFlags Member List . This is the complete list of members for sofa::core::visual::DisplayFlags, including all inherited members. difference_displayFlags(const DisplayFlags &parent, const DisplayFlags &child)sofa::core::visual::DisplayFlagsfriend; DisplayFlags()sofa::core::visual::DisplayFlags; DisplayFlags(const DisplayFlags &)sofa::core::visual::DisplayFlags; getAllFlagsLabels() constsofa::core::visual::DisplayFlags; getShowAdvancedRendering() constsofa::core::visual::DisplayFlagsinline; getShowAll() constsofa::core::visual::DisplayFlagsinline; getShowBehavior() constsofa::core::visual::DisplayFlagsinline; getShowBehaviorModels() constsofa::core::visual::DisplayFlagsinline; getShowBoundingCollisionModels() constsofa::core::visual::DisplayFlagsinline; getShowCollision() constsofa::core::visual::DisplayFlagsinline; getShowCollisionModels() constsofa::core::visual::DisplayFlagsinline; getShowDetectionOutputs() constsofa::core::visual::DisplayFlagsinline; getShowForceFields() constsofa::core::visual::DisplayFlagsinline; getShowInteractionForceFields() constsofa::core::visual::DisplayFlagsinline; getShowMapping() constsofa::core::visual::DisplayFlagsinline; getShowMappings() constsofa::core::visual::DisplayFlagsinline; getShowMechanicalMappings() constsofa::core::visual::DisplayFlagsinline; getShowNormals() constsofa::core::visual::DisplayFlagsinline; getShowOptions() constsofa::core::visual::DisplayFlagsinline; getShowVisual() constsofa::core::visual::DisplayFlagsinline; getShowVisualModels() constsofa::core::visual::DisplayFlagsinline; getShowWireFrame() constsofa::core::visual::DisplayFlagsinline; isNeutral() constsofa::core::visual::DisplayFlags; m_rootsofa::core::visual::DisplayFlagsprotected; m_showAdvancedRenderingsofa::core::visual::DisplayFlagsprotected; m_showAllsofa::core::visual::DisplayFlagsprotected; m_showBehaviorsofa::core::visual:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_display_flags-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_display_flags-members.html
Security,access,accessible,"﻿. SOFA API: sofa::core::visual::DisplayFlags Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::core::visual::DisplayFlags Class Reference . #include <DisplayFlags.h>; Class which describes the display of components in a hierarchical fashion DisplayFlags are conveyed by the VisualParams, and therefore are accessible in a read only fashion inside a Component draw method. A component can tell if it should draw something on the display by looking at the current state of the displayFlags through the VisualParams parameter. DisplayFlags are embeddable inside a Data and can therefore read/write their state from a stream. ; More...; Detailed Description; Class which describes the display of components in a hierarchical fashion DisplayFlags are conveyed by the VisualParams, and therefore are accessible in a read only fashion inside a Component draw method. A component can tell if it should draw something on the display by looking at the current state of the displayFlags through the VisualParams parameter. DisplayFlags are embeddable inside a Data and can therefore read/write their state from a stream. ; root |–all | |–visual | | |–visualmodels | |–behavior | | |–behaviormodels | | |–forcefields | | |–interactionforcefields | |–collision | | |–collisionmodels | | |–boundingcollisionmodels | |–mapping | | |–visualmappings | | |–mechanicalmappings |–options | |–advancedrendering | |–wireframe | |–normals . Protected Attributes; FlagTreeItem m_root;  ; FlagTreeItem m_showAll;  ; FlagTreeItem m_showVisual;  ; FlagTreeItem m_showVisualModels;  ; FlagTreeItem m_showBehavior;  ; FlagTreeItem m_showBehaviorModels;  ; FlagTreeItem m_showForceFields;  ; FlagTreeItem m_showInteractionForceFields;  ; FlagTreeItem m_showCollision;  ; FlagTreeItem m_showCollisionModels;  ; FlagTreeItem m_showBoundingCollisionModels;  ; FlagTreeItem m_showDetectionOutputs;  ; Fl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_display_flags.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_display_flags.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::FlagTreeItem Member List . This is the complete list of members for sofa::core::visual::FlagTreeItem, including all inherited members. addAlias(sofa::type::vector< std::string > &name, const std::string &newAlias)sofa::core::visual::FlagTreeItem; addAliasHide(const std::string &newAlias)sofa::core::visual::FlagTreeItem; addAliasShow(const std::string &newAlias)sofa::core::visual::FlagTreeItem; ChildConstIterator typedefsofa::core::visual::FlagTreeItemprotected; ChildIterator typedefsofa::core::visual::FlagTreeItemprotected; create_flagmap(FlagTreeItem *root)sofa::core::visual::FlagTreeItemprotectedstatic; create_parse_map(FlagTreeItem *root, std::map< std::string, bool, ci_comparison > &map)sofa::core::visual::FlagTreeItemprotectedstatic; FlagTreeItem(const std::string &showName, const std::string &hideName, FlagTreeItem *parent=nullptr)sofa::core::visual::FlagTreeItem; getLabels(sofa::type::vector< std::string > &labels) constsofa::core::visual::FlagTreeItem; m_childsofa::core::visual::FlagTreeItemprotected; m_hideNamesofa::core::visual::FlagTreeItemprotected; m_parentsofa::core::visual::FlagTreeItemprotected; m_showNamesofa::core::visual::FlagTreeItemprotected; m_statesofa::core::visual::FlagTreeItemprotected; operator<<(std::ostream &os, const FlagTreeItem &root)sofa::core::visual::FlagTreeItemfriend; operator>>(std::istream &in, FlagTreeItem &root)sofa::core::visual::FlagTreeItemfriend; propagateStateDown(FlagTreeItem *origin)sofa::core::visual::FlagTreeItemprotected; propagateStateUp(FlagTreeItem *origin)sofa::core::visual::FlagTreeItemprotected; read(std::istream &in)sofa::core::visual::FlagTreeItem; read(std::istream &in, const std::function< void(std::string)> &unknownFlagFunction, const std::function< void(std::string, std::string)> &incorrectLetterCaseFunction)sofa::core::visual::FlagTreeItem; READ_FLAG enum namesofa::core::visual::FlagTre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_flag_tree_item-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_flag_tree_item-members.html
Deployability,update,updateInternal,"del::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; Shader()sofa::core::visual::Shaderinlineprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; start()=0sofa::core::visual::Shaderpure virtual; stop()=0sofa::core::visual::Shaderpure virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Shader() overridesofa::core::visual::Shaderinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::Shader Member List . This is the complete list of members for sofa::core::visual::Shader, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html
Performance,load,loader,"l::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::Shadervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; Shader()sofa::core::visual::Shaderinlineprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; start()=0sofa::core::visual::Shaderpure virtual; stop()=0sofa::core::visual::Shaderpure virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::visual::Shader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::Shader Class Referenceabstract . #include <Shader.h>; A basic interface to define a Shader for different system (OpenGL, DirectX, ...). ; More... Inheritance diagram for sofa::core::visual::Shader:. [legend]; Detailed Description; A basic interface to define a Shader for different system (OpenGL, DirectX, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ; virtual void start ()=0;  Start the shader. More...;  ; virtual void stop ()=0;  Stop the shader. More...;  ; virtual bool isActive ()=0;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::visual::Shader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::Shader Class Referenceabstract . #include <Shader.h>; A basic interface to define a Shader for different system (OpenGL, DirectX, ...). ; More... Inheritance diagram for sofa::core::visual::Shader:. [legend]; Detailed Description; A basic interface to define a Shader for different system (OpenGL, DirectX, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ; virtual void start ()=0;  Start the shader. More...;  ; virtual void stop ()=0;  Stop the shader. More...;  ; virtual bool isActive ()=0;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html
Performance,load,loader,"enGL, DirectX, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ; virtual void start ()=0;  Start the shader. More...;  ; virtual void stop ()=0;  Stop the shader. More...;  ; virtual bool isActive ()=0;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html
Deployability,update,updateInternal,"_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::ShaderElement Member List . This is the complete list of members for sofa::core::visual::ShaderElement, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html
Performance,load,loader,"oveTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; SE_ATTRIBUTE enum valuesofa::core::visual::ShaderElement; SE_MACRO enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html
Availability,down,down,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::visual::ShaderElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::ShaderElement Class Referenceabstract . #include <Shader.h>; A basic interface to define an element to be used with a Shader. ; More... Inheritance diagram for sofa::core::visual::ShaderElement:. [legend]; Detailed Description; A basic interface to define an element to be used with a Shader. . Public Member Functions;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual ShaderElementType getSEType () const =0;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; virtual const std::string & getSEID () const =0;  ; virtual const core::objectmodel::BaseData * getSEValue () const =0;  ; virtual core::objectmodel::BaseData * getSEValue ()=0;  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::core::visual::ShaderElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::ShaderElement Class Referenceabstract . #include <Shader.h>; A basic interface to define an element to be used with a Shader. ; More... Inheritance diagram for sofa::core::visual::ShaderElement:. [legend]; Detailed Description; A basic interface to define an element to be used with a Shader. . Public Member Functions;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual ShaderElementType getSEType () const =0;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; virtual const std::string & getSEID () const =0;  ; virtual const core::objectmodel::BaseData * getSEValue () const =0;  ; virtual core::objectmodel::BaseData * getSEValue ()=0;  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html
Performance,load,loader,"Type getSEType () const =0;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; virtual const std::string & getSEID () const =0;  ; virtual const core::objectmodel::BaseData * getSEValue () const =0;  ; virtual core::objectmodel::BaseData * getSEValue ()=0;  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html
Deployability,update,updateContextStep,"FilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualLoop, VisualModel)sofa::core::visual::VisualLoop; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateContextStep(sofa::core::visual::VisualParams *)sofa::core::visual::VisualLoopinlinevirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStep(sofa::core::visual::VisualParams *)sofa::core::visual::VisualLoopinlinevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualLoop() overridesofa::core::visual::VisualLoopinlineprotected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::VisualLoop Member List . This is the complete list of members for sofa::core::visual::VisualLoop, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html
Performance,load,loader,"ase; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualLoopvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualLoop, VisualModel)sofa::core::visual::VisualLoop; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateContextStep(sofa::core::visual::VisualParams *)sofa::core::visual::VisualLoopinlinevirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStep(sofa::core::visual::VisualParams *)sofa::core::visual::VisualLoopinlinevirtual; updateVisual(const VisualParams *)sofa::core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *, SReal *, SReal *, bool)sofa::core::visual::VisualLoopinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawStep(sofa::core::visual::Visual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html
Deployability,update,updateStep,"﻿. SOFA API: sofa::core::visual::VisualLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::VisualLoop Class Reference . #include <VisualLoop.h>. Inheritance diagram for sofa::core::visual::VisualLoop:. [legend]. Public Member Functions;  SOFA_CLASS (VisualLoop, VisualModel);  ; virtual void initStep (sofa::core::visual::VisualParams *);  Initialize the textures. More...;  ; virtual void updateStep (sofa::core::visual::VisualParams *);  Update the Visual Models: triggers the Mappings. More...;  ; virtual void updateContextStep (sofa::core::visual::VisualParams *);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; virtual void drawStep (sofa::core::visual::VisualParams *);  Render the scene. More...;  ; virtual void computeBBoxStep (sofa::core::visual::VisualParams *, SReal *, SReal *, bool);  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html
Modifiability,inherit,inherited,"diagram for sofa::core::visual::VisualLoop:. [legend]. Public Member Functions;  SOFA_CLASS (VisualLoop, VisualModel);  ; virtual void initStep (sofa::core::visual::VisualParams *);  Initialize the textures. More...;  ; virtual void updateStep (sofa::core::visual::VisualParams *);  Update the Visual Models: triggers the Mappings. More...;  ; virtual void updateContextStep (sofa::core::visual::VisualParams *);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; virtual void drawStep (sofa::core::visual::VisualParams *);  Render the scene. More...;  ; virtual void computeBBoxStep (sofa::core::visual::VisualParams *, SReal *, SReal *, bool);  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html
Usability,clear,clearVisual,"e...;  ; virtual void drawStep (sofa::core::visual::VisualParams *);  Render the scene. More...;  ; virtual void computeBBoxStep (sofa::core::visual::VisualParams *, SReal *, SReal *, bool);  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html
Deployability,update,updateInternal,"tionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::VisualManager Member List . This is the complete list of members for sofa::core::visual::VisualManager, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html
Performance,load,loader,"; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(VisualParams *)sofa::core::visual::VisualManagerinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html
Deployability,update,updateVisual,":VisualManager Class Reference . #include <VisualManager.h>. Inheritance diagram for sofa::core::visual::VisualManager:. [legend]. Public Member Functions;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::visual::VisualManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::VisualManager Class Reference . #include <VisualManager.h>. Inheritance diagram for sofa::core::visual::VisualManager:. [legend]. Public Member Functions;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SRe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html
Usability,clear,clearVisual," Functions;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html
Deployability,update,updateInternal,"irtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::VisualModel Member List . This is the complete list of members for sofa::core::visual::VisualModel, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html
Performance,load,loader,"se; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html
Deployability,update,update,"﻿. SOFA API: sofa::core::visual::VisualModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::VisualModel Class Reference . #include <VisualModel.h>; An interface which all VisualModel inherit. ; More... Inheritance diagram for sofa::core::visual::VisualModel:. [legend]; Detailed Description; An interface which all VisualModel inherit. ; This Interface is used for the VisualModel, which all visible objects must implement.; VisualModels are drawn by calling their draw method. The method update is used to recompute some internal data (such as normals) after the simulation has computed a new timestep.; Most VisualModel are bound by a Mapping to a BehaviorModel or MechanicalState. . Public Attributes; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::visual::VisualModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::VisualModel Class Reference . #include <VisualModel.h>; An interface which all VisualModel inherit. ; More... Inheritance diagram for sofa::core::visual::VisualModel:. [legend]; Detailed Description; An interface which all VisualModel inherit. ; This Interface is used for the VisualModel, which all visible objects must implement.; VisualModels are drawn by calling their draw method. The method update is used to recompute some internal data (such as normals) after the simulation has computed a new timestep.; Most VisualModel are bound by a Mapping to a BehaviorModel or MechanicalState. . Public Attributes; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html
Modifiability,inherit,inherit,"﻿. SOFA API: sofa::core::visual::VisualModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::VisualModel Class Reference . #include <VisualModel.h>; An interface which all VisualModel inherit. ; More... Inheritance diagram for sofa::core::visual::VisualModel:. [legend]; Detailed Description; An interface which all VisualModel inherit. ; This Interface is used for the VisualModel, which all visible objects must implement.; VisualModels are drawn by calling their draw method. The method update is used to recompute some internal data (such as normals) after the simulation has computed a new timestep.; Most VisualModel are bound by a Mapping to a BehaviorModel or MechanicalState. . Public Attributes; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html
Usability,clear,clearVisual,"re::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html
Deployability,update,update,"ualParamsinline; pass()sofa::core::visual::VisualParamsinline; Pass enum namesofa::core::visual::VisualParams; PERSPECTIVE_TYPE enum valuesofa::core::visual::VisualParams; readV(const S *state) constsofa::core::visual::VisualParamsinline; readX(const S *state) constsofa::core::visual::VisualParamsinline; sceneBBox()sofa::core::visual::VisualParamsinline; sceneBBox() constsofa::core::visual::VisualParamsinline; setExecMode(ExecMode v)sofa::core::ExecParamsinline; setModelViewMatrix(const double m[16])sofa::core::visual::VisualParamsinline; setProjectionMatrix(const double m[16])sofa::core::visual::VisualParamsinline; setSupported(unsigned int api, bool val=true)sofa::core::visual::VisualParamsinline; setThreadID(int v)sofa::core::ExecParamsinline; setV(ConstVecDerivId v)sofa::core::visual::VisualParamsinline; setV(ConstMultiVecDerivId v)sofa::core::visual::VisualParamsinline; setV(const StateSet &g, ConstVecDerivId v)sofa::core::visual::VisualParamsinline; setX(ConstVecCoordId v)sofa::core::visual::VisualParamsinline; setX(ConstMultiVecCoordId v)sofa::core::visual::VisualParamsinline; setX(const StateSet &g, ConstVecCoordId v)sofa::core::visual::VisualParamsinline; Shadow enum valuesofa::core::visual::VisualParams; Std enum valuesofa::core::visual::VisualParams; threadID() constsofa::core::ExecParamsinline; Transparent enum valuesofa::core::visual::VisualParams; update()sofa::core::ExecParams; v() constsofa::core::visual::VisualParamsinline; v()sofa::core::visual::VisualParamsinline; viewport() constsofa::core::visual::VisualParamsinline; viewport()sofa::core::visual::VisualParamsinline; Viewport typedefsofa::core::visual::VisualParams; VisualParams()sofa::core::visual::VisualParams; x() constsofa::core::visual::VisualParamsinline; x()sofa::core::visual::VisualParamsinline; zFar() constsofa::core::visual::VisualParamsinline; zFar()sofa::core::visual::VisualParamsinline; zNear() constsofa::core::visual::VisualParamsinline; zNear()sofa::core::visual::VisualParamsinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::VisualParams Member List . This is the complete list of members for sofa::core::visual::VisualParams, including all inherited members. CameraType enum namesofa::core::visual::VisualParams; cameraType() constsofa::core::visual::VisualParamsinline; cameraType()sofa::core::visual::VisualParamsinline; checkValidStorage() constsofa::core::ExecParams; defaultInstance()sofa::core::visual::VisualParamsstatic; displayFlags()sofa::core::visual::VisualParamsinline; displayFlags() constsofa::core::visual::VisualParamsinline; drawTool()sofa::core::visual::VisualParamsinline; drawTool() constsofa::core::visual::VisualParamsinline; EXEC_DEBUG enum valuesofa::core::ExecParams; EXEC_DEFAULT enum valuesofa::core::ExecParams; EXEC_GPU enum valuesofa::core::ExecParams; EXEC_GRAPH enum valuesofa::core::ExecParams; EXEC_NONE enum valuesofa::core::ExecParams; ExecMode enum namesofa::core::ExecParams; execMode() constsofa::core::ExecParamsinline; ExecParams()sofa::core::ExecParamsinline; getModelViewMatrix(double m[16]) constsofa::core::visual::VisualParamsinline; getProjectionMatrix(double m[16]) constsofa::core::visual::VisualParamsinline; isSupported(unsigned int api) constsofa::core::visual::VisualParamsinline; m_cameraTypesofa::core::visual::VisualParamsprotected; m_displayFlagssofa::core::visual::VisualParamsprotected; m_drawToolsofa::core::visual::VisualParamsmutableprotected; m_modelViewMatrixsofa::core::visual::VisualParamsprotected; m_passsofa::core::visual::VisualParamsprotected; m_projectionMatrixsofa::core::visual::VisualParamsprotected; m_sceneBoundingBoxsofa::core::visual::VisualParamsprotected; m_supportedAPIssofa::core::visual::VisualParamsprotected; m_vsofa::core::visual::VisualParamsprotected; m_viewportsofa::core::visual::VisualParamsprotected; m_xsofa::core::visual::VisualParamsprotected; m_zFarsofa::core::visual::VisualParamsprotected; m_zNearsofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params-members.html
Deployability,update,update,"VecCoordId & x ();  ; const ConstMultiVecDerivId & v () const;  ; ConstMultiVecDerivId & v ();  ; VisualParams & setX (ConstVecCoordId v);  Set the IDs of position vector. More...;  ; VisualParams & setX (ConstMultiVecCoordId v);  ; template<class StateSet > ; VisualParams & setX (const StateSet &g, ConstVecCoordId v);  ; VisualParams & setV (ConstVecDerivId v);  Set the IDs of velocity vector. More...;  ; VisualParams & setV (ConstMultiVecDerivId v);  ; template<class StateSet > ; VisualParams & setV (const StateSet &g, ConstVecDerivId v);  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static VisualParams * defaultInstance ();  Get the default VisualParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for method parameters. More...;  . Attribute details. ◆ m_cameraType. CameraType sofa::core::visual::VisualParams::m_cameraType. protected . ◆ m_displayFlags. DisplayFlags sofa::core::visual::VisualParams::m_displayFlags. protected . ◆ m_drawTool. helper::visual::DrawTool* sofa::core::visual::VisualParams::m_drawTool. mutableprotected . ◆ m_modelViewMatrix. SReal sofa::core::visual::VisualPara",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html
Modifiability,inherit,inherited,"st;  Read access to current position vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readV (const S *state) const;  Read access to current velocity vector. More...;  ; Setup methods; Called by the OdeSolver from which the mechanical computations originate. They all return a reference to this MechanicalParam instance, to ease chaining multiple setup calls. . const ConstMultiVecCoordId & x () const;  ; ConstMultiVecCoordId & x ();  ; const ConstMultiVecDerivId & v () const;  ; ConstMultiVecDerivId & v ();  ; VisualParams & setX (ConstVecCoordId v);  Set the IDs of position vector. More...;  ; VisualParams & setX (ConstMultiVecCoordId v);  ; template<class StateSet > ; VisualParams & setX (const StateSet &g, ConstVecCoordId v);  ; VisualParams & setV (ConstVecDerivId v);  Set the IDs of velocity vector. More...;  ; VisualParams & setV (ConstMultiVecDerivId v);  ; template<class StateSet > ; VisualParams & setV (const StateSet &g, ConstVecDerivId v);  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static VisualParams * defaultInstance ();  Get the default VisualParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default Exe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html
Security,access,access,"rix used to draw the scene. This OpenGL matrix defines the world coordinate system with respect to the camera. More...;  ; void getModelViewMatrix (double m[16]) const;  Get the ModelView matrix used to draw the scene. This OpenGL matrix defines the world coordinate system with respect to the camera. More...;  ; void setProjectionMatrix (const double m[16]);  Store the projection matrix used to draw the scene. This OpenGL matrix defines the camera coordinate system with respect to the viewport, including perspective if any. More...;  ; void getProjectionMatrix (double m[16]) const;  Get the projection matrix used to draw the scene. This OpenGL matrix defines the camera coordinate system with respect to the viewport, including perspective if any. More...;  ; bool isSupported (unsigned int api) const;  ; void setSupported (unsigned int api, bool val=true);  ; Access to vectors from a given state container (i.e. State or MechanicalState); template<class S > ; const Data< typename S::VecCoord > * readX (const S *state) const;  Read access to current position vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readV (const S *state) const;  Read access to current velocity vector. More...;  ; Setup methods; Called by the OdeSolver from which the mechanical computations originate. They all return a reference to this MechanicalParam instance, to ease chaining multiple setup calls. . const ConstMultiVecCoordId & x () const;  ; ConstMultiVecCoordId & x ();  ; const ConstMultiVecDerivId & v () const;  ; ConstMultiVecDerivId & v ();  ; VisualParams & setX (ConstVecCoordId v);  Set the IDs of position vector. More...;  ; VisualParams & setX (ConstMultiVecCoordId v);  ; template<class StateSet > ; VisualParams & setX (const StateSet &g, ConstVecCoordId v);  ; VisualParams & setV (ConstVecDerivId v);  Set the IDs of velocity vector. More...;  ; VisualParams & setV (ConstMultiVecDerivId v);  ; template<class StateSet > ; VisualParams & setV (const StateSet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html
Deployability,update,updateInternal,"tSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< DataTypes >; State< DataTypes >::SOFA_CLASS(SOFA_TEMPLATE(State, DataTypes), BaseState)sofa::core::State< DataTypes >; sofa::core::BaseState::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::visual::VisualState< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::visual::VisualState< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualState()sofa::core::visual::VisualState< DataTypes >; write(core::VecCoordId v) overridesofa::core::visual::VisualState< DataTypes >virtual; write(core::VecDerivId v) overridesofa::core::visual::VisualState< DataTypes >virtual; write(core::MatrixDerivId) overridesofa::core::visual::VisualState< DataTypes >inlinevirtual; WriteCoord typedefsofa::core::State< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; WriteDeriv ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::VisualState< DataTypes > Member List . This is the complete list of members for sofa::core::visual::VisualState< DataTypes >, including all inherited members. accumulatedForcessofa::core::State< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< DataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html
Performance,load,loader,"esofa::core::State< DataTypes >virtual; removeInNode(objectmodel::BaseNode *node) overridesofa::core::BaseStatevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resize(Size vsize) overridesofa::core::visual::VisualState< DataTypes >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< DataTypes >; State< DataTypes >::SOFA_CLASS(SOFA_TEMPLATE(State, DataTypes), BaseState)sofa::core::State< DataTypes >; sofa::core::BaseState::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::visual::VisualState< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html
Testability,log,logging," accumulatedForcessofa::core::State< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< DataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html
Usability,clear,clearLoggedMessages,"uts, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< DataTypes >virtual; Coord typedefsofa::core::State< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< DataTypes >; Deriv typedefsofa::core::State< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagsso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html
Integrability,message,messages,"utes; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types));  ;  VisualState ();  ; virtual void resize (Size vsize) override;  Resize all stored vector. More...;  ; virtual Size getSize () const override;  Current size of all stored vectors. More...;  ; virtual Data< VecCoord > * write (core::VecCoordId v) override;  ; virtual const Data< VecCoord > * read (core::ConstVecCoordId v) cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::visual::VisualState< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::visual::VisualState< DataTypes > Class Template Reference . #include <VisualState.h>. Inheritance diagram for sofa::core::visual::VisualState< DataTypes >:. [legend]. Public Attributes; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html
Performance,load,loader,"VecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html
Security,access,access,"iv > * read (core::ConstVecDerivId v) const override;  ; virtual Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html
Usability,simpl,simplified,"iv > * read (core::ConstVecDerivId v) const override;  ; virtual Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::BaseCollisionElementIterator Member List . This is the complete list of members for sofa::core::BaseCollisionElementIterator, including all inherited members. BaseCollisionElementIterator(Index index=0)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(Index index, VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; emptyVectorsofa::core::BaseCollisionElementIteratorprotectedstatic; getIndex() constsofa::core::BaseCollisionElementIteratorinline; getVIterator() constsofa::core::BaseCollisionElementIteratorinline; getVIteratorEnd() constsofa::core::BaseCollisionElementIteratorinline; Index typedefsofa::core::BaseCollisionElementIterator; indexsofa::core::BaseCollisionElementIteratorprotected; itsofa::core::BaseCollisionElementIteratorprotected; itendsofa::core::BaseCollisionElementIteratorprotected; next()sofa::core::BaseCollisionElementIteratorinline; operator+(int n) constsofa::core::BaseCollisionElementIteratorinline; operator++()sofa::core::BaseCollisionElementIteratorinline; operator++(int)sofa::core::BaseCollisionElementIteratorinline; operator+=(int n)sofa::core::BaseCollisionElementIteratorinline; VIterator typedefsofa::core::BaseCollisionElementIterator. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_collision_element_iterator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_collision_element_iterator-members.html
Deployability,update,updateInternal,"stanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMassesMapped(bool b)sofa::core::BaseMappingvirtual; setMatricesMapped(bool b)sofa::core::BaseMappingvirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNonMechanical()sofa::core::BaseMappingvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to)sofa::core::BaseMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappinginlinevirtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::BaseMapping Member List . This is the complete list of members for sofa::core::BaseMapping, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams=mechanicalparams::defaultInstance(), MultiVecCoordId outPos=VecCoordId::position(), ConstMultiVecCoordId inPos=ConstVecCoordId::position())=0sofa::core::BaseMappingpure virtual; applyDJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJ(const MechanicalParams *mparams=mechanicalparams::defaultInstance(), MultiVecDerivId outVel=VecDerivId::velocity(), ConstMultiVecDerivId inVel=ConstVecDerivId::velocity())=0sofa::core::BaseMappingpure virtual; applyJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJT(const ConstraintParams *mparams, MultiMatrixDerivId inConst,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html
Performance,load,loader,"stsofa::core::BaseMappinginlinevirtual; setConstraintsMapped(bool b)sofa::core::BaseMappingvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setForcesMapped(bool b)sofa::core::BaseMappingvirtual; setFrom(BaseState *from)sofa::core::BaseMappingvirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMassesMapped(bool b)sofa::core::BaseMappingvirtual; setMatricesMapped(bool b)sofa::core::BaseMappingvirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNonMechanical()sofa::core::BaseMappingvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to)sofa::core::BaseMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappinginlinevirtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams=mechanicalparams::defaultInstance(), MultiVecCoordId outPos=VecCoordId::position(), ConstMultiVecCoordId inPos=ConstVecCoordId::position())=0sofa::core::BaseMappingpure virtual; applyDJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJ(const MechanicalParams *mparams=mechanicalparams::defaultInstance(), MultiVecDerivId outVel=VecDerivId::velocity(), ConstMultiVecDerivId inVel=ConstVecDerivId::velocity())=0sofa::core::BaseMappingpure virtual; applyJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJT(const ConstraintParams *mparams, MultiMatrixDerivId inConst,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html
Usability,clear,clearLoggedMessages,"nstsofa::core::BaseMappingvirtual; areForcesMapped() constsofa::core::BaseMappingvirtual; areMassesMapped() constsofa::core::BaseMappingvirtual; areMatricesMapped() constsofa::core::BaseMappingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc)=0sofa::core::BaseMappingpure virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix)sofa::core::BaseMappingvirtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; disable()=0sofa::core::BaseMappingpure virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html
Availability,down,down,"﻿. SOFA API: sofa::core::BaseMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseMapping Class Referenceabstract . #include <BaseMapping.h>. Inheritance diagram for sofa::core::BaseMapping:. [legend]; Detailed Description; An interface to convert a model state to an other model state. The model states are positions and velocities or generalizations of these (class sofa::core::BaseState). The source is denoted using various names: from, input, master, parent… The target is denoted using various names: to, output, slave, child… The mapping must be located somewhere between the master and the slave, so that the visitors traverse it after the master and before the slave during the top-down traversals, and the other way round during the bottom-up traversals. It is typically located in the same graph node as the slave, with the master in the parent node, but this is not a must. Mappings typically store constant local coordinates of the output points, and update the output points by applying input displacements to the local coordinates. . Public Attributes; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html
Deployability,update,update," Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseMapping Class Referenceabstract . #include <BaseMapping.h>. Inheritance diagram for sofa::core::BaseMapping:. [legend]; Detailed Description; An interface to convert a model state to an other model state. The model states are positions and velocities or generalizations of these (class sofa::core::BaseState). The source is denoted using various names: from, input, master, parent… The target is denoted using various names: to, output, slave, child… The mapping must be located somewhere between the master and the slave, so that the visitors traverse it after the master and before the slave during the top-down traversals, and the other way round during the bottom-up traversals. It is typically located in the same graph node as the slave, with the master in the parent node, but this is not a must. Mappings typically store constant local coordinates of the output points, and update the output points by applying input displacements to the local coordinates. . Public Attributes; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::BaseMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseMapping Class Referenceabstract . #include <BaseMapping.h>. Inheritance diagram for sofa::core::BaseMapping:. [legend]; Detailed Description; An interface to convert a model state to an other model state. The model states are positions and velocities or generalizations of these (class sofa::core::BaseState). The source is denoted using various names: from, input, master, parent… The target is denoted using various names: to, output, slave, child… The mapping must be located somewhere between the master and the slave, so that the visitors traverse it after the master and before the slave during the top-down traversals, and the other way round during the bottom-up traversals. It is typically located in the same graph node as the slave, with the master in the parent node, but this is not a must. Mappings typically store constant local coordinates of the output points, and update the output points by applying input displacements to the local coordinates. . Public Attributes; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html
Modifiability,inherit,inherited,"e is denoted using various names: from, input, master, parent… The target is denoted using various names: to, output, slave, child… The mapping must be located somewhere between the master and the slave, so that the visitors traverse it after the master and before the slave during the top-down traversals, and the other way round during the bottom-up traversals. It is typically located in the same graph node as the slave, with the master in the parent node, but this is not a must. Mappings typically store constant local coordinates of the output points, and update the output points by applying input displacements to the local coordinates. . Public Attributes; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMapping, objectmodel::BaseObject);  ; vir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html
Performance,load,loader,"fa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html
Deployability,update,updateInternal,"ectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixAccumulatorComponent, objectmodel::BaseObject)sofa::core::BaseMatrixAccumulatorComponent< c >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMatrixAccumulatorComponent() override=defaultsofa::core::BaseMatrixAccumulatorComponent< c >; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::BaseMatrixAccumulatorComponent< c > Member List . This is the complete list of members for sofa::core::BaseMatrixAccumulatorComponent< c >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; associateObject(ComponentType *object)sofa::core::BaseMatrixAccumulatorComponent< c >inline; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixAccumulatorComponent()sofa::core::BaseMatrixAccumulatorComponent< c >inline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html
Performance,load,loader,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixAccumulatorComponent, objectmodel::BaseObject)sofa::core::BaseMatrixAccumulatorComponent< c >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; associateObject(ComponentType *object)sofa::core::BaseMatrixAccumulatorComponent< c >inline; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixAccumulatorComponent()sofa::core::BaseMatrixAccumulatorComponent< c >inline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html
Usability,clear,clearLoggedMessages,"ata * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; associateObject(ComponentType *object)sofa::core::BaseMatrixAccumulatorComponent< c >inline; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixAccumulatorComponent()sofa::core::BaseMatrixAccumulatorComponent< c >inline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ComponentType typedefsofa::core::BaseMatrixAccumulatorComponent< c >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html
Availability,down,down,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html
Integrability,message,messages," of all members . sofa::core::BaseMatrixAccumulatorComponent< c > Class Template Reference . #include <BaseMatrixAccumulatorComponent.h>. Inheritance diagram for sofa::core::BaseMatrixAccumulatorComponent< c >:. [legend]; Detailed Description; template<matrixaccumulator::Contribution c>; class sofa::core::BaseMatrixAccumulatorComponent< c >; Matrix accumulator which is also a BaseObject. It is designed to be associated with another component. . Public Attributes; SingleLink< MyType, ComponentType, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_associatedComponent;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMatrixAccumulatorComponent, objectmodel::BaseObject);  ;  ~BaseMatrixAccumulatorComponent () override=default;  ;  BaseMatrixAccumulatorComponent ();  ; void associateObject (ComponentType *object);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render inte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::BaseMatrixAccumulatorComponent< c > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::BaseMatrixAccumulatorComponent< c > Class Template Reference . #include <BaseMatrixAccumulatorComponent.h>. Inheritance diagram for sofa::core::BaseMatrixAccumulatorComponent< c >:. [legend]; Detailed Description; template<matrixaccumulator::Contribution c>; class sofa::core::BaseMatrixAccumulatorComponent< c >; Matrix accumulator which is also a BaseObject. It is designed to be associated with another component. . Public Attributes; SingleLink< MyType, ComponentType, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_associatedComponent;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMatrixAccumulatorComponent, objectmodel::BaseObject);  ;  ~BaseMatrixAccumulatorComponent () override=default;  ;  BaseMatrixAccumulatorComponent ();  ; void associateObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html
Performance,load,loader,"nSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMatrixAccumulatorComponent, objectmodel::BaseObject);  ;  ~BaseMatrixAccumulatorComponent () override=default;  ;  BaseMatrixAccumulatorComponent ();  ; void associateObject (ComponentType *object);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html
Deployability,update,updateInternal,"seObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resize(Size vsize)=0sofa::core::BaseStatepure virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseState() overridesofa::core::BaseStateinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::BaseState Member List . This is the complete list of members for sofa::core::BaseState, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId)sofa::core::BaseStatevirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTrack",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html
Performance,load,loader,"rces(core::ConstVecDerivId forceId)sofa::core::BaseStatevirtual; removeInNode(objectmodel::BaseNode *node) overridesofa::core::BaseStatevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resize(Size vsize)=0sofa::core::BaseStatepure virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId)sofa::core::BaseStatevirtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTrack",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html
Usability,clear,clearLoggedMessages,"ist< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::BaseState Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseState Class Referenceabstract . #include <BaseState.h>; Component storing position and velocity vectors. ; More... Inheritance diagram for sofa::core::BaseState:. [legend]; Detailed Description; Component storing position and velocity vectors. ; This class define the interface of components used as source and destination of regular (non mechanical) mapping. It is then specialized as MechanicalState (storing other mechanical data) or MappedModel (if no mechanical data is used, such as for VisualModel). . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addToTotalForces (core::ConstVecDerivId forceId);  ; virtual void removeFromTotalForces (core::ConstVecDerivId forceId);  ; BaseData vectors access API based on VecId; virtual objectmodel::BaseData * baseWrite (VecId v)=0;  ; virtual const objectmodel::BaseData * baseRead (ConstVecId v) const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html
Modifiability,inherit,inherited,"nd velocity vectors. ; More... Inheritance diagram for sofa::core::BaseState:. [legend]; Detailed Description; Component storing position and velocity vectors. ; This class define the interface of components used as source and destination of regular (non mechanical) mapping. It is then specialized as MechanicalState (storing other mechanical data) or MappedModel (if no mechanical data is used, such as for VisualModel). . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addToTotalForces (core::ConstVecDerivId forceId);  ; virtual void removeFromTotalForces (core::ConstVecDerivId forceId);  ; BaseData vectors access API based on VecId; virtual objectmodel::BaseData * baseWrite (VecId v)=0;  ; virtual const objectmodel::BaseData * baseRead (ConstVecId v) const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html
Performance,load,loader,"removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addToTotalForces (core::ConstVecDerivId forceId);  ; virtual void removeFromTotalForces (core::ConstVecDerivId forceId);  ; BaseData vectors access API based on VecId; virtual objectmodel::BaseData * baseWrite (VecId v)=0;  ; virtual const objectmodel::BaseData * baseRead (ConstVecId v) const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html
Security,access,access,"nd velocity vectors. ; More... Inheritance diagram for sofa::core::BaseState:. [legend]; Detailed Description; Component storing position and velocity vectors. ; This class define the interface of components used as source and destination of regular (non mechanical) mapping. It is then specialized as MechanicalState (storing other mechanical data) or MappedModel (if no mechanical data is used, such as for VisualModel). . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addToTotalForces (core::ConstVecDerivId forceId);  ; virtual void removeFromTotalForces (core::ConstVecDerivId forceId);  ; BaseData vectors access API based on VecId; virtual objectmodel::BaseData * baseWrite (VecId v)=0;  ; virtual const objectmodel::BaseData * baseRead (ConstVecId v) const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::BaseVecId Member List . This is the complete list of members for sofa::core::BaseVecId, including all inherited members. BaseVecId(VecType t, unsigned int i)sofa::core::BaseVecIdinlineprotected; getIndex() constsofa::core::BaseVecIdinline; getType() constsofa::core::BaseVecIdinline; indexsofa::core::BaseVecId; typesofa::core::BaseVecId. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_vec_id-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_vec_id-members.html
Energy Efficiency,efficient,efficient,"﻿. SOFA API: sofa::core::BaseVecId Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseVecId Class Reference . #include <VecId.h>. Inheritance diagram for sofa::core::BaseVecId:. [legend]; Detailed Description; This is a base class for TVecId that contains all the data stored.; NoteTVecId itself stores no data, in order to be able to convert between templates inplace with reinterpret_cast for performance reasons (typically when working with TMultiVecId instances, which would otherwise copy maps of TVecId). This is (a little) less efficient for non V_ALL versions, but is without comparison with the loss of performance with the typical operation of passing a stored ""TMultiVecId<!V_ALL,V_WRITE>"" to a method taking a ""const TMultiVecId<V_ALL,V_READ>&"". . Public Attributes; VecType type;  ; unsigned int index;  . Public Member Functions; VecType getType () const;  ; unsigned int getIndex () const;  . Protected Member Functions;  BaseVecId (VecType t, unsigned int i);  . Attribute details. ◆ index. unsigned int sofa::core::BaseVecId::index. ◆ type. VecType sofa::core::BaseVecId::type. Constructor details. ◆ BaseVecId(). sofa::core::BaseVecId::BaseVecId ; (; VecType ; t, . unsigned int ; i . ). inlineprotected . Function details. ◆ getIndex(). unsigned int sofa::core::BaseVecId::getIndex ; (; ); const. inline . ◆ getType(). VecType sofa::core::BaseVecId::getType ; (; ); const. inline . sofacoreBaseVecId; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_vec_id.html
Performance,perform,performance,"﻿. SOFA API: sofa::core::BaseVecId Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseVecId Class Reference . #include <VecId.h>. Inheritance diagram for sofa::core::BaseVecId:. [legend]; Detailed Description; This is a base class for TVecId that contains all the data stored.; NoteTVecId itself stores no data, in order to be able to convert between templates inplace with reinterpret_cast for performance reasons (typically when working with TMultiVecId instances, which would otherwise copy maps of TVecId). This is (a little) less efficient for non V_ALL versions, but is without comparison with the loss of performance with the typical operation of passing a stored ""TMultiVecId<!V_ALL,V_WRITE>"" to a method taking a ""const TMultiVecId<V_ALL,V_READ>&"". . Public Attributes; VecType type;  ; unsigned int index;  . Public Member Functions; VecType getType () const;  ; unsigned int getIndex () const;  . Protected Member Functions;  BaseVecId (VecType t, unsigned int i);  . Attribute details. ◆ index. unsigned int sofa::core::BaseVecId::index. ◆ type. VecType sofa::core::BaseVecId::type. Constructor details. ◆ BaseVecId(). sofa::core::BaseVecId::BaseVecId ; (; VecType ; t, . unsigned int ; i . ). inlineprotected . Function details. ◆ getIndex(). unsigned int sofa::core::BaseVecId::getIndex ; (; ); const. inline . ◆ getType(). VecType sofa::core::BaseVecId::getType ; (; ); const. inline . sofacoreBaseVecId; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_base_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_vec_id.html
Deployability,update,updateInternal,"e::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BehaviorModel, objectmodel::BaseObject)sofa::core::BehaviorModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePosition(SReal dt)=0sofa::core::BehaviorModelpure virtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BehaviorModel() overridesofa::core::BehaviorModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::BehaviorModel Member List . This is the complete list of members for sofa::core::BehaviorModel, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMes",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html
Performance,load,loader,"el::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::BehaviorModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BehaviorModel, objectmodel::BaseObject)sofa::core::BehaviorModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePosition(SReal dt)=0sofa::core::BehaviorModelpure virtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMes",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html
Usability,clear,clearLoggedMessages,"irtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html
Deployability,update,updatePosition,"﻿. SOFA API: sofa::core::BehaviorModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BehaviorModel Class Referenceabstract . #include <BehaviorModel.h>; Abstract Interface of components defining the behavior of a simulated object. ; More... Inheritance diagram for sofa::core::BehaviorModel:. [legend]; Detailed Description; Abstract Interface of components defining the behavior of a simulated object. ; This Interface is used by ""black-box"" objects (such as some fluid algorithms) that are present in a SOFA simulation but which do not use the internal behavior components (MechanicalState, ForceField, etc) defined in the sofa::core::behavior namespace.; A BehaviorModel simply has to implement the updatePosition method to compute a new simulation step. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual void updatePosition (SReal dt)=0;  Computation of a new simulation step. More...;  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html
Integrability,depend,dependent,"s some fluid algorithms) that are present in a SOFA simulation but which do not use the internal behavior components (MechanicalState, ForceField, etc) defined in the sofa::core::behavior namespace.; A BehaviorModel simply has to implement the updatePosition method to compute a new simulation step. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual void updatePosition (SReal dt)=0;  Computation of a new simulation step. More...;  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html
Modifiability,inherit,inherited,"viorModel.h>; Abstract Interface of components defining the behavior of a simulated object. ; More... Inheritance diagram for sofa::core::BehaviorModel:. [legend]; Detailed Description; Abstract Interface of components defining the behavior of a simulated object. ; This Interface is used by ""black-box"" objects (such as some fluid algorithms) that are present in a SOFA simulation but which do not use the internal behavior components (MechanicalState, ForceField, etc) defined in the sofa::core::behavior namespace.; A BehaviorModel simply has to implement the updatePosition method to compute a new simulation step. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual void updatePosition (SReal dt)=0;  Computation of a new simulation step. More...;  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html
Performance,load,loader," simulation step. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual void updatePosition (SReal dt)=0;  Computation of a new simulation step. More...;  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html
Usability,simpl,simply,"﻿. SOFA API: sofa::core::BehaviorModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BehaviorModel Class Referenceabstract . #include <BehaviorModel.h>; Abstract Interface of components defining the behavior of a simulated object. ; More... Inheritance diagram for sofa::core::BehaviorModel:. [legend]; Detailed Description; Abstract Interface of components defining the behavior of a simulated object. ; This Interface is used by ""black-box"" objects (such as some fluid algorithms) that are present in a SOFA simulation but which do not use the internal behavior components (MechanicalState, ForceField, etc) defined in the sofa::core::behavior namespace.; A BehaviorModel simply has to implement the updatePosition method to compute a new simulation step. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual void updatePosition (SReal dt)=0;  Computation of a new simulation step. More...;  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::CategoryLibrary Member List . This is the complete list of members for sofa::core::CategoryLibrary, including all inherited members. addComponent(const std::string &componentName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles)sofa::core::CategoryLibraryvirtual; CategoryLibrary(const std::string &categoryName)sofa::core::CategoryLibrary; componentssofa::core::CategoryLibraryprotected; createComponent(const std::string &componentName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles)sofa::core::CategoryLibraryinlineprotectedvirtual; endConstruction()sofa::core::CategoryLibraryvirtual; getCategories(const sofa::core::objectmodel::BaseClass *mclass, std::vector< std::string > &outputVector)sofa::core::CategoryLibrarystatic; getCategories()sofa::core::CategoryLibrarystatic; getComponent(const std::string &componentName) constsofa::core::CategoryLibrary; getComponents() constsofa::core::CategoryLibraryinline; getName() constsofa::core::CategoryLibraryinline; getNumComponents() constsofa::core::CategoryLibraryinline; namesofa::core::CategoryLibraryprotected; VecComponent typedefsofa::core::CategoryLibrary; VecComponentIterator typedefsofa::core::CategoryLibrary; ~CategoryLibrary()sofa::core::CategoryLibraryinlinevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_category_library-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_category_library-members.html
Availability,avail,available,"﻿. SOFA API: sofa::core::CategoryLibrary Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::CategoryLibrary Class Reference . #include <CategoryLibrary.h>; An Generic Category of the Sofa Library. ; More...; Detailed Description; An Generic Category of the Sofa Library. ; It contains all the components available for Sofa corresponding to a given category (force field, mass, mapping...) This Interface is used for the Modeler mainly. . Protected Attributes; std::string name;  ; VecComponent components;  . Public Member Functions;  CategoryLibrary (const std::string &categoryName);  ; virtual ~CategoryLibrary ();  ; virtual ComponentLibrary * addComponent (const std::string &componentName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles);  ; virtual void endConstruction ();  ; const std::string & getName () const;  ; const VecComponent & getComponents () const;  ; const ComponentLibrary * getComponent (const std::string &componentName) const;  ; size_t getNumComponents () const;  . Static Public Member Functions; static void getCategories (const sofa::core::objectmodel::BaseClass *mclass, std::vector< std::string > &outputVector);  Get the list of categories a class belongs to, based on its parent classes. More...;  ; static std::vector< std::string > getCategories ();  . Protected Member Functions; virtual ComponentLibrary * createComponent (const std::string &componentName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles);  . Attribute details. ◆ components. VecComponent sofa::core::CategoryLibrary::components. protected . ◆ name. std::string sofa::core::CategoryLibrary::name. protected . Constructor details. ◆ CategoryLibrary(). sofa::core::CategoryLibrary::CategoryLibrary ; (; const std::string & ; categoryName). ◆ ~CategoryLibrary(). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_category_library.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_category_library.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::CollisionElementActiver Member List . This is the complete list of members for sofa::core::CollisionElementActiver, including all inherited members. CollisionElementActiver()sofa::core::CollisionElementActiverinline; getDefaultActiver()sofa::core::CollisionElementActiverinlinestatic; isCollElemActive(sofa::Index, core::CollisionModel *=nullptr)sofa::core::CollisionElementActiverinlinevirtual; ~CollisionElementActiver()sofa::core::CollisionElementActiverinlinevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_element_activer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_element_activer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::CollisionElementIterator Member List . This is the complete list of members for sofa::core::CollisionElementIterator, including all inherited members. BaseCollisionElementIterator(Index index=0)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(Index index, VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; canCollideWith(const TCollisionElementIterator< Model > &elem) constsofa::core::TCollisionElementIterator< CollisionModel >inline; CollisionElementIterator(CollisionModel *model=nullptr, Index index=0)sofa::core::CollisionElementIteratorinline; CollisionElementIterator(CollisionModel *model, VIterator it, VIterator itend)sofa::core::CollisionElementIteratorinline; CollisionElementIterator(CollisionModel *model, Index index, VIterator it, VIterator itend)sofa::core::CollisionElementIteratorinline; CollisionElementIterator(const TCollisionElementIterator< DerivedModel > &i)sofa::core::CollisionElementIteratorinline; draw(const core::visual::VisualParams *vparams)sofa::core::TCollisionElementIterator< CollisionModel >inline; emptyVectorsofa::core::BaseCollisionElementIteratorprotectedstatic; getCollisionModel() constsofa::core::TCollisionElementIterator< CollisionModel >inline; getContactFriction() constsofa::core::TCollisionElementIterator< CollisionModel >inline; getContactStiffness() constsofa::core::TCollisionElementIterator< CollisionModel >inline; getExternalChildren() constsofa::core::TCollisionElementIterator< CollisionModel >; getIndex() constsofa::core::BaseCollisionElementIteratorinline; getInternalChildren() constsofa::core::TCollisionElementIterator< CollisionModel >; getProximity() constsofa::core::TCollisionElementIterator< CollisionModel >inline; getVIterator() constsofa::core::BaseCo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator-members.html
Modifiability,inherit,inherited,"tor (CollisionModel *model=nullptr, Index index=0);  ;  CollisionElementIterator (CollisionModel *model, VIterator it, VIterator itend);  ;  CollisionElementIterator (CollisionModel *model, Index index, VIterator it, VIterator itend);  ; template<class DerivedModel > ;  CollisionElementIterator (const TCollisionElementIterator< DerivedModel > &i);  Automatic conversion from a reference to an element in a derived model. More...;  ; template<class DerivedModel > ; void operator= (const TCollisionElementIterator< DerivedModel > &i);  Automatic conversion from a reference to an element in a derived model. More...;  ;  Public Member Functions inherited from sofa::core::TCollisionElementIterator< CollisionModel >;  TCollisionElementIterator (Model *model=nullptr, Index index=0);  ;  TCollisionElementIterator (Model *model, Index index, VIterator it, VIterator itend);  ;  TCollisionElementIterator (Model *model, VIterator it, VIterator itend);  ; bool isActive (core::CollisionModel *cm=nullptr) const;  ; bool operator== (const TCollisionElementIterator< Model2 > &i) const;  ; bool operator!= (const TCollisionElementIterator< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Contact friction (damping) coefficient. More...;  ; void draw (const core::visual::VisualParams *vparams);  ;  Public ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator.html
Security,access,access,"﻿. SOFA API: sofa::core::CollisionElementIterator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::CollisionElementIterator Class Reference . #include <CollisionElement.h>; Reference to an abstract collision element. ; More... Inheritance diagram for sofa::core::CollisionElementIterator:. [legend]; Detailed Description; Reference to an abstract collision element. ; You can think of a CollisionElementIterator as a glorified pointer to a collision element. It is only there to create a reference to it, not to actual contain its data. Classes derived from TCollisionElementIterator does not store any data, but just provide methods allowing to access the additional data stored inside the derived CollisionModel. For instance, the Cube class adds the minVect() / maxVect() methods to retrieve the corners of the cube, however this data is not stored inside Cube, instead it is stored inside the CubeData class within CubeModel. . Public Member Functions;  CollisionElementIterator (CollisionModel *model=nullptr, Index index=0);  ;  CollisionElementIterator (CollisionModel *model, VIterator it, VIterator itend);  ;  CollisionElementIterator (CollisionModel *model, Index index, VIterator it, VIterator itend);  ; template<class DerivedModel > ;  CollisionElementIterator (const TCollisionElementIterator< DerivedModel > &i);  Automatic conversion from a reference to an element in a derived model. More...;  ; template<class DerivedModel > ; void operator= (const TCollisionElementIterator< DerivedModel > &i);  Automatic conversion from a reference to an element in a derived model. More...;  ;  Public Member Functions inherited from sofa::core::TCollisionElementIterator< CollisionModel >;  TCollisionElementIterator (Model *model=nullptr, Index index=0);  ;  TCollisionElementIterator (Model *model, Index index, VIterator it, VIterator itend);  ;  TCollisionElementIterator (Model *model, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator.html
Deployability,update,updateInternal,"setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::CollisionModel Member List . This is the complete list of members for sofa::core::CollisionModel, including all inherited members. AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html
Performance,load,loader,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroups(const std::set< int > &ids)sofa::core::CollisionModelinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoving(bool val=true)sofa::core::CollisionModelinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNumberOfContacts(Size i)sofa::core::CollisionModelinline; setPrevious(CollisionModel::SPtr val)sofa::core::CollisionModel; setProximity(const SReal a)sofa::core::CollisionModelinline; setSelfCollision(bool _bSelfCollision)sofa::core::CollisionModelinline; setSimulated(bool val=true)sofa::core::CollisionModelinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; Size typedefsofa::core::CollisionModel; sizesofa::core::CollisionModelprotected; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html
Testability,log,logging," AABB_TYPE enum valuesofa::core::CollisionModel; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addGroup(const int groupId)sofa::core::CollisionModelinline; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; bActivesofa::core::CollisionModelprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html
Usability,clear,clearLoggedMessages,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0)=0sofa::core::CollisionModelpure virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html
Availability,avail,available,"CollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each other. More...;  ; virtual void draw (const core::visual::VisualParams *, Index);  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *) override;  Render the whole collision model. More...;  ; CollisionModel * getFirst ();  Return the first (i.e. root) CollisionModel in the hierarchy. More...;  ; CollisionModel * getLast ();  Return the last (i.e. leaf) CollisionModel in the hierarchy. More...;  ; template<class DerivedModel > ; DerivedModel * createPrevious ();  Helper method to get or create the previous model in the hierarchy. More...;  ; virtual sofa::core::topology::BaseMeshTopology * getCollisionTopology ();  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ; const float * getColor4f ();  Get a color that can be used to display this CollisionModel. More...;  ; void setColor4f (const float *c);  Set a color that can be used to display this CollisionModel. More...;  ; void setProximity (const SReal a);  Set of differents parameters. More...;  ; void setContactResponse (const std::string &a);  ; int getEnumType () const;  ; void SetUserData (void *pUserData);  Set user data. More...;  ; void * GetUserData ();  Get user data. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Experimental methods; SReal getProximity () const;  Get distance to the actual (visual) surface. More...;  ; SReal getContactStiffness (Index) const;  Get contact stiffness. More...;  ; void setContactStiffness (SReal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFrict",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html
Deployability,update,update,"archy. More...;  ; void setPrevious (CollisionModel::SPtr val);  Set the previous (coarser / upper / parent level) CollisionModel in the hierarchy. More...;  ; virtual bool isActive () const;  Return true if this CollisionModel should be used for collisions. More...;  ; virtual void setActive (bool val=true);  Set true if this CollisionModel should be used for collisions. More...;  ; virtual bool isMoving () const;  Return true if this CollisionModel is changing position between iterations. More...;  ; virtual void setMoving (bool val=true);  Set true if this CollisionModel is changing position between iterations. More...;  ; virtual bool isSimulated () const;  Return true if this CollisionModel is attached to a simulation. It is false for immobile or procedurally animated objects that don't use contact forces. More...;  ; virtual void setSimulated (bool val=true);  Set true if this CollisionModel is attached to a simulation. More...;  ; virtual void computeBoundingTree (int maxDepth=0)=0;  Create or update the bounding volume hierarchy. More...;  ; virtual void computeContinuousBoundingTree (SReal, int maxDepth=0);  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren (Index) const;  Return the list (as a pair of iterators) of internal children of an element. More...;  ; virtual std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren (Index) const;  Return the list (as a pair of iterators) of external children of an element. More...;  ; virtual bool isLeaf (Index) const;  Checks if the element(index) is a leaf and a primitive of the collision model. More...;  ; virtual bool canCollideWith (CollisionModel *model);  Test if this model can collide with another model. More...;  ; virtual bool canCollideWithElement (Index, CollisionModel *, Index);  Test if two elements can collide with each othe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::CollisionModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::CollisionModel Class Referenceabstract . #include <CollisionModel.h>; Abstract CollisionModel interface. ; More... Inheritance diagram for sofa::core::CollisionModel:. [legend]; Detailed Description; Abstract CollisionModel interface. ; A CollisionModel contains a list of same-type elements. It can be part of a list of CollisionModels, each describing a level in a bounding-volume hierarchy.; Each CollisionModel stores a pointer to the next model in the hierarchy (i.e. finer / lower / child level) as well as the previous model (i.e. coarser / upper / parent level). The first CollisionModel in this list is the root of the hierarchy and contains only one element. The last CollisionModel contains the leaves of the hierarchy which are the real elements of the object.; Each element inside CollisionModels except for the last one can have a list of children. There are 2 types of child elements: ; internal children: child elements of the same type as their parent (often corresponding to non-final elements) ; external children: child elements of a different type (often corresponding to the final elements) . Public Attributes; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html
Modifiability,inherit,inherited,"evel in a bounding-volume hierarchy.; Each CollisionModel stores a pointer to the next model in the hierarchy (i.e. finer / lower / child level) as well as the previous model (i.e. coarser / upper / parent level). The first CollisionModel in this list is the root of the hierarchy and contains only one element. The last CollisionModel contains the leaves of the hierarchy which are the real elements of the object.; Each element inside CollisionModels except for the last one can have a list of children. There are 2 types of child elements: ; internal children: child elements of the same type as their parent (often corresponding to non-final elements) ; external children: child elements of a different type (often corresponding to the final elements) . Public Attributes; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if thi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html
Performance,load,loader,"tact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html
Safety,detect,detections,"(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ bActive. Data<bool> sofa::core::CollisionModel::bActive. protected . flag indicating if this collision model is active and should be included in default collision detections . ◆ bMoving. Data<bool> sofa::core::CollisionModel::bMoving. protected . flag indicating if this object is changing position between iterations . ◆ bSelfCollision. Data<bool> sofa::core::CollisionModel::bSelfCollision. protected . flag indication if the object can self collide . ◆ bSimulated. Data<bool> sofa::core::CollisionModel::bSimulated. protected . flag indicating if this object is controlled by a simulation . ◆ color. Data<sofa::type::RGBAColor> sofa::core::CollisionModel::color. protected . color used to display the collision model if requested . ◆ contactFriction. Data<SReal> sofa::core::CollisionModel::contactFriction. protected . Default contact friction (damping) coefficient. . ◆ contactResponse. Data<std::string> sofa::core::CollisionModel::contactResponse. protected . If non-empty, indicate to the ContactManager that this model should use the given class of contacts. Note that this is only indicative, and in particular i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ComponentLibrary Member List . This is the complete list of members for sofa::core::ComponentLibrary, including all inherited members. addTemplate(const std::string &templateName)sofa::core::ComponentLibraryvirtual; categoryNamesofa::core::ComponentLibraryprotected; ComponentLibrary(const std::string &componentName, const std::string &categoryName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles)sofa::core::ComponentLibrary; descriptionsofa::core::ComponentLibraryprotected; endConstruction()sofa::core::ComponentLibraryvirtual; entrysofa::core::ComponentLibraryprotected; getCategory() constsofa::core::ComponentLibraryinline; getDescription() constsofa::core::ComponentLibraryinline; getEntry() constsofa::core::ComponentLibraryinline; getName() constsofa::core::ComponentLibraryinline; getTemplates() constsofa::core::ComponentLibraryinline; namesofa::core::ComponentLibraryprotected; setDisplayed(bool)sofa::core::ComponentLibraryinlinevirtual; templateNamesofa::core::ComponentLibraryprotected; ~ComponentLibrary()sofa::core::ComponentLibraryinlinevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_component_library-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_component_library-members.html
Availability,avail,available,"﻿. SOFA API: sofa::core::ComponentLibrary Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::ComponentLibrary Class Reference . #include <ComponentLibrary.h>; An Generic Component of the Sofa Library. ; More...; Detailed Description; An Generic Component of the Sofa Library. ; It contains all the information related to a Sofa component: its name, the templates available, a description of it, its creator, ... This Interface is used for the Modeler mainly. . Protected Attributes; std::string name;  ; std::vector< std::string > templateName;  ; std::string description;  ; std::string categoryName;  ; ClassEntry::SPtr entry;  . Public Member Functions;  ComponentLibrary (const std::string &componentName, const std::string &categoryName, ClassEntry::SPtr entry, const std::vector< std::string > &exampleFiles);  ; virtual ~ComponentLibrary ();  ; virtual void addTemplate (const std::string &templateName);  ; virtual void endConstruction ();  ; virtual void setDisplayed (bool);  ; const std::string & getName () const;  ; const std::string & getDescription () const;  ; const std::string & getCategory () const;  ; const std::vector< std::string > & getTemplates () const;  ; const ClassEntry::SPtr getEntry () const;  . Attribute details. ◆ categoryName. std::string sofa::core::ComponentLibrary::categoryName. protected . ◆ description. std::string sofa::core::ComponentLibrary::description. protected . ◆ entry. ClassEntry::SPtr sofa::core::ComponentLibrary::entry. protected . ◆ name. std::string sofa::core::ComponentLibrary::name. protected . ◆ templateName. std::vector< std::string > sofa::core::ComponentLibrary::templateName. protected . Constructor details. ◆ ComponentLibrary(). sofa::core::ComponentLibrary::ComponentLibrary ; (; const std::string & ; componentName, . const std::string & ; categoryName, . ClassEntry::SPtr ; entry, . const std::vector< st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_component_library.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_component_library.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ComponentNameHelper Member List . This is the complete list of members for sofa::core::ComponentNameHelper, including all inherited members. Convention enum namesofa::core::ComponentNameHelper; resolveName(const std::string &type, const std::string &name, Convention convention)sofa::core::ComponentNameHelper; resolveName(const std::string &type, Convention convention)sofa::core::ComponentNameHelper. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_component_name_helper-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_component_name_helper-members.html
Availability,avail,available,"﻿. SOFA API: sofa::core::ComponentNameHelper Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::ComponentNameHelper Class Reference . #include <ComponentNameHelper.h>; Detailed Description; Helper class to name a component based on its type.; Two conventions are available for legacy reasons:; XML: use a counter to add a unique suffix at the end of the name; Python: the short name of the type is returned . Public Member Functions; std::string resolveName (const std::string &type, const std::string &name, Convention convention);  ; std::string resolveName (const std::string &type, Convention convention);  . Function details. ◆ resolveName() [1/2]. std::string sofa::core::ComponentNameHelper::resolveName ; (; const std::string & ; type, . const std::string & ; name, . Convention ; convention . ). ◆ resolveName() [2/2]. std::string sofa::core::ComponentNameHelper::resolveName ; (; const std::string & ; type, . Convention ; convention . ). Enum details. ◆ Convention. enum sofa::core::ComponentNameHelper::Convention : char. strong . Enumeratorxml ; python . sofacoreComponentNameHelper; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_component_name_helper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_component_name_helper.html
Deployability,update,update," setDx(VecDerivId dx)sofa::core::ConstraintParamsinline; setDx(MultiVecDerivId dx)sofa::core::ConstraintParamsinline; setDx(const StateSet &g, MultiVecDerivId dx)sofa::core::ConstraintParamsinline; setExecMode(ExecMode v)sofa::core::ExecParamsinline; setExecParams(const core::ExecParams *params)sofa::core::ConstraintParams; setJ(MatrixDerivId j)sofa::core::ConstraintParamsinline; setJ(MultiMatrixDerivId j)sofa::core::ConstraintParamsinline; setJ(const StateSet &g, MatrixDerivId j)sofa::core::ConstraintParamsinline; setLambda(VecDerivId lambda)sofa::core::ConstraintParamsinline; setLambda(MultiVecDerivId lambda)sofa::core::ConstraintParamsinline; setLambda(const StateSet &g, MultiVecDerivId lambda)sofa::core::ConstraintParamsinline; setOrder(ConstraintOrder o)sofa::core::ConstraintParamsinline; setSmoothFactor(double v)sofa::core::ConstraintParamsinline; setThreadID(int v)sofa::core::ExecParamsinline; setV(ConstVecDerivId v)sofa::core::ConstraintParamsinline; setV(ConstMultiVecDerivId v)sofa::core::ConstraintParamsinline; setV(const StateSet &g, ConstVecDerivId v)sofa::core::ConstraintParamsinline; setX(ConstVecCoordId v)sofa::core::ConstraintParamsinline; setX(ConstMultiVecCoordId v)sofa::core::ConstraintParamsinline; setX(const StateSet &g, ConstVecCoordId v)sofa::core::ConstraintParamsinline; smoothFactor() constsofa::core::ConstraintParamsinline; SOFA_ATTRIBUTE_DISABLED__CONSTORDER() static const expr auto POSsofa::core::ConstraintParams; SOFA_ATTRIBUTE_DISABLED__CONSTORDER() static const expr auto VELsofa::core::ConstraintParams; SOFA_ATTRIBUTE_DISABLED__CONSTORDER() static const expr auto ACCsofa::core::ConstraintParams; SOFA_ATTRIBUTE_DISABLED__CONSTORDER() static const expr auto POS_AND_VELsofa::core::ConstraintParams; threadID() constsofa::core::ExecParamsinline; update()sofa::core::ExecParams; v() constsofa::core::ConstraintParamsinline; v()sofa::core::ConstraintParamsinline; x() constsofa::core::ConstraintParamsinline; x()sofa::core::ConstraintParamsinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ConstraintParams Member List . This is the complete list of members for sofa::core::ConstraintParams, including all inherited members. checkValidStorage() constsofa::core::ExecParams; constOrder() constsofa::core::ConstraintParamsinline; ConstraintParams(const sofa::core::ExecParams &p= *sofa::core::execparams::defaultInstance())sofa::core::ConstraintParams; defaultInstance()sofa::core::ConstraintParamsstatic; dx() constsofa::core::ConstraintParamsinline; dx()sofa::core::ConstraintParamsinline; EXEC_DEBUG enum valuesofa::core::ExecParams; EXEC_DEFAULT enum valuesofa::core::ExecParams; EXEC_GPU enum valuesofa::core::ExecParams; EXEC_GRAPH enum valuesofa::core::ExecParams; EXEC_NONE enum valuesofa::core::ExecParams; execMode() constsofa::core::ExecParamsinline; ExecMode enum namesofa::core::ExecParams; ExecParams()sofa::core::ExecParamsinline; getName() constsofa::core::ConstraintParamsinline; j() constsofa::core::ConstraintParamsinline; j()sofa::core::ConstraintParamsinline; lambda() constsofa::core::ConstraintParamsinline; lambda()sofa::core::ConstraintParamsinline; m_constOrdersofa::core::ConstraintParamsprotected; m_dxsofa::core::ConstraintParamsprotected; m_jsofa::core::ConstraintParamsprotected; m_lambdasofa::core::ConstraintParamsprotected; m_smoothFactorsofa::core::ConstraintParamsprotected; m_vsofa::core::ConstraintParamsprotected; m_xsofa::core::ConstraintParamsprotected; nbThreads() constsofa::core::ExecParamsinline; readDx(S *state) constsofa::core::ConstraintParamsinline; readJ(const S *state) constsofa::core::ConstraintParamsinline; readLambda(S *state) constsofa::core::ConstraintParamsinline; readV(const S *state) constsofa::core::ConstraintParamsinline; readX(const S *state) constsofa::core::ConstraintParamsinline; setDx(VecDerivId dx)sofa::core::ConstraintParamsinline; setDx(MultiVecDerivId dx)sofa::core::ConstraintParamsinline; setDx(const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params-members.html
Deployability,update,update,"j);  ; ConstraintParams & setDx (VecDerivId dx);  Set the IDs where to write corrective displacement vector. More...;  ; ConstraintParams & setDx (MultiVecDerivId dx);  ; template<class StateSet > ; ConstraintParams & setDx (const StateSet &g, MultiVecDerivId dx);  ; ConstraintParams & setLambda (VecDerivId lambda);  Set the IDs where to write the constraint force vector. More...;  ; ConstraintParams & setLambda (MultiVecDerivId lambda);  ; template<class StateSet > ; ConstraintParams & setLambda (const StateSet &g, MultiVecDerivId lambda);  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static const ConstraintParams * defaultInstance ();  Get the default MechanicalParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for method parameters. More...;  . Attribute details. ◆ m_constOrder. ConstraintOrder sofa::core::ConstraintParams::m_constOrder. protected . Description of the order of the constraint. . ◆ m_dx. MultiVecDerivId sofa::core::ConstraintParams::m_dx. protected . Ids of constraint correction vector. . ◆ m_j. MultiMatrixDerivId sofa::core::ConstraintParams::m_j. protected . Ids of the",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html
Energy Efficiency,energy,energy,":. [legend]; Detailed Description; Class gathering parameters use by constraint components methods, and transmitted by visitors read the velocity and position and where the . Protected Attributes; ConstMultiVecCoordId m_x;  Ids of position vector. More...;  ; ConstMultiVecDerivId m_v;  Ids of velocity vector. More...;  ; MultiMatrixDerivId m_j;  Ids of the constraint jacobian matrix. More...;  ; MultiVecDerivId m_dx;  Ids of constraint correction vector. More...;  ; MultiVecDerivId m_lambda;  Ids of constraint lambda vector. More...;  ; ConstraintOrder m_constOrder;  Description of the order of the constraint. More...;  ; double m_smoothFactor;  Smooth contribution factor (for smooth constraints resolution) More...;  . Public Member Functions;  SOFA_ATTRIBUTE_DISABLED__CONSTORDER () static const expr auto POS;  ;  SOFA_ATTRIBUTE_DISABLED__CONSTORDER () static const expr auto VEL;  ;  SOFA_ATTRIBUTE_DISABLED__CONSTORDER () static const expr auto ACC;  ;  SOFA_ATTRIBUTE_DISABLED__CONSTORDER () static const expr auto POS_AND_VEL;  ; std::string_view getName () const;  ;  ConstraintParams (const sofa::core::ExecParams &p= *sofa::core::execparams::defaultInstance());  Constructor, initializing all VecIds to default values, implicit and energy flags to false. More...;  ; ConstraintParams & setExecParams (const core::ExecParams *params);  ; Flags and parameters getters; ConstraintOrder constOrder () const;  ; ConstraintParams & setOrder (ConstraintOrder o);  ; double smoothFactor () const;  Smooth contribution factor (for smooth constraints resolution) More...;  ; Access to vectors from a given state container (i.e. State or MechanicalState); template<class S > ; const Data< typename S::VecCoord > * readX (const S *state) const;  Read access to the free (unconstrained) position vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readV (const S *state) const;  Read access to the free (unconstrained) velocity vector. More...;  ; template<class S > ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html
Modifiability,inherit,inherited," IDs where to read the free velocity vector. More...;  ; ConstraintParams & setV (ConstMultiVecDerivId v);  ; template<class StateSet > ; ConstraintParams & setV (const StateSet &g, ConstVecDerivId v);  ; ConstraintParams & setJ (MatrixDerivId j);  Set the IDs where to read the constraint jacobian matrix. More...;  ; ConstraintParams & setJ (MultiMatrixDerivId j);  ; template<class StateSet > ; ConstraintParams & setJ (const StateSet &g, MatrixDerivId j);  ; ConstraintParams & setDx (VecDerivId dx);  Set the IDs where to write corrective displacement vector. More...;  ; ConstraintParams & setDx (MultiVecDerivId dx);  ; template<class StateSet > ; ConstraintParams & setDx (const StateSet &g, MultiVecDerivId dx);  ; ConstraintParams & setLambda (VecDerivId lambda);  Set the IDs where to write the constraint force vector. More...;  ; ConstraintParams & setLambda (MultiVecDerivId lambda);  ; template<class StateSet > ; ConstraintParams & setLambda (const StateSet &g, MultiVecDerivId lambda);  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static const ConstraintParams * defaultInstance ();  Get the default MechanicalParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html
Security,access,access,"..;  . Public Member Functions;  SOFA_ATTRIBUTE_DISABLED__CONSTORDER () static const expr auto POS;  ;  SOFA_ATTRIBUTE_DISABLED__CONSTORDER () static const expr auto VEL;  ;  SOFA_ATTRIBUTE_DISABLED__CONSTORDER () static const expr auto ACC;  ;  SOFA_ATTRIBUTE_DISABLED__CONSTORDER () static const expr auto POS_AND_VEL;  ; std::string_view getName () const;  ;  ConstraintParams (const sofa::core::ExecParams &p= *sofa::core::execparams::defaultInstance());  Constructor, initializing all VecIds to default values, implicit and energy flags to false. More...;  ; ConstraintParams & setExecParams (const core::ExecParams *params);  ; Flags and parameters getters; ConstraintOrder constOrder () const;  ; ConstraintParams & setOrder (ConstraintOrder o);  ; double smoothFactor () const;  Smooth contribution factor (for smooth constraints resolution) More...;  ; Access to vectors from a given state container (i.e. State or MechanicalState); template<class S > ; const Data< typename S::VecCoord > * readX (const S *state) const;  Read access to the free (unconstrained) position vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readV (const S *state) const;  Read access to the free (unconstrained) velocity vector. More...;  ; template<class S > ; const Data< typename S::MatrixDeriv > * readJ (const S *state) const;  Read access to the constraint jacobian matrix. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readLambda (S *state) const;  Read access to the constraint force vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readDx (S *state) const;  Read access to the constraint corrective motion vector. More...;  ; Setup methods; Called by the OdeSolver from which the mechanical computations originate. They all return a reference to this MechanicalParam instance, to ease chaining multiple setup calls. . ConstraintParams & setSmoothFactor (double v);  Set smooth contribution factor (for smooth constraints r",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html
Deployability,update,update,"eFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DataEngine Member List . This is the complete list of members for sofa::core::DataEngine, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html
Performance,load,loader,"odel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html
Usability,clear,clearLoggedMessages,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprot",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html
Availability,down,down,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html
Deployability,update,update,"﻿. SOFA API: sofa::core::DataEngine Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::DataEngine Class Referenceabstract . #include <DataEngine.h>; from a set of Data inputs computes a set of Data outputs ; More... Inheritance diagram for sofa::core::DataEngine:. [legend]; Detailed Description; from a set of Data inputs computes a set of Data outputs ; Implementation good rules:; void init() { addInput // indicate all inputs addOutput // indicate all outputs }; // optional (called each time a data is modified in the gui) // it is not always desired void reinit() { update(); }; void doUpdate() override { access your inputs, set your outputs... } . Public Member Functions;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Rem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html
Integrability,depend,dependent,". More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html
Modifiability,inherit,inherited,"taEngine Class Referenceabstract . #include <DataEngine.h>; from a set of Data inputs computes a set of Data outputs ; More... Inheritance diagram for sofa::core::DataEngine:. [legend]; Detailed Description; from a set of Data inputs computes a set of Data outputs ; Implementation good rules:; void init() { addInput // indicate all inputs addOutput // indicate all outputs }; // optional (called each time a data is modified in the gui) // it is not always desired void reinit() { update(); }; void doUpdate() override { access your inputs, set your outputs... } . Public Member Functions;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html
Performance,load,loader,"led after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html
Security,access,access,"﻿. SOFA API: sofa::core::DataEngine Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::DataEngine Class Referenceabstract . #include <DataEngine.h>; from a set of Data inputs computes a set of Data outputs ; More... Inheritance diagram for sofa::core::DataEngine:. [legend]; Detailed Description; from a set of Data inputs computes a set of Data outputs ; Implementation good rules:; void init() { addInput // indicate all inputs addOutput // indicate all outputs }; // optional (called each time a data is modified in the gui) // it is not always desired void reinit() { update(); }; void doUpdate() override { access your inputs, set your outputs... } . Public Member Functions;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Rem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html
Deployability,update,update,de *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; m_callbacksofa::core::DataTrackerCallbackprotected; m_dataTrackersofa::core::DataTrackerDDGNodeprotected; m_ownersofa::core::DataTrackerCallbackprotected; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; setCallback(std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> f)sofa::core::DataTrackerCallback; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setOwner(sofa::core::objectmodel::Base *owner)sofa::core::DataTrackerCallbackinline; update() overridesofa::core::DataTrackerCallbackvirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DataTrackerCallback Member List . This is the complete list of members for sofa::core::DataTrackerCallback, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; m_callbacksofa::core::DataTrackerCallbackprotected; m_dataTrackersofa::core::DataTrackerDDGNodeprotected; m_ownersofa::core::DataTrackerCallbackprotected; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; setCallback(std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> f)sofa::core::DataTra",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback-members.html
Deployability,update,update,"﻿. SOFA API: sofa::core::DataTrackerCallback Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::DataTrackerCallback Class Reference . #include <DataTrackerCallback.h>. Inheritance diagram for sofa::core::DataTrackerCallback:. [legend]; Detailed Description; a DDGNode that automatically triggers its update function when asking for an output and any input changed. Similar behavior than a DataEngine, but this is NOT a component and can be used everywhere.; Note that it contains a DataTracker (m_dataTracker) to be able to check precisely which input changed if needed.; **** Implementation good rules: (similar to DataEngine); //init addInput // indicate all inputs addOutput // indicate all outputs setDirtyValue(); // the engine must start dirty (of course, no output are up-to-date); DataTrackerCallback is usually created using the ""addUpdateCallback()"" method from Base. Thus the context is usually passed to the lambda making all public & private attributes & methods of the component accessible within the callback function. example:; addUpdateCallback(""name"", {&name}, [this](DataTracker& tracker){ // Increment the state counter but without changing the state. return d_componentState.getValue(); }, {&d_componentState});; A member function with the same signature - core::objectmodel::ComponentState(DataTracker&) - can also be used.; The update of the inputs is done for you before calling the callback, and they are also cleaned for you after the call. Thus there's no need to manually call updateAllInputsIfDirty() or cleanDirty() (see implementation of update() . Protected Attributes; std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> m_callback;  ; sofa::core::objectmodel::Base * m_owner {nullptr};  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html
Modifiability,inherit,inherited,"up-to-date); DataTrackerCallback is usually created using the ""addUpdateCallback()"" method from Base. Thus the context is usually passed to the lambda making all public & private attributes & methods of the component accessible within the callback function. example:; addUpdateCallback(""name"", {&name}, [this](DataTracker& tracker){ // Increment the state counter but without changing the state. return d_componentState.getValue(); }, {&d_componentState});; A member function with the same signature - core::objectmodel::ComponentState(DataTracker&) - can also be used.; The update of the inputs is done for you before calling the callback, and they are also cleaned for you after the call. Thus there's no need to manually call updateAllInputsIfDirty() or cleanDirty() (see implementation of update() . Protected Attributes; std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> m_callback;  ; sofa::core::objectmodel::Base * m_owner {nullptr};  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions; void setCallback (std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> f);  ; void update () override;  Calls the callback when one of the data has changed. More...;  ; void setOwner (sofa::core::objectmodel::Base *owner);  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html
Security,access,accessible,"147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::DataTrackerCallback Class Reference . #include <DataTrackerCallback.h>. Inheritance diagram for sofa::core::DataTrackerCallback:. [legend]; Detailed Description; a DDGNode that automatically triggers its update function when asking for an output and any input changed. Similar behavior than a DataEngine, but this is NOT a component and can be used everywhere.; Note that it contains a DataTracker (m_dataTracker) to be able to check precisely which input changed if needed.; **** Implementation good rules: (similar to DataEngine); //init addInput // indicate all inputs addOutput // indicate all outputs setDirtyValue(); // the engine must start dirty (of course, no output are up-to-date); DataTrackerCallback is usually created using the ""addUpdateCallback()"" method from Base. Thus the context is usually passed to the lambda making all public & private attributes & methods of the component accessible within the callback function. example:; addUpdateCallback(""name"", {&name}, [this](DataTracker& tracker){ // Increment the state counter but without changing the state. return d_componentState.getValue(); }, {&d_componentState});; A member function with the same signature - core::objectmodel::ComponentState(DataTracker&) - can also be used.; The update of the inputs is done for you before calling the callback, and they are also cleaned for you after the call. Thus there's no need to manually call updateAllInputsIfDirty() or cleanDirty() (see implementation of update() . Protected Attributes; std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> m_callback;  ; sofa::core::objectmodel::Base * m_owner {nullptr};  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkCo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_callback.html
Deployability,update,update,"for sofa::core::DataTrackerDDGNode, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; m_dataTrackersofa::core::DataTrackerDDGNodeprotected; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; update()=0sofa::core::objectmodel::DDGNodepure virtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DataTrackerDDGNode Member List . This is the complete list of members for sofa::core::DataTrackerDDGNode, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; m_dataTrackersofa::core::DataTrackerDDGNodeprotected; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; update()=0sofa::core::objectmodel::DDGNodepure virtual; updateAllInputsIfDirty()sofa::core::DataTra",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node-members.html
Deployability,update,updateAllInputsIfDirty," Reference . #include <DataTrackerCallback.h>; A DDGNode with trackable input Data (containing a DataTracker) ; More... Inheritance diagram for sofa::core::DataTrackerDDGNode:. [legend]; Detailed Description; A DDGNode with trackable input Data (containing a DataTracker) . Protected Attributes; Tracking Data mechanism; each Data added to the DataTracker is tracked to be able to check if its value changed since their last clean, called by default in DataEngine::cleanDirty(). . DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::DataTrackerDDGNode Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::DataTrackerDDGNode Class Reference . #include <DataTrackerCallback.h>; A DDGNode with trackable input Data (containing a DataTracker) ; More... Inheritance diagram for sofa::core::DataTrackerDDGNode:. [legend]; Detailed Description; A DDGNode with trackable input Data (containing a DataTracker) . Protected Attributes; Tracking Data mechanism; each Data added to the DataTracker is tracked to be able to check if its value changed since their last clean, called by default in DataEngine::cleanDirty(). . DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html
Security,access,access,lue needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_dataTracker. DataTracker sofa::core::DataTrackerDDGNode::m_dataTracker. protected . Constructor details. ◆ DataTrackerDDGNode(). sofa::core::DataTrackerDDGNode::DataTrackerDDGNode ; (; ). inline . Function details. ◆ addInputs(). void sofa::core::DataTrackerDDGNode::addInputs ; (; std::initializer_list< sofa::core::objectmodel::BaseData * > ; datas). Create a DataCallback object associated with multiple Data fields. . ◆ addOutputs(). void sofa::core::DataTrackerDDGNode::addOutputs ; (; std::initializer_list< sofa::core::objectmodel::BaseData * > ; datas). ◆ cleanDirty(). void sofa::core::DataTrackerDDGNode::cleanDirty ; (; const core::ExecParams * ; params = nullptr). virtual . Set dirty flag to false for the DDGNode and for all the tracked Data . ◆ updateAllInputsIfDirty(). void sofa::core::DataTrackerDDGNode::updateAllInputsIfDirty ; (; ). utility function to ensure all inputs are up-to-date can be useful for particularly complex DDGNode with a lot input/output imbricated access . sofacoreDataTrackerDDGNode; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html
Deployability,update,update,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DataTrackerFunctor< FunctorType > Member List . This is the complete list of members for sofa::core::DataTrackerFunctor< FunctorType >, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DataTrackerFunctor(FunctorType &functor)sofa::core::DataTrackerFunctor< FunctorType >inline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue() overridesofa::core::DataTrackerFunctor< FunctorType >inlinevirtual; update() overridesofa::core::DataTrackerFunctor< FunctorType >inlinevirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DataTrackerFunctor< FunctorType > Member List . This is the complete list of members for sofa::core::DataTrackerFunctor< FunctorType >, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DataTrackerFunctor(FunctorType &functor)sofa::core::DataTrackerFunctor< FunctorType >inline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; notifyEndEdit()sofa::core::objectmodel::DDGNodevirtual; outputssofa::core::objectmodel::DDGNodeprotected; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue() overridesofa::core::DataTrackerFunctor< FunctorType >inlinevirtual; update() overridesofa::core::DataTrackerFunctor< FunctorType >inlinevirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor-members.html
Deployability,update,update,﻿. SOFA API: sofa::core::DataTrackerFunctor< FunctorType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::DataTrackerFunctor< FunctorType > Class Template Reference . #include <DataTrackerFunctor.h>. Inheritance diagram for sofa::core::DataTrackerFunctor< FunctorType >:. [legend]; Detailed Description; template<typename FunctorType>; class sofa::core::DataTrackerFunctor< FunctorType >; A DDGNode that will call a given Functor as soon as one of its input changes (a pointer to this DataTrackerFunctor is passed as parameter in the functor) . Public Member Functions;  DataTrackerFunctor (FunctorType &functor);  ; void setDirtyValue () override;  ; void update () override;  This method is needed by DDGNode. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be c,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::core::DataTrackerFunctor< FunctorType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::DataTrackerFunctor< FunctorType > Class Template Reference . #include <DataTrackerFunctor.h>. Inheritance diagram for sofa::core::DataTrackerFunctor< FunctorType >:. [legend]; Detailed Description; template<typename FunctorType>; class sofa::core::DataTrackerFunctor< FunctorType >; A DDGNode that will call a given Functor as soon as one of its input changes (a pointer to this DataTrackerFunctor is passed as parameter in the functor) . Public Member Functions;  DataTrackerFunctor (FunctorType &functor);  ; void setDirtyValue () override;  ; void update () override;  This method is needed by DDGNode. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be c,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_functor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DerivativeMatrix< c > Member List . This is the complete list of members for sofa::core::DerivativeMatrix< c >, including all inherited members. ComponentType typedefsofa::core::MechanicalStatesMatrixAccumulators< c >; getMechanicalParams() constsofa::core::MechanicalStatesMatrixAccumulators< c >inline; m_submatrixsofa::core::MechanicalStatesMatrixAccumulators< c >; MatrixAccumulator typedefsofa::core::DerivativeMatrix< c >; MechanicalStatesMatrixAccumulators()=defaultsofa::core::MechanicalStatesMatrixAccumulators< c >; setMatrixAccumulator(MatrixAccumulator *matrixAccumulator, BaseState *mstate1, BaseState *mstate2)sofa::core::MechanicalStatesMatrixAccumulators< c >; setMatrixAccumulator(MatrixAccumulator *matrixAccumulator, BaseState *mstate1)sofa::core::MechanicalStatesMatrixAccumulators< c >; setMechanicalParams(const core::MechanicalParams *mparams)sofa::core::MechanicalStatesMatrixAccumulators< c >inline; ~MechanicalStatesMatrixAccumulators()=defaultsofa::core::MechanicalStatesMatrixAccumulators< c >virtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_derivative_matrix-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_derivative_matrix-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::DerivativeMatrix< c > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; List of all members . sofa::core::DerivativeMatrix< c > Class Template Reference . #include <DerivativeMatrix.h>. Inheritance diagram for sofa::core::DerivativeMatrix< c >:. [legend]. Classes; struct  Derivative;  ; struct  DerivativeElement;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::MechanicalStatesMatrixAccumulators< c >; std::map< std::pair< BaseState *, BaseState * >, MatrixAccumulator * > m_submatrix;  ;  Public Member Functions inherited from sofa::core::MechanicalStatesMatrixAccumulators< c >; void setMatrixAccumulator (MatrixAccumulator *matrixAccumulator, BaseState *mstate1, BaseState *mstate2);  ; void setMatrixAccumulator (MatrixAccumulator *matrixAccumulator, BaseState *mstate1);  ; void setMechanicalParams (const core::MechanicalParams *mparams);  ; const core::MechanicalParams * getMechanicalParams () const;  ;  MechanicalStatesMatrixAccumulators ()=default;  ; virtual ~MechanicalStatesMatrixAccumulators ()=default;  . sofacoreDerivativeMatrix; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_derivative_matrix.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_derivative_matrix.html
Deployability,update,update,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ExecParams Member List . This is the complete list of members for sofa::core::ExecParams, including all inherited members. checkValidStorage() constsofa::core::ExecParams; defaultInstance()sofa::core::ExecParamsstatic; EXEC_DEBUG enum valuesofa::core::ExecParams; EXEC_DEFAULT enum valuesofa::core::ExecParams; EXEC_GPU enum valuesofa::core::ExecParams; EXEC_GRAPH enum valuesofa::core::ExecParams; EXEC_NONE enum valuesofa::core::ExecParams; ExecMode enum namesofa::core::ExecParams; execMode() constsofa::core::ExecParamsinline; ExecParams()sofa::core::ExecParamsinline; nbThreads() constsofa::core::ExecParamsinline; setExecMode(ExecMode v)sofa::core::ExecParamsinline; setThreadID(int v)sofa::core::ExecParamsinline; threadID() constsofa::core::ExecParamsinline; update()sofa::core::ExecParams. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_exec_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_exec_params-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ExecParams Member List . This is the complete list of members for sofa::core::ExecParams, including all inherited members. checkValidStorage() constsofa::core::ExecParams; defaultInstance()sofa::core::ExecParamsstatic; EXEC_DEBUG enum valuesofa::core::ExecParams; EXEC_DEFAULT enum valuesofa::core::ExecParams; EXEC_GPU enum valuesofa::core::ExecParams; EXEC_GRAPH enum valuesofa::core::ExecParams; EXEC_NONE enum valuesofa::core::ExecParams; ExecMode enum namesofa::core::ExecParams; execMode() constsofa::core::ExecParamsinline; ExecParams()sofa::core::ExecParamsinline; nbThreads() constsofa::core::ExecParamsinline; setExecMode(ExecMode v)sofa::core::ExecParamsinline; setThreadID(int v)sofa::core::ExecParamsinline; threadID() constsofa::core::ExecParamsinline; update()sofa::core::ExecParams. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_exec_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_exec_params-members.html
Deployability,update,update,"﻿. SOFA API: sofa::core::ExecParams Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::ExecParams Class Reference . #include <ExecParams.h>; Class gathering parameters use by most components methods, and transmitted by all visitors. ; More... Inheritance diagram for sofa::core::ExecParams:. [legend]; Detailed Description; Class gathering parameters use by most components methods, and transmitted by all visitors. . Public Member Functions; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for method parameters. More...;  . Constructor details. ◆ ExecParams(). sofa::core::ExecParams::ExecParams ; (; ). inline . Function details. ◆ checkValidStorage(). bool sofa::core::ExecParams::checkValidStorage ; (; ); const. ◆ defaultInstance(). ExecParams * sofa::core::ExecParams::defaultInstance ; (; ). static . Get the default ExecParams, to be used to provide a default values for method parameters. . ◆ execMode(). ExecMode sofa::core::ExecParams::execMode ; (; ); const. inline . Mode of execution requested. . ◆ nbThreads(). int sofa::core::ExecParams::nbThreads ; (; ); const. inline . Number of threads currently known to Sofa.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_exec_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_exec_params.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::GeometricStiffnessMatrix Member List . This is the complete list of members for sofa::core::GeometricStiffnessMatrix, including all inherited members. ComponentType typedefsofa::core::MechanicalStatesMatrixAccumulators< c >; getMappingDerivativeIn(BaseState *mstate)sofa::core::GeometricStiffnessMatrixinline; getMechanicalParams() constsofa::core::MechanicalStatesMatrixAccumulators< c >inline; m_submatrixsofa::core::MechanicalStatesMatrixAccumulators< c >; MatrixAccumulator typedefsofa::core::DerivativeMatrix< matrixaccumulator::Contribution::GEOMETRIC_STIFFNESS >; MechanicalStatesMatrixAccumulators()=defaultsofa::core::MechanicalStatesMatrixAccumulators< c >; setMatrixAccumulator(MatrixAccumulator *matrixAccumulator, BaseState *mstate1, BaseState *mstate2)sofa::core::MechanicalStatesMatrixAccumulators< c >; setMatrixAccumulator(MatrixAccumulator *matrixAccumulator, BaseState *mstate1)sofa::core::MechanicalStatesMatrixAccumulators< c >; setMechanicalParams(const core::MechanicalParams *mparams)sofa::core::MechanicalStatesMatrixAccumulators< c >inline; ~MechanicalStatesMatrixAccumulators()=defaultsofa::core::MechanicalStatesMatrixAccumulators< c >virtual. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_geometric_stiffness_matrix-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_geometric_stiffness_matrix-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::GeometricStiffnessMatrix Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::core::GeometricStiffnessMatrix Class Reference . #include <BaseLocalMappingMatrix.h>. Inheritance diagram for sofa::core::GeometricStiffnessMatrix:. [legend]. Classes; struct  DJ;  . Public Member Functions; DJ getMappingDerivativeIn (BaseState *mstate);  ;  Public Member Functions inherited from sofa::core::MechanicalStatesMatrixAccumulators< c >; void setMatrixAccumulator (MatrixAccumulator *matrixAccumulator, BaseState *mstate1, BaseState *mstate2);  ; void setMatrixAccumulator (MatrixAccumulator *matrixAccumulator, BaseState *mstate1);  ; void setMechanicalParams (const core::MechanicalParams *mparams);  ; const core::MechanicalParams * getMechanicalParams () const;  ;  MechanicalStatesMatrixAccumulators ()=default;  ; virtual ~MechanicalStatesMatrixAccumulators ()=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::MechanicalStatesMatrixAccumulators< c >; std::map< std::pair< BaseState *, BaseState * >, MatrixAccumulator * > m_submatrix;  . Function details. ◆ getMappingDerivativeIn(). DJ sofa::core::GeometricStiffnessMatrix::getMappingDerivativeIn ; (; BaseState * ; mstate). inline . sofacoreGeometricStiffnessMatrix; Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_geometric_stiffness_matrix.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_geometric_stiffness_matrix.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ListMappingMatrixAccumulator Member List . This is the complete list of members for sofa::core::ListMappingMatrixAccumulator, including all inherited members. add(sofa::SignedIndex i, sofa::SignedIndex j, float value) overridesofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inlinevirtual; add(sofa::SignedIndex i, sofa::SignedIndex j, double value) overridesofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inlinevirtual; add(sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) overridesofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inlinevirtual; add(sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) overridesofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inlinevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrix",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator-members.html
Usability,clear,clear,"tual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inlinevirtual; empty() constsofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; push_back(MappingMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; remove(MappingMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; size() constsofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator-members.html
Modifiability,inherit,inherited,".h>. Inheritance diagram for sofa::core::ListMappingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >; void push_back (MappingMatrixAccumulator *m);  ; void remove (MappingMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacoreListMappingMatrixAccumulator; Generated on Mon Nov 11 2024 03:13:41 for ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html
Usability,clear,clear,".h>. Inheritance diagram for sofa::core::ListMappingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >; void push_back (MappingMatrixAccumulator *m);  ; void remove (MappingMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacoreListMappingMatrixAccumulator; Generated on Mon Nov 11 2024 03:13:41 for ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ListMatrixAccumulator< TMatrixAccumulator > Member List . This is the complete list of members for sofa::core::ListMatrixAccumulator< TMatrixAccumulator >, including all inherited members. add(sofa::SignedIndex i, sofa::SignedIndex j, float value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, double value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; clear() overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; empty() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; push_back(TMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; remove(TMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; size() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ListMatrixAccumulator< TMatrixAccumulator > Member List . This is the complete list of members for sofa::core::ListMatrixAccumulator< TMatrixAccumulator >, including all inherited members. add(sofa::SignedIndex i, sofa::SignedIndex j, float value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, double value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; clear() overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; empty() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; push_back(TMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; remove(TMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; size() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator-members.html
Usability,clear,clear,"﻿. SOFA API: sofa::core::ListMatrixAccumulator< TMatrixAccumulator > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::ListMatrixAccumulator< TMatrixAccumulator > Class Template Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::ListMatrixAccumulator< TMatrixAccumulator >:. [legend]; Detailed Description; template<class TMatrixAccumulator>; class sofa::core::ListMatrixAccumulator< TMatrixAccumulator >; Composite class of MatrixAccumulatorInterface . Public Member Functions; void push_back (TMatrixAccumulator *m);  ; void remove (TMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  . Function details. ◆ add() [1/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3d & ; value . ). inlineoverride . ◆ add() [2/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3f & ; value . ). inlineoverride . ◆ add() [3/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . double ; value . ). inlineoverride . ◆ add() [4/4]. template<class TMatrixAccumulator > . void sofa::core::List",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html
Deployability,update,updateInternal,"BaseMappingvirtual; setPathInputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setPathOutputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to) overridesofa::core::Mapping< TIn, TOut >virtual; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::Mapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappinginlinevirtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::Mapping< TIn, TOut > Member List . This is the complete list of members for sofa::core::Mapping< TIn, TOut >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const MechanicalParams *, MultiVecDerivId, ConstMultiVecDerivId) overridesofa::core::Mapping< TIn, TOut >virtual; applyJ(const MechanicalParams *mparams, MultiVecDerivId outVel, ConstMultiVecDerivId inVel) overridesofa::core::Mapping< TIn, TOut >virtual; applyJ(const MechanicalParams *mparams, OutDataVecDeriv &out, const InDataVecDeriv &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html
Performance,load,loader,"rcesMapped(bool b)sofa::core::BaseMappingvirtual; setFrom(BaseState *from) overridesofa::core::Mapping< TIn, TOut >virtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMassesMapped(bool b)sofa::core::BaseMappingvirtual; setMatricesMapped(bool b)sofa::core::BaseMappingvirtual; setModels(State< In > *from, State< Out > *to)sofa::core::Mapping< TIn, TOut >virtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNonMechanical()sofa::core::BaseMappingvirtual; setPathInputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setPathOutputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to) overridesofa::core::Mapping< TIn, TOut >virtual; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::Mapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Mapping< TIn, TOut >virtual; apply(const MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyDJT(const MechanicalParams *, MultiVecDerivId, ConstMultiVecDerivId) overridesofa::core::Mapping< TIn, TOut >virtual; applyJ(const MechanicalParams *mparams, MultiVecDerivId outVel, ConstMultiVecDerivId inVel) overridesofa::core::Mapping< TIn, TOut >virtual; applyJ(const MechanicalParams *mparams, OutDataVecDeriv &out, const InDataVecDeriv &in)=0sofa::core::Mapping< TIn, TOut >pure virtual; applyJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html
Usability,clear,clearLoggedMessages,"ore::BaseMappingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html
Deployability,update,updateK,"ix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) override;  ; void disable () override;  ;  Public Member Functions inherited from sofa::core::BaseMapping;  SOFA_ABSTRACT_CLASS (BaseMapping, objectmodel::BaseObject);  ; virtual bool isLinear () const;  ; virtual bool isMechanical () const;  Return true if this mapping should be used as a mechanical mapping. More...;  ; virtual bool sameTopology () const;  ; virtual const sofa::linearalgebra::BaseMatrix * getJ (const MechanicalParams *);  ; virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::Mapping< TIn, TOut > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::Mapping< TIn, TOut > Class Template Referenceabstract . #include <Mapping.h>; Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. ; More... Inheritance diagram for sofa::core::Mapping< TIn, TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::core::Mapping< TIn, TOut >; Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. . Public Attributes; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::Mapping< TIn, TOut > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::Mapping< TIn, TOut > Class Template Referenceabstract . #include <Mapping.h>; Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. ; More... Inheritance diagram for sofa::core::Mapping< TIn, TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::core::Mapping< TIn, TOut >; Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. . Public Attributes; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html
Performance,load,loader,"fa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html
Security,access,accessed," mapping to position vectors.; If the Mapping can be represented as a matrix J, this method computes $ out = J in $ ; Implements sofa::core::BaseMapping. ◆ apply() [2/2]. template<class TIn , class TOut > . virtual void sofa::core::Mapping< TIn, TOut >::apply ; (; const MechanicalParams * ; mparams, . OutDataVecCoord & ; out, . const InDataVecCoord & ; in . ). pure virtual . This method must be reimplemented by all mappings. . ◆ applyDJT(). template<class In , class Out > . void sofa::core::Mapping< In, Out >::applyDJT ; (; const MechanicalParams * ; , . MultiVecDerivId ; , . ConstMultiVecDerivId ;  . ). overridevirtual . ApplyDJT (Force)/// Apply the change of force due to the nonlinearity of the mapping and the last propagated displacement. Also called geometric stiffness. The default implementation does nothing, assuming a linear mapping.; This method computes , where is the parent force and is the child force. where J is the tangent operator (the linear approximation) of the mapping The child force is accessed in the child state using mparams->readF() . This requires that the child force vector is used by the solver to compute the force corresponding to the current positions and velocities, and not to store auxiliary values. The displacement is accessed in the parent state using mparams->readDx() . This method generally corresponds to a symmetric stiffness matrix, but with rotations (which are not a commutative group) it is not the case. Since some solvers (including the Conjugate Gradient) require symmetric matrices, a flag is set in the MechanicalParams to say if symmetric matrices are required. If so, non-symmetric geometric stiffness should not be applied. ; Implements sofa::core::BaseMapping.; Reimplemented in sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >, and sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >. ◆ applyJ() [1/2]. template<class In , class Out > . void sofa::core::Mapping< In, Out >::a",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::MappingMatrixAccumulator Member List . This is the complete list of members for sofa::core::MappingMatrixAccumulator, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulator",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator-members.html
Usability,clear,clear,"physics simuation. sofa::core::MappingMatrixAccumulator Member List . This is the complete list of members for sofa::core::MappingMatrixAccumulator, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::MappingMatrixAccumulator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::MappingMatrixAccumulator Class Reference . #include <BaseLocalMappingMatrix.h>. Inheritance diagram for sofa::core::MappingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacoreMappingMatrixAccumulator; Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator.html
Usability,clear,clear,"﻿. SOFA API: sofa::core::MappingMatrixAccumulator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::MappingMatrixAccumulator Class Reference . #include <BaseLocalMappingMatrix.h>. Inheritance diagram for sofa::core::MappingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacoreMappingMatrixAccumulator; Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy > Member List . This is the complete list of members for sofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >, including all inherited members. add(const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override finalsofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >inline; add(const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override finalsofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >inline; add(const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override finalsofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >inline; add(const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override finalsofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >inline; add(const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override finalsofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >inline; add(const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override finalsofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >inline; add(const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override finalsofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >inline; add(const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override finalsofa::core::MatrixAccumulatorIndexChecker< TBaseMatrixAccumulator, TStrategy >inline; add(const matrixaccumulator::no_check_policy &, sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_index_checker-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_index_checker-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::MatrixAccumulatorInterface Member List . This is the complete list of members for sofa::core::MatrixAccumulatorInterface, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumul",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html
Usability,clear,clear,"ics simuation. sofa::core::MatrixAccumulatorInterface Member List . This is the complete list of members for sofa::core::MatrixAccumulatorInterface, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html
Usability,clear,clear,"ference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::MatrixAccumulatorInterface Class Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::MatrixAccumulatorInterface:. [legend]. Public Member Functions; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . Constructor details. ◆ ~MatrixAccumulatorInterface(). virtual sofa::core::MatrixAccumulatorInterface::~MatrixAccumulatorInterface ; (; ). virtualdefault . Function details. ◆ add() [1/10]. void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; row, . sofa::SignedIndex ; col,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html
Deployability,update,update,"DerivId v)sofa::core::MechanicalParamsinline; setDt(SReal v)sofa::core::MechanicalParamsinline; setDx(ConstVecDerivId v)sofa::core::MechanicalParamsinline; setDx(ConstMultiVecDerivId v)sofa::core::MechanicalParamsinline; setDx(const StateSet &g, ConstVecDerivId v)sofa::core::MechanicalParamsinline; setEnergy(bool v)sofa::core::MechanicalParamsinline; setExecMode(ExecMode v)sofa::core::ExecParamsinline; setExecParams(const core::ExecParams *params)sofa::core::MechanicalParams; setF(ConstVecDerivId v)sofa::core::MechanicalParamsinline; setF(ConstMultiVecDerivId v)sofa::core::MechanicalParamsinline; setF(const StateSet &g, ConstVecDerivId v)sofa::core::MechanicalParamsinline; setImplicit(bool v)sofa::core::MechanicalParamsinline; setImplicitPosition(SReal i)sofa::core::MechanicalParamsinline; setImplicitVelocity(SReal i)sofa::core::MechanicalParamsinline; setKFactor(SReal v)sofa::core::MechanicalParamsinline; setKFactorUsed(bool b) constsofa::core::MechanicalParamsinline; setMFactor(SReal v)sofa::core::MechanicalParamsinline; setSupportOnlySymmetricMatrix(bool b)sofa::core::MechanicalParamsinline; setSymmetricMatrix(bool b)=deletesofa::core::MechanicalParams; setThreadID(int v)sofa::core::ExecParamsinline; setV(ConstVecDerivId v)sofa::core::MechanicalParamsinline; setV(ConstMultiVecDerivId v)sofa::core::MechanicalParamsinline; setV(const StateSet &g, ConstVecDerivId v)sofa::core::MechanicalParamsinline; setX(ConstVecCoordId v)sofa::core::MechanicalParamsinline; setX(ConstMultiVecCoordId v)sofa::core::MechanicalParamsinline; setX(const StateSet &g, ConstVecCoordId v)sofa::core::MechanicalParamsinline; supportOnlySymmetricMatrix() constsofa::core::MechanicalParamsinline; symmetricMatrix() const =deletesofa::core::MechanicalParams; threadID() constsofa::core::ExecParamsinline; update()sofa::core::ExecParams; v() constsofa::core::MechanicalParamsinline; v()sofa::core::MechanicalParamsinline; x() constsofa::core::MechanicalParamsinline; x()sofa::core::MechanicalParamsinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params-members.html
Energy Efficiency,energy,energy, bFactor() constsofa::core::MechanicalParamsinline; checkValidStorage() constsofa::core::ExecParams; defaultInstance()sofa::core::MechanicalParamsstatic; df() constsofa::core::MechanicalParamsinline; df()sofa::core::MechanicalParamsinline; dt() constsofa::core::MechanicalParamsinline; dx() constsofa::core::MechanicalParamsinline; dx()sofa::core::MechanicalParamsinline; energy() constsofa::core::MechanicalParamsinline; EXEC_DEBUG enum valuesofa::core::ExecParams; EXEC_DEFAULT enum valuesofa::core::ExecParams; EXEC_GPU enum valuesofa::core::ExecParams; EXEC_GRAPH enum valuesofa::core::ExecParams; EXEC_NONE enum valuesofa::core::ExecParams; execMode() constsofa::core::ExecParamsinline; ExecMode enum namesofa::core::ExecParams; ExecParams()sofa::core::ExecParamsinline; f() constsofa::core::MechanicalParamsinline; f()sofa::core::MechanicalParamsinline; getKFactorUsed() constsofa::core::MechanicalParamsinline; implicit() constsofa::core::MechanicalParamsinline; implicitPosition() constsofa::core::MechanicalParamsinline; implicitVelocity() constsofa::core::MechanicalParamsinline; kFactor() constsofa::core::MechanicalParamsinline; kFactorIncludingRayleighDamping(SReal rayleighStiffness) constsofa::core::MechanicalParamsinline; m_bFactorsofa::core::MechanicalParamsprotected; m_dfsofa::core::MechanicalParamsprotected; m_dtsofa::core::MechanicalParamsprotected; m_dxsofa::core::MechanicalParamsprotected; m_energysofa::core::MechanicalParamsprotected; m_fsofa::core::MechanicalParamsprotected; m_implicitsofa::core::MechanicalParamsprotected; m_implicitPositionsofa::core::MechanicalParamsprotected; m_implicitVelocitysofa::core::MechanicalParamsprotected; m_kFactorsofa::core::MechanicalParamsprotected; m_kFactorUsedsofa::core::MechanicalPara,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::MechanicalParams Member List . This is the complete list of members for sofa::core::MechanicalParams, including all inherited members. bFactor() constsofa::core::MechanicalParamsinline; checkValidStorage() constsofa::core::ExecParams; defaultInstance()sofa::core::MechanicalParamsstatic; df() constsofa::core::MechanicalParamsinline; df()sofa::core::MechanicalParamsinline; dt() constsofa::core::MechanicalParamsinline; dx() constsofa::core::MechanicalParamsinline; dx()sofa::core::MechanicalParamsinline; energy() constsofa::core::MechanicalParamsinline; EXEC_DEBUG enum valuesofa::core::ExecParams; EXEC_DEFAULT enum valuesofa::core::ExecParams; EXEC_GPU enum valuesofa::core::ExecParams; EXEC_GRAPH enum valuesofa::core::ExecParams; EXEC_NONE enum valuesofa::core::ExecParams; execMode() constsofa::core::ExecParamsinline; ExecMode enum namesofa::core::ExecParams; ExecParams()sofa::core::ExecParamsinline; f() constsofa::core::MechanicalParamsinline; f()sofa::core::MechanicalParamsinline; getKFactorUsed() constsofa::core::MechanicalParamsinline; implicit() constsofa::core::MechanicalParamsinline; implicitPosition() constsofa::core::MechanicalParamsinline; implicitVelocity() constsofa::core::MechanicalParamsinline; kFactor() constsofa::core::MechanicalParamsinline; kFactorIncludingRayleighDamping(SReal rayleighStiffness) constsofa::core::MechanicalParamsinline; m_bFactorsofa::core::MechanicalParamsprotected; m_dfsofa::core::MechanicalParamsprotected; m_dtsofa::core::MechanicalParamsprotected; m_dxsofa::core::MechanicalParamsprotected; m_energysofa::core::MechanicalParamsprotected; m_fsofa::core::MechanicalParamsprotected; m_implicitsofa::core::MechanicalParamsprotected; m_implicitPositionsofa::core::MechanicalParamsprotected; m_implicitVelocitysofa::core::MechanicalParamsprotected; m_kFactorsofa::core::MechanicalParamsprotected; m_kFactorUsedsofa::core::MechanicalPara",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params-members.html
Deployability,integrat,integration,"﻿. SOFA API: sofa::core::MechanicalParams Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::MechanicalParams Class Reference . #include <MechanicalParams.h>; Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. ; More... Inheritance diagram for sofa::core::MechanicalParams:. [legend]; Detailed Description; Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. . Protected Attributes; SReal m_dt;  Time step. More...;  ; bool m_implicit;  Is the time integration scheme implicit ? More...;  ; bool m_energy;  Should the kinematic and potential energies be computed ? More...;  ; ConstMultiVecCoordId m_x;  Ids of position vector. More...;  ; ConstMultiVecDerivId m_v;  Ids of velocity vector. More...;  ; ConstMultiVecDerivId m_f;  Ids of force vector. More...;  ; ConstMultiVecDerivId m_dx;  Ids of dx vector (for implicit schemes) More...;  ; ConstMultiVecDerivId m_df;  Ids of df vector (for implicit schemes) More...;  ; SReal m_mFactor;  Mass matrix contributions factor (for implicit schemes) More...;  ; SReal m_bFactor;  Damping matrix contributions factor (for implicit schemes) More...;  ; SReal m_kFactor;  Stiffness matrix contributions factor (for implicit schemes) More...;  ; bool m_supportOnlySymmetricMatrix;  True if a symmetric matrix is assumed in the left-hand term of the dynamics equations, for solvers specialized on symmetric matrices. More...;  . Public Member Functions; bool symmetricMatrix () const =delete;  ; bool supportOnlySymmetricMatrix () const;  Symmetric matrix flag, for solvers specialized on symmetric matrices. More...;  ; bool energy () const;  Should the kinematic and potential energies be computed ? More...;  ;  MechanicalParams (const sofa::core::ExecParams &p=sofa::core::ExecParams());  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html
Energy Efficiency,energy,energy," Ids of position vector. More...;  ; ConstMultiVecDerivId m_v;  Ids of velocity vector. More...;  ; ConstMultiVecDerivId m_f;  Ids of force vector. More...;  ; ConstMultiVecDerivId m_dx;  Ids of dx vector (for implicit schemes) More...;  ; ConstMultiVecDerivId m_df;  Ids of df vector (for implicit schemes) More...;  ; SReal m_mFactor;  Mass matrix contributions factor (for implicit schemes) More...;  ; SReal m_bFactor;  Damping matrix contributions factor (for implicit schemes) More...;  ; SReal m_kFactor;  Stiffness matrix contributions factor (for implicit schemes) More...;  ; bool m_supportOnlySymmetricMatrix;  True if a symmetric matrix is assumed in the left-hand term of the dynamics equations, for solvers specialized on symmetric matrices. More...;  . Public Member Functions; bool symmetricMatrix () const =delete;  ; bool supportOnlySymmetricMatrix () const;  Symmetric matrix flag, for solvers specialized on symmetric matrices. More...;  ; bool energy () const;  Should the kinematic and potential energies be computed ? More...;  ;  MechanicalParams (const sofa::core::ExecParams &p=sofa::core::ExecParams());  Constructor, initializing all VecIds to default values, implicit and energy flags to false. More...;  ;  MechanicalParams (const MechanicalParams &mparams);  Copy Constructor. More...;  ; MechanicalParams * setExecParams (const core::ExecParams *params);  ; MechanicalParams * operator= (const MechanicalParams &mparams);  ; Flags and parameters getters; SReal dt () const;  Time step. More...;  ; bool implicit () const;  Is the time integration scheme implicit ? More...;  ; SReal mFactor () const;  Mass matrix contributions factor (for implicit schemes) More...;  ; SReal bFactor () const;  Damping matrix contributions factor (for implicit schemes) More...;  ; SReal kFactor () const;  Stiffness matrix contributions factor (for implicit schemes) More...;  ; Rayleigh Damping D = rayleighStiffness*K - rayleighMass*M; SReal kFactorIncludingRayleighDamping (SReal r",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html
Integrability,integrat,integration,"﻿. SOFA API: sofa::core::MechanicalParams Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::MechanicalParams Class Reference . #include <MechanicalParams.h>; Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. ; More... Inheritance diagram for sofa::core::MechanicalParams:. [legend]; Detailed Description; Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. . Protected Attributes; SReal m_dt;  Time step. More...;  ; bool m_implicit;  Is the time integration scheme implicit ? More...;  ; bool m_energy;  Should the kinematic and potential energies be computed ? More...;  ; ConstMultiVecCoordId m_x;  Ids of position vector. More...;  ; ConstMultiVecDerivId m_v;  Ids of velocity vector. More...;  ; ConstMultiVecDerivId m_f;  Ids of force vector. More...;  ; ConstMultiVecDerivId m_dx;  Ids of dx vector (for implicit schemes) More...;  ; ConstMultiVecDerivId m_df;  Ids of df vector (for implicit schemes) More...;  ; SReal m_mFactor;  Mass matrix contributions factor (for implicit schemes) More...;  ; SReal m_bFactor;  Damping matrix contributions factor (for implicit schemes) More...;  ; SReal m_kFactor;  Stiffness matrix contributions factor (for implicit schemes) More...;  ; bool m_supportOnlySymmetricMatrix;  True if a symmetric matrix is assumed in the left-hand term of the dynamics equations, for solvers specialized on symmetric matrices. More...;  . Public Member Functions; bool symmetricMatrix () const =delete;  ; bool supportOnlySymmetricMatrix () const;  Symmetric matrix flag, for solvers specialized on symmetric matrices. More...;  ; bool energy () const;  Should the kinematic and potential energies be computed ? More...;  ;  MechanicalParams (const sofa::core::ExecParams &p=sofa::core::ExecParams());  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html
Modifiability,inherit,inherited,"ng (SReal rayleighStiffness) const;  ; SReal mFactorIncludingRayleighDamping (SReal rayleighMass) const;  ; Access to vectors from a given state container (i.e. State or MechanicalState); template<class S > ; const Data< typename S::VecCoord > * readX (const S *state) const;  Read access to current position vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readV (const S *state) const;  Read access to current velocity vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readF (const S *state) const;  Read access to current force vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readDx (const S *state) const;  Read access to current dx vector (for implicit schemes) More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readDf (const S *state) const;  Read access to current df vector (for implicit schemes) More...;  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static const MechanicalParams * defaultInstance ();  Get the default MechanicalParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for meth",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html
Security,access,access,"...;  ;  MechanicalParams (const MechanicalParams &mparams);  Copy Constructor. More...;  ; MechanicalParams * setExecParams (const core::ExecParams *params);  ; MechanicalParams * operator= (const MechanicalParams &mparams);  ; Flags and parameters getters; SReal dt () const;  Time step. More...;  ; bool implicit () const;  Is the time integration scheme implicit ? More...;  ; SReal mFactor () const;  Mass matrix contributions factor (for implicit schemes) More...;  ; SReal bFactor () const;  Damping matrix contributions factor (for implicit schemes) More...;  ; SReal kFactor () const;  Stiffness matrix contributions factor (for implicit schemes) More...;  ; Rayleigh Damping D = rayleighStiffness*K - rayleighMass*M; SReal kFactorIncludingRayleighDamping (SReal rayleighStiffness) const;  ; SReal mFactorIncludingRayleighDamping (SReal rayleighMass) const;  ; Access to vectors from a given state container (i.e. State or MechanicalState); template<class S > ; const Data< typename S::VecCoord > * readX (const S *state) const;  Read access to current position vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readV (const S *state) const;  Read access to current velocity vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readF (const S *state) const;  Read access to current force vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readDx (const S *state) const;  Read access to current dx vector (for implicit schemes) More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readDf (const S *state) const;  Read access to current df vector (for implicit schemes) More...;  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::MechanicalStatesMatrixAccumulators< c > Member List . This is the complete list of members for sofa::core::MechanicalStatesMatrixAccumulators< c >, including all inherited members. ComponentType typedefsofa::core::MechanicalStatesMatrixAccumulators< c >; getMechanicalParams() constsofa::core::MechanicalStatesMatrixAccumulators< c >inline; m_submatrixsofa::core::MechanicalStatesMatrixAccumulators< c >; MatrixAccumulator typedefsofa::core::MechanicalStatesMatrixAccumulators< c >; MechanicalStatesMatrixAccumulators()=defaultsofa::core::MechanicalStatesMatrixAccumulators< c >; setMatrixAccumulator(MatrixAccumulator *matrixAccumulator, BaseState *mstate1, BaseState *mstate2)sofa::core::MechanicalStatesMatrixAccumulators< c >; setMatrixAccumulator(MatrixAccumulator *matrixAccumulator, BaseState *mstate1)sofa::core::MechanicalStatesMatrixAccumulators< c >; setMechanicalParams(const core::MechanicalParams *mparams)sofa::core::MechanicalStatesMatrixAccumulators< c >inline; ~MechanicalStatesMatrixAccumulators()=defaultsofa::core::MechanicalStatesMatrixAccumulators< c >virtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_states_matrix_accumulators-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_states_matrix_accumulators-members.html
Deployability,update,updateInternal,"tring > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to)sofa::core::BaseMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE3(Multi2Mapping, TIn1, TIn2, TOut), BaseMapping)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelssofa::core::Multi2Mapping< TIn1, TIn2, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappinginlinevirtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecFromModels1 typedefsofa::core::Multi2Mapping< TIn1, TIn2, TOut >; VecFromModels2 typedefsofa::core::Multi2Mapping< TIn1, TIn2, TOut >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecToModels typedefsofa::core::Multi2Mapping< TIn1, TIn2, TOut >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Multi2Mapping() overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlineprotect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::Multi2Mapping< TIn1, TIn2, TOut > Member List . This is the complete list of members for sofa::core::Multi2Mapping< TIn1, TIn2, TOut >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInputModel1(State< In1 > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addInputModel2(State< In2 > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputModel(State< Out > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; apply(const MechanicalParams *mparams, const type::vector< DataVecCoord_t< Out > * > &dataVecOutPos, const type::vector< const DataVecCoord_t< In1 > * > &dataVecIn1Pos, const type::vector< const DataVecCoord_t< In2 > * > &dataVecIn2Pos)=0s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html
Performance,load,loader,"stsofa::core::BaseMappinginlinevirtual; setConstraintsMapped(bool b)sofa::core::BaseMappingvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setForcesMapped(bool b)sofa::core::BaseMappingvirtual; setFrom(BaseState *from)sofa::core::BaseMappingvirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMassesMapped(bool b)sofa::core::BaseMappingvirtual; setMatricesMapped(bool b)sofa::core::BaseMappingvirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNonMechanical()sofa::core::BaseMappingvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to)sofa::core::BaseMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE3(Multi2Mapping, TIn1, TIn2, TOut), BaseMapping)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelssofa::core::Multi2Mapping< TIn1, TIn2, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInputModel1(State< In1 > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addInputModel2(State< In2 > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputModel(State< Out > *, const std::string &path="""")sofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; apply(const MechanicalParams *mparams, const type::vector< DataVecCoord_t< Out > * > &dataVecOutPos, const type::vector< const DataVecCoord_t< In1 > * > &dataVecIn1Pos, const type::vector< const DataVecCoord_t< In2 > * > &dataVecIn2Pos)=0s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html
Usability,clear,clearLoggedMessages,"ingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; computeAccFromMapping(const MechanicalParams *, const type::vector< DataVecDeriv_t< Out > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Multi2Mapping< TIn1, TIn2, TO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html
Availability,down,down,"  ; virtual void applyJT (const ConstraintParams *, const type::vector< DataMatrixDeriv_t< In1 > * > &, const type::vector< DataMatrixDeriv_t< In2 > * > &, const type::vector< const DataMatrixDeriv_t< Out > * > &);  This method must be reimplemented by all mappings if they need to support constraints. More...;  ; void computeAccFromMapping (const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) override;  computeAccFromMapping More...;  ; virtual void computeAccFromMapping (const MechanicalParams *, const type::vector< DataVecDeriv_t< Out > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &);  This method must be reimplemented by all mappings if they need to support composite accelerations. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void disable () override;  ;  Public Member Functions inherited from sofa::core::BaseMapping;  SOFA_ABSTRACT_CLASS (BaseMapping, objectmodel::BaseObject);  ; virtual bool isLinear () const;  ; virtual bool setFrom (BaseState *from);  If the type is compatible set the input model and return true, otherwise do nothing and return false. More...;  ; virtual bool setTo (BaseState *to);  If the type is compatible set the output model and return true, otherwise do nothing and return false. More...;  ; virtual bool isMechanical () const;  Return true if this mapping should be used as a mechanical mapping. More...;  ; virtual bool sameTopology () const;  ; virtual const sofa::linearalgebra::BaseMatrix * getJ (const MechanicalParams *);  ; virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; virtual sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html
Deployability,update,updateK," virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; virtual sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void applyDJT (const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0;  Accumulate a change of parent force due to the change of the mapping, for a constant child force. Null for linear mappings. More...;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::Multi2Mapping< TIn1, TIn2, TOut > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::Multi2Mapping< TIn1, TIn2, TOut > Class Template Referenceabstract . #include <Multi2Mapping.h>; Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. ; More... Inheritance diagram for sofa::core::Multi2Mapping< TIn1, TIn2, TOut >:. [legend]; Detailed Description; template<class TIn1, class TIn2, class TOut>; class sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object boundi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html
Modifiability,inherit,inherited,"en source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::Multi2Mapping< TIn1, TIn2, TOut > Class Template Referenceabstract . #include <Multi2Mapping.h>; Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. ; More... Inheritance diagram for sofa::core::Multi2Mapping< TIn1, TIn2, TOut >:. [legend]; Detailed Description; template<class TIn1, class TIn2, class TOut>; class sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the compon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html
Performance,load,loader,"fa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html
Deployability,update,updateInternal,"core::BaseMappingvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to)sofa::core::BaseMappingvirtual; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::MultiMapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(MultiMapping, TIn, TOut), BaseMapping)sofa::core::MultiMapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelssofa::core::MultiMapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappinginlinevirtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecFromModels typedefsofa::core::MultiMapping< TIn, TOut >protected; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecToModels typedefsofa::core::MultiMapping< TIn, TOut >protected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~MultiMapping() overridesofa::core::MultiMapping< TIn, TOut >inlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::MultiMapping< TIn, TOut > Member List . This is the complete list of members for sofa::core::MultiMapping< TIn, TOut >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInputModel(BaseState *model, const std::string &path="""")sofa::core::MultiMapping< TIn, TOut >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputModel(BaseState *model, const std::string &path="""")sofa::core::MultiMapping< TIn, TOut >; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::MultiMapping< TIn, TOut >virtual; apply(const MechanicalParams *mparams, const type::vector< OutDataVecCoord * > &dataVecOutPos, const type::vector< const InDataVecCoord * > &dataVecInPos)=0sofa::core::MultiMapping< TIn, TOut >pure virtual; applyDJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJ(const MechanicalParams *mparams, MultiVecDerivId out",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html
Performance,load,loader,"stsofa::core::BaseMappinginlinevirtual; setConstraintsMapped(bool b)sofa::core::BaseMappingvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setForcesMapped(bool b)sofa::core::BaseMappingvirtual; setFrom(BaseState *from)sofa::core::BaseMappingvirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMassesMapped(bool b)sofa::core::BaseMappingvirtual; setMatricesMapped(bool b)sofa::core::BaseMappingvirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNonMechanical()sofa::core::BaseMappingvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to)sofa::core::BaseMappingvirtual; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::MultiMapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(MultiMapping, TIn, TOut), BaseMapping)sofa::core::MultiMapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelssofa::core::MultiMapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInputModel(BaseState *model, const std::string &path="""")sofa::core::MultiMapping< TIn, TOut >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputModel(BaseState *model, const std::string &path="""")sofa::core::MultiMapping< TIn, TOut >; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply(const MechanicalParams *mparams, MultiVecCoordId outPos, ConstMultiVecCoordId inPos) overridesofa::core::MultiMapping< TIn, TOut >virtual; apply(const MechanicalParams *mparams, const type::vector< OutDataVecCoord * > &dataVecOutPos, const type::vector< const InDataVecCoord * > &dataVecInPos)=0sofa::core::MultiMapping< TIn, TOut >pure virtual; applyDJT(const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0sofa::core::BaseMappingpure virtual; applyJ(const MechanicalParams *mparams, MultiVecDerivId out",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html
Usability,clear,clearLoggedMessages,"BaseMappingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeAccFromMapping(const MechanicalParams *, const type::vector< OutDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &)sofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html
Deployability,update,updateK," virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; virtual sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void applyDJT (const MechanicalParams *mparams, MultiVecDerivId inForce, ConstMultiVecDerivId outForce)=0;  Accumulate a change of parent force due to the change of the mapping, for a constant child force. Null for linear mappings. More...;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::MultiMapping< TIn, TOut > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::MultiMapping< TIn, TOut > Class Template Referenceabstract . #include <MultiMapping.h>; Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. ; More... Inheritance diagram for sofa::core::MultiMapping< TIn, TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::core::MultiMapping< TIn, TOut >; Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object boundi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html
Modifiability,inherit,inherited,"e framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::MultiMapping< TIn, TOut > Class Template Referenceabstract . #include <MultiMapping.h>; Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. ; More... Inheritance diagram for sofa::core::MultiMapping< TIn, TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::core::MultiMapping< TIn, TOut >; Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the compon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html
Performance,load,loader,"fa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectCreator< RealObject > Member List . This is the complete list of members for sofa::core::ObjectCreator< RealObject >, including all inherited members. canCreate(objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg) overridesofa::core::ObjectCreator< RealObject >inlinevirtual; createInstance(objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg) overridesofa::core::ObjectCreator< RealObject >inlinevirtual; getClass() overridesofa::core::ObjectCreator< RealObject >inlinevirtual; getHeaderFileLocation() overridesofa::core::ObjectCreator< RealObject >inlinevirtual; getTarget() overridesofa::core::ObjectCreator< RealObject >inlinevirtual; SPtr typedefsofa::core::ObjectFactory::Creator; type() overridesofa::core::ObjectCreator< RealObject >inlinevirtual; ~Creator()sofa::core::ObjectFactory::Creatorinlinevirtual. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_creator-members.html
Modifiability,inherit,inherited,"e RealObject. ; More... Inheritance diagram for sofa::core::ObjectCreator< RealObject >:. [legend]; Detailed Description; template<class RealObject>; class sofa::core::ObjectCreator< RealObject >; Typed Creator class used to create instances of object type RealObject. . Public Member Functions; bool canCreate (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg) override;  ; objectmodel::BaseObject::SPtr createInstance (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg) override;  ; const std::type_info & type () override;  type_info structure associated with the type of intanciated objects. More...;  ; const objectmodel::BaseClass * getClass () override;  BaseClass structure associated with the type of intanciated objects. More...;  ; const char * getTarget () override;  The name of the library or executable containing the binary code for this component. More...;  ; const char * getHeaderFileLocation () override;  ;  Public Member Functions inherited from sofa::core::ObjectFactory::Creator; virtual ~Creator ();  . Function details. ◆ canCreate(). template<class RealObject > . bool sofa::core::ObjectCreator< RealObject >::canCreate ; (; objectmodel::BaseContext * ; context, . objectmodel::BaseObjectDescription * ; arg . ). inlineoverridevirtual . Pre-construction check.; Returnstrue if the object can be created successfully. ; Implements sofa::core::ObjectFactory::Creator. ◆ createInstance(). template<class RealObject > . objectmodel::BaseObject::SPtr sofa::core::ObjectCreator< RealObject >::createInstance ; (; objectmodel::BaseContext * ; context, . objectmodel::BaseObjectDescription * ; arg . ). inlineoverridevirtual . Construction method called by the factory.; PreconditioncanCreate(context, arg) == true. ; Implements sofa::core::ObjectFactory::Creator. ◆ getClass(). template<class RealObject > . const objectmodel::BaseClass* sofa::core::ObjectCreator< RealObject >::getClass ; (; ). inlineoverridevirtual . BaseClass ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_creator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_creator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectFactory Member List . This is the complete list of members for sofa::core::ObjectFactory, including all inherited members. AddAlias(std::string name, std::string result, bool force=false, ClassEntry::SPtr *previous=nullptr)sofa::core::ObjectFactoryinlinestatic; addAlias(std::string name, std::string target, bool force=false, ClassEntry::SPtr *previous=nullptr)sofa::core::ObjectFactory; ClassEntryMap typedefsofa::core::ObjectFactory; CreateObject(objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::ObjectFactoryinlinestatic; createObject(objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::ObjectFactory; CreatorMap typedefsofa::core::ObjectFactory; dump(std::ostream &out=std::cout)sofa::core::ObjectFactory; dumpHTML(std::ostream &out=std::cout)sofa::core::ObjectFactory; dumpXML(std::ostream &out=std::cout)sofa::core::ObjectFactory; getAllEntries(std::vector< ClassEntry::SPtr > &result, bool filterUnloadedPlugins=true)sofa::core::ObjectFactory; getEntriesDerivedFrom(std::vector< ClassEntry::SPtr > &result) constsofa::core::ObjectFactory; getEntriesFromTarget(std::vector< ClassEntry::SPtr > &result, std::string target)sofa::core::ObjectFactory; getEntry(std::string classname)sofa::core::ObjectFactory; getInstance()sofa::core::ObjectFactorystatic; HasCreator(std::string classname)sofa::core::ObjectFactoryinlinestatic; hasCreator(std::string classname)sofa::core::ObjectFactory; listClassesDerivedFrom(const std::string &separator="", "") constsofa::core::ObjectFactory; listClassesFromTarget(std::string target, std::string separator="", "")sofa::core::ObjectFactory; m_callbackOnCreatesofa::core::ObjectFactoryprotected; m_registeredPluginSetsofa::core::ObjectFactoryprotected; RegisteredPluginSet typedefsofa::core::ObjectFactoryprotected; registerObjects(ObjectRegistrationData &ro)sofa::core::Obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_factory-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory-members.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::ObjectFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::ObjectFactory Class Reference . #include <ObjectFactory.h>. Classes; class  ClassEntry;  Record storing information about a class. More...;  ; class  Creator;  Abstract interface of objects used to create instances of a given type. More...;  . Protected Attributes; ClassEntryMap registry;  Main class registry. More...;  ; OnCreateCallback m_callbackOnCreate;  ; RegisteredPluginSet m_registeredPluginSet;  . Public Member Functions;  ~ObjectFactory ();  ; ClassEntry & getEntry (std::string classname);  Get an entry given a class name (or alias) More...;  ; bool hasCreator (std::string classname);  Test if a creator exists for a given classname. More...;  ; std::string shortName (std::string classname);  ; void getAllEntries (std::vector< ClassEntry::SPtr > &result, bool filterUnloadedPlugins=true);  Fill the given vector with all the registered classes. More...;  ; void getEntriesFromTarget (std::vector< ClassEntry::SPtr > &result, std::string target);  Fill the given vector with the registered classes from a given target. More...;  ; std::string listClassesFromTarget (std::string target, std::string separator="", "");  Return the list of classes from a given target. More...;  ; template<class BaseClass > ; void getEntriesDerivedFrom (std::vector< ClassEntry::SPtr > &result) const;  Fill the given vector with all the registered classes derived from BaseClass. More...;  ; template<class BaseClass > ; std::string listClassesDerivedFrom (const std::string &separator="", "") const;  Return the list of classes derived from BaseClass as a string. More...;  ; bool addAlias (std::string name, std::string target, bool force=false, ClassEntry::SPtr *previous=nullptr);  ; void resetAlias (std::string name, ClassEntry::SPtr previ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html
Modifiability,plugin,pluginName,"e registered classes derived from BaseClass. More...;  ; template<class BaseClass > ; std::string listClassesDerivedFrom (const std::string &separator="", "") const;  Return the list of classes derived from BaseClass as a string. More...;  ; bool addAlias (std::string name, std::string target, bool force=false, ClassEntry::SPtr *previous=nullptr);  ; void resetAlias (std::string name, ClassEntry::SPtr previous);  ; objectmodel::BaseObject::SPtr createObject (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  Create an object given a context and a description. More...;  ; void dump (std::ostream &out=std::cout);  Dump the content of the factory to a text stream. More...;  ; void dumpXML (std::ostream &out=std::cout);  Dump the content of the factory to a XML stream. More...;  ; void dumpHTML (std::ostream &out=std::cout);  Dump the content of the factory to a HTML stream. More...;  ; void setCallback (OnCreateCallback cb);  ; bool registerObjectsFromPlugin (const std::string &pluginName);  ; bool registerObjects (ObjectRegistrationData &ro);  . Static Public Member Functions; static ObjectFactory * getInstance ();  Get the ObjectFactory singleton instance. More...;  ; static objectmodel::BaseObject::SPtr CreateObject (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  Create an object given a context and a description. More...;  ; static bool AddAlias (std::string name, std::string result, bool force=false, ClassEntry::SPtr *previous=nullptr);  ; static void ResetAlias (std::string name, ClassEntry::SPtr previous);  ; static bool HasCreator (std::string classname);  Test if a creator exists for a given classname. More...;  ; static std::string ShortName (std::string classname);  . Attribute details. ◆ m_callbackOnCreate. OnCreateCallback sofa::core::ObjectFactory::m_callbackOnCreate. protected . ◆ m_registeredPluginSet. RegisteredPluginSet sofa::core::ObjectFactory::m_registeredPluginSet. protected . ◆ registry. Cla",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectFactory::ClassEntry Member List . This is the complete list of members for sofa::core::ObjectFactory::ClassEntry, including all inherited members. aliasessofa::core::ObjectFactory::ClassEntry; authorssofa::core::ObjectFactory::ClassEntry; classNamesofa::core::ObjectFactory::ClassEntry; creatorMapsofa::core::ObjectFactory::ClassEntry; defaultTemplatesofa::core::ObjectFactory::ClassEntry; descriptionsofa::core::ObjectFactory::ClassEntry; documentationURLsofa::core::ObjectFactory::ClassEntry; licensesofa::core::ObjectFactory::ClassEntry; m_dataAliassofa::core::ObjectFactory::ClassEntry; SPtr typedefsofa::core::ObjectFactory::ClassEntry. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_class_entry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_class_entry-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectFactory::Creator Member List . This is the complete list of members for sofa::core::ObjectFactory::Creator, including all inherited members. canCreate(objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)=0sofa::core::ObjectFactory::Creatorpure virtual; createInstance(objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)=0sofa::core::ObjectFactory::Creatorpure virtual; getClass()=0sofa::core::ObjectFactory::Creatorpure virtual; getHeaderFileLocation()=0sofa::core::ObjectFactory::Creatorpure virtual; getTarget()=0sofa::core::ObjectFactory::Creatorpure virtual; SPtr typedefsofa::core::ObjectFactory::Creator; type()=0sofa::core::ObjectFactory::Creatorpure virtual; ~Creator()sofa::core::ObjectFactory::Creatorinlinevirtual. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_creator-members.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::ObjectFactory::Creator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::ObjectFactory::Creator Class Referenceabstract . #include <ObjectFactory.h>; Abstract interface of objects used to create instances of a given type. ; More... Inheritance diagram for sofa::core::ObjectFactory::Creator:. [legend]; Detailed Description; Abstract interface of objects used to create instances of a given type. . Public Member Functions; virtual ~Creator ();  ; virtual bool canCreate (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)=0;  ; virtual objectmodel::BaseObject::SPtr createInstance (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)=0;  ; virtual const std::type_info & type ()=0;  type_info structure associated with the type of intanciated objects. More...;  ; virtual const objectmodel::BaseClass * getClass ()=0;  BaseClass structure associated with the type of intanciated objects. More...;  ; virtual const char * getTarget ()=0;  The name of the library or executable containing the binary code for this component. More...;  ; virtual const char * getHeaderFileLocation ()=0;  . Constructor details. ◆ ~Creator(). virtual sofa::core::ObjectFactory::Creator::~Creator ; (; ). inlinevirtual . Function details. ◆ canCreate(). virtual bool sofa::core::ObjectFactory::Creator::canCreate ; (; objectmodel::BaseContext * ; context, . objectmodel::BaseObjectDescription * ; arg . ). pure virtual . Pre-construction check.; Returnstrue if the object can be created successfully. ; Implemented in sofa::core::ObjectCreator< RealObject >. ◆ createInstance(). virtual objectmodel::BaseObject::SPtr sofa::core::ObjectFactory::Creator::createInstance ; (; objectmodel::BaseContext * ; context, . objectmodel::BaseObjectDescription * ; arg . ). pure virtual . Construction method called by the factory.; PreconditioncanCreate(cont",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_creator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_creator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectRegistrationData Member List . This is the complete list of members for sofa::core::ObjectRegistrationData, including all inherited members. add(bool defaultTemplate=false)sofa::core::ObjectRegistrationDatainline; addAlias(std::string val)sofa::core::ObjectRegistrationData; addAuthor(std::string val)sofa::core::ObjectRegistrationData; addCreator(std::string classname, std::string templatename, ObjectFactory::Creator::SPtr creator)sofa::core::ObjectRegistrationData; addDescription(std::string val)sofa::core::ObjectRegistrationData; addDocumentationURL(std::string url)sofa::core::ObjectRegistrationData; addLicense(std::string val)sofa::core::ObjectRegistrationData; commitTo(sofa::core::ObjectFactory *objectFactory) constsofa::core::ObjectRegistrationData; entrysofa::core::ObjectRegistrationDataprotected; ObjectRegistrationData(const std::string &description)sofa::core::ObjectRegistrationDataexplicit. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_registration_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_registration_data-members.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::core::ObjectRegistrationData Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::ObjectRegistrationData Class Reference . #include <ObjectFactory.h>; Helper class used to register a class in the ObjectFactory. ; More...; Detailed Description; Helper class used to register a class in the ObjectFactory. ; This class accumulate information about a given class, as well as creators for each supported template instantiation, to register a new entry in the ObjectFactory.; It should be used as a temporary object, finalized when used to initialize an int static variable. For example : int Fluid3DClass = core::RegisterObject(""Eulerian 3D fluid""); .add\< Fluid3D \>(); .addLicense(""LGPL""); ;; sofa::core::ObjectRegistrationData::addLicenseObjectRegistrationData & addLicense(std::string val)Specify a license (LGPL, GPL, ...)Definition: ObjectFactory.cpp:668; . Protected Attributes; ObjectFactory::ClassEntry entry;  Class entry being constructed. More...;  . Public Member Functions;  ObjectRegistrationData (const std::string &description);  Start the registration by giving the description of this class. More...;  ; ObjectRegistrationData & addAlias (std::string val);  Add an alias name for this class. More...;  ; ObjectRegistrationData & addDescription (std::string val);  Add more descriptive text about this class. More...;  ; ObjectRegistrationData & addAuthor (std::string val);  Specify a list of authors (separated with spaces) More...;  ; ObjectRegistrationData & addLicense (std::string val);  Specify a license (LGPL, GPL, ...) More...;  ; ObjectRegistrationData & addDocumentationURL (std::string url);  Specify a documentation URL. More...;  ; ObjectRegistrationData & addCreator (std::string classname, std::string templatename, ObjectFactory::Creator::SPtr creator);  ; template<class RealObject > ; ObjectRegistrationData & add (bool defau",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_object_registration_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_registration_data.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::PathResolver Member List . This is the complete list of members for sofa::core::PathResolver, including all inherited members. CheckPath(Base *base, T *&, const std::string &path, const BaseLink *link)sofa::core::PathResolverinlinestatic; CheckPath(Base *context, const std::string &path)sofa::core::PathResolverinlinestatic; CheckPath(sofa::core::objectmodel::Base *context, const std::string &path)sofa::core::PathResolverstatic; CheckPath(sofa::core::objectmodel::Base *context, const BaseClass *classType, const std::string &path)sofa::core::PathResolverstatic; CheckPaths(Base *context, const BaseClass *linktype, const std::string &pathes)sofa::core::PathResolverstatic; FindBaseDataFromPath(Base *base, const std::string &path)sofa::core::PathResolverstatic; FindBaseDataFromPath(const BaseData *context, const std::string &path)sofa::core::PathResolverstatic; FindBaseFromClassAndPath(const Base *base, const BaseClass *destType, const std::string &path)sofa::core::PathResolverstatic; FindBaseFromPath(const Base *base, const std::string &path)sofa::core::PathResolverstatic; FindDataLinkDest(Base *base, BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::PathResolverstatic; FindLink(sofa::core::objectmodel::Base *base, const std::string &path)sofa::core::PathResolverstatic; FindLinkDest(Base *base, T *&ptr, const std::string &path, const BaseLink *link)sofa::core::PathResolverinlinestatic; FindLinkDestClass(Base *context, const BaseClass *destType, const std::string &path, const BaseLink *link)sofa::core::PathResolverstatic; PathHasValidSyntax(const std::string &path)sofa::core::PathResolverstatic. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_path_resolver-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_path_resolver-members.html
Security,expose,exposes,"﻿. SOFA API: sofa::core::PathResolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::core::PathResolver Class Reference . #include <PathResolver.h>; This class exposes an API to query a context to find Base* or a BaseData*. ; More...; Detailed Description; This class exposes an API to query a context to find Base* or a BaseData*. . Static Public Member Functions; static Base * FindBaseFromPath (const Base *base, const std::string &path);  ; static Base * FindBaseFromClassAndPath (const Base *base, const BaseClass *destType, const std::string &path);  ; static BaseData * FindBaseDataFromPath (Base *base, const std::string &path);  ; static BaseData * FindBaseDataFromPath (const BaseData *context, const std::string &path);  ; static bool PathHasValidSyntax (const std::string &path);  ; static bool FindDataLinkDest (Base *base, BaseData *&ptr, const std::string &path, const BaseLink *link);  ; static Base * FindLinkDestClass (Base *context, const BaseClass *destType, const std::string &path, const BaseLink *link);  ; template<class T > ; static bool FindLinkDest (Base *base, T *&ptr, const std::string &path, const BaseLink *link);  ; static sofa::core::objectmodel::Base * FindLink (sofa::core::objectmodel::Base *base, const std::string &path);  ; template<class T > ; static bool CheckPath (Base *base, T *&, const std::string &path, const BaseLink *link);  ; template<class T > ; static bool CheckPath (Base *context, const std::string &path);  ; static bool CheckPath (sofa::core::objectmodel::Base *context, const std::string &path);  Check that a given path is valid and that the pointed object exists regardless of its type. More...;  ; static bool CheckPaths (Base *context, const BaseClass *linktype, const std::string &pathes);  Check that a given set of path is valid and that the pointed object exists and is of the right type. More...;  ; static bool CheckPath (sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_path_resolver.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_path_resolver.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::RegisterObject Member List . This is the complete list of members for sofa::core::RegisterObject, including all inherited members. add(bool defaultTemplate=false)sofa::core::RegisterObjectinline; addAlias(std::string val)sofa::core::RegisterObject; addAuthor(std::string val)sofa::core::RegisterObject; addCreator(std::string classname, std::string templatename, ObjectFactory::Creator::SPtr creator)sofa::core::RegisterObject; addDescription(std::string val)sofa::core::RegisterObject; addDocumentationURL(std::string url)sofa::core::RegisterObject; addLicense(std::string val)sofa::core::RegisterObject; commitTo(ObjectFactory *factory) constsofa::core::RegisterObject; operator int() constsofa::core::RegisterObject; RegisterObject(const std::string &description)sofa::core::RegisterObjectexplicit. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_register_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_register_object-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::SofaLibrary Member List . This is the complete list of members for sofa::core::SofaLibrary, including all inherited members. addCategory(CategoryLibrary *)sofa::core::SofaLibraryprotectedvirtual; build(const std::vector< std::string > &examples=std::vector< std::string >())sofa::core::SofaLibraryvirtual; categoriessofa::core::SofaLibraryprotected; clear()sofa::core::SofaLibraryvirtual; computeNumComponents()sofa::core::SofaLibraryprotected; createCategory(const std::string &category, unsigned int)sofa::core::SofaLibraryinlineprotectedvirtual; exampleFilessofa::core::SofaLibraryprotected; getCategories() constsofa::core::SofaLibraryinline; getCategory(const std::string &categoryName) constsofa::core::SofaLibrary; getComponent(const std::string &componentName) constsofa::core::SofaLibrary; getComponentDescription(const std::string &componentName) constsofa::core::SofaLibrary; getNumComponents() constsofa::core::SofaLibraryinline; numComponentssofa::core::SofaLibraryprotected; VecCategory typedefsofa::core::SofaLibrary; VecCategoryIterator typedefsofa::core::SofaLibrary; ~SofaLibrary()sofa::core::SofaLibraryinlinevirtual. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_sofa_library-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::SofaLibrary Member List . This is the complete list of members for sofa::core::SofaLibrary, including all inherited members. addCategory(CategoryLibrary *)sofa::core::SofaLibraryprotectedvirtual; build(const std::vector< std::string > &examples=std::vector< std::string >())sofa::core::SofaLibraryvirtual; categoriessofa::core::SofaLibraryprotected; clear()sofa::core::SofaLibraryvirtual; computeNumComponents()sofa::core::SofaLibraryprotected; createCategory(const std::string &category, unsigned int)sofa::core::SofaLibraryinlineprotectedvirtual; exampleFilessofa::core::SofaLibraryprotected; getCategories() constsofa::core::SofaLibraryinline; getCategory(const std::string &categoryName) constsofa::core::SofaLibrary; getComponent(const std::string &componentName) constsofa::core::SofaLibrary; getComponentDescription(const std::string &componentName) constsofa::core::SofaLibrary; getNumComponents() constsofa::core::SofaLibraryinline; numComponentssofa::core::SofaLibraryprotected; VecCategory typedefsofa::core::SofaLibrary; VecCategoryIterator typedefsofa::core::SofaLibrary; ~SofaLibrary()sofa::core::SofaLibraryinlinevirtual. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_sofa_library-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library-members.html
Usability,clear,clear,"﻿. SOFA API: sofa::core::SofaLibrary Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::SofaLibrary Class Reference . #include <SofaLibrary.h>; An Generic Library. ; More...; Detailed Description; An Generic Library. ; It reads the content of the Object Factory and builds a library of components sorted inside categories. This Interface is used for the Modeler mainly. . Protected Attributes; VecCategory categories;  ; std::vector< std::string > exampleFiles;  ; unsigned int numComponents;  . Public Member Functions; virtual ~SofaLibrary ();  ; virtual void build (const std::vector< std::string > &examples=std::vector< std::string >());  ; virtual void clear ();  ; std::string getComponentDescription (const std::string &componentName) const;  ; const VecCategory & getCategories () const;  ; const CategoryLibrary * getCategory (const std::string &categoryName) const;  ; const ComponentLibrary * getComponent (const std::string &componentName) const;  ; unsigned int getNumComponents () const;  . Protected Member Functions; virtual CategoryLibrary * createCategory (const std::string &category, unsigned int);  ; virtual void addCategory (CategoryLibrary *);  ; void computeNumComponents ();  . Attribute details. ◆ categories. VecCategory sofa::core::SofaLibrary::categories. protected . ◆ exampleFiles. std::vector< std::string > sofa::core::SofaLibrary::exampleFiles. protected . ◆ numComponents. unsigned int sofa::core::SofaLibrary::numComponents. protected . Constructor details. ◆ ~SofaLibrary(). virtual sofa::core::SofaLibrary::~SofaLibrary ; (; ). inlinevirtual . Function details. ◆ addCategory(). void sofa::core::SofaLibrary::addCategory ; (; CategoryLibrary * ; category). protectedvirtual . ◆ build(). void sofa::core::SofaLibrary::build ; (; const std::vector< std::string > & ; examples = std::vector< std::string >()).",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html
Deployability,update,updateInternal,"e; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; sofa::core::BaseState::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::State< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::State< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; write(VecCoordId v)=0sofa::core::State< TDataTypes >pure virtual; write(VecDerivId v)=0sofa::core::State< TDataTypes >pure virtual; write(MatrixDerivId v)=0sofa::core::State< TDataTypes >pure virtual; WriteCoord typedefsofa::core::State< TDataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; WriteDeriv typedefsofa::core::State< TDataTypes >; writeDx()sofa::core::State< TDataTypes >inline; writeForces()sofa::core::State< TDataTypes >inline; WriteOnlyC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::State< TDataTypes > Member List . This is the complete list of members for sofa::core::State< TDataTypes >, including all inherited members. accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; chang",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html
Performance,load,loader,"DerivId forceId) overridesofa::core::State< TDataTypes >virtual; removeInNode(objectmodel::BaseNode *node) overridesofa::core::BaseStatevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resize(Size vsize)=0sofa::core::BaseStatepure virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; sofa::core::BaseState::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::State< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::State< TDataTypes >; VecLink typedefsofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html
Testability,log,logging," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; chang",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html
Usability,clear,clearLoggedMessages,"s, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< TDataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html
Deployability,update,updateInternal,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html
Integrability,interface,interface,"﻿. SOFA API: sofa::core::State< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::State< TDataTypes > Class Template Referenceabstract . #include <State.h>; Component storing position and velocity vectors. ; More... Inheritance diagram for sofa::core::State< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::core::State< TDataTypes >; Component storing position and velocity vectors. ; This class define the interface of components used as source and destination of regular (non mechanical) mapping. It is then specialized as MechanicalState (storing other mechanical data) or MappedModel (if no mechanical data is used, such as for VisualModel).; The given DataTypes class should define the following internal types: ; Real ; sofa::core::State::RealDataTypes::Real RealScalar values (float or double).Definition: State.h:59; : scalar values (float or double). ; Coord ; sofa::core::State::CoordDataTypes::Coord CoordPosition values.Definition: State.h:61; : position values. ; Deriv ; Deriv; : derivative values (velocity). ; VecReal ; VecReal; : container of scalar values with the same API as sofa::type::vector. ; VecCoord ; sofa::core::State::VecCoordDataTypes::VecCoord VecCoordContainer of Coord values with the same API as sofa::type::vector.Definition: State.h:67; : container of Coord values with the same API as sofa::type::vector. ; VecDeriv ; sofa::core::State::VecDerivDataTypes::VecDeriv VecDerivContainer of Deriv values with the same API as sofa::type::vector.Definition: State.h:69; : container of Deriv values with the same API as sofa::type::vector. ; MatrixDeriv ; sofa::core::State::MatrixDerivDataTypes::MatrixDeriv MatrixDerivVector of Jacobians (sparse constraint matrices).Definition: State.h:71; : vector of Jacobians (sparse constraint matrices). . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(State, TDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html
Modifiability,inherit,inherited," the same API as sofa::type::vector.Definition: State.h:69; : container of Deriv values with the same API as sofa::type::vector. ; MatrixDeriv ; sofa::core::State::MatrixDerivDataTypes::MatrixDeriv MatrixDerivVector of Jacobians (sparse constraint matrices).Definition: State.h:71; : vector of Jacobians (sparse constraint matrices). . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; New vectors access API based on VecId; virtual Data< VecCoord > * write (VecCoordId v)=0;  ; virtual const Data< VecCoord > * read (ConstVecCoordId v) const =0;  ; virtual Data< VecDeriv > * write (VecDerivId v)=0;  ; virtual const Data< VecDeriv > * read (ConstVecDerivId v) const =0;  ; virtual Data< MatrixDeriv > * write (MatrixDerivId v)=0;  ; virtual const Data< MatrixDeriv > * read (ConstMatrixDerivId v) const =0;  ; BaseData vectors access API based on VecId; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html
Performance,load,loader,"ConstVecId v) const override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html
Security,access,access," the same API as sofa::type::vector.Definition: State.h:69; : container of Deriv values with the same API as sofa::type::vector. ; MatrixDeriv ; sofa::core::State::MatrixDerivDataTypes::MatrixDeriv MatrixDerivVector of Jacobians (sparse constraint matrices).Definition: State.h:71; : vector of Jacobians (sparse constraint matrices). . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; New vectors access API based on VecId; virtual Data< VecCoord > * write (VecCoordId v)=0;  ; virtual const Data< VecCoord > * read (ConstVecCoordId v) const =0;  ; virtual Data< VecDeriv > * write (VecDerivId v)=0;  ; virtual const Data< VecDeriv > * read (ConstVecDerivId v) const =0;  ; virtual Data< MatrixDeriv > * write (MatrixDerivId v)=0;  ; virtual const Data< MatrixDeriv > * read (ConstMatrixDerivId v) const =0;  ; BaseData vectors access API based on VecId; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_state.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TCollisionElementIterator< TModel > Member List . This is the complete list of members for sofa::core::TCollisionElementIterator< TModel >, including all inherited members. BaseCollisionElementIterator(Index index=0)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(Index index, VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; BaseCollisionElementIterator(VIterator it, VIterator itend)sofa::core::BaseCollisionElementIteratorinline; canCollideWith(const TCollisionElementIterator< Model > &elem) constsofa::core::TCollisionElementIterator< TModel >inline; draw(const core::visual::VisualParams *vparams)sofa::core::TCollisionElementIterator< TModel >inline; emptyVectorsofa::core::BaseCollisionElementIteratorprotectedstatic; getCollisionModel() constsofa::core::TCollisionElementIterator< TModel >inline; getContactFriction() constsofa::core::TCollisionElementIterator< TModel >inline; getContactStiffness() constsofa::core::TCollisionElementIterator< TModel >inline; getExternalChildren() constsofa::core::TCollisionElementIterator< TModel >; getIndex() constsofa::core::BaseCollisionElementIteratorinline; getInternalChildren() constsofa::core::TCollisionElementIterator< TModel >; getProximity() constsofa::core::TCollisionElementIterator< TModel >inline; getVIterator() constsofa::core::BaseCollisionElementIteratorinline; getVIteratorEnd() constsofa::core::BaseCollisionElementIteratorinline; Index typedefsofa::core::BaseCollisionElementIterator; indexsofa::core::BaseCollisionElementIteratorprotected; isActive(core::CollisionModel *cm=nullptr) constsofa::core::TCollisionElementIterator< TModel >inline; isLeaf() constsofa::core::TCollisionElementIterator< TModel >inline; itsofa::core::BaseCollisionElementIteratorprotected; itendsofa::core::BaseCollisionElementIteratorprotected; Model typedefsofa::core::TCollisionEleme",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator-members.html
Modifiability,inherit,inherited,";  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; Wrapper methods to access data and methods inside the CollisionModel.; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Contact friction (damping) coefficient. More...;  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::BaseCollisionElementIterator;  BaseCollisionElementIterator (Index index=0);  ;  BaseCollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::BaseCollisionElementIter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html
Security,access,access," in order to store reference to a specific type of element (such as a Cube in a CubeModel). . Public Attributes; Model * model;  CollisionModel containing the referenced element. More...;  . Public Member Functions;  TCollisionElementIterator (Model *model=nullptr, Index index=0);  ;  TCollisionElementIterator (Model *model, Index index, VIterator it, VIterator itend);  ;  TCollisionElementIterator (Model *model, VIterator it, VIterator itend);  ; bool isActive (core::CollisionModel *cm=nullptr) const;  ; Iterator Interface; template<class Model2 > ; bool operator== (const TCollisionElementIterator< Model2 > &i) const;  ; template<class Model2 > ; bool operator!= (const TCollisionElementIterator< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; Wrapper methods to access data and methods inside the CollisionModel.; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Contact friction (damping) coefficient. More...;  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::BaseCollisionElementIterator;  BaseCollisionElementIterator (Index index=0);  ;  BaseCollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html
Testability,test,test,"ernal children of this element.; See alsoCollisionModel::getInternalChildren . ◆ getProximity(). template<class TModel > . SReal sofa::core::TCollisionElementIterator< TModel >::getProximity ; (; ); const. inline . Distance to the actual (visual) surface. . ◆ isActive(). template<class CollisionModel > . bool sofa::core::TCollisionElementIterator< CollisionModel >::isActive ; (; core::CollisionModel * ; cm = nullptr); const. inline . ◆ isLeaf(). template<class TModel > . bool sofa::core::TCollisionElementIterator< TModel >::isLeaf ; (; ); const. inline . Test if this element is a leaf.; Returnstrue if the element(index) is leaf. i.e. If it is a primitive itself. . ◆ operator!=(). template<class TModel > . template<class Model2 > . bool sofa::core::TCollisionElementIterator< TModel >::operator!= ; (; const TCollisionElementIterator< Model2 > & ; i); const. inline . Compare two iterators. Note that even it the iterators are of different types, they can point to the same element. . ◆ operator+(). template<class TModel > . TCollisionElementIterator sofa::core::TCollisionElementIterator< TModel >::operator+ ; (; int ; n); const. inline . ◆ operator+=(). template<class TModel > . TCollisionElementIterator& sofa::core::TCollisionElementIterator< TModel >::operator+= ; (; int ; n). inline . ◆ operator==(). template<class TModel > . template<class Model2 > . bool sofa::core::TCollisionElementIterator< TModel >::operator== ; (; const TCollisionElementIterator< Model2 > & ; i); const. inline . Compare two iterators. Note that even it the iterators are of different types, they can point to the same element. . ◆ valid(). template<class TModel > . bool sofa::core::TCollisionElementIterator< TModel >::valid ; (; ); const. inline . Test if this iterator is initialized with a valid CollisionModel. Note that it does not test if the referenced element inside the CollisionModel is valid. . sofacoreTCollisionElementIterator; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TMultiVecId< vtype, vaccess > Member List . This is the complete list of members for sofa::core::TMultiVecId< vtype, vaccess >, including all inherited members. assign(const MyVecId &id)sofa::core::TMultiVecId< vtype, vaccess >inline; defaultIdsofa::core::TMultiVecId< vtype, vaccess >protected; getDefaultId() constsofa::core::TMultiVecId< vtype, vaccess >inline; getId(const BaseState *s) constsofa::core::TMultiVecId< vtype, vaccess >inline; getIdMap() constsofa::core::TMultiVecId< vtype, vaccess >inline; getName() constsofa::core::TMultiVecId< vtype, vaccess >inline; hasIdMap() constsofa::core::TMultiVecId< vtype, vaccess >inline; IdMap typedefsofa::core::TMultiVecId< vtype, vaccess >; IdMap_const_iterator typedefsofa::core::TMultiVecId< vtype, vaccess >; IdMap_iterator typedefsofa::core::TMultiVecId< vtype, vaccess >; isNull() constsofa::core::TMultiVecId< vtype, vaccess >inline; MyVecId typedefsofa::core::TMultiVecId< vtype, vaccess >; null()sofa::core::TMultiVecId< vtype, vaccess >inlinestatic; operator<<(std::ostream &out, const TMultiVecId< vtype, vaccess > &v)sofa::core::TMultiVecId< vtype, vaccess >friend; operator=(const TVecId< vtype, vaccess2 > &v)sofa::core::TMultiVecId< vtype, vaccess >inline; operator=(const TMultiVecId< vtype, vaccess > &mv)sofa::core::TMultiVecId< vtype, vaccess >inline; operator=(const TMultiVecId< vtype, vaccess2 > &mv)sofa::core::TMultiVecId< vtype, vaccess >inline; operator=(const TMultiVecId< V_ALL, vaccess2 > &mv)sofa::core::TMultiVecId< vtype, vaccess >inline; operator[](State< DataTypes > *s) constsofa::core::TMultiVecId< vtype, vaccess >inline; operator[](const State< DataTypes > *s) constsofa::core::TMultiVecId< vtype, vaccess >inline; setDefaultId(const MyVecId &id)sofa::core::TMultiVecId< vtype, vaccess >inline; setId(const std::set< State > &states, const MyVecId &id)sofa::core::TMultiVecId< vtype, vaccess >inlin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_multi_vec_id-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_multi_vec_id-members.html
Security,access,access,"﻿. SOFA API: sofa::core::TMultiVecId< vtype, vaccess > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::TMultiVecId< vtype, vaccess > Class Template Reference . #include <MultiVecId.h>. Inheritance diagram for sofa::core::TMultiVecId< vtype, vaccess >:. [legend]; Detailed Description; template<VecType vtype, VecAccess vaccess>; class sofa::core::TMultiVecId< vtype, vaccess >; Identify a vector of a given type stored in multiple State instances This class is templated in order to create different variations (generic versus specific type, read-only vs write access) . Protected Attributes; MyVecId defaultId;  . Public Member Functions; bool hasIdMap () const;  ; const IdMap & getIdMap () const;  ;  TMultiVecId ()=default;  ; template<VecAccess vaccess2> ;  TMultiVecId (const TVecId< vtype, vaccess2 > &v);  ; template<VecAccess vaccess2> ; TMultiVecId< vtype, vaccess > & operator= (const TVecId< vtype, vaccess2 > &v);  Copy assignment from another VecId. More...;  ;  TMultiVecId (const TMultiVecId< vtype, vaccess > &mv);  ; TMultiVecId< vtype, vaccess > & operator= (const TMultiVecId< vtype, vaccess > &mv);  Copy assignment. More...;  ; template<VecAccess vaccess2> ;  TMultiVecId (const TMultiVecId< vtype, vaccess2 > &mv);  ; template<VecAccess vaccess2> ; TMultiVecId< vtype, vaccess > & operator= (const TMultiVecId< vtype, vaccess2 > &mv);  ; template<VecAccess vaccess2> ;  TMultiVecId (const TMultiVecId< V_ALL, vaccess2 > &mv);  ; template<VecAccess vaccess2> ; TMultiVecId< vtype, vaccess > & operator= (const TMultiVecId< V_ALL, vaccess2 > &mv);  ; void setDefaultId (const MyVecId &id);  ; template<class State > ; void setId (const std::set< State > &states, const MyVecId &id);  ; void setId (const BaseState *s, const MyVecId &id);  ; void assign (const MyVecId ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_multi_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_multi_vec_id.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TMultiVecId< V_ALL, vaccess > Member List . This is the complete list of members for sofa::core::TMultiVecId< V_ALL, vaccess >, including all inherited members. assign(const MyVecId &id)sofa::core::TMultiVecId< V_ALL, vaccess >inline; defaultIdsofa::core::TMultiVecId< V_ALL, vaccess >protected; getDefaultId() constsofa::core::TMultiVecId< V_ALL, vaccess >inline; getId(const BaseState *s) constsofa::core::TMultiVecId< V_ALL, vaccess >inline; getIdMap() constsofa::core::TMultiVecId< V_ALL, vaccess >inline; getName() constsofa::core::TMultiVecId< V_ALL, vaccess >inline; hasIdMap() constsofa::core::TMultiVecId< V_ALL, vaccess >inline; IdMap typedefsofa::core::TMultiVecId< V_ALL, vaccess >; IdMap_const_iterator typedefsofa::core::TMultiVecId< V_ALL, vaccess >; IdMap_iterator typedefsofa::core::TMultiVecId< V_ALL, vaccess >; isNull() constsofa::core::TMultiVecId< V_ALL, vaccess >inline; MyVecId typedefsofa::core::TMultiVecId< V_ALL, vaccess >; null()sofa::core::TMultiVecId< V_ALL, vaccess >inlinestatic; operator<<(std::ostream &out, const TMultiVecId< V_ALL, vaccess > &v)sofa::core::TMultiVecId< V_ALL, vaccess >friend; operator=(const TVecId< vtype2, vaccess2 > &v)sofa::core::TMultiVecId< V_ALL, vaccess >inline; operator=(const TMultiVecId< V_ALL, vaccess > &mv)sofa::core::TMultiVecId< V_ALL, vaccess >inline; operator=(const TMultiVecId< vtype2, vaccess2 > &mv)sofa::core::TMultiVecId< V_ALL, vaccess >inline; operator[](State< DataTypes > *s) constsofa::core::TMultiVecId< V_ALL, vaccess >inline; operator[](const State< DataTypes > *s) constsofa::core::TMultiVecId< V_ALL, vaccess >inline; setDefaultId(const MyVecId &id)sofa::core::TMultiVecId< V_ALL, vaccess >inline; setId(const StateSet &states, const MyVecId &id)sofa::core::TMultiVecId< V_ALL, vaccess >inline; setId(const BaseState *s, const MyVecId &id)sofa::core::TMultiVecId< V_ALL, vaccess >inline; TMultiVecId",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_multi_vec_id_3_01_v___a_l_l_00_01vaccess_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_multi_vec_id_3_01_v___a_l_l_00_01vaccess_01_4-members.html
Security,access,access,"es > *s) const;  ; template<class DataTypes > ; StateVecAccessor< DataTypes, V_ALL, V_READ > operator[] (const State< DataTypes > *s) const;  . Static Public Member Functions; static TMultiVecId< V_ALL, vaccess > null ();  . Protected Member Functions; IdMap & writeIdMap ();  . Friends; template<VecType vtype2, VecAccess vaccess2> ; class TMultiVecId;  ; std::ostream & operator<< (std::ostream &out, const TMultiVecId< V_ALL, vaccess > &v);  . Attribute details. ◆ defaultId. template<VecAccess vaccess> . MyVecId sofa::core::TMultiVecId< V_ALL, vaccess >::defaultId. protected . Constructor details. ◆ TMultiVecId() [1/4]. template<VecAccess vaccess> . sofa::core::TMultiVecId< V_ALL, vaccess >::TMultiVecId ; (; ). default . ◆ TMultiVecId() [2/4]. template<VecAccess vaccess> . template<VecType vtype2, VecAccess vaccess2> . sofa::core::TMultiVecId< V_ALL, vaccess >::TMultiVecId ; (; const TVecId< vtype2, vaccess2 > & ; v). inline . Copy from another VecId, possibly with another type of access, with the constraint that the access must be compatible (i.e. cannot create a write-access VecId from a read-only VecId. . ◆ TMultiVecId() [3/4]. template<VecAccess vaccess> . sofa::core::TMultiVecId< V_ALL, vaccess >::TMultiVecId ; (; const TMultiVecId< V_ALL, vaccess > & ; mv). inline . ◆ TMultiVecId() [4/4]. template<VecAccess vaccess> . template<VecType vtype2, VecAccess vaccess2> . sofa::core::TMultiVecId< V_ALL, vaccess >::TMultiVecId ; (; const TMultiVecId< vtype2, vaccess2 > & ; mv). inline . Function details. ◆ assign(). template<VecAccess vaccess> . void sofa::core::TMultiVecId< V_ALL, vaccess >::assign ; (; const MyVecId & ; id). inline . ◆ getDefaultId(). template<VecAccess vaccess> . const MyVecId& sofa::core::TMultiVecId< V_ALL, vaccess >::getDefaultId ; (; ); const. inline . ◆ getId(). template<VecAccess vaccess> . const MyVecId& sofa::core::TMultiVecId< V_ALL, vaccess >::getId ; (; const BaseState * ; s); const. inline . ◆ getIdMap(). template<VecAccess vaccess> . con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_multi_vec_id_3_01_v___a_l_l_00_01vaccess_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_multi_vec_id_3_01_v___a_l_l_00_01vaccess_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TStandardVec< V_ALL, vaccess > Member List . This is the complete list of members for sofa::core::TStandardVec< V_ALL, vaccess >, including all inherited members. constraintJacobian()sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; dforce()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; dx()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; externalForce()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; force()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; freePosition()sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; freeVelocity()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; getFirstDynamicIndex(VecType t)sofa::core::TStandardVec< V_ALL, vaccess >inlinestatic; sofa::getGroup(const MyVecId &v)sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; sofa::core::TStandardVec< V_DERIV, vaccess >::getGroup(const MyVecId &v)sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; sofa::core::TStandardVec< V_MATDERIV, vaccess >::getGroup(const MyVecId &v)sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; getName(const MyVecId &v)sofa::core::TStandardVec< V_ALL, vaccess >inlinestatic; sofa::core::TStandardVec< V_DERIV, vaccess >::getName(const MyVecId &v)sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; sofa::core::TStandardVec< V_MATDERIV, vaccess >::getName(const MyVecId &v)sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; mappingJacobian()sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; MyVecId typedefsofa::core::TStandardVec< V_ALL, vaccess >; normal()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; position()sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; resetPosition()sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; resetVelocity()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; restPosition()sofa::core::TSta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___a_l_l_00_01vaccess_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___a_l_l_00_01vaccess_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::TStandardVec< V_ALL, vaccess > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::core::TStandardVec< V_ALL, vaccess > Class Template Reference . #include <VecId.h>. Inheritance diagram for sofa::core::TStandardVec< V_ALL, vaccess >:. [legend]. Static Public Member Functions; static unsigned int getFirstDynamicIndex (VecType t);  ; static std::string getName (const MyVecId &v);  ;  Static Public Member Functions inherited from sofa::core::TStandardVec< V_COORD, vaccess >; static MyVecId position ();  ; static MyVecId restPosition ();  ; static MyVecId freePosition ();  ; static MyVecId resetPosition ();  ; static std::string getName (const MyVecId &v);  ; static std::string getGroup (const MyVecId &v);  ;  Static Public Member Functions inherited from sofa::core::TStandardVec< V_DERIV, vaccess >; static MyVecId velocity ();  ; static MyVecId resetVelocity ();  ; static MyVecId freeVelocity ();  ; static MyVecId normal ();  ; static MyVecId force ();  ; static MyVecId externalForce ();  ; static MyVecId dx ();  ; static MyVecId dforce ();  ; static std::string getName (const MyVecId &v);  ; static std::string getGroup (const MyVecId &v);  ;  Static Public Member Functions inherited from sofa::core::TStandardVec< V_MATDERIV, vaccess >; static MyVecId constraintJacobian ();  ; static MyVecId mappingJacobian ();  ; static std::string getName (const MyVecId &v);  ; static std::string getGroup (const MyVecId &v);  . Function details. ◆ getFirstDynamicIndex(). template<VecAccess vaccess> . static unsigned int sofa::core::TStandardVec< V_ALL, vaccess >::getFirstDynamicIndex ; (; VecType ; t). inlinestatic . ◆ getName(). template<VecAccess vaccess> . static std::string sofa::core::TStandardVec< V_ALL, vaccess >::getName ; (; const MyVecId & ; v). inlinestatic . sofacoreTStandardVec< V_ALL, vaccess >; Generated on Mon Nov 11 2024 03:14:11 for ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___a_l_l_00_01vaccess_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___a_l_l_00_01vaccess_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TStandardVec< V_COORD, vaccess > Member List . This is the complete list of members for sofa::core::TStandardVec< V_COORD, vaccess >, including all inherited members. freePosition()sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; getGroup(const MyVecId &v)sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; getName(const MyVecId &v)sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; MyVecId typedefsofa::core::TStandardVec< V_COORD, vaccess >; position()sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; resetPosition()sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; restPosition()sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; V_FIRST_DYNAMIC_INDEX enum valuesofa::core::TStandardVec< V_COORD, vaccess >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___c_o_o_r_d_00_01vaccess_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___c_o_o_r_d_00_01vaccess_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TStandardVec< V_DERIV, vaccess > Member List . This is the complete list of members for sofa::core::TStandardVec< V_DERIV, vaccess >, including all inherited members. dforce()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; dx()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; externalForce()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; force()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; freeVelocity()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; getGroup(const MyVecId &v)sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; getName(const MyVecId &v)sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; MyVecId typedefsofa::core::TStandardVec< V_DERIV, vaccess >; normal()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; resetVelocity()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; V_FIRST_DYNAMIC_INDEX enum valuesofa::core::TStandardVec< V_DERIV, vaccess >; velocity()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___d_e_r_i_v_00_01vaccess_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___d_e_r_i_v_00_01vaccess_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TStandardVec< V_MATDERIV, vaccess > Member List . This is the complete list of members for sofa::core::TStandardVec< V_MATDERIV, vaccess >, including all inherited members. constraintJacobian()sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; getGroup(const MyVecId &v)sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; getName(const MyVecId &v)sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; mappingJacobian()sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; MyVecId typedefsofa::core::TStandardVec< V_MATDERIV, vaccess >; V_FIRST_DYNAMIC_INDEX enum valuesofa::core::TStandardVec< V_MATDERIV, vaccess >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___m_a_t_d_e_r_i_v_00_01vaccess_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_standard_vec_3_01_v___m_a_t_d_e_r_i_v_00_01vaccess_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TVecId< vtype, vaccess > Member List . This is the complete list of members for sofa::core::TVecId< vtype, vaccess >, including all inherited members. BaseVecId(VecType t, unsigned int i)sofa::core::BaseVecIdinlineprotected; getGroup() constsofa::core::TVecId< vtype, vaccess >inline; getIndex() constsofa::core::BaseVecIdinline; getName() constsofa::core::TVecId< vtype, vaccess >inline; getType() constsofa::core::BaseVecIdinline; indexsofa::core::BaseVecId; isNull() constsofa::core::TVecId< vtype, vaccess >inline; null()sofa::core::TVecId< vtype, vaccess >inlinestatic; operator!=(const TVecId< vtype2, vaccess2 > &v) constsofa::core::TVecId< vtype, vaccess >inline; operator<<(std::ostream &out, const TVecId &v)sofa::core::TVecId< vtype, vaccess >friend; operator=(const TVecId< vtype, vaccess > &other)sofa::core::TVecId< vtype, vaccess >inline; operator=(const TVecId< vtype, vaccess2 > &other)sofa::core::TVecId< vtype, vaccess >inline; operator=(const TVecId< V_ALL, vaccess2 > &other)sofa::core::TVecId< vtype, vaccess >inline; operator==(const TVecId< vtype2, vaccess2 > &v) constsofa::core::TVecId< vtype, vaccess >inline; TVecId()sofa::core::TVecId< vtype, vaccess >inline; TVecId(unsigned int i)sofa::core::TVecId< vtype, vaccess >inline; TVecId(const TVecId< vtype, vaccess > &v)sofa::core::TVecId< vtype, vaccess >inline; TVecId(const TVecId< vtype, vaccess2 > &v)sofa::core::TVecId< vtype, vaccess >inline; TVecId(const TVecId< V_ALL, vaccess2 > &v)sofa::core::TVecId< vtype, vaccess >inlineexplicit; typesofa::core::BaseVecId. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id-members.html
Modifiability,inherit,inherited,"Class Template Reference . #include <VecId.h>. Inheritance diagram for sofa::core::TVecId< vtype, vaccess >:. [legend]; Detailed Description; template<VecType vtype, VecAccess vaccess>; class sofa::core::TVecId< vtype, vaccess >; Identify a vector of a given type stored in State This class is templated in order to create different variations (generic versus specific type, read-only vs write access) . Public Member Functions;  TVecId ();  ;  TVecId (unsigned int i);  ;  TVecId (const TVecId< vtype, vaccess > &v);  Copy constructor. More...;  ; template<VecAccess vaccess2> ;  TVecId (const TVecId< vtype, vaccess2 > &v);  ; template<VecAccess vaccess2> ;  TVecId (const TVecId< V_ALL, vaccess2 > &v);  ; TVecId< vtype, vaccess > & operator= (const TVecId< vtype, vaccess > &other);  ; template<VecAccess vaccess2> ; TVecId< vtype, vaccess > & operator= (const TVecId< vtype, vaccess2 > &other);  ; template<VecAccess vaccess2> ; TVecId< vtype, vaccess > & operator= (const TVecId< V_ALL, vaccess2 > &other);  ; template<VecType vtype2, VecAccess vaccess2> ; bool operator== (const TVecId< vtype2, vaccess2 > &v) const;  ; template<VecType vtype2, VecAccess vaccess2> ; bool operator!= (const TVecId< vtype2, vaccess2 > &v) const;  ; bool isNull () const;  ; std::string getName () const;  ; std::string getGroup () const;  ;  Public Member Functions inherited from sofa::core::BaseVecId; VecType getType () const;  ; unsigned int getIndex () const;  . Static Public Member Functions; static TVecId null ();  . Friends; std::ostream & operator<< (std::ostream &out, const TVecId &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::BaseVecId; VecType type;  ; unsigned int index;  ;  Protected Member Functions inherited from sofa::core::BaseVecId;  BaseVecId (VecType t, unsigned int i);  . Constructor details. ◆ TVecId() [1/5]. template<VecType vtype, VecAccess vaccess> . sofa::core::TVecId< vtype, vaccess >::TVecId ; (; ). inline . ◆ TVecId() [2/5]. template<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id.html
Security,access,access,"﻿. SOFA API: sofa::core::TVecId< vtype, vaccess > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::core::TVecId< vtype, vaccess > Class Template Reference . #include <VecId.h>. Inheritance diagram for sofa::core::TVecId< vtype, vaccess >:. [legend]; Detailed Description; template<VecType vtype, VecAccess vaccess>; class sofa::core::TVecId< vtype, vaccess >; Identify a vector of a given type stored in State This class is templated in order to create different variations (generic versus specific type, read-only vs write access) . Public Member Functions;  TVecId ();  ;  TVecId (unsigned int i);  ;  TVecId (const TVecId< vtype, vaccess > &v);  Copy constructor. More...;  ; template<VecAccess vaccess2> ;  TVecId (const TVecId< vtype, vaccess2 > &v);  ; template<VecAccess vaccess2> ;  TVecId (const TVecId< V_ALL, vaccess2 > &v);  ; TVecId< vtype, vaccess > & operator= (const TVecId< vtype, vaccess > &other);  ; template<VecAccess vaccess2> ; TVecId< vtype, vaccess > & operator= (const TVecId< vtype, vaccess2 > &other);  ; template<VecAccess vaccess2> ; TVecId< vtype, vaccess > & operator= (const TVecId< V_ALL, vaccess2 > &other);  ; template<VecType vtype2, VecAccess vaccess2> ; bool operator== (const TVecId< vtype2, vaccess2 > &v) const;  ; template<VecType vtype2, VecAccess vaccess2> ; bool operator!= (const TVecId< vtype2, vaccess2 > &v) const;  ; bool isNull () const;  ; std::string getName () const;  ; std::string getGroup () const;  ;  Public Member Functions inherited from sofa::core::BaseVecId; VecType getType () const;  ; unsigned int getIndex () const;  . Static Public Member Functions; static TVecId null ();  . Friends; std::ostream & operator<< (std::ostream &out, const TVecId &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::BaseVecId; VecType type;  ; unsigned int index;  ;  P",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::TVecId< V_ALL, vaccess > Member List . This is the complete list of members for sofa::core::TVecId< V_ALL, vaccess >, including all inherited members. BaseVecId(VecType t, unsigned int i)sofa::core::BaseVecIdinlineprotected; constraintJacobian()sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; dforce()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; dx()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; externalForce()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; force()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; freePosition()sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; freeVelocity()sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; getFirstDynamicIndex(VecType t)sofa::core::TStandardVec< V_ALL, vaccess >inlinestatic; getGroup() constsofa::core::TVecId< V_ALL, vaccess >inline; sofa::core::TStandardVec< V_ALL, vaccess >::getGroup(const MyVecId &v)sofa::core::TStandardVec< V_COORD, vaccess >inlinestatic; sofa::core::TStandardVec< V_ALL, vaccess >::getGroup(const MyVecId &v)sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; sofa::core::TStandardVec< V_ALL, vaccess >::getGroup(const MyVecId &v)sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; getIndex() constsofa::core::BaseVecIdinline; getName() constsofa::core::TVecId< V_ALL, vaccess >inline; sofa::core::TStandardVec< V_ALL, vaccess >::getName(const MyVecId &v)sofa::core::TStandardVec< V_ALL, vaccess >inlinestatic; sofa::core::TStandardVec< V_DERIV, vaccess >::getName(const MyVecId &v)sofa::core::TStandardVec< V_DERIV, vaccess >inlinestatic; sofa::core::TStandardVec< V_MATDERIV, vaccess >::getName(const MyVecId &v)sofa::core::TStandardVec< V_MATDERIV, vaccess >inlinestatic; getType() constsofa::core::BaseVecIdinline; indexsofa::core::BaseVecId; isNull() constsofa::core::TVecId< V_ALL, vaccess >inline; mappingJacobian(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id_3_01_v___a_l_l_00_01vaccess_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id_3_01_v___a_l_l_00_01vaccess_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::core::TVecId< V_ALL, vaccess > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::core::TVecId< V_ALL, vaccess > Class Template Reference . #include <VecId.h>; Identify any vector stored in State. ; More... Inheritance diagram for sofa::core::TVecId< V_ALL, vaccess >:. [legend]; Detailed Description; template<VecAccess vaccess>; class sofa::core::TVecId< V_ALL, vaccess >; Identify any vector stored in State. . Public Member Functions;  TVecId ();  ;  TVecId (VecType t, unsigned int i);  ; template<VecType vtype2, VecAccess vaccess2> ;  TVecId (const TVecId< vtype2, vaccess2 > &v);  ; template<VecType vtype2, VecAccess vaccess2> ; TVecId< V_ALL, vaccess > & operator= (const TVecId< vtype2, vaccess2 > &other);  ; template<VecType vtype2, VecAccess vaccess2> ; bool operator== (const TVecId< vtype2, vaccess2 > &v) const;  ; template<VecType vtype2, VecAccess vaccess2> ; bool operator!= (const TVecId< vtype2, vaccess2 > &v) const;  ; bool isNull () const;  ; std::string getName () const;  ; std::string getGroup () const;  ;  Public Member Functions inherited from sofa::core::BaseVecId; VecType getType () const;  ; unsigned int getIndex () const;  . Static Public Member Functions; static TVecId null ();  ;  Static Public Member Functions inherited from sofa::core::TStandardVec< V_ALL, vaccess >; static unsigned int getFirstDynamicIndex (VecType t);  ; static std::string getName (const MyVecId &v);  ;  Static Public Member Functions inherited from sofa::core::TStandardVec< V_COORD, vaccess >; static MyVecId position ();  ; static MyVecId restPosition ();  ; static MyVecId freePosition ();  ; static MyVecId resetPosition ();  ; static std::string getName (const MyVecId &v);  ; static std::string getGroup (const MyVecId &v);  ;  Static Public Member Functions inherited from sofa::core::TStandardVec< V_DERIV, va",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id_3_01_v___a_l_l_00_01vaccess_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id_3_01_v___a_l_l_00_01vaccess_01_4.html
Security,access,access,"straintJacobian ();  ; static MyVecId mappingJacobian ();  ; static std::string getName (const MyVecId &v);  ; static std::string getGroup (const MyVecId &v);  . Friends; std::ostream & operator<< (std::ostream &out, const TVecId &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::BaseVecId; VecType type;  ; unsigned int index;  ;  Protected Member Functions inherited from sofa::core::BaseVecId;  BaseVecId (VecType t, unsigned int i);  . Constructor details. ◆ TVecId() [1/3]. template<VecAccess vaccess> . sofa::core::TVecId< V_ALL, vaccess >::TVecId ; (; ). inline . ◆ TVecId() [2/3]. template<VecAccess vaccess> . sofa::core::TVecId< V_ALL, vaccess >::TVecId ; (; VecType ; t, . unsigned int ; i . ). inline . ◆ TVecId() [3/3]. template<VecAccess vaccess> . template<VecType vtype2, VecAccess vaccess2> . sofa::core::TVecId< V_ALL, vaccess >::TVecId ; (; const TVecId< vtype2, vaccess2 > & ; v). inline . Create a generic VecId from a specific or generic one, with the constraint that the access must be compatible (i.e. cannot create a write-access VecId from a read-only VecId. . Function details. ◆ getGroup(). template<VecAccess vaccess> . std::string sofa::core::TVecId< V_ALL, vaccess >::getGroup ; (; ); const. inline . ◆ getName(). template<VecAccess vaccess> . std::string sofa::core::TVecId< V_ALL, vaccess >::getName ; (; ); const. inline . ◆ isNull(). template<VecAccess vaccess> . bool sofa::core::TVecId< V_ALL, vaccess >::isNull ; (; ); const. inline . ◆ null(). template<VecAccess vaccess> . static TVecId sofa::core::TVecId< V_ALL, vaccess >::null ; (; ). inlinestatic . ◆ operator!=(). template<VecAccess vaccess> . template<VecType vtype2, VecAccess vaccess2> . bool sofa::core::TVecId< V_ALL, vaccess >::operator!= ; (; const TVecId< vtype2, vaccess2 > & ; v); const. inline . ◆ operator=(). template<VecAccess vaccess> . template<VecType vtype2, VecAccess vaccess2> . TVecId<V_ALL, vaccess>& sofa::core::TVecId< V_ALL, vaccess >::operator= ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id_3_01_v___a_l_l_00_01vaccess_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id_3_01_v___a_l_l_00_01vaccess_01_4.html
Modifiability,inherit,inheritance,"﻿. SOFA API: sofa::core::VecIdAlignFix Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::VecIdAlignFix Class Reference . #include <VecId.h>. Inheritance diagram for sofa::core::VecIdAlignFix:. [legend]; Detailed Description; This class is only here as fix for a VC2010 compiler otherwise padding TVecId<V_ALL,?> with 4 more bytes than TVecId<?,?>, probably due to some weird rule requiring to have distinct base pointers with multiple inheritance that's imo wrongly applied for base classes without data members, and hopefully should not make anything worse for other compilers. NoteJust in case, we have a static size assertion at the end of the file, so you will know if there is a problem. . sofacoreVecIdAlignFix; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_vec_id_align_fix.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_vec_id_align_fix.html
Testability,assert,assertion,"﻿. SOFA API: sofa::core::VecIdAlignFix Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::VecIdAlignFix Class Reference . #include <VecId.h>. Inheritance diagram for sofa::core::VecIdAlignFix:. [legend]; Detailed Description; This class is only here as fix for a VC2010 compiler otherwise padding TVecId<V_ALL,?> with 4 more bytes than TVecId<?,?>, probably due to some weird rule requiring to have distinct base pointers with multiple inheritance that's imo wrongly applied for base classes without data members, and hopefully should not make anything worse for other compilers. NoteJust in case, we have a static size assertion at the end of the file, so you will know if there is a problem. . sofacoreVecIdAlignFix; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1core_1_1_vec_id_align_fix.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_vec_id_align_fix.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::AbstractTypeInfo Member List . This is the complete list of members for sofa::defaulttype::AbstractTypeInfo, including all inherited members. AbstractTypeInfo()sofa::defaulttype::AbstractTypeInfoinlineprotected; BaseType() const =0sofa::defaulttype::AbstractTypeInfopure virtual; byteSize() const =0sofa::defaulttype::AbstractTypeInfopure virtual; Container() const =0sofa::defaulttype::AbstractTypeInfopure virtual; CopyOnWrite() const =0sofa::defaulttype::AbstractTypeInfopure virtual; FixedSize() const =0sofa::defaulttype::AbstractTypeInfopure virtual; getBaseTypeId() const =0sofa::defaulttype::AbstractTypeInfoprotectedpure virtual; getCompilationTarget() constsofa::defaulttype::AbstractTypeInfoinline; getIntegerValue(const void *data, Index index) const =0sofa::defaulttype::AbstractTypeInfopure virtual; getScalarValue(const void *data, Index index) const =0sofa::defaulttype::AbstractTypeInfopure virtual; getTextValue(const void *data, Index index) const =0sofa::defaulttype::AbstractTypeInfopure virtual; getTypeName() const =0sofa::defaulttype::AbstractTypeInfopure virtual; getValuePtr(const void *type) const =0sofa::defaulttype::AbstractTypeInfopure virtual; getValuePtr(void *type) const =0sofa::defaulttype::AbstractTypeInfopure virtual; getValueTypeId() const =0sofa::defaulttype::AbstractTypeInfoprotectedpure virtual; Integer() const =0sofa::defaulttype::AbstractTypeInfopure virtual; name() const =0sofa::defaulttype::AbstractTypeInfopure virtual; Scalar() const =0sofa::defaulttype::AbstractTypeInfopure virtual; setCompilationTarget(const std::string &target)sofa::defaulttype::AbstractTypeInfoinline; setIntegerValue(void *data, Index index, long long value) const =0sofa::defaulttype::AbstractTypeInfopure virtual; setScalarValue(void *data, Index index, double value) const =0sofa::defaulttype::AbstractTypeInfopure virtual; setSize(void *data, sofa::Siz",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info-members.html
Energy Efficiency,allocate,allocated,"﻿. SOFA API: sofa::defaulttype::AbstractTypeInfo Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::defaulttype::AbstractTypeInfo Class Referenceabstract . #include <AbstractTypeInfo.h>. Inheritance diagram for sofa::defaulttype::AbstractTypeInfo:. [legend]; Detailed Description; Information about the type of a value stored in a Data.; AbstractTypeInfo is part of the introspection/reflection capabilities of the Sofa scene graph API. It provides information about the type of the content of Data objects (Is it a simple type? A container? How much memory should be allocated to copy it?), and allows manipulating Data generically, without knowing their exact type.; This class is primarily used to copy information across BaseData objects, for example when there exists a link between two instances of BaseData. E.g. this mechanism allows you to copy the content of a Data<vector<int>> into a Data<vector<double>>, because there is an acceptable conversion between integer and double, and because both Data use a resizable container.; Using TypeInfo; Use BaseData::getValueTypeInfo() to get a pointer to an AbtractTypeInfo, and BaseData::getValueVoidPtr() to get a pointer to the content of a Data. You can then use the methods of AbtractTypeInfo to access the Data generically.; Very basic example: BaseData *data = getADataFromSomewhere();; const AbstractTypeInfo *typeinfo = data->getValueTypeInfo();; const void* ptr = data->getValueVoidPtr();; for (int i = 0 ; i < typeinfo->size(ptr) ; i++); std::string value = typeinfo->getTextValue(ptr, 0);; sofa::defaulttype::AbstractTypeInfo::AbstractTypeInfoAbstractTypeInfo()Definition: AbstractTypeInfo.h:177; Note about size and indices; All the getValue() and setValue() methods take an index as a parameter, which means that every type is abstracted to a one-dimensional container. See the detailed description of DataType",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html
Security,access,access,"eInfo:. [legend]; Detailed Description; Information about the type of a value stored in a Data.; AbstractTypeInfo is part of the introspection/reflection capabilities of the Sofa scene graph API. It provides information about the type of the content of Data objects (Is it a simple type? A container? How much memory should be allocated to copy it?), and allows manipulating Data generically, without knowing their exact type.; This class is primarily used to copy information across BaseData objects, for example when there exists a link between two instances of BaseData. E.g. this mechanism allows you to copy the content of a Data<vector<int>> into a Data<vector<double>>, because there is an acceptable conversion between integer and double, and because both Data use a resizable container.; Using TypeInfo; Use BaseData::getValueTypeInfo() to get a pointer to an AbtractTypeInfo, and BaseData::getValueVoidPtr() to get a pointer to the content of a Data. You can then use the methods of AbtractTypeInfo to access the Data generically.; Very basic example: BaseData *data = getADataFromSomewhere();; const AbstractTypeInfo *typeinfo = data->getValueTypeInfo();; const void* ptr = data->getValueVoidPtr();; for (int i = 0 ; i < typeinfo->size(ptr) ; i++); std::string value = typeinfo->getTextValue(ptr, 0);; sofa::defaulttype::AbstractTypeInfo::AbstractTypeInfoAbstractTypeInfo()Definition: AbstractTypeInfo.h:177; Note about size and indices; All the getValue() and setValue() methods take an index as a parameter, which means that every type is abstracted to a one-dimensional container. See the detailed description of DataTypeInfo for more explanations.; See alsoDataTypeInfo provides similar mechanisms to manipulate Data objects generically in template code. . Public Member Functions; virtual ~AbstractTypeInfo ()=default;  ; virtual const AbstractTypeInfo * BaseType () const =0;  ; virtual const AbstractTypeInfo * ValueType () const =0;  ; virtual std::string name () const =0;  Return",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html
Usability,simpl,simple,"﻿. SOFA API: sofa::defaulttype::AbstractTypeInfo Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::defaulttype::AbstractTypeInfo Class Referenceabstract . #include <AbstractTypeInfo.h>. Inheritance diagram for sofa::defaulttype::AbstractTypeInfo:. [legend]; Detailed Description; Information about the type of a value stored in a Data.; AbstractTypeInfo is part of the introspection/reflection capabilities of the Sofa scene graph API. It provides information about the type of the content of Data objects (Is it a simple type? A container? How much memory should be allocated to copy it?), and allows manipulating Data generically, without knowing their exact type.; This class is primarily used to copy information across BaseData objects, for example when there exists a link between two instances of BaseData. E.g. this mechanism allows you to copy the content of a Data<vector<int>> into a Data<vector<double>>, because there is an acceptable conversion between integer and double, and because both Data use a resizable container.; Using TypeInfo; Use BaseData::getValueTypeInfo() to get a pointer to an AbtractTypeInfo, and BaseData::getValueVoidPtr() to get a pointer to the content of a Data. You can then use the methods of AbtractTypeInfo to access the Data generically.; Very basic example: BaseData *data = getADataFromSomewhere();; const AbstractTypeInfo *typeinfo = data->getValueTypeInfo();; const void* ptr = data->getValueVoidPtr();; for (int i = 0 ; i < typeinfo->size(ptr) ; i++); std::string value = typeinfo->getTextValue(ptr, 0);; sofa::defaulttype::AbstractTypeInfo::AbstractTypeInfoAbstractTypeInfo()Definition: AbstractTypeInfo.h:177; Note about size and indices; All the getValue() and setValue() methods take an index as a parameter, which means that every type is abstracted to a one-dimensional container. See the detailed description of DataType",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; name()sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >inlinestatic; setValueString(DataType &data, sofa::Size inde",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_r_g_b_a_color_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_r_g_b_a_color_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor > Class Reference . #include <TypeInfo_RGBAColor.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::RGBAColor >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static std::string sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor >::GetTypeName ; (; ). inlinestatic . ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::type::RGBAColor >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::RGBAColor >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_r_g_b_a_color_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_r_g_b_a_color_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfoDynamicWrapper< Info > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, including all inherited members. AbstractTypeInfo()sofa::defaulttype::AbstractTypeInfoinlineprotected; BaseType() const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; byteSize() const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; Container() const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; CopyOnWrite() const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; DataType typedefsofa::defaulttype::DataTypeInfoDynamicWrapper< Info >; DataTypeInfoDynamicWrapper()sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlineprotected; FixedSize() const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; get()sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinestatic; getBaseTypeId() const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; getCompilationTarget() constsofa::defaulttype::AbstractTypeInfoinline; getIntegerValue(const void *data, Index index) const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; getScalarValue(const void *data, Index index) const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; getTextValue(const void *data, Index index) const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; getTypeName() const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; getValuePtr(const void *data) const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; getValuePtr(void *data) const overridesofa::defaulttype::DataTypeInfoDynamicWrapper< Info >inlinevirtual; getValueTypeId() const overridesofa::defaulttype::DataTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper-members.html
Integrability,wrap,wrap,"﻿. SOFA API: sofa::defaulttype::DataTypeInfoDynamicWrapper< Info > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::defaulttype::DataTypeInfoDynamicWrapper< Info > Class Template Reference . #include <DataTypeInfoDynamicWrapper.h>; wrap a DataTypeInfo type_traits in an AbstractTypeInfo; More... Inheritance diagram for sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >:. [legend]; Detailed Description; template<class Info>; class sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >; wrap a DataTypeInfo type_traits in an AbstractTypeInfo ; Example of use: class MyType {};; ; template<>; class DataTypeInfo<MyType> { }; ; AbstractTypeInfo* nfo = DataTypeInfoDynamicWrapper<DataTypeInfo<MyType>>();; ; ; TypeInfoRegistry::Set(TypeInfoId::getNewId<MyType>(), info);; sofa::defaulttype::AbstractTypeInfo::AbstractTypeInfoAbstractTypeInfo()Definition: AbstractTypeInfo.h:177; sofa::defaulttype::TypeInfoRegistry::Setstatic int Set(const TypeInfoId &tid, AbstractTypeInfo *info, const std::string &compilationTarget)Definition: TypeInfoRegistry.cpp:97; . Public Member Functions; const AbstractTypeInfo * BaseType () const override;  ; const AbstractTypeInfo * ValueType () const override;  ; const TypeInfoId & getBaseTypeId () const override;  ; const TypeInfoId & getValueTypeId () const override;  ; std::string name () const override;  Returns the name of this type. More...;  ; std::string getTypeName () const override;  ; bool ValidInfo () const override;  ; bool FixedSize () const override;  ; bool ZeroConstructor () const override;  True iff the default constructor of this type is equivalent to setting the memory to 0. More...;  ; bool SimpleCopy () const override;  True iff copying the data can be done with a memcpy(). More...;  ; bool SimpleLayout () const override;  ; bool Integer () const override;  True if",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html
Modifiability,inherit,inherited,"rride;  ; double getScalarValue (const void *data, Index index) const override;  ; virtual std::string getTextValue (const void *data, Index index) const override;  Get the value at index of data as a string. More...;  ; void setIntegerValue (void *data, Index index, long long value) const override;  Set the value at index of data from an integer value. More...;  ; void setScalarValue (void *data, Index index, double value) const override;  Set the value at index of data from a scalar value. More...;  ; virtual void setTextValue (void *data, Index index, const std::string &value) const override;  Set the value at index of data from a string value. More...;  ; const void * getValuePtr (const void *data) const override;  ; void * getValuePtr (void *data) const override;  ; virtual const std::type_info * type_info () const override;  Get the type_info for this type. More...;  ;  Public Member Functions inherited from sofa::defaulttype::AbstractTypeInfo; virtual ~AbstractTypeInfo ()=default;  ; const std::string & getCompilationTarget () const;  ; void setCompilationTarget (const std::string &target);  . Static Public Member Functions; static AbstractTypeInfo * get ();  . Protected Member Functions;  DataTypeInfoDynamicWrapper ();  ;  Protected Member Functions inherited from sofa::defaulttype::AbstractTypeInfo;  AbstractTypeInfo ();  . Constructor details. ◆ DataTypeInfoDynamicWrapper(). template<class Info > . sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::DataTypeInfoDynamicWrapper ; (; ). inlineprotected . Function details. ◆ BaseType(). template<class Info > . const AbstractTypeInfo* sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::BaseType ; (; ); const. inlineoverridevirtual . If the type is a container, returns the TypeInfo for the type of the values inside this container. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for fixed_array<int, 2>. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ byteSize(). t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html
Security,access,accessible,"ze() [2/2]. template<class Info > . sofa::Size sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::size ; (; const void * ; data); const. inlineoverridevirtual . The size of data, in number of iterable elements (For containers, that'll be the number of elements in the 1st dimension). For example, with type == ` ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ Text(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::Text ; (; ); const. inlineoverridevirtual . True iff this type uses text values. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ type_info(). template<class Info > . virtual const std::type_info* sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::type_info ; (; ); const. inlineoverridevirtual . Get the type_info for this type. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ ValidInfo(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::ValidInfo ; (; ); const. inlineoverridevirtual . True iff the TypeInfo for this type contains valid information. A Type is considered ""Valid"" if there's at least one specialization of the ValueType ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ ValueType(). template<class Info > . const AbstractTypeInfo* sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::ValueType ; (; ); const. inlineoverridevirtual . Returns the TypeInfo for the type of the values accessible by the get*Value() functions. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for int. . Implements sofa::defaulttype::AbstractTypeInfo. ◆ ZeroConstructor(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::ZeroConstructor ; (; ); const. inlineoverridevirtual . True iff the default constructor of this type is equivalent to setting the memory to 0. ; Implements sofa::defaulttype::AbstractTypeInfo. sofadefaulttypeDataTypeInfoDynamicWrapper; Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html
Usability,clear,cleared,"plements sofa::defaulttype::AbstractTypeInfo. ◆ setIntegerValue(). template<class Info > . void sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setIntegerValue ; (; void * ; data, . Index ; index, . long long ; value . ); const. inlineoverridevirtual . Set the value at index of data from an integer value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setScalarValue(). template<class Info > . void sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setScalarValue ; (; void * ; data, . Index ; index, . double ; value . ); const. inlineoverridevirtual . Set the value at index of data from a scalar value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setSize(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setSize ; (; void * ; data, . sofa::Size ; size . ); const. inlineoverridevirtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). template<class Info > . virtual void sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setTextValue ; (; void * ; data, . Index ; index, . const std::string & ; value . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::SimpleLayout ; (; ); const. inlineov",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeName< T > Member List . This is the complete list of members for sofa::defaulttype::DataTypeName< T >, including all inherited members. BaseType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; byteSize()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::DataTypeName< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DataTypeName< T > Class Template Reference . #include <DataTypeInfo.h>. Inheritance diagram for sofa::defaulttype::DataTypeName< T >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::DefaultDataTypeInfo< TDataType >; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, Index, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, Index, const T &);  ; static void getValueString (const DataType &, Index, std::string &);  ; static void setValueString (DataType &, Index, const std::string &);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . sofadefaulttypeDataTypeName; Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_name.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_name.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > > Class Template Reference . #include <MapMapSparseMatrixEigenUtils.h>. Inheritance diagram for sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< sofa::defaulttype::RigidDeriv< N, Real >, Real >; TMapMapSparseMatrix operator() (const EigenSparseMatrix &eigenMat);  . sofadefaulttypeEigenSparseToMapMapSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >; Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_3_01sofa_1_1defaulttype_1_1_r0ea700a117b4abe7435c5c494e277cb8.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_3_01sofa_1_1defaulttype_1_1_r0ea700a117b4abe7435c5c494e277cb8.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > > Member List . This is the complete list of members for sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >, including all inherited members. EigenSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< sofa::defaulttype::RigidDeriv< N, Real >, Real >; operator()(const EigenSparseMatrix &eigenMat)sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< sofa::defaulttype::RigidDeriv< N, Real >, Real >inline; TMapMapSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< sofa::defaulttype::RigidDeriv< N, Real >, Real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_3_01sofa_1_1defaulttype_1_1_rb51c9ee61682b43201f6b5d34bce06a6.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_3_01sofa_1_1defaulttype_1_1_rb51c9ee61682b43201f6b5d34bce06a6.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::type::Vec< N, Real > > Member List . This is the complete list of members for sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::type::Vec< N, Real > >, including all inherited members. EigenSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< sofa::type::Vec< N, Real >, Real >; operator()(const EigenSparseMatrix &eigenMat)sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< sofa::type::Vec< N, Real >, Real >inline; TMapMapSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< sofa::type::Vec< N, Real >, Real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::type::Vec< N, Real > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::type::Vec< N, Real > > Class Template Reference . #include <MapMapSparseMatrixEigenUtils.h>. Inheritance diagram for sofa::defaulttype::EigenSparseToMapMapSparseMatrix< sofa::type::Vec< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< sofa::type::Vec< N, Real >, Real >; TMapMapSparseMatrix operator() (const EigenSparseMatrix &eigenMat);  . sofadefaulttypeEigenSparseToMapMapSparseMatrix< sofa::type::Vec< N, Real > >; Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::HasGetTypeName< T > Member List . This is the complete list of members for sofa::defaulttype::HasGetTypeName< T >, including all inherited members. value enum valuesofa::defaulttype::HasGetTypeName< T >. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_has_get_type_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_has_get_type_name-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrix< T > Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrix< T >, including all inherited members. addLine(KeyType lIndex, RowType row)sofa::defaulttype::MapMapSparseMatrix< T >inline; begin() constsofa::defaulttype::MapMapSparseMatrix< T >inline; begin()sofa::defaulttype::MapMapSparseMatrix< T >inline; clear()sofa::defaulttype::MapMapSparseMatrix< T >inline; Data typedefsofa::defaulttype::MapMapSparseMatrix< T >; empty() constsofa::defaulttype::MapMapSparseMatrix< T >inline; end() constsofa::defaulttype::MapMapSparseMatrix< T >inline; end()sofa::defaulttype::MapMapSparseMatrix< T >inline; KeyType typedefsofa::defaulttype::MapMapSparseMatrix< T >; m_datasofa::defaulttype::MapMapSparseMatrix< T >protected; multTransposeBaseVector(VecDeriv &res, const sofa::linearalgebra::BaseVector *lambda) constsofa::defaulttype::MapMapSparseMatrix< T >inline; newLine()sofa::defaulttype::MapMapSparseMatrix< T >inline; operator<<(std::ostream &out, const MapMapSparseMatrix< T > &sc)sofa::defaulttype::MapMapSparseMatrix< T >friend; operator>>(std::istream &in, MapMapSparseMatrix< T > &sc)sofa::defaulttype::MapMapSparseMatrix< T >friend; readLine(KeyType lIndex) constsofa::defaulttype::MapMapSparseMatrix< T >inline; RowType typedefsofa::defaulttype::MapMapSparseMatrix< T >; size() constsofa::defaulttype::MapMapSparseMatrix< T >inline; SparseMatrix typedefsofa::defaulttype::MapMapSparseMatrix< T >protected; writeLine(KeyType lIndex)sofa::defaulttype::MapMapSparseMatrix< T >inline; writeLine(KeyType lIndex, RowType row)sofa::defaulttype::MapMapSparseMatrix< T >inline. Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrix< T > Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrix< T >, including all inherited members. addLine(KeyType lIndex, RowType row)sofa::defaulttype::MapMapSparseMatrix< T >inline; begin() constsofa::defaulttype::MapMapSparseMatrix< T >inline; begin()sofa::defaulttype::MapMapSparseMatrix< T >inline; clear()sofa::defaulttype::MapMapSparseMatrix< T >inline; Data typedefsofa::defaulttype::MapMapSparseMatrix< T >; empty() constsofa::defaulttype::MapMapSparseMatrix< T >inline; end() constsofa::defaulttype::MapMapSparseMatrix< T >inline; end()sofa::defaulttype::MapMapSparseMatrix< T >inline; KeyType typedefsofa::defaulttype::MapMapSparseMatrix< T >; m_datasofa::defaulttype::MapMapSparseMatrix< T >protected; multTransposeBaseVector(VecDeriv &res, const sofa::linearalgebra::BaseVector *lambda) constsofa::defaulttype::MapMapSparseMatrix< T >inline; newLine()sofa::defaulttype::MapMapSparseMatrix< T >inline; operator<<(std::ostream &out, const MapMapSparseMatrix< T > &sc)sofa::defaulttype::MapMapSparseMatrix< T >friend; operator>>(std::istream &in, MapMapSparseMatrix< T > &sc)sofa::defaulttype::MapMapSparseMatrix< T >friend; readLine(KeyType lIndex) constsofa::defaulttype::MapMapSparseMatrix< T >inline; RowType typedefsofa::defaulttype::MapMapSparseMatrix< T >; size() constsofa::defaulttype::MapMapSparseMatrix< T >inline; SparseMatrix typedefsofa::defaulttype::MapMapSparseMatrix< T >protected; writeLine(KeyType lIndex)sofa::defaulttype::MapMapSparseMatrix< T >inline; writeLine(KeyType lIndex, RowType row)sofa::defaulttype::MapMapSparseMatrix< T >inline. Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix-members.html
Energy Efficiency,allocate,allocated,"aulttype::MapMapSparseMatrix< T >::begin ; (; ); const. inline . ◆ clear(). template<class T > . void sofa::defaulttype::MapMapSparseMatrix< T >::clear ; (; ). inline . Removes every matrix elements. . ◆ empty(). template<class T > . bool sofa::defaulttype::MapMapSparseMatrix< T >::empty ; (; ); const. inline . Returnstrue if the matrix is empty . ◆ end() [1/2]. template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::end ; (; ). inline . ◆ end() [2/2]. template<class T > . RowConstIterator sofa::defaulttype::MapMapSparseMatrix< T >::end ; (; ); const. inline . ◆ multTransposeBaseVector(). template<class T > . template<class VecDeriv > . void sofa::defaulttype::MapMapSparseMatrix< T >::multTransposeBaseVector ; (; VecDeriv & ; res, . const sofa::linearalgebra::BaseVector * ; lambda . ); const. inline . ◆ newLine(). template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::newLine ; (; ). inline . ReturnsIterator on new allocated row Creates a new row in the sparse matrix with the last+1 key index . ◆ readLine(). template<class T > . RowConstIterator sofa::defaulttype::MapMapSparseMatrix< T >::readLine ; (; KeyType ; lIndex); const. inline . ReturnsConstant Iterator on specified row ; Parameters. lIndexrow index If lIndex row doesn't exist, returns end iterator . ◆ size(). template<class T > . std::size_t sofa::defaulttype::MapMapSparseMatrix< T >::size ; (; ); const. inline . Returnsthe number of rows . ◆ writeLine() [1/2]. template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::writeLine ; (; KeyType ; lIndex). inline . ReturnsIterator on specified row ; Parameters. lIndexrow index If lIndex row doesn't exist, creates the line and returns an iterator on it . ◆ writeLine() [2/2]. template<class T > . std::pair< RowIterator, bool > sofa::defaulttype::MapMapSparseMatrix< T >::writeLine ; (; KeyType ; lIndex, . RowType ; row . ). inline . ReturnsPair of Iterator on specified row and boolean on true if insertio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html
Usability,clear,clear,"﻿. SOFA API: sofa::defaulttype::MapMapSparseMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::defaulttype::MapMapSparseMatrix< T > Class Template Reference . #include <MapMapSparseMatrix.h>. Inheritance diagram for sofa::defaulttype::MapMapSparseMatrix< T >:. [legend]. Classes; class  ColConstIterator;  Sparse Matrix columns constant Iterator. More...;  ; class  ColIterator;  ; class  RowConstIterator;  ; class  RowIterator;  . Protected Attributes; SparseMatrix m_data;  Data container. More...;  . Public Member Functions; void clear ();  Removes every matrix elements. More...;  ; bool empty () const;  ; std::size_t size () const;  ; template<class VecDeriv > ; void multTransposeBaseVector (VecDeriv &res, const sofa::linearalgebra::BaseVector *lambda) const;  ; RowConstIterator begin () const;  ; RowConstIterator end () const;  ; RowIterator begin ();  ; RowIterator end ();  ; RowConstIterator readLine (KeyType lIndex) const;  ; RowIterator writeLine (KeyType lIndex);  ; std::pair< RowIterator, bool > writeLine (KeyType lIndex, RowType row);  ; std::pair< RowIterator, bool > addLine (KeyType lIndex, RowType row);  ; RowIterator newLine ();  . Friends; std::ostream & operator<< (std::ostream &out, const MapMapSparseMatrix< T > &sc);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, MapMapSparseMatrix< T > &sc);  read from an input stream More...;  . Attribute details. ◆ m_data. template<class T > . SparseMatrix sofa::defaulttype::MapMapSparseMatrix< T >::m_data. protected . Data container. . Function details. ◆ addLine(). template<class T > . std::pair< RowIterator, bool > sofa::defaulttype::MapMapSparseMatrix< T >::addLine ; (; KeyType ; lIndex, . RowType ; row . ). inline . ReturnsPair of Iterator on specified row and boolean on true if addition took place ; Parameters. lI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIterator Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIterator, including all inherited members. ColConstIterator(Iterator _internal, const KeyT _rowIndex)sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinlineprotected; ColConstIterator(const ColConstIterator &it2)sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; index() constsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; Iterator typedefsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIterator; KeyT typedefsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIterator; operator!=(const ColConstIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator*() constsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator++()sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator++(int)sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator--()sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator--(int)sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator->() constsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator<(const ColConstIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator=(const ColConstIterator &it2)sofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator==(const ColConstIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; operator>(const ColConstIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; row() constsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIteratorinline; RowConstIterator classsofa::defaulttype::MapMapSparseMatrix< T >::ColConstIte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_1_1_col_const_iterator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_1_1_col_const_iterator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrix< T >::ColIterator Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrix< T >::ColIterator, including all inherited members. ColIterator(Iterator _internal, const KeyT _rowIndex)sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinlineprotected; ColIterator(const ColIterator &it2)sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; index() constsofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; Iterator typedefsofa::defaulttype::MapMapSparseMatrix< T >::ColIterator; KeyT typedefsofa::defaulttype::MapMapSparseMatrix< T >::ColIterator; operator!=(const ColIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator*()sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator++()sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator++(int)sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator--()sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator--(int)sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator->()sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator<(const ColIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator=(const ColIterator &it2)sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator==(const ColIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; operator>(const ColIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; row() constsofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline; RowIterator classsofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorfriend; val()sofa::defaulttype::MapMapSparseMatrix< T >::ColIteratorinline. Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_1_1_col_iterator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_1_1_col_iterator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIterator Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIterator, including all inherited members. begin()sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; end()sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; index() constsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; Iterator typedefsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIterator; KeyT typedefsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIterator; MapMapSparseMatrix classsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorfriend; operator!=(const RowConstIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator*() constsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator*(const VecDeriv &v) constsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator++()sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator++(int)sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator--()sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator--(int)sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator->() constsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator<(const RowConstIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator=(const RowConstIterator &it2)sofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator==(const RowConstIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; operator>(const RowConstIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::RowConstIteratorinline; row() constsofa::defaulttype::MapMapSparseMatrix< T >::RowCons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_1_1_row_const_iterator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_1_1_row_const_iterator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrix< T >::RowIterator Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrix< T >::RowIterator, including all inherited members. addCol(KeyT id, const T &value)sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; begin()sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; end()sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; index()sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; Iterator typedefsofa::defaulttype::MapMapSparseMatrix< T >::RowIterator; KeyT typedefsofa::defaulttype::MapMapSparseMatrix< T >::RowIterator; MapMapSparseMatrix classsofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorfriend; operator!=(const RowIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator*()sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator++()sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator++(int)sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator--()sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator--(int)sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator->()sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator<(const RowIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator=(const RowIterator &it2)sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator==(const RowIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; operator>(const RowIterator &it2) constsofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; row()sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinline; RowIterator(Iterator _internal)sofa::defaulttype::MapMapSparseMatrix< T >::RowIteratorinlineprotected; RowIterator(const RowIterator &it2)so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_1_1_row_iterator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_1_1_row_iterator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::defaulttype::RigidDeriv< N, Real > > Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::defaulttype::RigidDeriv< N, Real > >, including all inherited members. EigenSparseMatrix typedefsofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< sofa::defaulttype::RigidDeriv< N, Real >, Real >; operator()(const TMapMapSparseMatrix &mat, std::size_t size)sofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< sofa::defaulttype::RigidDeriv< N, Real >, Real >inline; TMapMapSparseMatrix typedefsofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< sofa::defaulttype::RigidDeriv< N, Real >, Real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_3_01sofa_1_1defaulttype_1_1_rb8f2f18e06ce7091072f92cd0e32b745.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_3_01sofa_1_1defaulttype_1_1_rb8f2f18e06ce7091072f92cd0e32b745.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::defaulttype::RigidDeriv< N, Real > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::defaulttype::RigidDeriv< N, Real > > Class Template Reference . #include <MapMapSparseMatrixEigenUtils.h>. Inheritance diagram for sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::defaulttype::RigidDeriv< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< sofa::defaulttype::RigidDeriv< N, Real >, Real >; EigenSparseMatrix operator() (const TMapMapSparseMatrix &mat, std::size_t size);  . sofadefaulttypeMapMapSparseMatrixToEigenSparse< sofa::defaulttype::RigidDeriv< N, Real > >; Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_3_01sofa_1_1defaulttype_1_1_rf2cdbd95c2e57e598c780c3d4bb78ece.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_3_01sofa_1_1defaulttype_1_1_rf2cdbd95c2e57e598c780c3d4bb78ece.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >, including all inherited members. EigenSparseMatrix typedefsofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real >, Real >; operator()(const TMapMapSparseMatrix &mat, std::size_t size)sofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real >, Real >inline; TMapMapSparseMatrix typedefsofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real >, Real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_real_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Class Template Reference . #include <MapMapSparseMatrixEigenUtils.h>. Inheritance diagram for sofa::defaulttype::MapMapSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real >, Real >; EigenSparseMatrix operator() (const TMapMapSparseMatrix &mat, std::size_t size);  . sofadefaulttypeMapMapSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >; Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_real_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< TVec, Real > Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< TVec, Real >, including all inherited members. EigenSparseMatrix typedefsofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< TVec, Real >; operator()(const TMapMapSparseMatrix &mat, std::size_t size)sofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< TVec, Real >inline; TMapMapSparseMatrix typedefsofa::defaulttype::MapMapSparseMatrixToEigenSparseVec< TVec, Real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix_to_eigen_sparse_vec-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::NameOnlyTypeInfo Member List . This is the complete list of members for sofa::defaulttype::NameOnlyTypeInfo, including all inherited members. AbstractTypeInfo()sofa::defaulttype::AbstractTypeInfoinlineprotected; BaseType() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; byteSize() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; Container() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; CopyOnWrite() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; FixedSize() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; getBaseTypeId() const overridesofa::defaulttype::NameOnlyTypeInfoinlineprotectedvirtual; getCompilationTarget() constsofa::defaulttype::AbstractTypeInfoinline; getIntegerValue(const void *, Index) const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; getScalarValue(const void *, Index) const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; getTextValue(const void *, Index) const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; getTypeName() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; getValuePtr(const void *) const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; getValuePtr(void *) const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; getValueTypeId() const overridesofa::defaulttype::NameOnlyTypeInfoinlineprotectedvirtual; Integer() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; name() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; NameOnlyTypeInfo(const std::string &name, const std::string &)sofa::defaulttype::NameOnlyTypeInfoinline; Scalar() const overridesofa::defaulttype::NameOnlyTypeInfoinlinevirtual; setCompilationTarget(const std::string &target)sofa::defaulttype::AbstractTypeInfoinline; setIntegerValue(void *, Index, long long) const overridesofa::defaulttype::N",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info-members.html
Modifiability,inherit,inherited,"o size elements, if relevant. More...;  ; long long getIntegerValue (const void *, Index) const override;  ; double getScalarValue (const void *, Index) const override;  ; std::string getTextValue (const void *, Index) const override;  Get the value at index of data as a string. More...;  ; void setIntegerValue (void *, Index, long long) const override;  Set the value at index of data from an integer value. More...;  ; void setScalarValue (void *, Index, double) const override;  Set the value at index of data from a scalar value. More...;  ; void setTextValue (void *, Index, const std::string &) const override;  Set the value at index of data from a string value. More...;  ; const void * getValuePtr (const void *) const override;  ; void * getValuePtr (void *) const override;  ; const std::type_info * type_info () const override;  Get the type_info for this type. More...;  ;  Public Member Functions inherited from sofa::defaulttype::AbstractTypeInfo; virtual ~AbstractTypeInfo ()=default;  ; const std::string & getCompilationTarget () const;  ; void setCompilationTarget (const std::string &target);  . Protected Member Functions; const TypeInfoId & getBaseTypeId () const override;  ; const TypeInfoId & getValueTypeId () const override;  ;  Protected Member Functions inherited from sofa::defaulttype::AbstractTypeInfo;  AbstractTypeInfo ();  . Constructor details. ◆ NameOnlyTypeInfo(). sofa::defaulttype::NameOnlyTypeInfo::NameOnlyTypeInfo ; (; const std::string & ; name, . const std::string & ;  . ). inline . Function details. ◆ BaseType(). const AbstractTypeInfo* sofa::defaulttype::NameOnlyTypeInfo::BaseType ; (; ); const. inlineoverridevirtual . If the type is a container, returns the TypeInfo for the type of the values inside this container. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for fixed_array<int, 2>. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ byteSize(). sofa::Size sofa::defaulttype::NameOnlyTypeInfo::byte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html
Security,access,accessible,"ed_array<int, 2>, 3> is 6, and those six elements are conceptually numbered from 0 to 5. This is relevant only if FixedSize() is true. I FixedSize() is false, the return value will be equivalent to the one of byteSize() ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [2/2]. sofa::Size sofa::defaulttype::NameOnlyTypeInfo::size ; (; const void * ; ); const. inlineoverridevirtual . The size of data, in number of iterable elements (For containers, that'll be the number of elements in the 1st dimension). For example, with type == ` ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ Text(). bool sofa::defaulttype::NameOnlyTypeInfo::Text ; (; ); const. inlineoverridevirtual . True iff this type uses text values. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ type_info(). const std::type_info* sofa::defaulttype::NameOnlyTypeInfo::type_info ; (; ); const. inlineoverridevirtual . Get the type_info for this type. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ ValidInfo(). bool sofa::defaulttype::NameOnlyTypeInfo::ValidInfo ; (; ); const. inlineoverridevirtual . True iff the TypeInfo for this type contains valid information. A Type is considered ""Valid"" if there's at least one specialization of the ValueType ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ ValueType(). const AbstractTypeInfo* sofa::defaulttype::NameOnlyTypeInfo::ValueType ; (; ); const. inlineoverridevirtual . Returns the TypeInfo for the type of the values accessible by the get*Value() functions. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for int. . Implements sofa::defaulttype::AbstractTypeInfo. ◆ ZeroConstructor(). bool sofa::defaulttype::NameOnlyTypeInfo::ZeroConstructor ; (; ); const. inlineoverridevirtual . True iff the default constructor of this type is equivalent to setting the memory to 0. ; Implements sofa::defaulttype::AbstractTypeInfo. sofadefaulttypeNameOnlyTypeInfo; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html
Usability,clear,cleared,":AbstractTypeInfo. ◆ Scalar(). bool sofa::defaulttype::NameOnlyTypeInfo::Scalar ; (; ); const. inlineoverridevirtual . True iff this type uses scalar values. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setIntegerValue(). void sofa::defaulttype::NameOnlyTypeInfo::setIntegerValue ; (; void * ; , . Index ; , . long long ;  . ); const. inlineoverridevirtual . Set the value at index of data from an integer value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setScalarValue(). void sofa::defaulttype::NameOnlyTypeInfo::setScalarValue ; (; void * ; , . Index ; , . double ;  . ); const. inlineoverridevirtual . Set the value at index of data from a scalar value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setSize(). bool sofa::defaulttype::NameOnlyTypeInfo::setSize ; (; void * ; , . sofa::Size ;  . ); const. inlineoverridevirtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). void sofa::defaulttype::NameOnlyTypeInfo::setTextValue ; (; void * ; , . Index ; , . const std::string & ;  . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). bool sofa::defaulttype::NameOnlyTypeInfo::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). bool sofa::defaulttype::NameOnlyTypeInfo::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to itera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::NoTypeInfo Member List . This is the complete list of members for sofa::defaulttype::NoTypeInfo, including all inherited members. AbstractTypeInfo()sofa::defaulttype::AbstractTypeInfoinlineprotected; BaseType() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; byteSize() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; Container() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; CopyOnWrite() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; FixedSize() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; Get()sofa::defaulttype::NoTypeInfoinlinestatic; getBaseTypeId() const overridesofa::defaulttype::NoTypeInfoinlineprotectedvirtual; getCompilationTarget() constsofa::defaulttype::AbstractTypeInfoinline; getIntegerValue(const void *, Index) const overridesofa::defaulttype::NoTypeInfoinlinevirtual; getScalarValue(const void *, Index) const overridesofa::defaulttype::NoTypeInfoinlinevirtual; getTextValue(const void *, Index) const overridesofa::defaulttype::NoTypeInfoinlinevirtual; getTypeName() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; getValuePtr(const void *) const overridesofa::defaulttype::NoTypeInfoinlinevirtual; getValuePtr(void *) const overridesofa::defaulttype::NoTypeInfoinlinevirtual; getValueTypeId() const overridesofa::defaulttype::NoTypeInfoinlineprotectedvirtual; Integer() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; name() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; NoTypeInfo()sofa::defaulttype::NoTypeInfoinline; Scalar() const overridesofa::defaulttype::NoTypeInfoinlinevirtual; setCompilationTarget(const std::string &target)sofa::defaulttype::AbstractTypeInfoinline; setIntegerValue(void *, Index, long long) const overridesofa::defaulttype::NoTypeInfoinlinevirtual; setScalarValue(void *, Index, double) const overridesofa::defaulttype::NoTypeInfoinlinevirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info-members.html
Modifiability,inherit,inherited,"o size elements, if relevant. More...;  ; long long getIntegerValue (const void *, Index) const override;  ; double getScalarValue (const void *, Index) const override;  ; std::string getTextValue (const void *, Index) const override;  Get the value at index of data as a string. More...;  ; void setIntegerValue (void *, Index, long long) const override;  Set the value at index of data from an integer value. More...;  ; void setScalarValue (void *, Index, double) const override;  Set the value at index of data from a scalar value. More...;  ; void setTextValue (void *, Index, const std::string &) const override;  Set the value at index of data from a string value. More...;  ; const void * getValuePtr (const void *) const override;  ; void * getValuePtr (void *) const override;  ; const std::type_info * type_info () const override;  Get the type_info for this type. More...;  ;  Public Member Functions inherited from sofa::defaulttype::AbstractTypeInfo; virtual ~AbstractTypeInfo ()=default;  ; const std::string & getCompilationTarget () const;  ; void setCompilationTarget (const std::string &target);  . Static Public Member Functions; static AbstractTypeInfo * Get ();  . Protected Member Functions; const TypeInfoId & getBaseTypeId () const override;  ; const TypeInfoId & getValueTypeId () const override;  ;  Protected Member Functions inherited from sofa::defaulttype::AbstractTypeInfo;  AbstractTypeInfo ();  . Constructor details. ◆ NoTypeInfo(). sofa::defaulttype::NoTypeInfo::NoTypeInfo ; (; ). inline . Function details. ◆ BaseType(). const AbstractTypeInfo* sofa::defaulttype::NoTypeInfo::BaseType ; (; ); const. inlineoverridevirtual . If the type is a container, returns the TypeInfo for the type of the values inside this container. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for fixed_array<int, 2>. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ byteSize(). sofa::Size sofa::defaulttype::NoTypeInfo::byteSize ; (; ); con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html
Security,access,accessible,"For example, the size of a fixed_array<fixed_array<int, 2>, 3> is 6, and those six elements are conceptually numbered from 0 to 5. This is relevant only if FixedSize() is true. I FixedSize() is false, the return value will be equivalent to the one of byteSize() ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [2/2]. sofa::Size sofa::defaulttype::NoTypeInfo::size ; (; const void * ; ); const. inlineoverridevirtual . The size of data, in number of iterable elements (For containers, that'll be the number of elements in the 1st dimension). For example, with type == ` ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ Text(). bool sofa::defaulttype::NoTypeInfo::Text ; (; ); const. inlineoverridevirtual . True iff this type uses text values. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ type_info(). const std::type_info* sofa::defaulttype::NoTypeInfo::type_info ; (; ); const. inlineoverridevirtual . Get the type_info for this type. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ ValidInfo(). bool sofa::defaulttype::NoTypeInfo::ValidInfo ; (; ); const. inlineoverridevirtual . True iff the TypeInfo for this type contains valid information. A Type is considered ""Valid"" if there's at least one specialization of the ValueType ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ ValueType(). const AbstractTypeInfo* sofa::defaulttype::NoTypeInfo::ValueType ; (; ); const. inlineoverridevirtual . Returns the TypeInfo for the type of the values accessible by the get*Value() functions. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for int. . Implements sofa::defaulttype::AbstractTypeInfo. ◆ ZeroConstructor(). bool sofa::defaulttype::NoTypeInfo::ZeroConstructor ; (; ); const. inlineoverridevirtual . True iff the default constructor of this type is equivalent to setting the memory to 0. ; Implements sofa::defaulttype::AbstractTypeInfo. sofadefaulttypeNoTypeInfo; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html
Usability,clear,cleared,"ments sofa::defaulttype::AbstractTypeInfo. ◆ Scalar(). bool sofa::defaulttype::NoTypeInfo::Scalar ; (; ); const. inlineoverridevirtual . True iff this type uses scalar values. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setIntegerValue(). void sofa::defaulttype::NoTypeInfo::setIntegerValue ; (; void * ; , . Index ; , . long long ;  . ); const. inlineoverridevirtual . Set the value at index of data from an integer value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setScalarValue(). void sofa::defaulttype::NoTypeInfo::setScalarValue ; (; void * ; , . Index ; , . double ;  . ); const. inlineoverridevirtual . Set the value at index of data from a scalar value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setSize(). bool sofa::defaulttype::NoTypeInfo::setSize ; (; void * ; , . sofa::Size ;  . ); const. inlineoverridevirtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). void sofa::defaulttype::NoTypeInfo::setTextValue ; (; void * ; , . Index ; , . const std::string & ;  . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). bool sofa::defaulttype::NoTypeInfo::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). bool sofa::defaulttype::NoTypeInfo::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to iterate over the elemen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::RegisterTemplateAlias Member List . This is the complete list of members for sofa::defaulttype::RegisterTemplateAlias, including all inherited members. RegisterTemplateAlias(const std::string &alias, const std::string &result, const bool doWarnUser=false)sofa::defaulttype::RegisterTemplateAlias. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_register_template_alias-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_register_template_alias-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::RigidCoord< 2, real > Member List . This is the complete list of members for sofa::defaulttype::RigidCoord< 2, real >, including all inherited members. clear()sofa::defaulttype::RigidCoord< 2, real >inline; fromHomogeneous(V v)sofa::defaulttype::RigidCoord< 2, real >inlinestatic; fromMatrix(const Mat &m)sofa::defaulttype::RigidCoord< 2, real >inline; getCenter()sofa::defaulttype::RigidCoord< 2, real >inline; getCenter() constsofa::defaulttype::RigidCoord< 2, real >inline; getOrientation()sofa::defaulttype::RigidCoord< 2, real >inline; getOrientation() constsofa::defaulttype::RigidCoord< 2, real >inline; HomogeneousMat typedefsofa::defaulttype::RigidCoord< 2, real >; HomogeneousVec typedefsofa::defaulttype::RigidCoord< 2, real >; identity()sofa::defaulttype::RigidCoord< 2, real >inlinestatic; inverseRotate(const Vec2 &v) constsofa::defaulttype::RigidCoord< 2, real >inline; max_size()sofa::defaulttype::RigidCoord< 2, real >inlinestatic; mult(const Vec2 &v) constsofa::defaulttype::RigidCoord< 2, real >inline; mult(const RigidCoord< 2, real > &c) constsofa::defaulttype::RigidCoord< 2, real >inline; multRight(const RigidCoord< 2, real > &c)sofa::defaulttype::RigidCoord< 2, real >inline; norm() constsofa::defaulttype::RigidCoord< 2, real >inline; norm2() constsofa::defaulttype::RigidCoord< 2, real >inline; operator!=(const RigidCoord< 2, real > &b) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*(real2 a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*(const RigidCoord< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*=(real2 a)sofa::defaulttype::RigidCoord< 2, real >inline; operator+(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator+(const RigidCoord< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator+=(const RigidDeriv< 2, real > &",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4-members.html
Usability,clear,clear," clear()sofa::defaulttype::RigidCoord< 2, real >inline; fromHomogeneous(V v)sofa::defaulttype::RigidCoord< 2, real >inlinestatic; fromMatrix(const Mat &m)sofa::defaulttype::RigidCoord< 2, real >inline; getCenter()sofa::defaulttype::RigidCoord< 2, real >inline; getCenter() constsofa::defaulttype::RigidCoord< 2, real >inline; getOrientation()sofa::defaulttype::RigidCoord< 2, real >inline; getOrientation() constsofa::defaulttype::RigidCoord< 2, real >inline; HomogeneousMat typedefsofa::defaulttype::RigidCoord< 2, real >; HomogeneousVec typedefsofa::defaulttype::RigidCoord< 2, real >; identity()sofa::defaulttype::RigidCoord< 2, real >inlinestatic; inverseRotate(const Vec2 &v) constsofa::defaulttype::RigidCoord< 2, real >inline; max_size()sofa::defaulttype::RigidCoord< 2, real >inlinestatic; mult(const Vec2 &v) constsofa::defaulttype::RigidCoord< 2, real >inline; mult(const RigidCoord< 2, real > &c) constsofa::defaulttype::RigidCoord< 2, real >inline; multRight(const RigidCoord< 2, real > &c)sofa::defaulttype::RigidCoord< 2, real >inline; norm() constsofa::defaulttype::RigidCoord< 2, real >inline; norm2() constsofa::defaulttype::RigidCoord< 2, real >inline; operator!=(const RigidCoord< 2, real > &b) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*(real2 a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*(const RigidCoord< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*=(real2 a)sofa::defaulttype::RigidCoord< 2, real >inline; operator+(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator+(const RigidCoord< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator+=(const RigidDeriv< 2, real > &",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4-members.html
Security,access,access,"anslation and rotation) More...;  ; constexpr Vec2 projectVector (const Vec2 &v) const;  Apply the transform to a vector, i.e. project a vector from the child frame to the parent frame (rotation only, no translation added) More...;  ; constexpr Vec2 unprojectPoint (const Vec2 &v) const;  Apply the inverse transform to a point, i.e. project a point from the parent frame to the child frame (translation and rotation) More...;  ; constexpr Vec2 unprojectVector (const Vec2 &v) const;  Apply the inverse transform to a vector, i.e. project a vector from the parent frame to the child frame (rotation only, no translation) More...;  ; constexpr Vec2 pointToParent (const Vec2 &v) const;  obsolete. Use projectPoint. More...;  ; constexpr Vec2 pointToChild (const Vec2 &v) const;  obsolete. Use unprojectPoint. More...;  ; constexpr real * ptr ();  ; constexpr const real * ptr () const;  ; constexpr real & operator[] (Size i);  Access to i-th element. More...;  ; constexpr const real & operator[] (Size i) const;  Const access to i-th element. More...;  ; Tests operators; constexpr bool operator== (const RigidCoord< 2, real > &b) const;  ; constexpr bool operator!= (const RigidCoord< 2, real > &b) const;  . Static Public Member Functions; static RigidCoord rand (SReal a);  Random rigid transform composed of 2 random translations and a random angle. More...;  ; static constexpr RigidCoord< 2, real > identity ();  ; template<typename V > ; static constexpr HomogeneousVec toHomogeneous (V v, real r=1.);  create a homogeneous vector from a 2d vector More...;  ; template<typename V > ; static constexpr Vec2 fromHomogeneous (V v);  create a 2d vector from a homogeneous vector More...;  ; static constexpr Size max_size ();  ; static constexpr Size size ();  . Friends; std::ostream & operator<< (std::ostream &out, const RigidCoord< 2, real > &v);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, RigidCoord< 2, real > &v);  read from an input stream More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html
Usability,clear,clear,"s |; List of all members . sofa::defaulttype::RigidCoord< 2, real > Class Template Reference . #include <RigidCoord.h>. Static Public Attributes; static constexpr sofa::Size total_size = 3;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 2;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Public Member Functions; constexpr RigidCoord (const Vec2 &posCenter, const Real &orient);  ; constexpr RigidCoord ();  ; constexpr void clear ();  ; constexpr void operator+= (const RigidDeriv< 2, real > &a);  ; constexpr RigidCoord< 2, real > operator+ (const RigidDeriv< 2, real > &a) const;  ; constexpr RigidCoord< 2, real > operator- (const RigidCoord< 2, real > &a) const;  ; constexpr RigidCoord< 2, real > operator+ (const RigidCoord< 2, real > &a) const;  ; constexpr RigidCoord< 2, real > operator- () const;  ; constexpr void operator+= (const RigidCoord< 2, real > &a);  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; template<typename real2 > ; constexpr RigidCoord< 2, real > operator* (real2 a) const;  ; template<typename real2 > ; constexpr RigidCoord< 2, real > operator/ (real2 a) const;  ; constexpr Real operator* (const RigidCoord< 2, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; Real norm2 () const;  Squared norm. More...;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec2 & getCenter ();  ; constexpr Real & getOrientation ();  ; constexpr const Vec2 & getCenter () const;  ; constexpr const Real & getOrientation () const;  ; Vec2 rotate (const Vec2 &v) const;  ; Vec2 inverseRotate (const Vec2 &v) const;  ; constexpr Vec2 translate (const Vec2 &v) const;  ; constexpr RigidCoord< 2, real > translate (const RigidCoord< 2, real > &c) c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::RigidCoord< 3, real > Member List . This is the complete list of members for sofa::defaulttype::RigidCoord< 3, real >, including all inherited members. centersofa::defaulttype::RigidCoord< 3, real >protected; clear()sofa::defaulttype::RigidCoord< 3, real >inline; Deriv typedefsofa::defaulttype::RigidCoord< 3, real >; fromHomogeneous(V v)sofa::defaulttype::RigidCoord< 3, real >inlinestatic; fromMatrix(const Mat &m)sofa::defaulttype::RigidCoord< 3, real >inline; getCenter()sofa::defaulttype::RigidCoord< 3, real >inline; getCenter() constsofa::defaulttype::RigidCoord< 3, real >inline; getOrientation()sofa::defaulttype::RigidCoord< 3, real >inline; getOrientation() constsofa::defaulttype::RigidCoord< 3, real >inline; HomogeneousMat typedefsofa::defaulttype::RigidCoord< 3, real >; HomogeneousVec typedefsofa::defaulttype::RigidCoord< 3, real >; identity()sofa::defaulttype::RigidCoord< 3, real >inlinestatic; inverseRotate(const Vec3 &v) constsofa::defaulttype::RigidCoord< 3, real >inline; max_size()sofa::defaulttype::RigidCoord< 3, real >inlinestatic; mult(const Vec3 &v) constsofa::defaulttype::RigidCoord< 3, real >inline; mult(const RigidCoord< 3, real > &c) constsofa::defaulttype::RigidCoord< 3, real >inline; multRight(const RigidCoord< 3, real > &c)sofa::defaulttype::RigidCoord< 3, real >inline; norm() constsofa::defaulttype::RigidCoord< 3, real >inline; norm2() constsofa::defaulttype::RigidCoord< 3, real >inline; operator!=(const RigidCoord< 3, real > &b) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*(real2 a) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*(const RigidCoord< 3, real > &a) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*=(real2 a)sofa::defaulttype::RigidCoord< 3, real >inline; operator+(const Deriv &dg) constsofa::defaulttype::RigidCoord< 3, real >inline; operator+(const RigidCoord< 3, real > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4-members.html
Usability,clear,clear," centersofa::defaulttype::RigidCoord< 3, real >protected; clear()sofa::defaulttype::RigidCoord< 3, real >inline; Deriv typedefsofa::defaulttype::RigidCoord< 3, real >; fromHomogeneous(V v)sofa::defaulttype::RigidCoord< 3, real >inlinestatic; fromMatrix(const Mat &m)sofa::defaulttype::RigidCoord< 3, real >inline; getCenter()sofa::defaulttype::RigidCoord< 3, real >inline; getCenter() constsofa::defaulttype::RigidCoord< 3, real >inline; getOrientation()sofa::defaulttype::RigidCoord< 3, real >inline; getOrientation() constsofa::defaulttype::RigidCoord< 3, real >inline; HomogeneousMat typedefsofa::defaulttype::RigidCoord< 3, real >; HomogeneousVec typedefsofa::defaulttype::RigidCoord< 3, real >; identity()sofa::defaulttype::RigidCoord< 3, real >inlinestatic; inverseRotate(const Vec3 &v) constsofa::defaulttype::RigidCoord< 3, real >inline; max_size()sofa::defaulttype::RigidCoord< 3, real >inlinestatic; mult(const Vec3 &v) constsofa::defaulttype::RigidCoord< 3, real >inline; mult(const RigidCoord< 3, real > &c) constsofa::defaulttype::RigidCoord< 3, real >inline; multRight(const RigidCoord< 3, real > &c)sofa::defaulttype::RigidCoord< 3, real >inline; norm() constsofa::defaulttype::RigidCoord< 3, real >inline; norm2() constsofa::defaulttype::RigidCoord< 3, real >inline; operator!=(const RigidCoord< 3, real > &b) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*(real2 a) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*(const RigidCoord< 3, real > &a) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*=(real2 a)sofa::defaulttype::RigidCoord< 3, real >inline; operator+(const Deriv &dg) constsofa::defaulttype::RigidCoord< 3, real >inline; operator+(const RigidCoord< 3, real > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4-members.html
Security,access,access,"anslation and rotation) More...;  ; constexpr Vec3 projectVector (const Vec3 &v) const;  Apply the transform to a vector, i.e. project a vector from the child frame to the parent frame (rotation only, no translation added) More...;  ; constexpr Vec3 unprojectPoint (const Vec3 &v) const;  Apply the inverse transform to a point, i.e. project a point from the parent frame to the child frame (translation and rotation) More...;  ; constexpr Vec3 unprojectVector (const Vec3 &v) const;  Apply the inverse transform to a vector, i.e. project a vector from the parent frame to the child frame (rotation only, no translation) More...;  ; constexpr Vec3 pointToParent (const Vec3 &v) const;  obsolete. Use projectPoint. More...;  ; constexpr Vec3 pointToChild (const Vec3 &v) const;  obsolete. Use unprojectPoint. More...;  ; constexpr real * ptr ();  ; constexpr const real * ptr () const;  ; constexpr real & operator[] (Size i);  Access to i-th element. More...;  ; constexpr const real & operator[] (Size i) const;  Const access to i-th element. More...;  ; Tests operators; constexpr bool operator== (const RigidCoord< 3, real > &b) const;  ; constexpr bool operator!= (const RigidCoord< 3, real > &b) const;  . Static Public Member Functions; static RigidCoord rand (SReal a);  Random rigid transform composed of 3 random translations and 3 random Euler angles. More...;  ; static constexpr RigidCoord< 3, real > identity ();  ; template<typename V > ; static constexpr HomogeneousVec toHomogeneous (V v, real r=1.);  create a homogeneous vector from a 3d vector More...;  ; template<typename V > ; static constexpr Vec3 fromHomogeneous (V v);  create a 3d vector from a homogeneous vector More...;  ; static constexpr Size max_size ();  ; static constexpr Size size ();  . Friends; std::ostream & operator<< (std::ostream &out, const RigidCoord< 3, real > &v);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, RigidCoord< 3, real > &v);  read from an input stream M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html
Usability,clear,clear,"c constexpr sofa::Size total_size = 7;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Protected Attributes; Vec3 center;  ; Quat orientation;  . Public Member Functions; constexpr RigidCoord (const Vec3 &posCenter, const Quat &orient);  ; constexpr RigidCoord ();  ; template<typename real2 > ; constexpr RigidCoord (const RigidCoord< 3, real2 > &c);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidCoord< 3, real2 > &c);  ; constexpr void operator= (const Vec3 &p);  ; void operator+= (const Deriv &dg);  ; constexpr RigidCoord< 3, real > operator+ (const Deriv &dg) const;  ; constexpr RigidCoord< 3, real > operator- (const RigidCoord< 3, real > &a) const;  ; constexpr RigidCoord< 3, real > operator+ (const RigidCoord< 3, real > &a) const;  ; constexpr RigidCoord< 3, real > operator- () const;  ; constexpr void operator+= (const RigidCoord< 3, real > &a);  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; template<typename real2 > ; constexpr RigidCoord< 3, real > operator* (real2 a) const;  ; template<typename real2 > ; constexpr RigidCoord< 3, real > operator/ (real2 a) const;  ; constexpr Real operator* (const RigidCoord< 3, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; constexpr real norm2 () const;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec3 & getCenter ();  ; constexpr Quat & getOrientation ();  ; constexpr const Vec3 & getCenter () const;  ; constexpr const Quat & getOrientation () const;  ; constexpr Vec3 rotate (const Vec3 &v) const;  ; constexpr RigidCoord< 3, real > rotate (const RigidCoord< 3, real > &c) const;  ; co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::RigidDeriv< 2, real > Member List . This is the complete list of members for sofa::defaulttype::RigidDeriv< 2, real >, including all inherited members. clear()sofa::defaulttype::RigidDeriv< 2, real >inline; getAngular()sofa::defaulttype::RigidDeriv< 2, real >inline; getAngular() constsofa::defaulttype::RigidDeriv< 2, real >inline; getLinear()sofa::defaulttype::RigidDeriv< 2, real >inline; getLinear() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVAll() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVCenter()sofa::defaulttype::RigidDeriv< 2, real >inline; getVCenter() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVOrientation()sofa::defaulttype::RigidDeriv< 2, real >inline; getVOrientation() constsofa::defaulttype::RigidDeriv< 2, real >inline; norm() constsofa::defaulttype::RigidDeriv< 2, real >inline; operator!=(const RigidDeriv< 2, real > &b) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator*(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator*=(real2 a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator+(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator+=(const RigidDeriv< 2, real > &a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator-(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator-() constsofa::defaulttype::RigidDeriv< 2, real >inline; operator-=(const RigidDeriv< 2, real > &a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator/=(real2 a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator<<(std::ostream &out, const RigidDeriv< 2, real > &v)sofa::defaulttype::RigidDeriv< 2, real >friend; operator=(const RigidDeriv< 2, real2 > &c)sofa::defaulttype::RigidDeriv< 2, real >inline; operator=(const type::Vec< 2, real2 > &v)sofa::defaulttype::RigidDeriv< 2, real >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4-members.html
Usability,clear,clear," clear()sofa::defaulttype::RigidDeriv< 2, real >inline; getAngular()sofa::defaulttype::RigidDeriv< 2, real >inline; getAngular() constsofa::defaulttype::RigidDeriv< 2, real >inline; getLinear()sofa::defaulttype::RigidDeriv< 2, real >inline; getLinear() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVAll() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVCenter()sofa::defaulttype::RigidDeriv< 2, real >inline; getVCenter() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVOrientation()sofa::defaulttype::RigidDeriv< 2, real >inline; getVOrientation() constsofa::defaulttype::RigidDeriv< 2, real >inline; norm() constsofa::defaulttype::RigidDeriv< 2, real >inline; operator!=(const RigidDeriv< 2, real > &b) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator*(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator*=(real2 a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator+(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator+=(const RigidDeriv< 2, real > &a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator-(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator-() constsofa::defaulttype::RigidDeriv< 2, real >inline; operator-=(const RigidDeriv< 2, real > &a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator/=(real2 a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator<<(std::ostream &out, const RigidDeriv< 2, real > &v)sofa::defaulttype::RigidDeriv< 2, real >friend; operator=(const RigidDeriv< 2, real2 > &c)sofa::defaulttype::RigidDeriv< 2, real >inline; operator=(const type::Vec< 2, real2 > &v)sofa::defaulttype::RigidDeriv< 2, real >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4-members.html
Security,access,access," RigidDeriv< 2, real > operator- () const;  ; constexpr Real operator* (const RigidDeriv< 2, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; Real norm () const;  Euclidean norm. More...;  ; constexpr Vec2 & getVCenter ();  ; constexpr Real & getVOrientation ();  ; constexpr const Vec2 & getVCenter () const;  ; constexpr const Real & getVOrientation () const;  ; constexpr Vec2 & getLinear ();  ; constexpr Real & getAngular ();  ; constexpr const Vec2 & getLinear () const;  ; constexpr const Real & getAngular () const;  ; constexpr VecAll getVAll () const;  ; constexpr Vec2 velocityAtRotatedPoint (const Vec2 &p) const;  Velocity at point p, where p is the offset from the origin of the frame, given in the same coordinate system as the velocity of the origin. More...;  ; constexpr real * ptr ();  ; constexpr const real * ptr () const;  ; constexpr real & operator[] (Size i);  Access to i-th element. More...;  ; constexpr const real & operator[] (Size i) const;  Const access to i-th element. More...;  ; Tests operators; constexpr bool operator== (const RigidDeriv< 2, real > &b) const;  ; constexpr bool operator!= (const RigidDeriv< 2, real > &b) const;  . Static Public Member Functions; static constexpr Size size ();  . Friends; class RigidCoord< 2, real >;  ; std::ostream & operator<< (std::ostream &out, const RigidDeriv< 2, real > &v);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, RigidDeriv< 2, real > &v);  read from an input stream More...;  . Attribute details. ◆ spatial_dimensions. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidDeriv< 2, real >::spatial_dimensions = 2. staticconstexpr . Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) . ◆ total_size. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidDeriv< 2, real >::total_size = 3. staticconstexpr . Compile-time constant specifying",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html
Usability,clear,clear,"e . #include <RigidDeriv.h>. Static Public Attributes; static constexpr sofa::Size total_size = 3;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 2;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Public Member Functions; constexpr RigidDeriv (type::NoInit);  ; constexpr RigidDeriv ();  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 2, real2 > &velCenter, const real2 &velOrient);  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 3, real2 > &v);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidDeriv< 2, real2 > &c);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 2, real2 > &v);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 3, real2 > &v);  ; constexpr void operator+= (const RigidDeriv< 2, real > &a);  ; constexpr void operator-= (const RigidDeriv< 2, real > &a);  ; constexpr RigidDeriv< 2, real > operator+ (const RigidDeriv< 2, real > &a) const;  ; constexpr RigidDeriv< 2, real > operator- (const RigidDeriv< 2, real > &a) const;  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; constexpr RigidDeriv< 2, real > operator- () const;  ; constexpr Real operator* (const RigidDeriv< 2, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; Real norm () const;  Euclidean norm. More...;  ; constexpr Vec2 & getVCenter ();  ; constexpr Real & getVOrientation ();  ; constexpr const Vec2 & getVCenter () const;  ; constexpr const Real & getVOrientation () const;  ; constexpr Vec2 & getLinear ();  ; constexpr Real & getAngular ();  ; constexpr const Vec2 & getLinear () const;  ; constexpr const Real & getAngular () const;  ; c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::RigidDeriv< 3, real > Member List . This is the complete list of members for sofa::defaulttype::RigidDeriv< 3, real >, including all inherited members. clear()sofa::defaulttype::RigidDeriv< 3, real >inline; getAngular()sofa::defaulttype::RigidDeriv< 3, real >inline; getAngular() constsofa::defaulttype::RigidDeriv< 3, real >inline; getLinear()sofa::defaulttype::RigidDeriv< 3, real >inline; getLinear() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVAll() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVCenter()sofa::defaulttype::RigidDeriv< 3, real >inline; getVCenter() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVOrientation()sofa::defaulttype::RigidDeriv< 3, real >inline; getVOrientation() constsofa::defaulttype::RigidDeriv< 3, real >inline; norm() constsofa::defaulttype::RigidDeriv< 3, real >inline; operator!=(const RigidDeriv< 3, real > &b) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator*(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator*=(real2 a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator+(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator+=(const RigidDeriv &a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator-() constsofa::defaulttype::RigidDeriv< 3, real >inline; operator-(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator-=(const RigidDeriv &a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator/=(real2 a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator<<(std::ostream &out, const RigidDeriv< 3, real > &v)sofa::defaulttype::RigidDeriv< 3, real >friend; operator=(const RigidDeriv< 3, real2 > &c)sofa::defaulttype::RigidDeriv< 3, real >inline; operator=(const type::Vec< 3, real2 > &v)sofa::defaulttype::RigidDeriv< 3, real >inline; operator=(cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4-members.html
Usability,clear,clear," clear()sofa::defaulttype::RigidDeriv< 3, real >inline; getAngular()sofa::defaulttype::RigidDeriv< 3, real >inline; getAngular() constsofa::defaulttype::RigidDeriv< 3, real >inline; getLinear()sofa::defaulttype::RigidDeriv< 3, real >inline; getLinear() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVAll() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVCenter()sofa::defaulttype::RigidDeriv< 3, real >inline; getVCenter() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVOrientation()sofa::defaulttype::RigidDeriv< 3, real >inline; getVOrientation() constsofa::defaulttype::RigidDeriv< 3, real >inline; norm() constsofa::defaulttype::RigidDeriv< 3, real >inline; operator!=(const RigidDeriv< 3, real > &b) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator*(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator*=(real2 a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator+(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator+=(const RigidDeriv &a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator-() constsofa::defaulttype::RigidDeriv< 3, real >inline; operator-(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator-=(const RigidDeriv &a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator/=(real2 a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator<<(std::ostream &out, const RigidDeriv< 3, real > &v)sofa::defaulttype::RigidDeriv< 3, real >friend; operator=(const RigidDeriv< 3, real2 > &c)sofa::defaulttype::RigidDeriv< 3, real >inline; operator=(const type::Vec< 3, real2 > &v)sofa::defaulttype::RigidDeriv< 3, real >inline; operator=(cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4-members.html
Security,access,access,"r- (const RigidDeriv< 3, real > &a) const;  ; constexpr Real operator* (const RigidDeriv< 3, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec3 & getVCenter ();  ; constexpr Vec3 & getVOrientation ();  ; constexpr const Vec3 & getVCenter () const;  ; constexpr const Vec3 & getVOrientation () const;  ; constexpr Vec3 & getLinear ();  ; constexpr const Vec3 & getLinear () const;  ; constexpr Vec3 & getAngular ();  ; constexpr const Vec3 & getAngular () const;  ; constexpr VecAll getVAll () const;  ; constexpr Vec3 velocityAtRotatedPoint (const Vec3 &p) const;  Velocity at point p, where p is the offset from the origin of the frame, given in the same coordinate system as the velocity of the origin. More...;  ; constexpr real * ptr ();  ; constexpr const real * ptr () const;  ; constexpr real & operator[] (Size i);  Access to i-th element. More...;  ; constexpr const real & operator[] (Size i) const;  Const access to i-th element. More...;  ; Tests operators; constexpr bool operator== (const RigidDeriv< 3, real > &b) const;  ; constexpr bool operator!= (const RigidDeriv< 3, real > &b) const;  . Static Public Member Functions; static constexpr Size size ();  . Friends; class RigidCoord< 3, real >;  ; std::ostream & operator<< (std::ostream &out, const RigidDeriv< 3, real > &v);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, RigidDeriv< 3, real > &v);  read from an input stream More...;  . Attribute details. ◆ spatial_dimensions. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidDeriv< 3, real >::spatial_dimensions = 3. staticconstexpr . Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) . ◆ total_size. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidDeriv< 3, real >::total_size = 6. staticconstexpr . Compile-time constant specifying",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html
Usability,clear,clear,"e-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Protected Attributes; Vec3 vCenter;  ; Vec3 vOrientation;  . Public Member Functions; constexpr RigidDeriv ();  ; constexpr RigidDeriv (type::NoInit);  ; constexpr RigidDeriv (const Vec3 &velCenter, const Vec3 &velOrient);  ; template<typename real2 > ; constexpr RigidDeriv (const RigidDeriv< 3, real2 > &c);  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 6, real2 > &v);  ; template<typename real2 > ; constexpr RigidDeriv (const real2 *ptr);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidDeriv< 3, real2 > &c);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 3, real2 > &v);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 6, real2 > &v);  ; constexpr void operator+= (const RigidDeriv &a);  ; constexpr void operator-= (const RigidDeriv &a);  ; constexpr RigidDeriv< 3, real > operator+ (const RigidDeriv< 3, real > &a) const;  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; constexpr RigidDeriv< 3, real > operator- () const;  ; constexpr RigidDeriv< 3, real > operator- (const RigidDeriv< 3, real > &a) const;  ; constexpr Real operator* (const RigidDeriv< 3, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec3 & getVCenter ();  ; constexpr Vec3 & getVOrientation ();  ; constexpr const Vec3 & getVCenter () const;  ; constexpr const Vec3 & getVOrientation () const;  ; constexpr Vec3 & getLinear ();  ; constexpr const Vec3 & getLinear () const;  ; constexpr Vec3 & getAngular ();  ; con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::RigidMass< 2, real > Member List . This is the complete list of members for sofa::defaulttype::RigidMass< 2, real >, including all inherited members. inertiaMassMatrixsofa::defaulttype::RigidMass< 2, real >; inertiaMatrixsofa::defaulttype::RigidMass< 2, real >; invInertiaMassMatrixsofa::defaulttype::RigidMass< 2, real >; invInertiaMatrixsofa::defaulttype::RigidMass< 2, real >; masssofa::defaulttype::RigidMass< 2, real >; operator const Real() constsofa::defaulttype::RigidMass< 2, real >inline; operator*=(Real fact)sofa::defaulttype::RigidMass< 2, real >inline; operator+=(Real m)sofa::defaulttype::RigidMass< 2, real >inline; operator-=(Real m)sofa::defaulttype::RigidMass< 2, real >inline; operator/=(Real fact)sofa::defaulttype::RigidMass< 2, real >inline; operator<<(std::ostream &out, const RigidMass< 2, Real > &m)sofa::defaulttype::RigidMass< 2, real >friend; operator=(Real m)sofa::defaulttype::RigidMass< 2, real >inline; operator>>(std::istream &in, RigidMass< 2, Real > &m)sofa::defaulttype::RigidMass< 2, real >friend; Real typedefsofa::defaulttype::RigidMass< 2, real >; recalc()sofa::defaulttype::RigidMass< 2, real >inline; RigidMass(Real m=1)sofa::defaulttype::RigidMass< 2, real >inline; RigidMass(Real m, Real radius)sofa::defaulttype::RigidMass< 2, real >inline; RigidMass(Real m, Real xwidth, Real ywidth)sofa::defaulttype::RigidMass< 2, real >inline; value_type typedefsofa::defaulttype::RigidMass< 2, real >; volumesofa::defaulttype::RigidMass< 2, real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_mass_3_012_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_mass_3_012_00_01real_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::RigidMass< 3, real > Member List . This is the complete list of members for sofa::defaulttype::RigidMass< 3, real >, including all inherited members. inertiaMassMatrixsofa::defaulttype::RigidMass< 3, real >; inertiaMatrixsofa::defaulttype::RigidMass< 3, real >; invInertiaMassMatrixsofa::defaulttype::RigidMass< 3, real >; invInertiaMatrixsofa::defaulttype::RigidMass< 3, real >; masssofa::defaulttype::RigidMass< 3, real >; Mat3x3 typedefsofa::defaulttype::RigidMass< 3, real >; operator const Real() constsofa::defaulttype::RigidMass< 3, real >inline; operator*=(Real fact)sofa::defaulttype::RigidMass< 3, real >inline; operator+=(Real m)sofa::defaulttype::RigidMass< 3, real >inline; operator-=(Real m)sofa::defaulttype::RigidMass< 3, real >inline; operator/=(Real fact)sofa::defaulttype::RigidMass< 3, real >inline; operator<<(std::ostream &out, const RigidMass< 3, real > &m)sofa::defaulttype::RigidMass< 3, real >friend; operator=(Real m)sofa::defaulttype::RigidMass< 3, real >inline; operator>>(std::istream &in, RigidMass< 3, real > &m)sofa::defaulttype::RigidMass< 3, real >friend; Real typedefsofa::defaulttype::RigidMass< 3, real >; recalc()sofa::defaulttype::RigidMass< 3, real >inline; RigidMass(Real m=1)sofa::defaulttype::RigidMass< 3, real >inline; value_type typedefsofa::defaulttype::RigidMass< 3, real >; volumesofa::defaulttype::RigidMass< 3, real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_mass_3_013_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_mass_3_013_00_01real_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::SolidTypes< R > Member List . This is the complete list of members for sofa::defaulttype::SolidTypes< R >, including all inherited members. Coord typedefsofa::defaulttype::SolidTypes< R >; crossM(const Vec &v)sofa::defaulttype::SolidTypes< R >static; Deriv typedefsofa::defaulttype::SolidTypes< R >; DOF typedefsofa::defaulttype::SolidTypes< R >; dyad(const Vec &u, const Vec &v)sofa::defaulttype::SolidTypes< R >static; dyad(const SpatialVector &u, const SpatialVector &v)sofa::defaulttype::SolidTypes< R >static; Mat typedefsofa::defaulttype::SolidTypes< R >; Mat3x3 typedefsofa::defaulttype::SolidTypes< R >; Mat66 typedefsofa::defaulttype::SolidTypes< R >; Mat6x6 typedefsofa::defaulttype::SolidTypes< R >; mult(const Mat &m, const Vec &v)sofa::defaulttype::SolidTypes< R >static; multTrans(const Mat &m, const Vec &v)sofa::defaulttype::SolidTypes< R >static; Name()sofa::defaulttype::SolidTypes< R >inlinestatic; Real typedefsofa::defaulttype::SolidTypes< R >; Rot typedefsofa::defaulttype::SolidTypes< R >; SpatialVector typedefsofa::defaulttype::SolidTypes< R >; Transform typedefsofa::defaulttype::SolidTypes< R >; Vec typedefsofa::defaulttype::SolidTypes< R >; Vec3 typedefsofa::defaulttype::SolidTypes< R >; Vec6 typedefsofa::defaulttype::SolidTypes< R >; VecCoord typedefsofa::defaulttype::SolidTypes< R >; VecDeriv typedefsofa::defaulttype::SolidTypes< R >; VecReal typedefsofa::defaulttype::SolidTypes< R >. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::SolidTypes< R >::ArticulatedInertia Member List . This is the complete list of members for sofa::defaulttype::SolidTypes< R >::ArticulatedInertia, including all inherited members. ArticulatedInertia()sofa::defaulttype::SolidTypes< R >::ArticulatedInertia; ArticulatedInertia(const Mat &M, const Mat &H, const Mat &I)sofa::defaulttype::SolidTypes< R >::ArticulatedInertia; copyTo(Mat66 &) constsofa::defaulttype::SolidTypes< R >::ArticulatedInertia; Hsofa::defaulttype::SolidTypes< R >::ArticulatedInertia; Isofa::defaulttype::SolidTypes< R >::ArticulatedInertia; Msofa::defaulttype::SolidTypes< R >::ArticulatedInertia; operator*(const SpatialVector &v) constsofa::defaulttype::SolidTypes< R >::ArticulatedInertia; operator*(Real r) constsofa::defaulttype::SolidTypes< R >::ArticulatedInertia; operator+(const ArticulatedInertia &Ai) constsofa::defaulttype::SolidTypes< R >::ArticulatedInertia; operator+=(const ArticulatedInertia &Ai)sofa::defaulttype::SolidTypes< R >::ArticulatedInertia; operator-(const ArticulatedInertia &Ai) constsofa::defaulttype::SolidTypes< R >::ArticulatedInertia; operator<<(std::ostream &out, const ArticulatedInertia &r)sofa::defaulttype::SolidTypes< R >::ArticulatedInertiafriend; operator=(const RigidInertia &Ri)sofa::defaulttype::SolidTypes< R >::ArticulatedInertia. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_articulated_inertia-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_articulated_inertia-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::SolidTypes< R >::RigidInertia Member List . This is the complete list of members for sofa::defaulttype::SolidTypes< R >::RigidInertia, including all inherited members. hsofa::defaulttype::SolidTypes< R >::RigidInertia; Isofa::defaulttype::SolidTypes< R >::RigidInertia; msofa::defaulttype::SolidTypes< R >::RigidInertia; operator*(const SpatialVector &v) constsofa::defaulttype::SolidTypes< R >::RigidInertia; operator*(const Transform &t) constsofa::defaulttype::SolidTypes< R >::RigidInertia; operator<<(std::ostream &out, const RigidInertia &r)sofa::defaulttype::SolidTypes< R >::RigidInertiafriend; RigidInertia()sofa::defaulttype::SolidTypes< R >::RigidInertia; RigidInertia(Real m, const Vec &h, const Mat &I)sofa::defaulttype::SolidTypes< R >::RigidInertia. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_rigid_inertia-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_rigid_inertia-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::SolidTypes< R >::Twist Member List . This is the complete list of members for sofa::defaulttype::SolidTypes< R >::Twist, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html
Usability,clear,clear,"faulttype::SolidTypes< R >::Twist, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; Twist(const Vec3 &linear, const Vec3 &angular)sofa::defaulttype::SolidTypes< R >::Twistinline; Vec typedefsofa::type::SpatialVector< TReal >. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html
Modifiability,inherit,inherited,"st Class Reference . #include <SolidTypes.h>; A twist aka a SpatialVector representing a velocity This is practically a SpatialVector (screw) with the additional semantics that this screw represents a twist (velocity) and not a wrench (force and torque) ; More... Inheritance diagram for sofa::defaulttype::SolidTypes< R >::Twist:. [legend]; Detailed Description; template<class R = float>; class sofa::defaulttype::SolidTypes< R >::Twist; A twist aka a SpatialVector representing a velocity This is practically a SpatialVector (screw) with the additional semantics that this screw represents a twist (velocity) and not a wrench (force and torque) ; AuthorAnthony Truchet, CEA, 2006 . Public Member Functions;  Twist (const Vec3 &linear, const Vec3 &angular);  ;  Public Member Functions inherited from sofa::type::SpatialVector< TReal >; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::type::SpatialVe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist.html
Usability,clear,clear,"st Class Reference . #include <SolidTypes.h>; A twist aka a SpatialVector representing a velocity This is practically a SpatialVector (screw) with the additional semantics that this screw represents a twist (velocity) and not a wrench (force and torque) ; More... Inheritance diagram for sofa::defaulttype::SolidTypes< R >::Twist:. [legend]; Detailed Description; template<class R = float>; class sofa::defaulttype::SolidTypes< R >::Twist; A twist aka a SpatialVector representing a velocity This is practically a SpatialVector (screw) with the additional semantics that this screw represents a twist (velocity) and not a wrench (force and torque) ; AuthorAnthony Truchet, CEA, 2006 . Public Member Functions;  Twist (const Vec3 &linear, const Vec3 &angular);  ;  Public Member Functions inherited from sofa::type::SpatialVector< TReal >; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::type::SpatialVe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::SolidTypes< R >::Wrench Member List . This is the complete list of members for sofa::defaulttype::SolidTypes< R >::Wrench, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html
Usability,clear,clear,"aulttype::SolidTypes< R >::Wrench, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; Vec typedefsofa::type::SpatialVector< TReal >; Wrench(const Vec3 &force, const Vec3 &torque)sofa::defaulttype::SolidTypes< R >::Wrenchinline. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html
Modifiability,inherit,inherited,"nclude <SolidTypes.h>; A wrench aka a SpatialVector representing a force and a torque This is practically a SpatialVector (screw) with the additional semantics that this screw represents a wrench (force and torque) and not a twist (velocity) ; More... Inheritance diagram for sofa::defaulttype::SolidTypes< R >::Wrench:. [legend]; Detailed Description; template<class R = float>; class sofa::defaulttype::SolidTypes< R >::Wrench; A wrench aka a SpatialVector representing a force and a torque This is practically a SpatialVector (screw) with the additional semantics that this screw represents a wrench (force and torque) and not a twist (velocity) ; AuthorAnthony Truchet, CEA, 2006 . Public Member Functions;  Wrench (const Vec3 &force, const Vec3 &torque);  ;  Public Member Functions inherited from sofa::type::SpatialVector< TReal >; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::type::SpatialVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html
Usability,clear,clear,"nclude <SolidTypes.h>; A wrench aka a SpatialVector representing a force and a torque This is practically a SpatialVector (screw) with the additional semantics that this screw represents a wrench (force and torque) and not a twist (velocity) ; More... Inheritance diagram for sofa::defaulttype::SolidTypes< R >::Wrench:. [legend]; Detailed Description; template<class R = float>; class sofa::defaulttype::SolidTypes< R >::Wrench; A wrench aka a SpatialVector representing a force and a torque This is practically a SpatialVector (screw) with the additional semantics that this screw represents a wrench (force and torque) and not a twist (velocity) ; AuthorAnthony Truchet, CEA, 2006 . Public Member Functions;  Wrench (const Vec3 &force, const Vec3 &torque);  ;  Public Member Functions inherited from sofa::type::SpatialVector< TReal >; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::type::SpatialVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::StdRigidTypes< 2, real > Member List . This is the complete list of members for sofa::defaulttype::StdRigidTypes< 2, real >, including all inherited members. add(Coord &c, T x, T y, T)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; add(Deriv &c, T x, T y, T)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; AngularVector typedefsofa::defaulttype::StdRigidTypes< 2, real >; Coord typedefsofa::defaulttype::StdRigidTypes< 2, real >; coord_total_sizesofa::defaulttype::StdRigidTypes< 2, real >static; CPos typedefsofa::defaulttype::StdRigidTypes< 2, real >; crosscross(const Vec2 &f, const Real &dtheta, const Vec2 &OP)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; crosscross(const Real &omega, const Real &dtheta, const Vec2 &OP)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; CRot typedefsofa::defaulttype::StdRigidTypes< 2, real >; Deriv typedefsofa::defaulttype::StdRigidTypes< 2, real >; deriv_total_sizesofa::defaulttype::StdRigidTypes< 2, real >static; DPos typedefsofa::defaulttype::StdRigidTypes< 2, real >; DRot typedefsofa::defaulttype::StdRigidTypes< 2, real >; get(T &x, T &y, T &z, const Coord &c)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; get(T &x, T &y, T &z, const Deriv &c)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; getCPos(const Coord &c)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; getCRot(const Coord &c)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; getDPos(const Deriv &d)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; getDRot(const Deriv &d)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; interpolate(const type::vector< Coord > &ancestors, const type::vector< Real > &coefs)sofa::defaulttype::StdRigidTypes< 2, real >inlinestatic; interpolate(const type::vector< Deriv > &ancestors, const type::vector< Real > &coefs)sofa::defaulttype::StdRigidTypes< 2, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_std_rigid_types_3_012_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_std_rigid_types_3_012_00_01real_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::StdRigidTypes< 3, real > Member List . This is the complete list of members for sofa::defaulttype::StdRigidTypes< 3, real >, including all inherited members. add(Coord &c, T x, T y, T z)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; add(Deriv &c, T x, T y, T z)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; AngularVector typedefsofa::defaulttype::StdRigidTypes< 3, real >; Coord typedefsofa::defaulttype::StdRigidTypes< 3, real >; coord_total_sizesofa::defaulttype::StdRigidTypes< 3, real >static; coordDifference(const Coord &c1, const Coord &c2)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; CPos typedefsofa::defaulttype::StdRigidTypes< 3, real >; crosscross(const Vec3 &a, const Vec3 &b, const Vec3 &c)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; CRot typedefsofa::defaulttype::StdRigidTypes< 3, real >; Deriv typedefsofa::defaulttype::StdRigidTypes< 3, real >; deriv_total_sizesofa::defaulttype::StdRigidTypes< 3, real >static; DPos typedefsofa::defaulttype::StdRigidTypes< 3, real >; DRot typedefsofa::defaulttype::StdRigidTypes< 3, real >; get(T &x, T &y, T &z, const Coord &c)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; get(T &x, T &y, T &z, const Deriv &c)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; getCPos(const Coord &c)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; getCRot(const Coord &c)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; getDPos(const Deriv &d)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; getDRot(const Deriv &d)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; interpolate(const type::vector< Coord > &ancestors, const type::vector< Real > &coefs)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic; interpolate(const type::vector< Deriv > &ancestors, const type::vector< Real > &coefs)sofa::defaulttype::StdRigidTypes< 3, real >inlinestatic",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_std_rigid_types_3_013_00_01real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_std_rigid_types_3_013_00_01real_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal > Member List . This is the complete list of members for sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >, including all inherited members. add(Coord &c, T x, T y, T z)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; Coord typedefsofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >; coord_total_sizesofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >static; coordDifference(const Coord &c1, const Coord &c2)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; CPos typedefsofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >; Deriv typedefsofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >; deriv_total_sizesofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >static; DPos typedefsofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >; get(T &x, T &y, T &z, const Coord &c)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; getCPos(const Coord &c)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; getDPos(const Deriv &d)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; interpolate(const type::vector< Coord > &ancestors, const type::vector< Real > &coefs)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; MatrixDeriv typedefsofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >; Name()sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >static; randomDeriv(Real minMagnitude, Real maxMagnitude)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; Real typedefsofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >; set(Coord &c, T x, T y, T z)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; setCPos(Coord &c, const CPos &v)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >inlinestatic; setDPos(Deriv ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_std_vector_types-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_std_vector_types-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::TemplateAliases Member List . This is the complete list of members for sofa::defaulttype::TemplateAliases, including all inherited members. addAlias(const std::string &name, const std::string &result, const bool doWarnUser)sofa::defaulttype::TemplateAliasesstatic; getTemplateAlias(const std::string &name)sofa::defaulttype::TemplateAliasesstatic; resolveAlias(const std::string &name)sofa::defaulttype::TemplateAliasesstatic. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_template_aliases-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_template_aliases-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::TypeInfoId Member List . This is the complete list of members for sofa::defaulttype::TypeInfoId, including all inherited members. GetTypeId()sofa::defaulttype::TypeInfoIdinlinestatic; idsofa::defaulttype::TypeInfoId; nfosofa::defaulttype::TypeInfoId. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_id-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_id-members.html
Security,access,access,﻿. SOFA API: sofa::defaulttype::TypeInfoId Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Member Functions |; List of all members . sofa::defaulttype::TypeInfoId Class Reference . #include <TypeInfoID.h>; Generates unique id for types. ; More...; Detailed Description; Generates unique id for types. . Compared to type_info.hash_code() this version is guaranteed to be in constant time; The common use case is get the type id to access a full AbstractTypeInfo from the TypeInfoRegistry. Example: TypeInfoId& shortinfo = TypeInfoId::getTypeId<double>(); AbstractTypeInfo* info = TypeInfoRegistry::Get(shortinfo.id); info->getName() . Public Attributes; int id;  ; const std::type_info & nfo;  . Static Public Member Functions; template<class T > ; static const TypeInfoId & GetTypeId ();  . Attribute details. ◆ id. int sofa::defaulttype::TypeInfoId::id. ◆ nfo. const std::type_info& sofa::defaulttype::TypeInfoId::nfo. Function details. ◆ GetTypeId(). template<class T > . static const TypeInfoId& sofa::defaulttype::TypeInfoId::GetTypeId ; (; ). inlinestatic . sofadefaulttypeTypeInfoId; Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_id.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::TypeInfoRegistry Member List . This is the complete list of members for sofa::defaulttype::TypeInfoRegistry, including all inherited members. AllocateNewTypeId(const std::type_info &nfo)sofa::defaulttype::TypeInfoRegistrystatic; Get(const TypeInfoId &id)sofa::defaulttype::TypeInfoRegistrystatic; GetRegisteredTypes(const std::string &target="""")sofa::defaulttype::TypeInfoRegistrystatic; Set(const TypeInfoId &tid, AbstractTypeInfo *info, const std::string &compilationTarget)sofa::defaulttype::TypeInfoRegistrystatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_registry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_registry-members.html
Modifiability,inherit,inherits,"﻿. SOFA API: sofa::defaulttype::TypeInfoRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::TypeInfoRegistry Class Reference . #include <TypeInfoRegistry.h>; An unique singleton to register all the type info defined in Sofa. ; More...; Detailed Description; An unique singleton to register all the type info defined in Sofa. . AbstractTypeInfo offers an API to manipulate the data content of a specific type without requiring the inner details of the type. Have a look in AbstractTypeInfo for more information.; On its side, TypeInfoRegistry holds all the instances of object that inherits from AbstractTypeInfo; The common use case is get the type id to access a full AbstractTypeInfo from the TypeInfoRegistry. The access is done with a TypeInfoId instance that stores an unique identifier for each data type.; Example of use: TypeInfoId& shortinfo = TypeInfoId::GetTypeId<double>(); AbstractTypeInfo* info = TypeInfoRegistry::Get(shortinfo); info->getName() . Static Public Member Functions; static const AbstractTypeInfo * Get (const TypeInfoId &id);  ; static int Set (const TypeInfoId &tid, AbstractTypeInfo *info, const std::string &compilationTarget);  ; static std::vector< const AbstractTypeInfo * > GetRegisteredTypes (const std::string &target="""");  ; static int AllocateNewTypeId (const std::type_info &nfo);  Returns a new int to generates the corresponding TypeInfoId. More...;  . Function details. ◆ AllocateNewTypeId(). int sofa::defaulttype::TypeInfoRegistry::AllocateNewTypeId ; (; const std::type_info & ; nfo). static . Returns a new int to generates the corresponding TypeInfoId. . ◆ Get(). const AbstractTypeInfo * sofa::defaulttype::TypeInfoRegistry::Get ; (; const TypeInfoId & ; id). static . Returns the abstractTypeInfo corresponding to the provided TypeInfoId If there is none a NamedOnlyTypeInfo object is created an returned . ◆ GetRegisteredTypes",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_registry.html
Security,access,access,"﻿. SOFA API: sofa::defaulttype::TypeInfoRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::TypeInfoRegistry Class Reference . #include <TypeInfoRegistry.h>; An unique singleton to register all the type info defined in Sofa. ; More...; Detailed Description; An unique singleton to register all the type info defined in Sofa. . AbstractTypeInfo offers an API to manipulate the data content of a specific type without requiring the inner details of the type. Have a look in AbstractTypeInfo for more information.; On its side, TypeInfoRegistry holds all the instances of object that inherits from AbstractTypeInfo; The common use case is get the type id to access a full AbstractTypeInfo from the TypeInfoRegistry. The access is done with a TypeInfoId instance that stores an unique identifier for each data type.; Example of use: TypeInfoId& shortinfo = TypeInfoId::GetTypeId<double>(); AbstractTypeInfo* info = TypeInfoRegistry::Get(shortinfo); info->getName() . Static Public Member Functions; static const AbstractTypeInfo * Get (const TypeInfoId &id);  ; static int Set (const TypeInfoId &tid, AbstractTypeInfo *info, const std::string &compilationTarget);  ; static std::vector< const AbstractTypeInfo * > GetRegisteredTypes (const std::string &target="""");  ; static int AllocateNewTypeId (const std::type_info &nfo);  Returns a new int to generates the corresponding TypeInfoId. More...;  . Function details. ◆ AllocateNewTypeId(). int sofa::defaulttype::TypeInfoRegistry::AllocateNewTypeId ; (; const std::type_info & ; nfo). static . Returns a new int to generates the corresponding TypeInfoId. . ◆ Get(). const AbstractTypeInfo * sofa::defaulttype::TypeInfoRegistry::Get ; (; const TypeInfoId & ; id). static . Returns the abstractTypeInfo corresponding to the provided TypeInfoId If there is none a NamedOnlyTypeInfo object is created an returned . ◆ GetRegisteredTypes",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_registry.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_registry.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::TypeInfoRegistryTools Member List . This is the complete list of members for sofa::defaulttype::TypeInfoRegistryTools, including all inherited members. dumpRegistryContentToStream(std::ostream &out, TypeInfoType type=TypeInfoType::COMPLETE, const std::string &target="""")sofa::defaulttype::TypeInfoRegistryToolsstatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_registry_tools-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_type_info_registry_tools-members.html
Deployability,update,update,"ect *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showIndicesScalesofa::gl::component::engine::TextureInterpolation< DataTypes >protected; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(TextureInterpolation, DataTypes), core::DataEngine)sofa::gl::component::engine::TextureInterpolation< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; standardLinearInterpolation()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TextureInterpolation()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateGraph()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; VecCoord2D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; VecCoord3D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::engine::TextureInterpolation< DataTypes > Member List . This is the complete list of members for sofa::gl::component::engine::TextureInterpolation< DataTypes >, including all inherited members. _changeScalesofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _inputCoordssofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _inputFieldsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _maxValsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _minValsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _outputCoordsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _scalarFieldsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _vertexPlotedsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html
Performance,load,loader," removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resetGraph()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showIndicesScalesofa::gl::component::engine::TextureInterpolation< DataTypes >protected; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(TextureInterpolation, DataTypes), core::DataEngine)sofa::gl::component::engine::TextureInterpolation< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; standardLinearInterpolation()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TextureInterpolation()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html
Testability,log,logging," DataTypes >protected; _outputCoordsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _scalarFieldsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; _vertexPlotedsofa::gl::component::engine::TextureInterpolation< DataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInput(sofa::core::objectmodel::BaseData *data)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addInputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutput(objectmodel::BaseData *n)sofa::core::DataEngine; sofa::core::DataTrackerDDGNode::addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutputs(std::initializer_list< sofa::core::objectmodel::BaseData * > datas)sofa::core::DataTrackerDDGNode; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html
Usability,clear,clearLoggedMessages,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord1D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord2D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord3D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html
Availability,down,down," inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TextureInterpolation, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html
Deployability,update,update,"ackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TextureInterpolation, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html
Integrability,depend,dependent,"More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html
Modifiability,inherit,inherited,"ate is needed) More...;  ; Data< Real > _minVal;  Data for interpolation scale: More...;  ; Data< Real > _maxVal;  maximum value of state value for interpolation. More...;  ; Data< bool > _changeScale;  compute texture interpolation on manually scale defined above. More...;  ; Data< bool > drawPotentiels;  Data for interpolation scale: More...;  ; Data< float > showIndicesScale;  Debug : scale of state values displayed. More...;  ; Data< unsigned int > _vertexPloted;  Vertex index of values display in graph for each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< Real > > > f_graph;  Vertex state value per iteration. More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TextureInterpolation, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html
Performance,load,loader,"eds to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html
Deployability,update,updateInternal,"se; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglColorMap, sofa::core::visual::VisualModel)sofa::gl::component::rendering2d::OglColorMap; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texturesofa::gl::component::rendering2d::OglColorMap; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecColor typedefsofa::gl::component::rendering2d::OglColorMap; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglColorMap() overridesofa::gl::component::rendering2d::OglColorMapprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering2d::OglColorMap Member List . This is the complete list of members for sofa::gl::component::rendering2d::OglColorMap, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html
Performance,load,loader,"desofa::gl::component::rendering2d::OglColorMapvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglColorMap, sofa::core::visual::VisualModel)sofa::gl::component::rendering2d::OglColorMap; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texturesofa::gl::component::rendering2d::OglColorMap; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecColor typedefso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; Color typedefsofa::gl::component::rendering2d::OglColorMap; Color3 typedefsofa::gl::component::rendering2d::OglColorMap; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorSchemesofa::gl::component::rendering2d::OglColorMap; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_legendOffsetsofa::gl::component::rendering2d::OglColorMap; d_legendRangeScalesofa::gl::component::rendering2d::OglColorMap; d_legendSizesofa::gl::component::rendering2d::OglColorMap; d_legendTitlesofa::gl::component::rendering2d::OglColorMap; d_maxsofa::gl::component::rend",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html
Availability,down,down,"listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglColorMap, sofa::core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; unsigned int getNbColors ();  ; Color getColor (unsigned int i);  ; template<class Real > ; helper::ColorMap::evaluator< Real > getEvaluator (Real vmin, Real vmax);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clea",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html
Deployability,update,updateVisual,"ciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglColorMap, sofa::core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; unsigned int getNbColors ();  ; Color getColor (unsigned int i);  ; template<class Real > ; helper::ColorMap::evaluator< Real > getEvaluator (Real vmin, Real vmax);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html
Integrability,message,messages,"d_min;  min value for drawing the legend without the need to actually use the range with getEvaluator method which sets the min More...;  ; Data< float > d_max;  max value for drawing the legend without the need to actually use the range with getEvaluator method which sets the max More...;  ; Data< float > d_legendRangeScale;  to change the unit of the min/max value of the legend More...;  ; sofa::helper::ColorMap m_colorMap;  ; GLuint texture;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglColorMap, sofa::core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; unsigned int getNbColors ();  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html
Modifiability,inherit,inherited,"tes; Data< unsigned int > d_paletteSize;  How many colors to use. More...;  ; Data< sofa::helper::OptionsGroup > d_colorScheme;  Color scheme to use. More...;  ; Data< bool > d_showLegend;  Activate rendering of color scale legend on the side. More...;  ; Data< type::Vec2f > d_legendOffset;  Draw the legend on screen with an x,y offset. More...;  ; Data< std::string > d_legendTitle;  Font size of the legend (if any) More...;  ; Data< unsigned int > d_legendSize;  Add a title to the legend. More...;  ; Data< float > d_min;  min value for drawing the legend without the need to actually use the range with getEvaluator method which sets the min More...;  ; Data< float > d_max;  max value for drawing the legend without the need to actually use the range with getEvaluator method which sets the max More...;  ; Data< float > d_legendRangeScale;  to change the unit of the min/max value of the legend More...;  ; sofa::helper::ColorMap m_colorMap;  ; GLuint texture;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html
Usability,clear,clearVisual,"itialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; unsigned int getNbColors ();  ; Color getColor (unsigned int i);  ; template<class Real > ; helper::ColorMap::evaluator< Real > getEvaluator (Real vmin, Real vmax);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html
Deployability,update,updateInternal,"st std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglLabel, core::visual::VisualModel)sofa::gl::component::rendering2d::OglLabel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglLabel() overridesofa::gl::component::rendering2d::OglLabelinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering2d::OglLabel Member List . This is the complete list of members for sofa::gl::component::rendering2d::OglLabel, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html
Performance,load,loader,"e::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setColor(float r, float g, float b, float a)sofa::gl::component::rendering2d::OglLabel; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglLabel, core::visual::VisualModel)sofa::gl::component::rendering2d::OglLabel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::rendering2d::OglLabel; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_fontsizesofa::gl::component::rendering2d::OglLabel; d_labelsofa::gl::component::rendering2d::OglLabel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_prefixsofa::gl::component::rendering2d::OglLabel; d_selectContrastingColorsofa::gl::component::rendering2d::OglLabel; d_suffixsofa::gl::component::rendering2d::OglLabel; d_updateLabelEveryNbStepssofa::gl::component::rendering2d::OglLabel; d_vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html
Availability,down,down,"m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; unsigned int m_stepCounter;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (OglLabel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setColor (float r, float g, float b, float a);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or oth",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html
Deployability,update,updateVisual,"rsal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setColor (float r, float g, float b, float a);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html
Integrability,message,messages," The color of the text to display. (default='gray') More...;  ; Data< bool > d_selectContrastingColor;  Override the color value but one that contrast with the background color. More...;  ; Data< unsigned int > d_updateLabelEveryNbSteps;  Update the display of the label every nb of time steps. More...;  ; core::objectmodel::lifecycle::RemovedData d_visible {this, ""v23.06"", ""23.12"", ""visible"", ""Use the 'enable' data field instead of 'visible'""};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; unsigned int m_stepCounter;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html
Modifiability,inherit,inherited,"ata< std::string > d_prefix;  The prefix of the text to display. More...;  ; Data< std::string > d_label;  The text to display. More...;  ; Data< std::string > d_suffix;  The suffix of the text to display. More...;  ; Data< unsigned int > d_x;  The x position of the text on the screen. More...;  ; Data< unsigned int > d_y;  The y position of the text on the screen. More...;  ; Data< unsigned int > d_fontsize;  The size of the font used to display the text on the screen. More...;  ; Data< sofa::type::RGBAColor > d_color;  The color of the text to display. (default='gray') More...;  ; Data< bool > d_selectContrastingColor;  Override the color value but one that contrast with the background color. More...;  ; Data< unsigned int > d_updateLabelEveryNbSteps;  Update the display of the label every nb of time steps. More...;  ; core::objectmodel::lifecycle::RemovedData d_visible {this, ""v23.06"", ""23.12"", ""visible"", ""Use the 'enable' data field instead of 'visible'""};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state fo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html
Usability,clear,clearVisual,"sual (const core::visual::VisualParams *) override;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setColor (float r, float g, float b, float a);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html
Deployability,update,updateInternal," int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglViewport, core::visual::VisualManager)sofa::gl::component::rendering2d::OglViewport; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Viewport typedefsofa::gl::component::rendering2d::OglViewport; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglViewport() overridesofa::gl::component::rendering2d::OglViewportprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::vis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering2d::OglViewport Member List . This is the complete list of members for sofa::gl::component::rendering2d::OglViewport, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html
Performance,load,loader," removeTag(Tag t)sofa::core::objectmodel::Base; renderFBOToScreen(core::visual::VisualParams *vp)sofa::gl::component::rendering2d::OglViewportprotected; renderToViewport(core::visual::VisualParams *vp)sofa::gl::component::rendering2d::OglViewportprotected; reset()sofa::core::objectmodel::BaseObjectvirtual; RigidCoord typedefsofa::gl::component::rendering2d::OglViewport; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglViewport, core::visual::VisualManager)sofa::gl::component::rendering2d::OglViewport; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::rendering2d::OglViewportvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering2d::OglViewportvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::rendering2d::OglViewportvirtual; drawS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html
Availability,down,down,"f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglViewport, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; bool isVisible (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html
Deployability,update,updateVisual,"VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; bool isVisible (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html
Integrability,message,messages,". More...;  ; Data< bool > p_advancedRendering;  If true, viewport will be hidden if advancedRendering visual flag is not enabled. More...;  ; Data< bool > p_useFBO;  Use a FBO to render the viewport. More...;  ; Data< bool > p_swapMainView;  Swap this viewport with the main view. More...;  ; Data< bool > p_drawCamera;  Draw a frame representing the camera (see it in main viewport) More...;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglViewport, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void preDrawSce",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html
Modifiability,inherit,inherited,", unsigned int > > p_screenSize;  Viewport size. More...;  ; Data< type::Vec3f > p_cameraPosition;  Camera's position in eye's space. More...;  ; Data< type::Quat< SReal > > p_cameraOrientation;  Camera's orientation. More...;  ; Data< RigidCoord > p_cameraRigid;  Camera's rigid coord. More...;  ; Data< double > p_zNear;  Camera's ZNear. More...;  ; Data< double > p_zFar;  Camera's ZFar. More...;  ; Data< double > p_fovy;  Field of View (Y axis) More...;  ; Data< bool > p_enabled;  Enable visibility of the viewport. More...;  ; Data< bool > p_advancedRendering;  If true, viewport will be hidden if advancedRendering visual flag is not enabled. More...;  ; Data< bool > p_useFBO;  Use a FBO to render the viewport. More...;  ; Data< bool > p_swapMainView;  Swap this viewport with the main view. More...;  ; Data< bool > p_drawCamera;  Draw a frame representing the camera (see it in main viewport) More...;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html
Performance,load,loader," ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html
Usability,clear,clearVisual,"stead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; bool isVisible (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html
Deployability,update,updateInternal," setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(ClipPlane, core::visual::VisualModel)sofa::gl::component::rendering3d::ClipPlane; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; wasActivesofa::gl::component::rendering3d::ClipPlaneprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ClipPlane() overridesofa::gl::component::rendering3d::ClipPlaneprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering3d::ClipPlane Member List . This is the complete list of members for sofa::gl::component::rendering3d::ClipPlane, including all inherited members. activesofa::gl::component::rendering3d::ClipPlane; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html
Performance,load,loader,"veData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; saveEqsofa::gl::component::rendering3d::ClipPlaneprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(ClipPlane, core::visual::VisualModel)sofa::gl::component::rendering3d::ClipPlane; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html
Testability,log,logging," activesofa::gl::component::rendering3d::ClipPlane; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html
Usability,clear,clearLoggedMessages,"Scale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d::ClipPlanevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::gl::component::rendering3d::ClipPlanevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; ClipPlane()sofa::gl::component::rendering3d::ClipPlaneprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html
Availability,down,down,"nSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; GLboolean wasActive;  ; double saveEq [4];  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ClipPlane, core::visual::VisualModel);  ; virtual sofa::core::objectmodel::ComponentState checkDataValues ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void upda",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html
Deployability,update,updateVisual,"pPlane, core::visual::VisualModel);  ; virtual sofa::core::objectmodel::ComponentState checkDataValues ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html
Integrability,message,messages,"e.h>. Inheritance diagram for sofa::gl::component::rendering3d::ClipPlane:. [legend]. Public Attributes; Data< sofa::type::Vec3 > position;  Point crossed by the clipping plane. More...;  ; Data< sofa::type::Vec3 > normal;  Normal of the clipping plane, pointing toward the clipped region. More...;  ; Data< int > id;  Clipping plane OpenGL ID. More...;  ; Data< bool > active;  Control whether the clipping plane should be applied or not. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; GLboolean wasActive;  ; double saveEq [4];  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrac",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::rendering3d::ClipPlane Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::ClipPlane Class Reference . #include <ClipPlane.h>. Inheritance diagram for sofa::gl::component::rendering3d::ClipPlane:. [legend]. Public Attributes; Data< sofa::type::Vec3 > position;  Point crossed by the clipping plane. More...;  ; Data< sofa::type::Vec3 > normal;  Normal of the clipping plane, pointing toward the clipped region. More...;  ; Data< int > id;  Clipping plane OpenGL ID. More...;  ; Data< bool > active;  Control whether the clipping plane should be applied or not. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; GLboolean wasActive;  ; double saveEq [4];  ;  Protected Att",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html
Usability,clear,clearVisual,"tion method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html
Deployability,update,updateInternal,"odel, objectmodel::BaseObject)sofa::core::visual::VisualModel; VisualState< defaulttype::Vec3Types >::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; sofa::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; VisualState< defaulttype::Vec3Types >::SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(DataDisplay, core::visual::VisualModel, Vec3State)sofa::gl::component::rendering3d::DataDisplay; SPtr typedefsofa::core::objectmodel::Base; statesofa::gl::component::rendering3d::DataDisplay; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::gl::component::rendering3d::DataDisplay; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; Vec3State typedefsofa::gl::component::rendering3d::DataDisplay; VecCellData typedefsofa::gl::component::rendering3d::DataDisplay; VecCoord typedefsofa::core::visual::VisualState< defaulttype::Vec3Types >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::visual::VisualState< defaulttype::Vec3Types >; VecLink typedefsofa::core::objectmodel::Base; VecPointData typedefsofa::gl::component::rendering3d::DataDisplay; VecReal typedefsofa::core::State< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; VisualState()sofa::core::visual::VisualState< defaulttype::Vec3Types >; write(core::VecCoordId v) overridesofa::core::visual::VisualState< defaulttype::Vec3Types ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering3d::DataDisplay Member List . This is the complete list of members for sofa::gl::component::rendering3d::DataDisplay, including all inherited members. accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html
Performance,load,loader,"ode(core::objectmodel::BaseNode *node) overridesofa::gl::component::rendering3d::DataDisplayinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resize(Size vsize) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; VisualState< defaulttype::Vec3Types >::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; sofa::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; VisualState< defaulttype::Vec3Types >::SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(DataDisplay, core::visual::VisualModel, Vec3State)sofa::gl::component::rendering3d::DataDisplay; SPtr typedefsofa::core::objectmodel::Base; statesofa::gl::component::rendering3d::DataDisplay; State()sofa::core::State< TDataTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html
Testability,log,logging," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html
Usability,clear,clearLoggedMessages,"Translation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorMapsofa::gl::component::rendering3d::DataDisplay; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; computeNormals()sofa::gl::component::rendering3d::DataDisplayprotected; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_currentMaxsofa::gl::component::rendering3d::DataDisplay; d_currentMins",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html
Availability,down,down,"cId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; type::vector< type::Vec3f > m_normals;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS2 (DataDisplay, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called bef",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html
Deployability,update,updateVisual,".;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS2 (DataDisplay, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html
Integrability,message,messages,"we draw triangles (this allows to see inside the volume). More...;  ; gl::component::rendering2d::OglColorMap * colorMap;  ; core::State< DataTypes > * state;  ; core::topology::BaseMeshTopology * m_topology;  ; SingleLink< DataDisplay, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Real oldMin;  ; Real oldMax;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html
Modifiability,inherit,inherited," with nodes per quad. More...;  ; Data< sofa::type::RGBAColor > f_colorNaN;  Color used for NaN values (default=[0.0,0.0,0.0,1.0]) More...;  ; Data< type::Vec2f > d_userRange;  Clamp to this values (if max>min) More...;  ; Data< Real > d_currentMin;  Current min range. More...;  ; Data< Real > d_currentMax;  Current max range. More...;  ; Data< float > d_shininess;  Shininess for rendering point-based data [0,128]. <0 means no specularity. More...;  ; Data< Real > d_transparency;  Add transparency when we draw triangles (this allows to see inside the volume). More...;  ; gl::component::rendering2d::OglColorMap * colorMap;  ; core::State< DataTypes > * state;  ; core::topology::BaseMeshTopology * m_topology;  ; SingleLink< DataDisplay, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Real oldMin;  ; Real oldMax;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_inst",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html
Performance,load,loader,"d applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html
Security,access,access,"re::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  . Protected Member Functions; void computeNormals ();  ;  DataDisplay ();  ;  Protected Member Functions inherited from ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html
Usability,clear,clearVisual,"core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html
Deployability,update,update,"lttype::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(VisualModelImpl, core::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >)sofa::component::visual::VisualModelImpl; sourceFactorsofa::gl::component::rendering3d::OglModelprotected; SPtr typedefsofa::core::objectmodel::Base; srgbTexturingsofa::component::visual::VisualModelImpl; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texsofa::gl::component::rendering3d::OglModelprotected; TexCoord typedefsofa::component::visual::VisualModelImpl; texturenamesofa::component::visual::VisualModelImpl; texturessofa::gl::component::rendering3d::OglModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglesRevisionsofa::gl::component::rendering3d::OglModelprotected; update()sofa::gl::component::rendering3d::MergeVisualModelsinlineprotected; updateBuffers() overridesofa::gl::component::rendering3d::OglModelvirtual; updateEdgesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateQuadsIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateTrianglesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateVertexBuffer()sofa::gl::component::rendering3d::OglModel; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; useEdgessofa::gl::component::rendering3d::OglModelprotected; useQuadssofa::gl::component::rendering3d::OglModelprotected; useTopologysofa::component::visual::VisualModelImpl; useTrianglessofa::gl::component::rendering3d::OglModelprotected; vbosofa::gl::component::rendering3d::OglModelprotected; VBOGenDonesofa::gl::component",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering3d::MergeVisualModels Member List . This is the complete list of members for sofa::gl::component::rendering3d::MergeVisualModels, including all inherited members. accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, const SReal dy, const SReal dz) overridesofa::component::visua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html
Performance,load,load,"ool transparent) overridesofa::gl::component::rendering3d::OglModelprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isEnabledsofa::gl::component::rendering3d::OglModelprotected; isUseEdges()sofa::gl::component::rendering3d::OglModelinline; isUseQuads()sofa::gl::component::rendering3d::OglModelinline; isUseTriangles()sofa::gl::component::rendering3d::OglModelinline; isUsingTopology() constsofa::component::visual::VisualModelImplinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::visual::VisualModelImpl; lastMeshRevsofa::component::visual::VisualModelImpl; lineSmoothsofa::gl::component::rendering3d::OglModelprotected; lineWidthsofa::gl::component::rendering3d::OglModelprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; LinkVisualModel typedefsofa::gl::component::rendering3d::MergeVisualModels; load(const std::string &filename, const std::string &loader, const std::string &textureName)sofa::component::visual::VisualModelImpl; loadTexture(const std::string &filename) overridesofa::gl::component::rendering3d::OglModelvirtual; loadTextures() overridesofa::gl::component::rendering3d::OglModelvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_computeTangentssofa::component::visual::VisualModelImpl; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_dirtyQuadssofa::component::visual::VisualModelImplprotected; m_dirtyTrianglessofa::component::visual::VisualModelImplprotected; m_edgessofa::component::visual::VisualModelImpl; m_fixMergedUVSeamssofa::component::visual::VisualModelImpl; m_handleDynamicTopologysofa::component::visual::VisualModelImpl; m_initRestPositionssofa::component::visual::VisualModelImpl; m_instanciationSourceFileNamesofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html
Testability,log,logging," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, const SReal dy, const SReal dz) overridesofa::component::visua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html
Usability,clear,clearLoggedMessages,"e::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html
Availability,down,down,"es coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Public Member Functions;  SOFA_CLASS (MergeVisualModels, Inherit);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::gl::component::rendering3d::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Deployability,update,updated,"els Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::MergeVisualModels Class Reference . #include <MergeVisualModels.h>. Inheritance diagram for sofa::gl::component::rendering3d::MergeVisualModels:. [legend]; Detailed Description; This class merges several visual models. . Public Attributes; Data< unsigned int > d_nbInput;  number of input visual models to merge More...;  ; core::objectmodel::VectorLinks< LinkVisualModel, MergeVisualModels > vl_input;  ;  Public Attributes inherited from sofa::gl::component::rendering3d::OglModel; Data< bool > blendTransparency;  Blend transparent parts. More...;  ;  Public Attributes inherited from sofa::component::visual::VisualModelImpl; bool useTopology;  True if list of d_facets should be taken from the attached topology. More...;  ; int lastMeshRev;  Time stamps from the last time the mesh was updated from the topology. More...;  ; bool castShadow;  True if object cast shadows. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; sofa::core::objectmodel::RenamedData< bool > m_initRestPositions;  ; sofa::core::objectmodel::RenamedData< bool > m_useNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_updateNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_computeTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_updateTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_handleDynamicTopology;  ; sofa::core::objectmodel::RenamedData< bool > m_fixMergedUVSeams;  ; sofa::core::objectmodel::RenamedData< bool > m_keepLines;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vertices2;  ; sofa::core::objectmodel::RenamedData< VecTexCoord > m_vtexcoords;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vtangents;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vbitangents;  ; sofa::core::objectmodel::Rena",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Energy Efficiency,green,green,". More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point rendering. More...;  ; DeprecatedAndRemoved isEnabled;  ; Data< sofa::helper::OptionsGroup > primitiveType;  Select types of primitives to send (necessary for some shader types such as geometry or tessellation) More...;  ; Data< sofa::helper::OptionsGroup > blendEquation;  if alpha blending is enabled this specifies how source and destination colors are combined More...;  ; Data< sofa::helper::OptionsGroup > sourceFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha source blending factors are computed More...;  ; Data< sofa::helper::OptionsGroup > destFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha destination blending factors are computed More...;  ; GLenum blendEq;  ; GLenum sfactor;  ; GLenum dfactor;  ; sofa::gl::Texture * tex;  ; GLuint vbo;  ; GLuint iboEdges;  ; GLuint iboTriangles;  ; GLuint iboQuads;  ; bool VBOGenDone;  ; bool initDone;  ; bool useEdges;  ; bool useTriangles;  ; bool useQuads;  ; bool canUsePatches;  ; size_t oldVerticesSize;  ; size_t oldNormalsSize;  ; size_t oldTexCoordsSize;  ; size_t oldTangentsSize;  ; size_t oldBitangentsSize;  ; size_t oldEdgesSize;  ; size_t oldTrianglesSize;  ; size_t oldQuadsSize;  ; int edgesRevision;  ; int trianglesRevision;  ; int quadsRevision;  ; std::vector< sofa::type::Vec3f > verticesTmpBuffer;  ; std::vector< sofa::type::Vec3f > normalsTmpBuffer;  ; std::vector< sofa::gl::Texture * > textures;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Integrability,message,messages,"rd > m_scaleTex;  ; sofa::core::objectmodel::RenamedData< TexCoord > m_translationTex;  ; Data< Vec3Real > d_translation;  Initial Translation of the object. More...;  ; Data< Vec3Real > d_rotation;  Initial Rotation of the object. More...;  ; Data< Vec3Real > d_scale;  Initial Scale of the object. More...;  ; Data< TexCoord > d_scaleTex;  Scale of the texture. More...;  ; Data< TexCoord > d_translationTex;  Translation of the texture. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::rendering3d::MergeVisualModels Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::MergeVisualModels Class Reference . #include <MergeVisualModels.h>. Inheritance diagram for sofa::gl::component::rendering3d::MergeVisualModels:. [legend]; Detailed Description; This class merges several visual models. . Public Attributes; Data< unsigned int > d_nbInput;  number of input visual models to merge More...;  ; core::objectmodel::VectorLinks< LinkVisualModel, MergeVisualModels > vl_input;  ;  Public Attributes inherited from sofa::gl::component::rendering3d::OglModel; Data< bool > blendTransparency;  Blend transparent parts. More...;  ;  Public Attributes inherited from sofa::component::visual::VisualModelImpl; bool useTopology;  True if list of d_facets should be taken from the attached topology. More...;  ; int lastMeshRev;  Time stamps from the last time the mesh was updated from the topology. More...;  ; bool castShadow;  True if object cast shadows. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; sofa::core::objectmodel::RenamedData< bool > m_initRestPositions;  ; sofa::core::objectmodel::RenamedData< bool > m_useNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_updateNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_computeTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_updateTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_handleDynamicTopology;  ; sofa::core::objectmodel::RenamedData< bool > m_fixMergedUVSeams;  ; sofa::core::objectmodel::RenamedData< bool > m_keepLines;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vertices2;  ; sofa::core::objectmodel::RenamedData< VecTexCoord > m_vtexcoords;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vtangents;  ; sofa::core::objectmodel::RenamedDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Performance,load,loadTexture,"ription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::gl::component::rendering3d::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer ();  ; void initVertexBuffer ();  ; void initEdgesIndicesBuffer ();  ; void initTrianglesIndicesBuffer ();  ; void initQuadsIndicesBuffer ();  ; void updateVertexBuffer ();  ; void updateEdgesIndicesBuffer ();  ; void updateTrianglesIndicesBu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Security,access,access,"re::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Usability,clear,clearVisual,"void applyRotation (const sofa::type::Quat< SReal > q) override;  ; void applyScale (const SReal sx, const SReal sy, const SReal sz) override;  ; virtual void applyUVTransformation ();  ; void applyUVTranslation (const Real dU, const Real dV);  ; void applyUVScale (const Real su, const Real sv);  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html
Deployability,update,updateInternal,"eObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; VisualState< defaulttype::Vec3Types >::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; sofa::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; VisualState< defaulttype::Vec3Types >::SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(OglCylinderModel, core::visual::VisualModel, Vec3State)sofa::gl::component::rendering3d::OglCylinderModel; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; Vec3State typedefsofa::gl::component::rendering3d::OglCylinderModel; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::visual::VisualState< defaulttype::Vec3Types >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; VisualState()sofa::core::visual::VisualState< defaulttype::Vec3Types >; write(core::VecCoordId v) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >virtual; write(core::VecDerivId v) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >virtual; write(core::MatrixDerivId) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering3d::OglCylinderModel Member List . This is the complete list of members for sofa::gl::component::rendering3d::OglCylinderModel, including all inherited members. accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html
Performance,load,loader,"ore::objectmodel::BaseNode *node) overridesofa::gl::component::rendering3d::OglCylinderModelinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resize(Size vsize) overridesofa::core::visual::VisualState< defaulttype::Vec3Types >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; VisualState< defaulttype::Vec3Types >::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; sofa::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; VisualState< defaulttype::Vec3Types >::SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(OglCylinderModel, core::visual::VisualModel, Vec3State)sofa::gl::component::rendering3d::OglCylinderModel; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html
Testability,log,logging," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html
Usability,clear,clearLoggedMessages,"Translation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doDrawVisual(const core::visual::VisualParams *vparam",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::rendering3d::OglCylinderModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::OglCylinderModel Class Reference . #include <OglCylinderModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::OglCylinderModel:. [legend]. Public Member Functions;  SOFA_CLASS2 (OglCylinderModel, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void exportOBJ (std::string, std::ostream *, std::ostream *, Index &, Index &, Index &, int &) override;  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const Visu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html
Deployability,update,updateVisual,"d]. Public Member Functions;  SOFA_CLASS2 (OglCylinderModel, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void exportOBJ (std::string, std::ostream *, std::ostream *, Index &, Index &, Index &, int &) override;  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html
Integrability,depend,dependent,"ent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html
Modifiability,inherit,inherited,"odel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::OglCylinderModel Class Reference . #include <OglCylinderModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::OglCylinderModel:. [legend]. Public Member Functions;  SOFA_CLASS2 (OglCylinderModel, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void exportOBJ (std::string, std::ostream *, std::ostream *, Index &, Index &, Index &, int &) override;  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html
Performance,load,loader,"SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html
Security,access,access,"re::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  . Protected Member Functions;  OglCylinderModel ();  ;  ~OglCylinderModel () override;  ;  Protected Member Functions in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html
Usability,clear,clearVisual,"thod called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void exportOBJ (std::string, std::ostream *, std::ostream *, Index &, Index &, Index &, int &) override;  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html
Deployability,update,updateBuffers,"pe::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(VisualModelImpl, core::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >)sofa::component::visual::VisualModelImpl; sourceFactorsofa::gl::component::rendering3d::OglModelprotected; SPtr typedefsofa::core::objectmodel::Base; srgbTexturingsofa::component::visual::VisualModelImpl; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texsofa::gl::component::rendering3d::OglModelprotected; TexCoord typedefsofa::component::visual::VisualModelImpl; texturenamesofa::component::visual::VisualModelImpl; texturessofa::gl::component::rendering3d::OglModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglesRevisionsofa::gl::component::rendering3d::OglModelprotected; updateBuffers() overridesofa::gl::component::rendering3d::OglModelvirtual; updateEdgesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateQuadsIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateTrianglesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateVertexBuffer()sofa::gl::component::rendering3d::OglModel; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; useEdgessofa::gl::component::rendering3d::OglModelprotected; useQuadssofa::gl::component::rendering3d::OglModelprotected; useTopologysofa::component::visual::VisualModelImpl; useTrianglessofa::gl::component::rendering3d::OglModelprotected; vbosofa::gl::component::rendering3d::OglModelprotected; VBOGenDonesofa::gl::component::rendering3d::OglModelprotected; Vec3Real typedefsofa::component::visual::Visu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering3d::OglModel Member List . This is the complete list of members for sofa::gl::component::rendering3d::OglModel, including all inherited members. accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, const SReal dy, const SReal dz) overridesofa::component::visual::VisualModelImpl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html
Performance,load,load,"Implinlinevirtual; internalDraw(const core::visual::VisualParams *vparams, bool transparent) overridesofa::gl::component::rendering3d::OglModelprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isEnabledsofa::gl::component::rendering3d::OglModelprotected; isUseEdges()sofa::gl::component::rendering3d::OglModelinline; isUseQuads()sofa::gl::component::rendering3d::OglModelinline; isUseTriangles()sofa::gl::component::rendering3d::OglModelinline; isUsingTopology() constsofa::component::visual::VisualModelImplinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::visual::VisualModelImpl; lastMeshRevsofa::component::visual::VisualModelImpl; lineSmoothsofa::gl::component::rendering3d::OglModelprotected; lineWidthsofa::gl::component::rendering3d::OglModelprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const std::string &filename, const std::string &loader, const std::string &textureName)sofa::component::visual::VisualModelImpl; loadTexture(const std::string &filename) overridesofa::gl::component::rendering3d::OglModelvirtual; loadTextures() overridesofa::gl::component::rendering3d::OglModelvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_computeTangentssofa::component::visual::VisualModelImpl; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_dirtyQuadssofa::component::visual::VisualModelImplprotected; m_dirtyTrianglessofa::component::visual::VisualModelImplprotected; m_edgessofa::component::visual::VisualModelImpl; m_fixMergedUVSeamssofa::component::visual::VisualModelImpl; m_handleDynamicTopologysofa::component::visual::VisualModelImpl; m_initRestPositionssofa::component::visual::VisualModelImpl; m_instanciationSourceFileNamesofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html
Testability,log,logging," accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, const SReal dy, const SReal dz) overridesofa::component::visual::VisualModelImpl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html
Usability,clear,clearLoggedMessages,"e::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html
Availability,down,down,"ink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer ();  ; void initVertexBuffer ();  ; void initEdgesIndicesBuffer ();  ; void initTrianglesIndicesBuffer ();  ; void initQuadsIndicesBuffer ();  ; void updateVertexBuffer ();  ; void updateEdgesIndicesBuffer ();  ; void updateTrianglesIndicesBu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Deployability,update,updated,﻿. SOFA API: sofa::gl::component::rendering3d::OglModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::OglModel Class Reference . #include <OglModel.h>; Main class for rendering 3D model in SOFA. ; More... Inheritance diagram for sofa::gl::component::rendering3d::OglModel:. [legend]; Detailed Description; Main class for rendering 3D model in SOFA. ; This class implements VisuelModelImpl with rendering functions using OpenGL. . Public Attributes; Data< bool > blendTransparency;  Blend transparent parts. More...;  ;  Public Attributes inherited from sofa::component::visual::VisualModelImpl; bool useTopology;  True if list of d_facets should be taken from the attached topology. More...;  ; int lastMeshRev;  Time stamps from the last time the mesh was updated from the topology. More...;  ; bool castShadow;  True if object cast shadows. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; sofa::core::objectmodel::RenamedData< bool > m_initRestPositions;  ; sofa::core::objectmodel::RenamedData< bool > m_useNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_updateNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_computeTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_updateTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_handleDynamicTopology;  ; sofa::core::objectmodel::RenamedData< bool > m_fixMergedUVSeams;  ; sofa::core::objectmodel::RenamedData< bool > m_keepLines;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vertices2;  ; sofa::core::objectmodel::RenamedData< VecTexCoord > m_vtexcoords;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vtangents;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vbitangents;  ; sofa::core::objectmodel::RenamedData< VecVisualEdge > m_edges;  ; sofa::core::objectmodel:,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Energy Efficiency,green,green,". More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point rendering. More...;  ; DeprecatedAndRemoved isEnabled;  ; Data< sofa::helper::OptionsGroup > primitiveType;  Select types of primitives to send (necessary for some shader types such as geometry or tessellation) More...;  ; Data< sofa::helper::OptionsGroup > blendEquation;  if alpha blending is enabled this specifies how source and destination colors are combined More...;  ; Data< sofa::helper::OptionsGroup > sourceFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha source blending factors are computed More...;  ; Data< sofa::helper::OptionsGroup > destFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha destination blending factors are computed More...;  ; GLenum blendEq;  ; GLenum sfactor;  ; GLenum dfactor;  ; sofa::gl::Texture * tex;  ; GLuint vbo;  ; GLuint iboEdges;  ; GLuint iboTriangles;  ; GLuint iboQuads;  ; bool VBOGenDone;  ; bool initDone;  ; bool useEdges;  ; bool useTriangles;  ; bool useQuads;  ; bool canUsePatches;  ; size_t oldVerticesSize;  ; size_t oldNormalsSize;  ; size_t oldTexCoordsSize;  ; size_t oldTangentsSize;  ; size_t oldBitangentsSize;  ; size_t oldEdgesSize;  ; size_t oldTrianglesSize;  ; size_t oldQuadsSize;  ; int edgesRevision;  ; int trianglesRevision;  ; int quadsRevision;  ; std::vector< sofa::type::Vec3f > verticesTmpBuffer;  ; std::vector< sofa::type::Vec3f > normalsTmpBuffer;  ; std::vector< sofa::gl::Texture * > textures;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Integrability,message,messages,"rd > m_scaleTex;  ; sofa::core::objectmodel::RenamedData< TexCoord > m_translationTex;  ; Data< Vec3Real > d_translation;  Initial Translation of the object. More...;  ; Data< Vec3Real > d_rotation;  Initial Rotation of the object. More...;  ; Data< Vec3Real > d_scale;  Initial Scale of the object. More...;  ; Data< TexCoord > d_scaleTex;  Scale of the texture. More...;  ; Data< TexCoord > d_translationTex;  Translation of the texture. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gl::component::rendering3d::OglModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::OglModel Class Reference . #include <OglModel.h>; Main class for rendering 3D model in SOFA. ; More... Inheritance diagram for sofa::gl::component::rendering3d::OglModel:. [legend]; Detailed Description; Main class for rendering 3D model in SOFA. ; This class implements VisuelModelImpl with rendering functions using OpenGL. . Public Attributes; Data< bool > blendTransparency;  Blend transparent parts. More...;  ;  Public Attributes inherited from sofa::component::visual::VisualModelImpl; bool useTopology;  True if list of d_facets should be taken from the attached topology. More...;  ; int lastMeshRev;  Time stamps from the last time the mesh was updated from the topology. More...;  ; bool castShadow;  True if object cast shadows. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; sofa::core::objectmodel::RenamedData< bool > m_initRestPositions;  ; sofa::core::objectmodel::RenamedData< bool > m_useNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_updateNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_computeTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_updateTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_handleDynamicTopology;  ; sofa::core::objectmodel::RenamedData< bool > m_fixMergedUVSeams;  ; sofa::core::objectmodel::RenamedData< bool > m_keepLines;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vertices2;  ; sofa::core::objectmodel::RenamedData< VecTexCoord > m_vtexcoords;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vtangents;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vbitangents;  ; sofa::core::objectmodel::RenamedData< VecVisualEdge > m_edges;  ; sofa::core::objectmodel:,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Performance,load,loadTexture,"ink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer ();  ; void initVertexBuffer ();  ; void initEdgesIndicesBuffer ();  ; void initTrianglesIndicesBuffer ();  ; void initQuadsIndicesBuffer ();  ; void updateVertexBuffer ();  ; void updateEdgesIndicesBuffer ();  ; void updateTrianglesIndicesBu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Security,access,access,"re::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Testability,test,testing,"SourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; Data< bool > premultipliedAlpha;  is alpha premultiplied ? More...;  ; Data< bool > writeZTransparent;  Write into Z Buffer for Transparent Object. More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point rendering. More...;  ; DeprecatedAndRemoved isEnabled;  ; Data< sofa::helper::OptionsGroup > primitiveType;  Select types of primitives to send (necessary for some shader types such as geometry or tessellation) More...;  ; Data< sofa::helper::OptionsGroup > blendEquation;  if alpha blending is enabled this specifies how source and destination colors are combined More...;  ; Data< sofa::helper::OptionsGroup > sourceFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha source blending factors are computed More...;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Usability,clear,clearVisual,"void applyRotation (const sofa::type::Quat< SReal > q) override;  ; void applyScale (const SReal sx, const SReal sy, const SReal sz) override;  ; virtual void applyUVTransformation ();  ; void applyUVTranslation (const Real dU, const Real dV);  ; void applyUVScale (const Real su, const Real sv);  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html
Deployability,update,updateInternal,"SourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglSceneFrame, VisualModel)sofa::gl::component::rendering3d::OglSceneFrame; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Viewport typedefsofa::gl::component::rendering3d::OglSceneFrame; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering3d::OglSceneFrame Member List . This is the complete list of members for sofa::gl::component::rendering3d::OglSceneFrame, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html
Performance,load,loader,"se; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglSceneFrame, VisualModel)sofa::gl::component::rendering3d::OglSceneFrame; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_alignmentsofa::gl::component::rendering3d::OglSceneFrame; d_componentStatesofa::core::objectmodel::Base; d_drawFramesofa::gl::component::rendering3d::OglSceneFrame; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_stylesofa::gl::component::rendering3d::OglSceneFrame; d_viewportSizesofa::gl::component::rendering3d::OglSceneFrame; doDrawVisual(const core::visual::VisualParams *) overridesofa::gl::component::rendering3d::OglSceneFramevirtual; doUpdateInternal()sofa::core::objectmodel::BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html
Deployability,update,updateVisual,"t belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglSceneFrame, VisualModel);  ;  OglSceneFrame ();  ; void doDrawVisual (const core::visual::VisualParams *) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html
Integrability,message,messages,"<OglSceneFrame.h>. Inheritance diagram for sofa::gl::component::rendering3d::OglSceneFrame:. [legend]. Public Attributes; Data< bool > d_drawFrame;  Display the frame or not. More...;  ; Data< sofa::helper::OptionsGroup > d_style;  Style of the frame. More...;  ; Data< sofa::helper::OptionsGroup > d_alignment;  Alignment of the frame in the view. More...;  ; Data< int > d_viewportSize;  Size of the viewport where the frame is rendered. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglSceneFrame, VisualModel);  ;  OglSceneFrame ();  ; void doDrawVisual (const core::visual::VisualParams *) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::rendering3d::OglSceneFrame Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::rendering3d::OglSceneFrame Class Reference . #include <OglSceneFrame.h>. Inheritance diagram for sofa::gl::component::rendering3d::OglSceneFrame:. [legend]. Public Attributes; Data< bool > d_drawFrame;  Display the frame or not. More...;  ; Data< sofa::helper::OptionsGroup > d_style;  Style of the frame. More...;  ; Data< sofa::helper::OptionsGroup > d_alignment;  Alignment of the frame in the view. More...;  ; Data< int > d_viewportSize;  Size of the viewport where the frame is rendered. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglSceneFrame, VisualModel);  ;  OglSceneFrame ();  ; void doDrawVisual (const core::visual::Visual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html
Usability,clear,clearVisual,"tate > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglSceneFrame, VisualModel);  ;  OglSceneFrame ();  ; void doDrawVisual (const core::visual::VisualParams *) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html
Deployability,update,updateInternal,"FileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PointSplatModel, core::visual::VisualModel)sofa::gl::component::rendering3d::PointSplatModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PointSplatModel() overridesofa::gl::component::rendering3d::PointSplatModelprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering3d::PointSplatModel Member List . This is the complete list of members for sofa::gl::component::rendering3d::PointSplatModel, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html
Performance,load,loader,"fa::gl::component::rendering3d::PointSplatModelvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PointSplatModel, core::visual::VisualModel)sofa::gl::component::rendering3d::PointSplatModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering3d::PointSplatModelvirtual; drawVisual(const VisualParams ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::rendering3d::PointSplatModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::PointSplatModel Class Reference . #include <PointSplatModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::PointSplatModel:. [legend]. Public Member Functions;  SOFA_CLASS (PointSplatModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html
Deployability,update,updateVisual,"ence . #include <PointSplatModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::PointSplatModel:. [legend]. Public Member Functions;  SOFA_CLASS (PointSplatModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void ap",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html
Modifiability,variab,variables,"﻿. SOFA API: sofa::gl::component::rendering3d::PointSplatModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::PointSplatModel Class Reference . #include <PointSplatModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::PointSplatModel:. [legend]. Public Member Functions;  SOFA_CLASS (PointSplatModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html
Usability,clear,clearVisual,"ns;  SOFA_CLASS (PointSplatModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::str",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html
Deployability,update,updateInternal,":vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SlicedVolumetricModel()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SlicedVolumetricModel, core::visual::VisualModel)sofa::gl::component::rendering3d::SlicedVolumetricModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texture_datasofa::gl::component::rendering3d::SlicedVolumetricModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecCoord typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; vRightsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; vUpsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~SlicedVolumetricModel() overrid",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::rendering3d::SlicedVolumetricModel Member List . This is the complete list of members for sofa::gl::component::rendering3d::SlicedVolumetricModel, including all inherited members. _depthsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _firstsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _heightsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _maxBBoxsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _minBBoxsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _mstatesofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _nbPlanessofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _nbPlanesOldsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _planeNormalsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _planeSeparationssofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _radiussofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _texnamesofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _textureCoordinatessofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _topologysofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _widthsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html
Performance,load,loader,"::component::rendering3d::SlicedVolumetricModelvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SlicedVolumetricModel()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SlicedVolumetricModel, core::visual::VisualModel)sofa::gl::component::rendering3d::SlicedVolumetricModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texture_datasofa::gl::component::rendering3d::SlicedVolumetricModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html
Testability,log,logging,"delprotected; _planeSeparationssofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _radiussofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _texnamesofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _textureCoordinatessofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _topologysofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _widthsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphasofa::gl::component::rendering3d::SlicedVolumetricModelprotected; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computePlaneSeparations()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; Coord typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html
Availability,down,down,"  ; int _height;  ; int _depth;  ; Coord vRight;  ; Coord vUp;  ; Coord _planeNormal;  ; Real _radius;  ; Real _planeSeparations;  ; VecCoord _textureCoordinates;  ; double _minBBox [3];  ; double _maxBBox [3];  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SlicedVolumetricModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html
Deployability,update,updateVisual,"k;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SlicedVolumetricModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void ap",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html
Modifiability,inherit,inherited,"muation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::SlicedVolumetricModel Class Reference . #include <SlicedVolumetricModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::SlicedVolumetricModel:. [legend]. Protected Attributes; Data< float > alpha;  Opacity of the billboards. 1.0 is 100% opaque. More...;  ; Data< sofa::type::RGBAColor > color;  Billboard color.(default=1.0,1.0,1.0,1.0) More...;  ; Data< int > _nbPlanes;  Number of billboards. More...;  ; int _nbPlanesOld;  ; core::topology::BaseMeshTopology * _topology;  ; core::behavior::BaseMechanicalState * _mstate;  ; unsigned char * texture_data;  ; bool _first;  ; GLuint _texname;  ; int _width;  ; int _height;  ; int _depth;  ; Coord vRight;  ; Coord vUp;  ; Coord _planeNormal;  ; Real _radius;  ; Real _planeSeparations;  ; VecCoord _textureCoordinates;  ; double _minBBox [3];  ; double _maxBBox [3];  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SlicedVolumetricModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html
Usability,clear,clearVisual,"OFA_CLASS (SlicedVolumetricModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::str",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html
Deployability,update,updateContextStep,"std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(CompositingVisualLoop, simulation::DefaultVisualManagerLoop)sofa::gl::component::shader::CompositingVisualLoop; sofa::simulation::DefaultVisualManagerLoop::SOFA_CLASS(DefaultVisualManagerLoop, sofa::core::visual::VisualLoop)sofa::simulation::DefaultVisualManagerLoop; sofa::core::visual::VisualLoop::SOFA_CLASS(VisualLoop, VisualModel)sofa::core::visual::VisualLoop; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateContextStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::CompositingVisualLoop; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::CompositingVisualLoop Member List . This is the complete list of members for sofa::gl::component::shader::CompositingVisualLoop, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html
Performance,load,loader,"ase; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualLoopvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(CompositingVisualLoop, simulation::DefaultVisualManagerLoop)sofa::gl::component::shader::CompositingVisualLoop; sofa::simulation::DefaultVisualManagerLoop::SOFA_CLASS(DefaultVisualManagerLoop, sofa::core::visual::VisualLoop)sofa::simulation::DefaultVisualManagerLoop; sofa::core::visual::VisualLoop::SOFA_CLASS(VisualLoop, VisualModel)sofa::core::visual::VisualLoop; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateContextStep(sofa::core::visual::VisualPar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html
Usability,clear,clearLoggedMessages,"SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; CompositingVisualLoop()sofa::gl::component::shader::CompositingVisualLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html
Availability,down,down,"ng;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CompositingVisualLoop, simulation::DefaultVisualManagerLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void drawStep (sofa::core::visual::VisualParams *vparams) override;  Render the scene. More...;  ;  Public Member Functions inherited from sofa::simulation::DefaultVisualManagerLoop;  SOFA_CLASS (DefaultVisualManagerLoop, sofa::core::visual::VisualLoop);  ; void initStep (sofa::core::visual::VisualParams *vparams) override;  Initialize the textures. More...;  ; void updateStep (sofa::core::visual::VisualParams *vparams) override;  Update the Visual Models: triggers the Mappings. More...;  ; void updateContextStep (sofa::core::visual::VisualParams *vparams) override;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBoxStep (sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html
Deployability,update,updateStep,"ore...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CompositingVisualLoop, simulation::DefaultVisualManagerLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void drawStep (sofa::core::visual::VisualParams *vparams) override;  Render the scene. More...;  ;  Public Member Functions inherited from sofa::simulation::DefaultVisualManagerLoop;  SOFA_CLASS (DefaultVisualManagerLoop, sofa::core::visual::VisualLoop);  ; void initStep (sofa::core::visual::VisualParams *vparams) override;  Initialize the textures. More...;  ; void updateStep (sofa::core::visual::VisualParams *vparams) override;  Update the Visual Models: triggers the Mappings. More...;  ; void updateContextStep (sofa::core::visual::VisualParams *vparams) override;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBoxStep (sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html
Integrability,message,messages,"sofa::core::objectmodel::DataFileName vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  Files where fragment shader is defined. More...;  ;  Public Attributes inherited from sofa::simulation::DefaultVisualManagerLoop; SingleLink< DefaultVisualManagerLoop, simulation::Node, BaseLink::FLAG_STOREPATH > l_node;  Link to the scene's node where the rendering will take place. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CompositingVisualLoop, simulation::DefaultVisualManagerLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void drawStep (sofa::core::visual::VisualParams *vparams) override;  Render the scene. More...;  ;  Public Member Functions inherited from sofa::simulation::DefaultVisualManagerLoop;  SOFA_CLASS (Defaul",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::CompositingVisualLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::CompositingVisualLoop Class Reference . #include <CompositingVisualLoop.h>. Inheritance diagram for sofa::gl::component::shader::CompositingVisualLoop:. [legend]; Detailed Description; \Compositing visual loop: render multiple passes and composite them into one single rendered frame . Public Attributes; sofa::core::objectmodel::DataFileName vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  Files where fragment shader is defined. More...;  ;  Public Attributes inherited from sofa::simulation::DefaultVisualManagerLoop; SingleLink< DefaultVisualManagerLoop, simulation::Node, BaseLink::FLAG_STOREPATH > l_node;  Link to the scene's node where the rendering will take place. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html
Usability,clear,clearVisual,":VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html
Deployability,update,updateInternal,"::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(DirectionalLight, Light)sofa::gl::component::shader::DirectionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectionalLight() overridesofa::gl::component::shader::DirectionalLight; ~Light() overridesofa::gl::component::shader::Lightprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::DirectionalLight Member List . This is the complete list of members for sofa::gl::component::shader::DirectionalLight, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDra",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html
Performance,load,loader,"erridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(const GLint &id)sofa::gl::component::shader::Light; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setShadowTextureUnit(const unsigned short unit)sofa::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(DirectionalLight, Light)sofa::gl::component::shader::DirectionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDra",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html
Usability,clear,clearLoggedMessages,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::gl::component::shader::DirectionalLight; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_projectionMatrixsofa::gl::component::shader::Light; d_shadowFactorsofa::gl::component::shader::Light; d_shadowsEnabledsofa::gl::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html
Availability,down,down,"oading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DirectionalLight, Light);  ;  DirectionalLight ();  ;  ~DirectionalLight () override;  ; void preDrawShadow (core::visual::VisualParams *vp) override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *vparams) override;  Draw the light source from an external point of view. More...;  ; GLuint getDepthTexture () override;  ; GLuint getColorTexture () override;  ; type::Vec3 getDirection () override;  ; LightType getLightType () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::Light;  SOFA_CLASS (Light, core::visual::VisualModel);  ; void setID (const GLint &id);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html
Deployability,update,updateVisual,"odified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html
Integrability,message,messages,"g;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DirectionalLight, Light);  ;  DirectionalLight ();  ;  ~DirectionalLight () override;  ; void preDrawShadow (core::visual::VisualParams *vp) override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::DirectionalLight Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::DirectionalLight Class Reference . #include <Light.h>. Inheritance diagram for sofa::gl::component::shader::DirectionalLight:. [legend]. Public Attributes; Data< sofa::type::Vec3 > d_direction;  Set the direction of the light. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::Light; Data< sofa::type::RGBAColor > d_color;  Set the color of the light. (default=[1.0,1.0,1.0,1.0]) More...;  ; Data< GLuint > d_shadowTextureSize;  [Shadowing] Set size for shadow texture More...;  ; Data< bool > d_drawSource;  Draw Light Source. More...;  ; Data< float > d_zNear;  [Shadowing] Light's ZNear More...;  ; Data< float > d_zFar;  [Shadowing] Light's ZFar More...;  ; Data< bool > d_shadowsEnabled;  [Shadowing] Enable Shadow from this light More...;  ; Data< bool > d_softShadows;  [Shadowing] Turn on Soft Shadow from this light More...;  ; Data< float > d_shadowFactor;  [Shadowing] Shadow Factor (decrease/increase darkness) More...;  ; Data< float > d_VSMLightBleeding;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html
Performance,load,loader," ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html
Usability,clear,clearVisual," virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html
Deployability,update,updateInternal,"l::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setShadowTextureUnit(const unsigned short unit)sofa::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Light() overridesofa::gl::component::shader::Lightprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::Light Member List . This is the complete list of members for sofa::gl::component::shader::Light, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html
Performance,load,loader,"erridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(const GLint &id)sofa::gl::component::shader::Light; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setShadowTextureUnit(const unsigned short unit)sofa::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html
Usability,clear,clearLoggedMessages,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_projectionMatrixsofa::gl::component::shader::Light; d_shadowFactorsofa::gl::component::shader::Light; d_shadowsEnabledsofa::gl::component::shader::Light; d_shadowTextureSizesofa::gl::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html
Availability,down,down,"sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Static Protected Attributes; static const std::string PATH_TO_GENERATE_DEPTH_TEXTURE_VERTEX_SHADER = ""shaders/softShadows/VSM/generate_depth_texture.vert"";  ; static const std::string PATH_TO_GENERATE_DEPTH_TEXTURE_FRAGMENT_SHADER = ""shaders/softShadows/VSM/generate_depth_texture.frag"";  ; static const std::string PATH_TO_BLUR_TEXTURE_VERTEX_SHADER = ""shaders/softShadows/VSM/blur_texture.vert"";  ; static const std::string PATH_TO_BLUR_TEXTURE_FRAGMENT_SHADER = ""shaders/softShadows/VSM/blur_texture.frag"";  . Public Member Functions;  SOFA_CLASS (Light, core::visual::VisualModel);  ; void setID (const GLint &id);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void drawLight (const core::visual::VisualParams *vparams);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; virtual void drawSource (const sofa::core::visual::VisualParams *)=0;  Draw the light source from an external point of view. More...;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void preDrawShadow (core::visual::VisualParams *vp);  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html
Deployability,update,updateVisual,"id postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ; virtual LightType getLightType ()=0;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html
Integrability,message,messages,"g;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; GLint m_lightID;  ; GLuint m_shadowTexWidth;  ; GLuint m_shadowTexHeight;  ; std::unique_ptr< sofa::gl::FrameBufferObject > m_shadowFBO;  ; std::unique_ptr< sofa::gl::FrameBufferObject > m_blurHFBO;  ; std::unique_ptr< sofa::gl::FrameBufferObject > m_blurVFBO;  ; OglShader::SPtr m_depthShader;  ; OglShader::SPtr m_blurShader;  ; GLfloat m_lightMatProj [16];  ; GLfloat m_lightMatModelview [16];  ; bool b_need",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::Light Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::Light Class Referenceabstract . #include <Light.h>; Utility to cast Light into a Opengl scene. ; More... Inheritance diagram for sofa::gl::component::shader::Light:. [legend]; Detailed Description; Utility to cast Light into a Opengl scene. ; This class must be used in a scene with one LightManager object. This abstract class defines lights (i.e basically id and color) The inherited lights are:; Directional light (direction);; Positional light (position);; Spot light (position, direction, cutoff...). . Public Attributes; Data< sofa::type::RGBAColor > d_color;  Set the color of the light. (default=[1.0,1.0,1.0,1.0]) More...;  ; Data< GLuint > d_shadowTextureSize;  [Shadowing] Set size for shadow texture More...;  ; Data< bool > d_drawSource;  Draw Light Source. More...;  ; Data< float > d_zNear;  [Shadowing] Light's ZNear More...;  ; Data< float > d_zFar;  [Shadowing] Light's ZFar More...;  ; Data< bool > d_shadowsEnabled;  [Shadowing] Enable Shadow from this light More...;  ; Data< bool > d_softShadows;  [Shadowing] Turn on Soft Shadow from this light More...;  ; Data< float > d_shadowFactor;  [Shadowing] Shadow Factor (decrease/increase darkness) More...;  ; Data< float > d_VSMLightBleeding;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attribute",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html
Usability,clear,clearVisual,"iewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ; virtual LightType getLightType ()=0;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html
Deployability,update,updateInternal,"::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(LightManager, core::visual::VisualManager)sofa::gl::component::shader::LightManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~LightManager() overridesofa::gl::component::shader::LightManagerprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::LightManager Member List . This is the complete list of members for sofa::gl::component::shader::LightManager, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html
Performance,load,loader,"l::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; restoreDefaultLight(core::visual::VisualParams *vparams)sofa::gl::component::shader::LightManager; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(LightManager, core::visual::VisualManager)sofa::gl::component::shader::LightManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html
Usability,clear,clear,"at< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component::shader::LightManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::gl::component::shader::LightManager; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_ambientsofa::gl::component::shader::LightManager; d_componentStatesofa::core::objectmodel::Base; d_drawIsEnabledsofa::gl::component::shader::LightManager; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shadowsEnabledsofa::gl::component::shader::LightManager; d_softShadowsEnabledsofa::gl::component::shader::LightManager; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::LightManagervirtual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html
Availability,down,down,"f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (LightManager, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html
Deployability,update,updateVisual,"e...;  ; void putLights (std::vector< Light::SPtr > m_lights);  Register a vector of lights into the LightManager. More...;  ; void clear ();  Remove all lights of the LightManager. More...;  ; void restoreDefaultLight (core::visual::VisualParams *vparams);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html
Integrability,message,messages,"lic Attributes; Data< bool > d_shadowsEnabled;  Enable Shadow in the scene. (default=0) More...;  ; Data< bool > d_softShadowsEnabled;  If Shadows enabled, Enable Variance Soft Shadow in the scene. (default=0) More...;  ; Data< sofa::type::RGBAColor > d_ambient;  Ambient lights contribution (Vec4f)(default=[0.0f,0.0f,0.0f,0.0f]) More...;  ; Data< bool > d_drawIsEnabled;  enable/disable drawing of lights shadow textures. (default=false) More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (LightManager, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html
Modifiability,inherit,inherited,"Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::LightManager Class Reference . #include <LightManager.h>; Utility to manage lights into an Opengl scene. ; More... Inheritance diagram for sofa::gl::component::shader::LightManager:. [legend]; Detailed Description; Utility to manage lights into an Opengl scene. ; This class must be used with the Light class. It centralizes all the Lights and managed them. . Public Attributes; Data< bool > d_shadowsEnabled;  Enable Shadow in the scene. (default=0) More...;  ; Data< bool > d_softShadowsEnabled;  If Shadows enabled, Enable Variance Soft Shadow in the scene. (default=0) More...;  ; Data< sofa::type::RGBAColor > d_ambient;  Ambient lights contribution (Vec4f)(default=[0.0f,0.0f,0.0f,0.0f]) More...;  ; Data< bool > d_drawIsEnabled;  enable/disable drawing of lights shadow textures. (default=false) More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html
Performance,load,loader," ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html
Usability,clear,clear,"st core::visual::VisualParams *vparams) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void putLight (Light::SPtr light);  Register a light into the LightManager. More...;  ; void putLights (std::vector< Light::SPtr > m_lights);  Register a vector of lights into the LightManager. More...;  ; void clear ();  Remove all lights of the LightManager. More...;  ; void restoreDefaultLight (core::visual::VisualParams *vparams);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html
Deployability,update,updateInternal,"size, type, TDataTypes >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElem",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglAttribute< size, type, TDataTypes > Member List . This is the complete list of members for sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >, including all inherited members. _abosofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _aboSizesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _indexsofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _needUpdatesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _topologysofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _usagesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; a",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >inline; setValue(const type::vector< TDataTypes > &value)sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualMod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html
Testability,log,logging,"e, type, TDataTypes >protected; _indexsofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _needUpdatesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _topologysofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _usagesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html
Usability,clear,clearLoggedMessages,"st SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; disable()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html
Availability,down,down,"LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< TDataTypes > * beginEdit ();  ; void endEdit ();  ; const type::vector< TDataTypes > & getValue () const;  ; void setValue (const type::vector< TDataTypes > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSETy",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html
Deployability,update,update,"...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< TDataTypes > * beginEdit ();  ; void endEdit ();  ; const type::vector< TDataTypes > & getValue () const;  ; void setValue (const type::vector< TDataTypes > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html
Modifiability,inherit,inherited,"t::shader::OglAttribute< size, type, TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglAttribute< size, type, TDataTypes > Class Template Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >:. [legend]. Protected Attributes; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< TDataTypes > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualModel, OglShaderElement);  ; void init ()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html
Deployability,update,updateInternal,"Description *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 2, float)))sofa::gl::component::shader::OglFloat2Attribute; OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; ~OglFloat2Attribute()sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloat2Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglFloat2Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _indexsofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >inline; setValue(const type::vector< sofa::type::Vec< 2, float > > &value)sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html
Testability,log,logging,"AT, sofa::type::Vec< 2, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html
Usability,clear,clearLoggedMessages,"odelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; doUpdateInternal()sofa::core::objectmodel::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloat2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 2, float)));  ;  OglFloat2Attribute ();  ; virtual ~OglFloat2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html
Deployability,update,update,"ader::OglFloat2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 2, float)));  ;  OglFloat2Attribute ();  ; virtual ~OglFloat2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloat2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 2, float)));  ;  OglFloat2Attribute ();  ; virtual ~OglFloat2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html
Deployability,update,updateInternal,"protected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat2Variable, OglVariable< type::Vec2f >)sofa::gl::component::shader::OglFloat2Variable; OglVariable< type::Vec2f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec2f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec2f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat2Variable()sofa::gl::component::shader::OglFloat2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloat2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglFloat2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ca",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::Vec2f &v)sofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat2Variable, OglVariable< type::Vec2f >)sofa::gl::component::shader::OglFloat2Variable; OglVariable< type::Vec2f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ca",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloat2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat2Variable, OglVariable< type::Vec2f >);  ;  OglFloat2Variable ();  ; virtual ~OglFloat2Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec2f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec2f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloat2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat2Variable, OglVariable< type::Vec2f >);  ;  OglFloat2Variable ();  ; virtual ~OglFloat2Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec2f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec2f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html
Deployability,update,updateInternal,"Description *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 3, float)))sofa::gl::component::shader::OglFloat3Attribute; OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; ~OglFloat3Attribute()sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloat3Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglFloat3Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _indexsofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >inline; setValue(const type::vector< sofa::type::Vec< 3, float > > &value)sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html
Testability,log,logging,"AT, sofa::type::Vec< 3, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html
Usability,clear,clearLoggedMessages,"odelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; doUpdateInternal()sofa::core::objectmodel::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloat3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 3, float)));  ;  OglFloat3Attribute ();  ; virtual ~OglFloat3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html
Deployability,update,update,"ader::OglFloat3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 3, float)));  ;  OglFloat3Attribute ();  ; virtual ~OglFloat3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloat3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 3, float)));  ;  OglFloat3Attribute ();  ; virtual ~OglFloat3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html
Deployability,update,updateInternal,"protected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat3Variable, OglVariable< type::Vec3f >)sofa::gl::component::shader::OglFloat3Variable; OglVariable< type::Vec3f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec3f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec3f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat3Variable()sofa::gl::component::shader::OglFloat3Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloat3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglFloat3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ca",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::Vec3f &v)sofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat3Variable, OglVariable< type::Vec3f >)sofa::gl::component::shader::OglFloat3Variable; OglVariable< type::Vec3f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ca",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloat3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat3Variable, OglVariable< type::Vec3f >);  ;  OglFloat3Variable ();  ; virtual ~OglFloat3Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec3f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec3f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloat3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat3Variable, OglVariable< type::Vec3f >);  ;  OglFloat3Variable ();  ; virtual ~OglFloat3Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec3f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec3f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html
Deployability,update,updateInternal,"Description *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 4, float)))sofa::gl::component::shader::OglFloat4Attribute; OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; ~OglFloat4Attribute()sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloat4Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglFloat4Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _indexsofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >inline; setValue(const type::vector< sofa::type::Vec< 4, float > > &value)sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html
Testability,log,logging,"AT, sofa::type::Vec< 4, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html
Usability,clear,clearLoggedMessages,"odelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; doUpdateInternal()sofa::core::objectmodel::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloat4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 4, float)));  ;  OglFloat4Attribute ();  ; virtual ~OglFloat4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html
Deployability,update,update,"ader::OglFloat4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 4, float)));  ;  OglFloat4Attribute ();  ; virtual ~OglFloat4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloat4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 4, float)));  ;  OglFloat4Attribute ();  ; virtual ~OglFloat4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, float >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, float > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, float > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, float > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html
Deployability,update,updateInternal,"protected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat4Variable, OglVariable< type::Vec4f >)sofa::gl::component::shader::OglFloat4Variable; OglVariable< type::Vec4f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec4f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec4f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat4Variable()sofa::gl::component::shader::OglFloat4Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloat4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglFloat4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ca",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::Vec4f &v)sofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat4Variable, OglVariable< type::Vec4f >)sofa::gl::component::shader::OglFloat4Variable; OglVariable< type::Vec4f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ca",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloat4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat4Variable, OglVariable< type::Vec4f >);  ;  OglFloat4Variable ();  ; virtual ~OglFloat4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec4f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec4f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloat4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloat4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloat4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloat4Variable, OglVariable< type::Vec4f >);  ;  OglFloat4Variable ();  ; virtual ~OglFloat4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec4f >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec4f &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html
Deployability,update,updateInternal,"haderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_FLOAT, float))sofa::gl::component::shader::OglFloatAttribute; OglAttribute< 1, GL_FLOAT, float >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, float), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; ~OglFloatAttribute()sofa::gl::component::shader::OglFloatAttributeinlinevirtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloatAttribute Member List . This is the complete list of members for sofa::gl::component::shader::OglFloatAttribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _aboSizesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _indexsofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inline; setValue(const type::vector< float > &value)sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_FLOAT, float))sofa::gl::component::shader::OglFloatAttribute; OglAttribute< 1, GL_FLOAT, float >::SOFA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html
Testability,log,logging,"hader::OglAttribute< 1, GL_FLOAT, float >protected; _indexsofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html
Usability,clear,clearLoggedMessages,"eal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloatAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatAttribute:. [legend]; Detailed Description; FLOAT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglFloatAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_FLOAT, float));  ;  OglFloatAttribute ();  ; virtual ~OglFloatAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, float), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< float > * beginEdit ();  ; void endEdit ();  ; const type::vector< float > & getValue () const;  ; void setValue (const type::vector< float > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () ove",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html
Deployability,update,update,"List of all members . sofa::gl::component::shader::OglFloatAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatAttribute:. [legend]; Detailed Description; FLOAT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglFloatAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_FLOAT, float));  ;  OglFloatAttribute ();  ; virtual ~OglFloatAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, float), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< float > * beginEdit ();  ; void endEdit ();  ; const type::vector< float > & getValue () const;  ; void setValue (const type::vector< float > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloatAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatAttribute:. [legend]; Detailed Description; FLOAT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglFloatAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_FLOAT, float));  ;  OglFloatAttribute ();  ; virtual ~OglFloatAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, float), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< float > * beginEdit ();  ; void endEdit ();  ; const type::vector< float > & getValue () const;  ; void setValue (const type::vector< float > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () ove",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html
Deployability,update,updateInternal,":ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVariable, OglVariable< float >)sofa::gl::component::shader::OglFloatVariable; OglVariable< float >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< float >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< float >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloatVariable()sofa::gl::component::shader::OglFloatVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::compon",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloatVariable Member List . This is the complete list of members for sofa::gl::component::shader::OglFloatVariable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const float &v)sofa::gl::component::shader::OglVariable< float >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVariable, OglVariable< float >)sofa::gl::component::shader::OglFloatVariable; OglVariable< float >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVariable:. [legend]; Detailed Description; SINGLE FLOAT VARIABLE . Public Member Functions;  SOFA_CLASS (OglFloatVariable, OglVariable< float >);  ;  OglFloatVariable ();  ; virtual ~OglFloatVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< float >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const float &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVariable:. [legend]; Detailed Description; SINGLE FLOAT VARIABLE . Public Member Functions;  SOFA_CLASS (OglFloatVariable, OglVariable< float >);  ;  OglFloatVariable ();  ; virtual ~OglFloatVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< float >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const float &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html
Deployability,update,updateInternal,"aderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVector2Variable, OglVariable< type::vector< type::Vec2f > >)sofa::gl::component::shader::OglFloatVector2Variable; OglVariable< type::vector< type::Vec2f > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloatVector2Variable()sofa::gl::component::shader::OglFloatVector2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloatVector2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglFloatVector2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< type::Vec2f > &v)sofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVector2Variable, OglVariable< type::vector< type::Vec2f > >)sofa::gl::component::shader::OglFloatVector2Variable; OglVariable< type::vector< type::Vec2f > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; draw(const core::visual::VisualParams *)so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector2Variable, OglVariable< type::vector< type::Vec2f > >);  ;  OglFloatVector2Variable ();  ; virtual ~OglFloatVector2Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec2f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector2Variable, OglVariable< type::vector< type::Vec2f > >);  ;  OglFloatVector2Variable ();  ; virtual ~OglFloatVector2Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec2f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html
Deployability,update,updateInternal,"aderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVector3Variable, OglVariable< type::vector< type::Vec3f > >)sofa::gl::component::shader::OglFloatVector3Variable; OglVariable< type::vector< type::Vec3f > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloatVector3Variable()sofa::gl::component::shader::OglFloatVector3Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloatVector3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglFloatVector3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< type::Vec3f > &v)sofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVector3Variable, OglVariable< type::vector< type::Vec3f > >)sofa::gl::component::shader::OglFloatVector3Variable; OglVariable< type::vector< type::Vec3f > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; draw(const core::visual::VisualParams *)so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector3Variable, OglVariable< type::vector< type::Vec3f > >);  ;  OglFloatVector3Variable ();  ; virtual ~OglFloatVector3Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec3f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector3Variable, OglVariable< type::vector< type::Vec3f > >);  ;  OglFloatVector3Variable ();  ; virtual ~OglFloatVector3Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec3f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html
Deployability,update,updateInternal,"aderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVector4Variable, OglVariable< type::vector< type::Vec4f > >)sofa::gl::component::shader::OglFloatVector4Variable; OglVariable< type::vector< type::Vec4f > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloatVector4Variable()sofa::gl::component::shader::OglFloatVector4Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloatVector4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglFloatVector4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< type::Vec4f > &v)sofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVector4Variable, OglVariable< type::vector< type::Vec4f > >)sofa::gl::component::shader::OglFloatVector4Variable; OglVariable< type::vector< type::Vec4f > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; draw(const core::visual::VisualParams *)so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector4Variable, OglVariable< type::vector< type::Vec4f > >);  ;  OglFloatVector4Variable ();  ; virtual ~OglFloatVector4Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec4f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector4Variable, OglVariable< type::vector< type::Vec4f > >);  ;  OglFloatVector4Variable ();  ; virtual ~OglFloatVector4Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec4f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () fin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html
Deployability,update,updateInternal,"fa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVectorVariable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglFloatVectorVariable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloatVectorVariable()sofa::gl::component::shader::OglFloatVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglFloatVectorVariable Member List . This is the complete list of members for sofa::gl::component::shader::OglFloatVectorVariable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectv",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatVectorVariable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglFloatVectorVariable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectv",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVectorVariable:. [legend]; Detailed Description; FLOAT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglFloatVectorVariable, OglVariable< type::vector< float > >);  ;  OglFloatVectorVariable ();  ; virtual ~OglFloatVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglFloatVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglFloatVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVectorVariable:. [legend]; Detailed Description; FLOAT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglFloatVectorVariable, OglVariable< type::vector< float > >);  ;  OglFloatVectorVariable ();  ; virtual ~OglFloatVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html
Deployability,update,updateInternal,"ullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, int)))sofa::gl::component::shader::OglInt2Attribute; OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; ~OglInt2Attribute()sofa::gl::component::sh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglInt2Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglInt2Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _indexsofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >inline; setValue(const type::vector< sofa::type::Vec< 2, int > > &value)sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, int)))s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html
Testability,log,logging,"Attribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html
Usability,clear,clearLoggedMessages,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglInt2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, int)));  ;  OglInt2Attribute ();  ; virtual ~OglInt2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html
